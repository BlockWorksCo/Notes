
stickle@omnireltest1.dev.cyanconnode.com


VPN:
garment seize optimism allow
b67bc45987c51f40f43606839cfd757b

GitLab:
git clone https://gitlab.cyco.io/CyLecNode/cylec_node.git
SteveTickle
garment seize optimism allow

JIRA
stickle
b$1488#8OFX3

Slack
cyanconnode.slack.com
steve.tickle@cyantechnology.com
Cy4nST$239

https://artifactory.cyco.io
SteveTickle
garment seize optimism allow

vm:
username:ubuntu
pw:ubuntu

email:
steve.tickle@cyanconnode.com
Cy4nST$239

Windows:
Cy4nST$239

Linux
cy4nst$239


cylec_node:


Connode:
(gerrit.se.cyco.io)
stevetickle
Homeowner2#


https://jira.se.cyco.io
changeme


https://confluence.se.cyco.io/dologin.action


new email:
Steve.Tickle@cyanconnode.com
Homeowner6#


----------------------------------------------------------


Another way to squash all your commits is to reset the index to master:

 git checkout yourBranch
 git reset $(git merge-base master yourBranch)
 git add -A
 git commit -m "one commit on yourBranch"


-----------------------------------------------------------

PVVNL


 * @subsection main_subsection_core Core Radio Modules
 * - @ref transport
 * - @ref collector
 * - @ref netmon
 *
 * @subsection main_subsection_system System-Wide Routines
 * - @ref system
 * - @ref preferences
 *
 * @subsection main_subsection_serial Serial Interface
 * - @ref command
 * - @ref meter
 *
 * @subsection main_subsection_utils Utility Modules
 * - @ref clock
 * - @ref security
 * - @ref otxu
 * - @ref dio
 * - @ref tamper
 * - @ref frame
 * - @ref led
 * - @ref sleep
 * - @ref debug
 *
 * @subsection main_subsection_lib CyLec Library
 * - @ref cylec
 * - @ref crc
 * - @ref xxtea
 * - @ref network_common
 * - @ref preferences_common
 * - @ref version


------------------------------------------------


PR_READ         - abstraction to allow reading from file/flash/etc.


consistent overhead byte stuffing (COBS). Why in HAL?


----------------------

EVENT_mount_sdcard_partition_table_size_mismatch_warning_WARNING

GPT_store() -> while(1) appropriate?


-----------------------------------------

Command.c
#define COMMAND_HANDLER_METER_DATA_STORE_SIZE (100l * 1024l * 1024l)

Look at .tpl files for protocol 0x80 at the load survey
request/response PDUs.

determine total for 45 days (dates in .json).

multiply by expected number of meters.


From LSS1.tpl:
- grep 7e LSS1.hex
LSS1.hex = 19904
therefore LSS1.bin would be 19904/2 = 9952 bytes
LSS1 is 3 days worth of data: 


2016-09-22T00:00:00-00:00 -> 
2016-09-24T00:00:00-00:00 -> 
2016-09-27T19:19:41-00:00 ->

over 45 request/response pairs.

-----------------------------------------

DCU
callback
dlms
hdlc
meter_emulator
protocol_xxxx
protocol


- generally wrapped messages are passed up but
for some requests that need iteration over the meter
side to form a single HES message, the dates need 
to be extracted (e.g. logs).


---------------------------------------------

CyLec DCU v2 (Hwicce)


The DCUv2 has a python emulator called the python DCU.
It can be used to debug or reproduce problems and usually with DCUTool.
(I can't find the latest archive so if someone can add a link here it would be great)

When you build hwicce, you can run:

./dist/run_elecmeterdcu2 --sim --cylec_sim --gprs_tcpip --default_config=dcu_default_config.txt --sdcard_file=sdcard.raw --trace_cylec cylec.log --serial_number 2118245 --rky1 1b79c0ba24525a3fae008daff981a2e1

[uncompress sdcard-128.raw.xz and change path accordingly]

NOTE: there is a config_default.txt in hwicce as well.
The files attached have some of my settings.

------------------------------------
Q1) CYLEC_MAX_DATA_SIZE == 128 bytes but tx/rx buffers are 256 bytes each.
Q2) meter_command_protocol.c:630 arbitrary 128 byte buffer on stack.
Q3) cmode?/protobuf mode. cylec-frame-mode?
Q4) back end == head end??
Q5) datacol == data collector? IS/LS data.
Q6) DINE == Digital INput Events?
Q7) command_link.c:364 arbitrary 128 byte buffer on stack.
Q8) text/binary mode unnecessary... text mode for demo only? why is it in the product? complex state-machine.
Q9) lots of message buffers around, static and on stack.


meat of the DCU:
-           COMMAND_process(sdcard_fs_ready);
-           METERCOMMS_process(sdcard_fs_ready);


COMMAND_process:
- COMMAND_HANDLER_process
- COMMAND_LINK_process
- CABLE_process
- GPRS_process

METERCOMMS_process:
- CYLEC_process
- METERCOMMS_loadsurvey_schedule_process
- METERCOMMS_instantaneous_schedule_process
- METER_COMMAND_idle
- METERCOMMS_dine_run
- METERCOMMS_run_backend
- METERCOMMS_loadsurvey_schedule_next
- METERCOMMS_instantaneous_schedule_next
- METER_COMMAND_completed
- METERCOMMS_datacol_finish
- METERCOMMS_do_completed_actions


CYLEC_process:
if anything ready to transmit....
- CYLEC_PROTO_process
- CYLEC_LOCK_process_task
- METERCOMMS_dine_process_task
- CYLEC_CHANNEL_process_task()
- PASSTHROUGH_process_task
- METER_COMMAND_process_task
- CYLEC_PROTO_tx_frame


-------------------------------

CyLec_Msg       : Formation and parsing of frames.
CyLec_Proto     : transmission of frames
UART            : pipe to RF module (?)
CyLec:          : Top level state machine for transmission of messages.
CyLec_Channel   : Channel management state machine.

Meter_Command   : 
Meter_Command_Protoocol : top-level message handling switch for meter-targeted messages.
Meter_Command_DINE      : Process a DINE message (simple state machine).

MeterComms_DINE : Manage a FIFO of DINE events.


command_meter_data_list                     : 100MB FIFO, data to backend, from 
command_command_list                        : 1MB FIFO, commands from backend,
command_response_list                       : 1MB FIFO, commands to backend
command_passthough_frames_to_backend_fifo   : 1MB FIFO, 
command_passthough_frames_from_backend_fifo : 1MB FIFO, 

command_link_tx_fifo                        : Stores the pb encoded RX DCU_CommunicationUnion post CRC/COBS/framing/etc.
command_link_rx_fifo                        : Stores the pb encoded TX DCU_CommunicationUnion pre CRC/COBS/framing/etc.

METERCOMMS_init

MeterComms.c:
case FROM_BACKEND:
case FROM_DATACOL_LOADSURVEY_SCHEDULE:
case FROM_DATACOL_INSTANTANEOUS_SCHEDULE:
case FROM_DINE:


---------------------------------------------------------------
Last Gasp:
- Tamper/power-fail detect.
   - Another DIN?
   - On trigger, see if meter is alive to distnguish between tamper/powerFail?
- debounce.
- Separate pin is safest to implement from s/w perspective (no need to distinguish between tamper/powerfail)
- 
 

On detect:
- stop all other comms to quieten the channel.
- wait a duration based on the meter number (form of TDMA). Each meter is allocated a transmit 'slot'.
- reduce power-usage until the duration expires, then generate message and transmit.
- The slots need to have a bit of space on either side for 'wiggle room'.
- create event in local event log? do we even have one? is it maintained by the meter?
- define message.


In normal mode:
- If a power-fail event message is received, assume a meter(s) on the network are 
experiencing a power-failure and stop transmitting to clear the air (for x seconds).
- Only forward power-fail events if one has been detected (for x seconds).


Security:
- If not careful, it could be used as an exploit.


Implementation:
- 


Testing:
- many nodes needed to test impact of many transmissions.
- synchronised power-fail.
- jittered power-fail.


---------------------------------------------------------------

PREFERENCES_BACKOFF_A
PREFERENCES_BACKOFF_B
PREFERENCES_BACKOFF_N
PREFERENCES_DINE3_PAYLOAD




PREFERENCES_ASYNC_JITTER_OFFSET
PREFERENCES_ASYNC_JITTER_MASK
PREFERENCES_ASYNC_JITTER_MAX_TRANSMITS


 203 Memory Configuration
 204 
 205 Name             Origin             Length             Attributes
 206 CodeFlash        0x0000000008010000 0x0000000000028000 = 160KB : 0x27ce4
 207 DataFlash        0x0000000000000000 0x0000000000007fe0 = 32KB  : 
 208 InfoFlash        0x0000000000007fe0 0x0000000000000020 = 32B   :
 209 TROMFlash        0x0000000020000000 0x0000000000002000 = 8KB   :
 210 BootFlash        0x0000000040000000 0x0000000000002000 = 8KB   :
 211 DataRam          0x0000000000008000 0x0000000000005fc0 = 24KB  :
 212 codelow          0x0000000008000000 0x0000000000010000 = 64KB  :
 213 codehigh         0x0000000008010000 0x0000000000028000 = 160KB :
 214 rodata           0x0000000000000000 0x0000000000007fe0 = 32KB  :
 215 info             0x0000000000007fe0 0x0000000000000020 = 32B   :
 216 trom             0x0000000020000000 0x0000000000002000 = 8KB   :
 217 boot             0x0000000040000000 0x0000000000002000 = 8KB   :
 218 rwdata           0x0000000000008000 0x0000000000005fc0 = 24KB  :
 219 *default*        0x0000000000000000 0xffffffffffffffff =
 220 

--------------------------------------------------

Current:
   text    data     bss     dec     hex filename
 189116      32   22146  211294   3395e cylec_node.elf



LD script in : ~/Projects/cygh/cyghlib/config/board/mCOG-RF-1X-SPA1


ca build --buildenv build --cmd 'make clean stamp-build-cylec-node-cyanide'





------------------------------------------------------------------------


To free up space, remove:
PREFERENCES_RELAY0_CONFIGURATION    : R0CF
PREFERENCES_RELAY0_CONTROL          : R0CT
PREFERENCES_TAMPER0_CONFIGURATION   : T0CF
PREFERENCES_TAMPER0_STATE           : T0ST

relay_control.c
tamper_monitor.c


config set NSYC xQZD3GW37dz
config set CYSN 0xabcd

transport_send_udp() generates the event.
look at tamper_process_transition()




------------------------------------------------------------------------

New architecture notes:
- Option 1: Translate DLMS from meter->OMP in node.
- Option 2: Pass-thru DLMS from meter up into node and further.

- Option 2 can potentially mean less code on Node, but is this significant if both options are available in cheapest configuration?
- Option 1 puts more intelligence onto Node. This can be tailored to meter. i.e. Meter-specific builds.
- Option 1 will can be more optimal regarding communications, optimised, proprietary comms will beat DLMS/HDLC forwarding and the multiple round-trips that are currently needed can be
  reduced to one potentially (RAM limitation here?)
- Option 1 means intelligence drops out of DCU, meaning a cheaper DCU potentially.
- Potentially use compressed packets, leading to less congestion and more overhead for larger networks.
- Reduction of on-air traffic means more clear-air for comms and hence more supported Nodes per DCU.


- Possible formats for over the air in Option 1.
binary FlatBuffers <--- looks very good.
OMP
MessagePack
BER
protobuf
BSON
thrift

format comparison:
google.github.io/flatbuffers/flatbuffers_benchmarks.html


--------------------------------------

BAN-41

- defaults for preferences
- cancel tamper id.


-----------------------------------------------------


MDM UI:
- Drill down. chart showing Number of alerts of different types->list of meters in spreadsheet view->individual meter->action.
- use existing logs to form usage model.

------------------------------------

build commands:

cylec_node:
ca build --buildenv build --cmd 'make clean stamp-build-cylec-node-cyanide'
~/Projects/cylec_node$ docker rmi build && ca docker_build --dockerfile Dockerfile.build --tag build:latest


cyghlib:
ca build --buildenv cygh/buildenv_cygh --cmd 'make clean stamp-build-cyghlib-cyanide'
rm stamp-build-cyghlib-cyanide && ca build --buildenv cygh/buildenv_cygh --cmd 'make stamp-build-cyghlib-cyanide'



Command line:
ca build --buildenv build


-----------------------------------------------
udev rules in doc.


 1486  ls /etc/udev/rules.d/
 1487  ls
 1488  cd
 1489  cd Projects/stlink/etc/udev/rules.d/
 1490  ls
 1491  sudo cp * /etc/udev/rules.d
 1492  ls /etc/udev/rules.d/
 1493  sudo udevadm control --reload-rules
 1494  sudo udevadm trigger


--------------------------------------------------



rg.gpio.ef.ip_en    = 0x0001;
rg.gpio.ef.op_en    = 0xfffe;
fd.gpio.ef.op_sel.porte_0   = 1;//enable gpio
while(true)
{
    volatile uint8_t state  = fd.gpio.ef.ip_state.porte_0;
    state++; 
}

---------------------------------------

Cylec frame ids for DINE:
- CYLEC_FRAME_ID_DIN_EVENT_EXTENDED
- CYLEC_FRAME_ID_DIN_EVENT

dine states on DCU.
- PROTOCOL_SEND_CANCEL
- PROTOCOL_SEND_WAIT_OK
- PROTOCOL_SEND_ERSC
- PROTOCOL_SEND_WAIT_CONFIGDATA



cygh_uart_main_set_config(CYGH_CONFIG_UART_MAIN_BITS, CYGH_CONFIG_UART_MAIN_STOP_BITS, CYGH_CONFIG_UART_MAIN_PARITY);


---------------------------------------------------


1234
INFO


Welcome to minicom 2.7

OPTIONS: I18n 
Compiled on Feb  7 2016, 13:37:27.
Port /dev/ttyUSB1, 09:38:20

Press CTRL-A Z for help on special keys

Meter-Node
# CyLec (v2.9.0.515130044)
# Hardware rev: 0000 00 @00000
# System address (CY3S): 0xE1EC
# Network address (CY3A): 0x0000
# Serial no (CYSN): 0x00000000
# Band (BND1): 865MHz Type Approval
# Channel (CHAN): 0
# Dynamic Thresholds (St1a & St2d): On
# Role (METR): Meter
# OTXU: Off
# Boot address (CYBA): 0xFFFFFFFF
METR: 1



DCU-Node.
# CyLec (v2.9.0.515130044)
# Hardware rev: 0000 00 @00000
# System address (CY3S): 0x0002
# Network address (CY3A): 0x0001
# Serial no (CYSN): 0x00001002
# Band (BND1): 865MHz Type Approval
# Channel (CHAN): 0
# Dynamic Thresholds (St1a & St2d): On
# Role (METR): Concentrator/Handheld
# OTXU: Off
# Boot address (CYBA): 0xFFFFFFFF

-----------------------------------------------------

config get ERSC

1 == active
0 = not active.



PREFERENCES_DINE3_PAYLOAD
PREFERENCES_ASYNC_JITTER_OFFSET
PREFERENCES_ASYNC_JITTER_MASK
PREFERENCES_ASYNC_JITTER_MAX_TRANSMITS


0x60000 in 1/65536 units = 6 seconds. 6 seconds in 1/1024 units = 6*1024=0x1800.
0x7ffff in 1/65536 units = 7 seconds. 7 seocnds in 1/1024 units = 7*1024=0x1c00
0x1fff in 1/1024 units = 7 seconds.


def decode_alarm(meter_protocol_id, octets, metadata):
    """
    decode octets into it's decoded json structure
    """

    #
    # decode the meter-generic messages.
    #
    decoder = MeterCommonAlarmDecoder()
    decoded = decoder.decode_alarm(octets, metadata)
    octets_out = meterproto_json.dumps(decoded)

    if octets_out == None:

        #
        # This wasn't a message common to all meters, so 
        # decode the meter-specific messages.
        #
        decoder = get_decoder(meter_protocol_id)
        decoded = decoder.decode_alarm(octets, metadata)
        octets_out = meterproto_json.dumps(decoded)

    return octets_out

------------------------------------------------------------------------

DCUb4

- CM-T43 dev board Compulab.
- Primary bootloader FLASH is SPI0. expose these for boot purposes.
- JTAG, 6xUARTs, SPI0 FLASH, I2C0 (board-info), ADC for monitoring, 



------------------------------------------------------------------------


| 
ERROR: Task 3520 (/BuildArea/cm-t43-yocto-dev/tisdk/sources/oe-core/meta/recipes-multimedia/gstreamer/gstreamer1.0-plugins-bad_1.2.3.bb, do_unpack) failed with exit code '1'
WARNING: Failed to fetch URL http://releases.linaro.org/13.03/components/toolchain/gcc-linaro/4.7/gcc-linaro-4.7-2013.03.tar.bz2, attempting MIRRORS if available
ERROR: Fetcher failure: Fetch command failed with exit code 8, output:
http://releases.linaro.org/13.03/components/toolchain/gcc-linaro/4.7/gcc-linaro-4.7-2013.03.tar.bz2:
2017-05-25 09:33:17 ERROR 404: NOT FOUND.

ERROR: Function failed: Fetcher failure for URL: 'http://releases.linaro.org/13.03/components/toolchain/gcc-linaro/4.7/gcc-linaro-4.7-2013.03.tar.bz2'. Unable to fetch URL from any source.
ERROR: Logfile of failure stored in: /BuildArea/cm-t43-yocto-dev/tisdk/build/arago-tmp-external-linaro-toolchain/work/cortexa9t2hf-vfp-neon-linux-gnueabi/gcc/linaro-4.7-r2013.03-arago1/temp/log.do_fetch.10728
ERROR: Task 3368 (/BuildArea/cm-t43-yocto-dev/tisdk/sources/meta-arago/meta-arago-distro/recipes-devtools/gcc/gcc_linaro-4.7.bb, do_fetch) failed with exit code '1'



--------------------------------

U-Boot

*
* NAND Device Support
*
Support Denali NAND controller (NAND_DENALI) [N/y/?] (NEW) 
Support for Freescale NFC for VF610/MPC5125 (NAND_VF610_NFC) [N/y/?] (NEW) 
Support for NAND on PXA3xx and Armada 370/XP/38x (NAND_PXA3XX) [N/y/?] (NEW) 
Configure Arasan Nand (NAND_ARASAN) [N/y/?] (NEW) 
Support for Zynq Nand controller (NAND_ZYNQ) [N/y/?] (NEW) 

*
* Generic NAND options
*
*
* SPI Flash Support
*
Legacy SPI Flash Interface support (SPI_FLASH) [N/y/?] (NEW) 


*
* SPI Support
*
Freescale eSPI driver (FSL_ESPI) [N/y/?] (NEW) 
Freescale QSPI driver (FSL_QSPI) [N/y/?] (NEW) 
TI QSPI driver (TI_QSPI) [N/y/?] (NEW) 




------------------------------------------------


BeagleBone:

login: debian
password: temppwd

The IP Address for usb0 is: 192.168.7.2
beaglebone login: debian
Password: 
Linux beaglebone 3.8.13-bone79 #1 SMP Tue Oct 13 20:44:55 UTC 2015 armv7l

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
debian@beaglebone:~$ ifconfig
eth0      Link encap:Ethernet  HWaddr 04:a3:16:e1:44:07  
          inet addr:172.16.32.112  Bcast:172.16.32.255  Mask:255.255.255.0
          inet6 addr: fe80::6a3:16ff:fee1:4407/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:2514 errors:0 dropped:7 overruns:0 frame:0
          TX packets:151 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:382899 (373.9 KiB)  TX bytes:23452 (22.9 KiB)
          Interrupt:40 

lo        Link encap:Local Loopback  
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:32 errors:0 dropped:0 overruns:0 frame:0
          TX packets:32 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:2592 (2.5 KiB)  TX bytes:2592 (2.5 KiB)

usb0      Link encap:Ethernet  HWaddr 04:a3:16:e1:44:00  
          inet addr:192.168.7.2  Bcast:192.168.7.3  Mask:255.255.255.252
          inet6 addr: fe80::6a3:16ff:fee1:4400/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

debian@beaglebone:~$ 


----------------------------------------------------------------------

u-boot (from SD-Card):

setenv bootcmd "load mmc 0:1 0x82000000 /boot/zImage; load mmc 0:1 0x88000000 /boot/am437x-sbc-t43.dtb; bootz 0x82000000 - 0x88000000 "

setenv bootargs "root=/dev/mmcblk0p1 ro console=ttyO0,115200n8 rootwait "
setenv bootargs "root=/dev/mmcblk0p1 ro console=ttyO0,115200n8 rootwait quiet "

device tree is am437x-sbc-t43.dts


Welcome to Cosmos                                                                                                             
Cosmos login: root                                                                                                            
# blkid                                                                                                                       
/dev/mmcblk1p2: LABEL="rootfs" UUID="c861bdea-fbfd-420a-bb47-4945d15a9d61"                                                    
/dev/mmcblk1p1: LABEL="boot" UUID="1a3e2366-ba6c-456b-bf0b-d3321b66ed44"                                                      
/dev/mmcblk0p1: UUID="4e730d6a-3941-42f7-a5be-f5fdaa50a375"                                                                   
#                                                                                        

bcm7xxx
mdio-bcm-unimac
pxa168_eth
bcmsysport
genet


BeagleBone black boot lines:
load mmc 0:1 0x82000000 /boot/zImage; load mmc 0:1 0x88000000 /boot/am335x-boneblack.dtb; bootz 0x82000000 - 0x88000000
bootargs=root=/dev/mmcblk0p1 ro console=ttyO0,115200n8 rootwait quiet



------------------------------------------------


METERCOMMS_process()
METERCOMMS_run_backend()
EVENT_metercomms_starting_command_from_backend_ERROR(&req->uuid);




METERCOMMS_start_new_command()
EVENT_metercomms_failed_command_unkown_meter_ERROR()
METER_get_by_uuid() failed.


METER_get_by_uuid()
 CONFIG_meter_iterate_start() -> LIST_iterate()
  CONFIG_meter_next() -> LIST_next()
   UUID_equals()


- UUID reported is actualyl correct, therefore the list must be corrupt (or the search thru it).

error triggered by NULL uuid. (in util/nanopb/event.pb.macro.h)
#define EVENT_metercomms_starting_command_from_backend_ERROR(u_metercomms_starting_command_from_backend_uuid) \
  /* type check enum arguments by comparing them to something of the expected type */ \
  if (u_metercomms_starting_command_from_backend_uuid == (const UUID *)0) {} \
  EVENT_metercomms_starting_command_from_backend_log_(MODULE, __LINE__, EventSeverity_ERROR, u_metercomms_starting_command_from_backend_uuid)

&req->uuid must != 0 therefore this will always cause an error.





event_diag_log_id: 79 timestamp: 1496997186 time_since_boot_secs: 163 module: CYLEC line: 46 severity: DEBUG cylec { packet_from_node { cylec_frame { frame_id: DIN_EVENT_EXTENDED flags: 0 src_addr: 2 dst_addr: 1 payload: "CYLEC_DINE3_LAST_GASP_SENTINEL" } } } 


event_diag_log_id: 112 timestamp: 1496997378 time_since_boot_secs: 355 module: CYLEC line: 46 severity: DEBUG cylec { packet_from_node { cylec_frame { frame_id: DIN_EVENT_EXTENDED flags: 0 src_addr: 2 dst_addr: 1 payload: "CYLEC_DINE3_LAST_GASP_SENTINEL" } } } 
event_diag_log_id: 113 event_rec_log_id: 221 timestamp: 1496997378 time_since_boot_secs: 355 module: METERCOMMS_DINE line: 154 severity: WARNING din_event { meter_uuid { uuid_bytes: "9\343e\205\244\206E\332\251r\265\337) !\000" } tamper_data: "CYLEC_DINE3_LAST_GASP_SENTINEL" } 
event_diag_log_id: 114 timestamp: 1496997378 time_since_boot_secs: 355 module: CYLEC line: 74 severity: DEBUG cylec { packet_from_dcu { cylec_frame { frame_id: OPEN_CHANNEL flags: 0 src_addr: 1 dst_addr: 2 payload: "" } } } 
event_diag_log_id: 115 timestamp: 1496997378 time_since_boot_secs: 355 module: CYLEC line: 46 severity: DEBUG cylec { packet_from_node { cylec_frame { frame_id: OK flags: 0 src_addr: 2 dst_addr: 1 payload: "" } } } 
event_diag_log_id: 116 timestamp: 1496997378 time_since_boot_secs: 355 module: CYLEC line: 74 severity: DEBUG cylec { packet_from_dcu { cylec_frame { frame_id: SET_CONFIG flags: 0 src_addr: 1 dst_addr: 2 payload: "CSRE\000\002\000\000" } } } 



<- CyLecFrame(FRAME_EVENT_DATA 0x2->0x1 "CYLEC_DINE3_LAST_GASP_SENTINEL")
-> CyLecFrame(OPEN_CHANNEL 0x1->0x2 "")
<- CyLecFrame(OK 0x2->0x1 "")
-> CyLecFrame(SET_CONFIG 0x1->0x2 "CSRE\x00\x02\x00\x00")
<- CyLecFrame(UNKNOWN_PREF 0x2->0x1 "")
-> CyLecFrame(CLOSE_CHANNEL 0x1->0x2 "")
<- CyLecFrame(OK 0x2->0x1 "")
-> CyLecFrame(OPEN_CHANNEL 0x1->0x2 "")
<- CyLecFrame(OK 0x2->0x1 "")
-> CyLecFrame(SET_CONFIG 0x1->0x2 "CSRE\x00\x02\x00\x00")
<- CyLecFrame(UNKNOWN_PREF 0x2->0x1 "")
-> CyLecFrame(CLOSE_CHANNEL 0x1->0x2 "")
<- CyLecFrame(OK 0x2->0x1 "")


event_diag_log_id: 633 timestamp: 1497007698 time_since_boot_secs: 5631 module: CYLEC line: 46 severity: DEBUG cylec { packet_from_node { cylec_frame { frame_id: DIN_EVENT_EXTENDED flags: 0 src_addr: 2 dst_addr: 1 payload: "CYLEC_DINE3_LAST_GASP_SENTINEL" } } } 
event_diag_log_id: 634 event_rec_log_id: 262 timestamp: 1497007698 time_since_boot_secs: 5631 module: METERCOMMS_DINE line: 154 severity: WARNING din_event { meter_uuid { uuid_bytes: "9\343e\205\244\206E\332\251r\265\337) !\000" } tamper_data: "CYLEC_DINE3_LAST_GASP_SENTINEL" } 
event_diag_log_id: 635 timestamp: 1497007698 time_since_boot_secs: 5631 module: CYLEC line: 74 severity: DEBUG cylec { packet_from_dcu { cylec_frame { frame_id: OPEN_CHANNEL flags: 0 src_addr: 1 dst_addr: 2 payload: "" } } } 
event_diag_log_id: 636 timestamp: 1497007698 time_since_boot_secs: 5632 module: CYLEC line: 46 severity: DEBUG cylec { packet_from_node { cylec_frame { frame_id: OK flags: 0 src_addr: 2 dst_addr: 1 payload: "" } } } 
event_diag_log_id: 637 timestamp: 1497007698 time_since_boot_secs: 5632 module: CYLEC line: 74 severity: DEBUG cylec { packet_from_dcu { cylec_frame { frame_id: SET_CONFIG flags: 0 src_addr: 1 dst_addr: 2 payload: "CSRE\000\002\000\000" } } } 
event_diag_log_id: 638 timestamp: 1497007698 time_since_boot_secs: 5632 module: CYLEC line: 46 severity: DEBUG cylec { packet_from_node { cylec_frame { frame_id: UNKNOWN_PREF flags: 0 src_addr: 2 dst_addr: 1 payload: "" } } } 
event_diag_log_id: 639 timestamp: 1497007698 time_since_boot_secs: 5632 module: CYLEC line: 74 severity: DEBUG cylec { packet_from_dcu { cylec_frame { frame_id: CLOSE_CHANNEL flags: 0 src_addr: 1 dst_addr: 2 payload: "" } } } 
event_diag_log_id: 640 timestamp: 1497007698 time_since_boot_secs: 5632 module: CYLEC line: 46 severity: DEBUG cylec { packet_from_node { cylec_frame { frame_id: OK flags: 0 src_addr: 2 dst_addr: 1 payload: "" } } } 


event_diag_log_id: 79 timestamp: 1497009253 time_since_boot_secs: 120 module: MAIN line: 332 severity: DEBUG main_loop_stats { period_in_microseconds: 713 sdcard_peak_writes_in_main_loop: 0 main_loop_peak_us: 22158 } 
event_diag_log_id: 80 timestamp: 1497009254 time_since_boot_secs: 120 module: COMMAND_LINK line: 434 severity: DEBUG dcucomms_rx_msg_type { receive_msg: 21 } 
event_diag_log_id: 81 timestamp: 1497009254 time_since_boot_secs: 120 module: COMMAND_LINK line: 479 severity: DEBUG dcucomms_tx_msg_type { transmit_msg: 22 } 
event_diag_log_id: 82 timestamp: 1497009255 time_since_boot_secs: 122 module: CYLEC line: 46 severity: DEBUG cylec { packet_from_node { cylec_frame { frame_id: DIN_EVENT_EXTENDED flags: 0 src_addr: 2 dst_addr: 1 payload: "CYLEC_DINE3_LAST_GASP_SENTINEL" } } } 
event_diag_log_id: 83 event_rec_log_id: 272 timestamp: 1497009255 time_since_boot_secs: 122 module: METERCOMMS_DINE line: 154 severity: WARNING din_event { meter_uuid { uuid_bytes: "9\343e\205\244\206E\332\251r\265\337) !\000" } tamper_data: "CYLEC_DINE3_LAST_GASP_SENTINEL" } 
event_diag_log_id: 84 timestamp: 1497009255 time_since_boot_secs: 122 module: CYLEC line: 74 severity: DEBUG cylec { packet_from_dcu { cylec_frame { frame_id: OPEN_CHANNEL flags: 0 src_addr: 1 dst_addr: 2 payload: "" } } } 


2017-06-09 15:31:52,132 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:56846): event id 291: processing
2017-06-09 15:31:52,184 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:56846): Re-mapping event id 291 to uuid d5751a00-09a6-4bf8-824a-c05494c6e3be
2017-06-09 15:31:52,184 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:56846): event id d5751a00-09a6-4bf8-824a-c05494c6e3be: is dine3, sending to node_alarm processor
2017-06-09 15:31:52,185 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:56846): event id 291: done







-----------------------------

old:
2017-05-23 17:32:18,188 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52330): checking dcu config version
2017-05-23 17:32:18,204 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52330): generated config is 5950fa7e415b4b8cbaab16d858c5274d
2017-05-23 17:32:18,214 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52330): dcu config version is 97eb2eedd4ee20ebd77549788b5dc8ff
2017-05-23 17:32:18,231 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52330): last applied config is 97eb2eedd4ee20ebd77549788b5dc8ff
2017-05-23 17:32:18,231 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52330): generated different to last-applied: saving generated
2017-05-23 17:32:18,232 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52330): storing previous config "5950fa7e415b4b8cbaab16d858c5274d" to database
2017-05-23 17:32:18,265 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52330): generated different to dcu: updating dcu
2017-05-23 17:32:18,289 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52330): dcu config updated to "5950fa7e415b4b8cbaab16d858c5274d"
2017-05-23 17:32:18,289 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52330): resetting dcu after config update
2017-05-23 17:32:18,330 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52330): dcu confirmed reset
2017-05-23 17:32:18,342 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52330): dcu=34eea9bf-222c-49d3-8348-09510e767ea9: disconnected
2017-05-23 17:32:18,343 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52330): main loop: terminated
2017-05-23 17:32:18,343 craik.clm INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52330): ended for 172.17.0.1:52330

2017-05-23 17:32:19,437 craik.clm INFO Have new connection from 172.17.0.1:52334
2017-05-23 17:32:19,486 craik.clm INFO CLM(None,172.17.0.1:52334): starting for 172.17.0.1:52334
2017-05-23 17:32:19,486 root INFO CLM(None,172.17.0.1:52334): mainloop: starting
2017-05-23 17:32:19,487 root INFO CLM(None,172.17.0.1:52334): got hello: DCUDetails(dcu_id=UUID('34eea9bf-222c-49d3-8348-09510e767ea9'),firmware_version=Version(major=2, minor=10, bug=1, build=3769),timestamp=datetime.datetime(2017, 5, 23, 16, 32, 19, tzinfo=<UTC>),serial=2118245,hardware=HardwareCode(product_code=u'PRODUCT-CODE', revision=u'REVISION'),licence_serial=0,supported_features=DCUFeatures(METER_UUID))
2017-05-23 17:32:19,501 root INFO CLM(None,172.17.0.1:52334): dcu=34eea9bf-222c-49d3-8348-09510e767ea9: authenticated ok
2017-05-23 17:32:19,516 craik.notify.api INFO subscribing to notifications from: 34eea9bf-222c-49d3-8348-09510e767ea9
2017-05-23 17:32:19,579 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): time to update dcu time
2017-05-23 17:32:19,585 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): setting dcu time to datetime.datetime(2017, 5, 23, 16, 32, 19, 585215, tzinfo=<UTC>)
2017-05-23 17:32:19,594 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): checking dcu config version
2017-05-23 17:32:19,609 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): generated config is 5950fa7e415b4b8cbaab16d858c5274d
2017-05-23 17:32:19,616 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): dcu config version is 5950fa7e415b4b8cbaab16d858c5274d
2017-05-23 17:32:19,640 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): last applied config is 5950fa7e415b4b8cbaab16d858c5274d
2017-05-23 17:32:19,647 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): generated same as dcu: not updating dcu
2017-05-23 17:32:19,649 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): dcuconfig update done
2017-05-23 17:32:19,649 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): checking DCU for eventlogs
2017-05-23 17:32:19,653 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): (from dcu) last event: 40
2017-05-23 17:32:19,659 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): (from db) last event: 21
2017-05-23 17:32:19,659 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): updated eventlogs last_pending: 21
2017-05-23 17:32:19,661 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): new events to get: 22->40 (19)
2017-05-23 17:32:19,661 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): event id 22: processing
2017-05-23 17:32:19,710 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): Re-mapping event id 22 to uuid 88344ca7-9bea-4a8f-9e87-b19835ab5bfb
2017-05-23 17:32:19,711 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): event id 22: done
2017-05-23 17:32:19,711 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): event id 23: processing
2017-05-23 17:32:19,759 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): Re-mapping event id 23 to uuid 969c1351-ff8a-46e8-8f0f-e9155c49deeb
2017-05-23 17:32:19,760 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): event id 23: done



new:

2017-06-15 11:48:33,793 craik.clm INFO Have new connection from 172.17.0.2:33668
2017-06-15 11:48:33,836 craik.clm INFO CLM(None,172.17.0.2:33668): starting for 172.17.0.2:33668
2017-06-15 11:48:33,837 root INFO CLM(None,172.17.0.2:33668): mainloop: starting
2017-06-15 11:48:33,838 root INFO CLM(None,172.17.0.2:33668): got hello: DCUDetails(dcu_id=UUID('34eea9bf-222c-49d3-8348-09510e767ea9'),firmware_version=Version(major=2, minor=11, bug=0, build=3972),timestamp=datetime.datetime(2017, 6, 15, 10, 48, 33, tzinfo=<UTC>),serial=2118245,hardware=HardwareCode(product_code=u'PRODUCT-CODE', revision=u'REVISION'),licence_serial=656,supported_features=DCUFeatures(METER_UUID))
2017-06-15 11:48:33,905 root INFO CLM(None,172.17.0.2:33668): dcu=34eea9bf-222c-49d3-8348-09510e767ea9: authenticated ok
2017-06-15 11:48:33,914 craik.notify.api INFO subscribing to notifications from: 34eea9bf-222c-49d3-8348-09510e767ea9
2017-06-15 11:48:33,956 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.2:33668): time to update dcu time
2017-06-15 11:48:33,961 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.2:33668): setting dcu time to datetime.datetime(2017, 6, 15, 10, 48, 33, 961932, tzinfo=<UTC>)
2017-06-15 11:48:33,965 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.2:33668): checking dcu config version
2017-06-15 11:48:33,976 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.2:33668): generated config is 5950fa7e415b4b8cbaab16d858c5274d
2017-06-15 11:48:33,981 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.2:33668): dcu config version is e14e8ceee7141bb9b8bf4c9284e46ec8
2017-06-15 11:48:34,000 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.2:33668): last applied config is 5950fa7e415b4b8cbaab16d858c5274d
2017-06-15 11:48:34,000 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.2:33668): dcu different to last-applied: saving dcu config
2017-06-15 11:48:34,044 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.2:33668): storing previous config "e14e8ceee7141bb9b8bf4c9284e46ec8" to database
2017-06-15 11:48:34,072 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.2:33668): generated different to dcu: updating dcu
2017-06-15 11:48:34,133 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.2:33668): dcu config updated to "5950fa7e415b4b8cbaab16d858c5274d"
2017-06-15 11:48:34,134 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.2:33668): resetting dcu after config update
2017-06-15 11:48:34,175 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.2:33668): dcu confirmed reset
2017-06-15 11:48:34,211 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.2:33668): dcu=34eea9bf-222c-49d3-8348-09510e767ea9: disconnected
2017-06-15 11:48:34,212 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.2:33668): main loop: terminated
2017-06-15 11:48:34,213 craik.clm INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.2:33668): ended for 172.17.0.2:33668












2017-06-15 13:37:01,488 craikdecoder.processor INFO <craikdecoder.processor.AlarmDecoderProcessor object at 0x7f9d2acb7350>: outage: got msg
2017-06-15 13:37:01,489 craikdecoder.processor INFO <craikdecoder.processor.AlarmDecoderProcessor object at 0x7f9d2acb7350>: event outage: processing
2017-06-15 13:37:01,513 craikdecoder.processor INFO <craikdecoder.processor.AlarmDecoderProcessor object at 0x7f9d2acb7350>: event outage: decode failed done.
2017-06-15 13:37:01,513 root ERROR <craikdecoder.processor.AlarmDecoderProcessor object at 0x7f9d2acb7350>: outage: decode failure
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/craikdecoder/processor.py", line 188, in handle_msg
    out_octets = self._handle_msg(in_msg)
  File "/usr/local/lib/python2.7/dist-packages/craikdecoder/processor.py", line 526, in _handle_msg
    response = self.handle_alarm(in_obj)
  File "/usr/local/lib/python2.7/dist-packages/craikdecoder/processor.py", line 490, in handle_alarm
    metadata=metadata2,
  File "/usr/local/lib/python2.7/dist-packages/meterprotocol/decode.py", line 107, in decode_alarm
    decoder = get_decoder(meter_protocol_id, octets)
  File "/usr/local/lib/python2.7/dist-packages/meterprotocol/decode.py", line 58, in get_decoder
    package="meterprotocol"
  File "/usr/lib/python2.7/importlib/__init__.py", line 38, in import_module
    return sys.modules[name]
KeyError: 'meterprotocol.decoders.nodealarm.'
2017-06-15 13:37:01,515 craikdecoder.processor ERROR <craikdecoder.processor.AlarmDecoderProcessor object at 0x7f9d2acb7350>: outage: rejected(hard): why="KeyError('meterprotocol.decoders.nodealarm.',)": msg=Message[body: {"alarm_raw": {"octets": "Q1lMRUNfRElORTNfTEFTVF9HQVNQX1NFTlRJTkVM"}, "metadata": {"event_idx": 3013, "meter_serial": "TEST1", "meter_id": "39e36585-a486-45da-a972-b5df29202100", "dcu_id": "34eea9bf-222c-49d3-8348-09510e767ea9", "dcu_rtc": "2017-06-15T12:36:03+00:00", "event_id": "outage", "type": "alarm", "meter_protocol_type": "METER_TYPE_COMP_0010"}}, delivery_info: {'exchange': 'al-decoder-ex', 'consumer_tag': 'amq.ctag-Fo5OeArUoyaURlPLmlelJw', 'routing_key': 'COMP.0010', 'redelivered': 0, 'delivery_tag': 1, 'channel': <haigha.channel.Channel object at 0x7f9d2acb7050>}, properties: {'correlation_id': 'outage', 'type': 'alarm'}]
2017-06-15 13:37:01,519 craikdecoder.processor INFO <craikdecoder.processor.AlarmDecoderProcessor object at 0x7f9d2acb7350>: outage: done msg





craik@198a71bd54cd:/var/log/craik$ tail -f craik-decoder.log 
    event_.snapshot.accept(decoder)
  File "/usr/local/lib/python2.7/dist-packages/meterprotocol/decoders/nodealarm.py", line 94, in snapshot
    snap = self.make_snapshot(snap_data)
  File "/usr/local/lib/python2.7/dist-packages/meterprotocol/decoders/comp_0010/event.py", line 107, in make_snapshot
    snap = snapshot.Snapshot.make_snapshot(snap_data)
  File "/usr/local/lib/python2.7/dist-packages/meterprotocol/decoders/comp_0010/snapshot.py", line 166, in make_snapshot
    snap_id = snap_data[0]
TypeError: 'int' object has no attribute '__getitem__'
2017-06-15 14:17:02,294 craikdecoder.processor ERROR <craikdecoder.processor.AlarmDecoderProcessor object at 0x7fab746fdc10>: outage: rejected(hard): why='TypeError("\'int\' object has no attribute \'__getitem__\'",)': msg=Message[body: {"alarm_raw": {"octets": "Q1lMRUNfRElORTNfTEFTVF9HQVNQX1NFTlRJTkVM"}, "metadata": {"event_idx": 3021, "meter_serial": "TEST1", "meter_id": "39e36585-a486-45da-a972-b5df29202100", "dcu_id": "34eea9bf-222c-49d3-8348-09510e767ea9", "dcu_rtc": "2017-06-15T13:16:46+00:00", "event_id": "outage", "type": "alarm", "meter_protocol_type": "METER_TYPE_COMP_0010"}}, delivery_info: {'exchange': 'al-decoder-ex', 'consumer_tag': 'amq.ctag-NlBqOepIDjuCdkRJ4k5-8A', 'routing_key': 'COMP.0010', 'redelivered': 0, 'delivery_tag': 2, 'channel': <haigha.channel.Channel object at 0x7fab746fdc50>}, properties: {'correlation_id': 'outage', 'type': 'alarm'}]
2017-06-15 14:17:02,295 craikdecoder.processor INFO <craikdecoder.processor.AlarmDecoderProcessor object at 0x7fab746fdc10>: outage: done msg


-----------------------------------------------------------

bootargs=root=/dev/mmcblk0p1 ro console=ttyO0,115200n8 rootwait quiet
bootargs=root=/dev/mmcblk0p2 ro console=ttyO0,115200n8 rootwait quiet
bootargs=root=/dev/sda2 ro console=ttyO0,115200n8 rootwait quiet

bootcmd
load mmc 0:1 0x82000000 /boot/zImage; load mmc 0:1 0x88000000 /boot/am437x-sbc-t43.dtb; bootz 0x82000000 - 0x88000000 
load mmc 0:2 0x82000000 /boot/zImage; load mmc 0:2 0x88000000 /boot/am437x-sbc-t43.dtb; bootz 0x82000000 - 0x88000000
usb start;load usb 0:2 0x82000000 /boot/zImage; load usb 0:2 0x88000000 /boot/am437x-sbc-t43.dtb; bootz 0x82000000 - 0x88000000

bootargs=root=/dev/sda3 ro console=ttyO0,115200n8 rootwait quiet
usb start;load usb 0:3 0x82000000 /boot/zImage; load usb 0:3 0x88000000 /boot/am437x-sbc-t43.dtb; bootz 0x82000000 - 0x88000000

usb start
ls usb 0:1 /


----------------------------------------

Boot from u-boot script on /dev/sda1

ext2load usb 0:1 0x83000000 /bootscr.img

usb start ; ext2load usb 0:1 0x83000000 /bootscr.img; source 0x83000000

setenv bootcmd "usb start ; ext2load usb 0:1 0x83000000 /bootscr.img; source 0x83000000"




--------------------------------------------------




GPIO

echo 67 > /sys/class/gpio/export
ls /sys/class/gpio
ls -laF /sys/class/gpio/gpio67/

echo out > /sys/class/gpio/gpio67/direction 
echo 1 > /sys/class/gpio/gpio67/value
echo 0 > /sys/class/gpio/gpio67/value


https://www.allaboutcircuits.com/projects/how-to-use-the-digital-i-o-on-a-beaglebone/


----------------------------------


git pull origin
git checkout master
git pull
git reset --hard origin/master
git pull --rebase
git merge --no-ff origin/<branchname>


----------------------------------------------------------


43594c45435f44494e45335f4c4153545f474153505f53454e54494e454c

{
    "EVENT_METER_ALARM": 
    {
        "event_type": "outage", 
        "meter": "39e36585-a486-45da-a972-b5df29202100", 
        "dcu_rtc__datetime": "2017-06-28T16:37:04+00:00", 
        "meter_serial": "TEST1", 
        "event_start_end": "start", 
        "dcu": "34eea9bf-222c-49d3-8348-09510e767ea9", 
        "event_data": 
        {
            "EVENT_EMPTY": {}
        }
    }
}


-------------------------------------------------


wget http://127.0.0.1:5000/UpgradePack/Patch.tar
dd if=/dev/sda2 of=/dev/sda3 bs=1M
mount /dev/sda3 /mnt

- need translation between uid 'ubuntu'(1000) and root(0) i.e. a 'pseudo root'.
- need translation between gid 'ubuntu'(1000) and root(0) i.e. a 'pseudo root'.
- need to minimise chowns/mkdirs/chmod

wget -nv --post-data "value=08585858&message=This is yet another log entry" http://172.16.32.107:5000/Log
wget -nv http://172.16.32.107:5000/UpgradePack/Patch.tar

ssh-keygen: generating new host keys: RSA Saving key "/etc/ssh/ssh_host_rsa_key" failed: Read-only filem
ssh-keygen: generating new host keys: DSA Saving key "/etc/ssh/ssh_host_dsa_key" failed: Read-only filem
ssh-keygen: generating new host keys: ECDSA Saving key "/etc/ssh/ssh_host_ecdsa_key" failed: Read-only m
ssh-keygen: generating new host keys: ED25519 Saving key "/etc/ssh/ssh_host_ed25519_key" failed: Read-om

----------------------------------------------

BAN-78-0083-Update-OUCVBCS-HES-API

----------------------------------------------

Starting logging: OK
read-only file system detected...done
Starting network: OK
ssh-keygen: generating new host keys: RSA Saving key "/etc/ssh/ssh_host_rsa_key" failed: Read-only filem
ssh-keygen: generating new host keys: DSA Saving key "/etc/ssh/ssh_host_dsa_key" failed: Read-only filem
ssh-keygen: generating new host keys: ECDSA Saving key "/etc/ssh/ssh_host_ecdsa_key" failed: Read-only m
ssh-keygen: generating new host keys: ED25519 Saving key "/etc/ssh/ssh_host_ed25519_key" failed: Read-om
Starting sshd: Could not load host key: /etc/ssh/ssh_host_rsa_key
Could not load host key: /etc/ssh/ssh_host_dsa_key
Could not load host key: /etc/ssh/ssh_host_ecdsa_key
Could not load host key: /etc/ssh/ssh_host_ed25519_key
sshd: no hostkeys available -- exiting.
OK
no interfaces have a carrier
forked to background, child pid 145
[   15.264080] libphy: PHY 4a101000.mdio:00 not found
[   15.269168] net eth0: phy "4a101000.mdio:00" not found on slave 0, err -19
[   15.288399] libphy: PHY 4a101000.mdio:01 not found
[   15.293538] net eth1: phy "4a101000.mdio:01" not found on slave 1, err -19

----------------------------------------------


Starting logging: OK
read-only file system detected...done
Starting network: OK
Starting sshd: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Permissions 0644 for '/etc/ssh/ssh_host_rsa_key' are too open.
It is required that your private key files are NOT accessible by others.
This private key will be ignored.
key_load_private: bad permissions
Could not load host key: /etc/ssh/ssh_host_rsa_key
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Permissions 0644 for '/etc/ssh/ssh_host_dsa_key' are too open.
It is required that your private key files are NOT accessible by others.
This private key will be ignored.
key_load_private: bad permissions
Could not load host key: /etc/ssh/ssh_host_dsa_key
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Permissions 0644 for '/etc/ssh/ssh_host_ecdsa_key' are too open.
It is required that your private key files are NOT accessible by others.
This private key will be ignored.
key_load_private: bad permissions
Could not load host key: /etc/ssh/ssh_host_ecdsa_key
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Permissions 0644 for '/etc/ssh/ssh_host_ed25519_key' are too open.
It is required that your private key files are NOT accessible by others.
This private key will be ignored.
key_load_private: bad permissions
Could not load host key: /etc/ssh/ssh_host_ed25519_key
sshd: no hostkeys available -- exiting.
OK
no interfaces have a carrier
forked to background, child pid 146
[    4.509449] libphy: PHY 4a101000.mdio:00 not found
[    4.514495] net eth0: phy "4a101000.mdio:00" not found on slave 0, err -19
[    4.534625] libphy: PHY 4a101000.mdio:01 not found
[    4.539726] net eth1: phy "4a101000.mdio:01" not found on slave 1, err -19

Welcome to Cosmos


------------------------------------------------------------------


python3 SecureFirmware.py -m t

python3 SecureFirmware.py -m g -e enc_key -p sign_key_pub.der -q signing_key_private.der
cp enc_key
cp sign_key_pub.der
cp signing_key_private.der

python3 SecureFirmware.py -m e -e enc_key -q signing_key_private.der -i Patch.tar -o SignedPatch.tar

python3 SecureFirmware.py -m d -e enc_key -p sign_key_pub.der -i SignedPatch.tar -o Patch2.tar




------------------------------------------------------------------


cd /home/app
python SecureFirmware.py -m e -e Keys/enc_key -q Keys/signing_key_private.der -i /tmp/Patch.tar -o SignedPatch.tar

------------------------------------------------------------------

mknod /dev/ppp c 108 0
insmod ppp
start-stop-daemon --start --background --make-pidfile --pidfile /run/WANMonitor.pid --startas /usr/bin/WANMonitor.py -- ppp0 -l /var/log/WANMonitor.log


---------------------------------

Loose ends:

- SecureFirmware.py needs to not produce an output on verification failure.
- GenerateHash needs to generate same results on host & target. Also needs to incorporate metadata (permissions, gid, uid, etc).
- Add the logic for determining if a new upgrade is available to incorporate the hash generation.
- Before marking the new rootfs as good, it must match hashes with the downloaded patch.
- minimisation of Patch.sh commands (currently does more than is needed).
- Check for broken links in new fs prior to patch generation.
- Check for interrupted upgrade on boot (i.e. power failed during application).
- Download process needs to check for available space before downloading patch.
- Should do an fsck on the new rootfs prior to marking it ready to boot (or even prior to copy?).
- Verify hash of previous source rootfs before copy??
- Current STOP mode is in U-boot. is this desirable? avoidable?
- If no partitions marked as bootable, try last-known-good? (possible security hole here).
- Change disk image name.
- Add genext2fs to Dockerfile.
- Add LVM2 and initrd (needed to boot from LVM2). This also needs the partition arrangement to change.
- Change the fw upgrade from a 'dd' copy to a 'mkfs and cp-R' copy which will allow resizing of partitions.
- Need resize2fs on the platform to allow for fs resizing.
- CMUX on UART to modem, to allow for status checking while call in progress.

--------------------------------------


Jan  1 00:04:13 Cosmos daemon.notice pppd[232]: pppd 2.4.7 started by root, uid 0
Jan  1 00:04:14 Cosmos local2.info chat[236]: abort on (BUSY)
Jan  1 00:04:14 Cosmos local2.info chat[236]: abort on (NO CARRIER)
Jan  1 00:04:14 Cosmos local2.info chat[236]: abort on (VOICE)
Jan  1 00:04:14 Cosmos local2.info chat[236]: abort on (NO DIALTONE)
Jan  1 00:04:14 Cosmos local2.info chat[236]: abort on (NO DIAL TONE)
Jan  1 00:04:14 Cosmos local2.info chat[236]: abort on (NO ANSWER)
Jan  1 00:04:14 Cosmos local2.info chat[236]: abort on (DELAYED)
Jan  1 00:04:14 Cosmos local2.info chat[236]: report (CONNECT)
Jan  1 00:04:14 Cosmos local2.info chat[236]: timeout set to 6 seconds
Jan  1 00:04:14 Cosmos local2.info chat[236]: send (ATQ0^M)
Jan  1 00:04:14 Cosmos local2.info chat[236]: expect (OK)
Jan  1 00:04:14 Cosmos local2.info chat[236]: ATQ0^M^M
Jan  1 00:04:14 Cosmos local2.info chat[236]: OK
Jan  1 00:04:14 Cosmos local2.info chat[236]:  -- got it
Jan  1 00:04:14 Cosmos local2.info chat[236]: send (ATZ^M)
Jan  1 00:04:14 Cosmos local2.info chat[236]: timeout set to 3 seconds
Jan  1 00:04:14 Cosmos local2.info chat[236]: expect (OKd)
Jan  1 00:04:14 Cosmos local2.info chat[236]: ^M
Jan  1 00:04:14 Cosmos local2.info chat[236]: ATZ^M^M
Jan  1 00:04:14 Cosmos local2.info chat[236]: OK^M
Jan  1 00:04:17 Cosmos local2.info chat[236]: alarm
Jan  1 00:04:17 Cosmos local2.info chat[236]: send (AT^M)
Jan  1 00:04:17 Cosmos local2.info chat[236]: expect (OK)
Jan  1 00:04:17 Cosmos local2.info chat[236]: AT^M^M
Jan  1 00:04:17 Cosmos local2.info chat[236]: OK
Jan  1 00:04:17 Cosmos local2.info chat[236]:  -- got it
Jan  1 00:04:17 Cosmos local2.info chat[236]: send (ATI^M)
Jan  1 00:04:17 Cosmos local2.info chat[236]: expect (OK)
Jan  1 00:04:17 Cosmos local2.info chat[236]: ^M
Jan  1 00:04:17 Cosmos local2.info chat[236]: ATI^M^M
Jan  1 00:04:17 Cosmos local2.info chat[236]: 332^M
Jan  1 00:04:17 Cosmos local2.info chat[236]: ^M
Jan  1 00:04:17 Cosmos local2.info chat[236]: OK
Jan  1 00:04:17 Cosmos local2.info chat[236]:  -- got it
Jan  1 00:04:17 Cosmos local2.info chat[236]: send (ATZ^M)
Jan  1 00:04:17 Cosmos local2.info chat[236]: expect (OK)
Jan  1 00:04:17 Cosmos local2.info chat[236]: ^M
Jan  1 00:04:17 Cosmos local2.info chat[236]: ATZ^M^M
Jan  1 00:04:17 Cosmos local2.info chat[236]: OK
Jan  1 00:04:17 Cosmos local2.info chat[236]:  -- got it
Jan  1 00:04:17 Cosmos local2.info chat[236]: send (AT+CGDCONT=1,"IP","wirelesslogic.co.uk"^M)
Jan  1 00:04:18 Cosmos local2.info chat[236]: expect (OK)
Jan  1 00:04:18 Cosmos local2.info chat[236]: ^M
Jan  1 00:04:18 Cosmos local2.info chat[236]: AT+CGDCONT=1,"IP","wirelesslogic.co.uk"^M^M
Jan  1 00:04:18 Cosmos local2.info chat[236]: OK
Jan  1 00:04:18 Cosmos local2.info chat[236]:  -- got it
Jan  1 00:04:18 Cosmos local2.info chat[236]: send (ATD*99***1#^M)
Jan  1 00:04:18 Cosmos local2.info chat[236]: timeout set to 30 seconds
Jan  1 00:04:18 Cosmos local2.info chat[236]: expect (CONNECT)
Jan  1 00:04:18 Cosmos local2.info chat[236]: ^M
Jan  1 00:04:18 Cosmos local2.info chat[236]: ATD*99***1#^M^M
Jan  1 00:04:18 Cosmos local2.info chat[236]: CONNECT
Jan  1 00:04:18 Cosmos local2.info chat[236]:  -- got it
Jan  1 00:04:18 Cosmos local2.info chat[236]: send (^M)
Jan  1 00:04:18 Cosmos daemon.debug pppd[232]: Script /usr/sbin/chat -v -t15 -f /etc/ppp/chatscripts/mo0
Jan  1 00:04:18 Cosmos daemon.info pppd[232]: Serial connection established.
Jan  1 00:04:18 Cosmos daemon.debug pppd[232]: using channel 1
Jan  1 00:04:18 Cosmos daemon.info pppd[232]: Using interface ppp0
Jan  1 00:04:18 Cosmos daemon.notice pppd[232]: Connect: ppp0 <--> /dev/ttyUSB1
[  259.364850] PPP Deflate Compression module registered
Jan  1 00:04:19 Cosmos daemon.debug pppd[232]: sent [LCP ConfReq id=0x1 <asyncmap 0x0> <magic 0x811df57]
Jan  1 00:04:19 Cosmos daemon.debug pppd[232]: rcvd [LCP ConfAck id=0x1 <asyncmap 0x0> <magic 0x811df57]
Jan  1 00:04:19 Cosmos daemon.debug pppd[232]: rcvd [LCP ConfReq id=0x1 <asyncmap 0x0> <auth pap> <magi]
Jan  1 00:04:19 Cosmos daemon.debug pppd[232]: sent [LCP ConfAck id=0x1 <asyncmap 0x0> <auth pap> <magi]
Jan  1 00:04:19 Cosmos daemon.debug pppd[232]: sent [PAP AuthReq id=0x1 user="cyan" password=<hidden>]
Jan  1 00:04:19 Cosmos daemon.debug pppd[232]: rcvd [PAP AuthAck id=0x1 "Welcome!"]
Jan  1 00:04:19 Cosmos daemon.info pppd[232]: Remote message: Welcome!
Jan  1 00:04:19 Cosmos daemon.notice pppd[232]: PAP authentication succeeded
Jan  1 00:04:19 Cosmos user.info kernel: [  259.364850] PPP Deflate Compression module registered
Jan  1 00:04:19 Cosmos daemon.debug pppd[232]: sent [CCP ConfReq id=0x1 <deflate 15> <deflate(old#) 15>]
Jan  1 00:04:19 Cosmos daemon.debug pppd[232]: sent [IPCP ConfReq id=0x1 <addr 0.0.0.0> <ms-dns1 0.0.0.]
Jan  1 00:04:19 Cosmos daemon.debug pppd[232]: rcvd [IPCP ConfReq id=0x1 <addr 192.168.202.0>]
Jan  1 00:04:19 Cosmos daemon.debug pppd[232]: sent [IPCP ConfAck id=0x1 <addr 192.168.202.0>]
Jan  1 00:04:19 Cosmos daemon.debug pppd[232]: rcvd [LCP ProtRej id=0x1 80 fd 01 01 00 0c 1a 04 78 00 1]
Jan  1 00:04:19 Cosmos daemon.debug pppd[232]: Protocol-Reject for 'Compression Control Protocol' (0x80d
Jan  1 00:04:20 Cosmos daemon.debug pppd[232]: rcvd [IPCP ConfNak id=0x1 <addr 10.7.61.28> <ms-dns1 10.]
Jan  1 00:04:20 Cosmos daemon.debug pppd[232]: sent [IPCP ConfReq id=0x2 <addr 10.7.61.28> <ms-dns1 10.]
Jan  1 00:04:20 Cosmos daemon.debug pppd[232]: rcvd [IPCP ConfAck id=0x2 <addr 10.7.61.28> <ms-dns1 10.]
Jan  1 00:04:20 Cosmos daemon.err pppd[232]: not replacing existing default route via 172.16.32.254
Jan  1 00:04:20 Cosmos daemon.notice pppd[232]: local  IP address 10.7.61.28
Jan  1 00:04:20 Cosmos daemon.notice pppd[232]: remote IP address 192.168.202.0
Jan  1 00:04:20 Cosmos daemon.notice pppd[232]: primary   DNS address 10.4.0.240
Jan  1 00:04:20 Cosmos daemon.notice pppd[232]: secondary DNS address 10.4.0.230





---------------------


mknod /dev/ppp c 108 0

/etc/resolv.conf
nameserver 8.8.8.8
nameserver 8.8.4.4


ifup ppp0


route add default ppp0

/etc/network/interfaces
remove wait-for line.

---------------------------------

with SSH access on port 22222 at address 185.81.161.158
debian:temppwd



-------------------------------------------------

TestApplication ports

dcuhw/rf_node.py:        'tty': '/dev/ttyUSB5'
dcuhw/rf_node.py:        'tty': '/dev/ttyUSB6'
dcuhw/gprs.py:        Gprs.instance = Gprs(tty='/dev/ttyUSB1')
mts/mts_serial.py:    def __init__(self, port='/dev/ttyUSB4', baudrate=115200, timeout=1):



aux_power_check_request.json                            - WILL FAIL
ethernet_autoneg_test_execute_request.json              - PASS
ethernet_ping_test_execute_request.json                 - PASS
fat_flag_set_request.json                               - DONE
gprs_network_status_check_execute_request.json          - PASS
gprs_sim_check_present_execute_request.json             - PASS
main_power_check_request.json                           - WILL FAIL
nand_test_execute_request.json                          - PASS
reset_request.json                                      - DONE
rf_loopback_test_execute_request.json                   - PASS
rtc_date_check_request.json                             - PASS
rtc_date_set_request.json                               - PASS
rtc_time_check_request.json                             - PASS
rtc_time_set_request.json                               - PASS
scap_voltage_check_execute_request.json                 - WILL FAIL
sdram_test_execute_request.json                         - PASS
test_log_read_request.json                              - DONE
usb_loopback_test_execute_request.json                  - WILL FAIL
usb_peripheral_detect_test_execute_request.json         - WILL FAIL



----------------------------------------

Star names:

"Zubenelgenubi"


# CyLec (v2.12.0.720122308)
# Hardware rev: 0000 00 @00000
# System address (CY3S): 0x5678
# Network address (CY3A): 0x0002
# Serial no (CYSN): 0x00008235
# Band (BND1): BD 433MHz
# Channel (CHAN): 6
# Dynamic Thresholds (St1a & St2d): On
# Role (METR): Meter
# OTXU: Off
# Boot address (CYBA): 0xFFFFFFFF

am437x-cm-t43 am437x-idk-evm am437x-sbc-t43 am437x-gp-evm
DeviceTree/am437x-cm-t43.dts DeviceTree/am437x-idk-evm.dts DeviceTree/am437x-sbc-t43.dts DeviceTree/am437x-gp-evm.dts


-----------------------------------

MTS loose ends:
- RF node loopback test can be intermittent as it picks up "CMD>" in the response from the receiving node.
- SDRAM test needs to be rewritten.
- NAND test is not thorough enough.
- USB OTG (as device) needs implementing (or does it? what requirement?)
- modem test mode should have a new test.
- rf node PRBS should have a new test.



RTC DTS
cd /sys/firmware/devicetree/base/ocp@44000000/rtc@44e3e000


{
    "MTS__TEST_EXECUTE__REQUEST": {
        "RTC_Time_Set": {
            "Time": "10:55:44"
        }
    }
}

{
    "MTS__TEST_EXECUTE__REQUEST": {
        "RTC_Time_Check": {
            "Time": "10:55:59"
        }
    }
}


-------------------------------------

eMMC

emmc_pins: pinmux_emmc_pins {

        emmc_pins: pinmux_emmc_pins {
                pinctrl-single,pins = < 
                        AM33XX_IOPAD(0x880, PIN_INPUT_PULLUP | MUX_MODE2) /* gpmc_csn1.mmc1_clk */
                        AM33XX_IOPAD(0x884, PIN_INPUT_PULLUP | MUX_MODE2) /* gpmc_csn2.mmc1_cmd */
                        AM33XX_IOPAD(0x800, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad0.mmc1_dat0 */
                        AM33XX_IOPAD(0x804, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad1.mmc1_dat1 */
                        AM33XX_IOPAD(0x808, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad2.mmc1_dat2 */
                        AM33XX_IOPAD(0x80c, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad3.mmc1_dat3 */
                        AM33XX_IOPAD(0x810, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad4.mmc1_dat4 */
                        AM33XX_IOPAD(0x814, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad5.mmc1_dat5 */
                        AM33XX_IOPAD(0x818, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad6.mmc1_dat6 */
                        AM33XX_IOPAD(0x81c, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad7.mmc1_dat7 */
                >;
        };

};


&mmc2 {
        vmmc-supply = <&vmmcsd_fixed>;
        pinctrl-names = "default";
        pinctrl-0 = <&emmc_pins>;
        bus-width = <8>;
        status = "okay";
};



                mmc2: mmc@481d8000 {
                        compatible = "ti,omap4-hsmmc";
                        ti,hwmods = "mmc2";
                        ti,needs-special-reset;
                        dmas = <&edma 2 0
                                &edma 3 0>;
                        dma-names = "tx", "rx";
                        interrupts = <28>;
                        interrupt-parent = <&intc>;
                        reg = <0x481d8000 0x1000>;
                        status = "disabled";
                };



=> gpio status -a
Bank gpio@44e07000:                             // bank 1
gpio@44e070000: input: 0 [ ]
gpio@44e070001: input: 0 [ ]
gpio@44e070002: input: 1 [ ]
gpio@44e070003: input: 1 [ ]
gpio@44e070004: input: 1 [ ]
gpio@44e070005: input: 0 [ ]
gpio@44e070006: input: 1 [ ]
gpio@44e070007: input: 0 [ ]
gpio@44e070008: input: 0 [ ]
gpio@44e070009: input: 0 [ ]
gpio@44e0700010: input: 0 [ ]
gpio@44e0700011: input: 0 [ ]
gpio@44e0700012: input: 1 [ ]
gpio@44e0700013: input: 1 [ ]
gpio@44e0700014: input: 0 [ ]
gpio@44e0700015: input: 0 [ ]
gpio@44e0700016: input: 0 [ ]                   // 
gpio@44e0700017: input: 0 [ ]
gpio@44e0700018: input: 0 [ ]                   // EXT_LED GPIO1_18 Llinux 0/18 (18)
gpio@44e0700019: input: 0 [ ]
gpio@44e0700020: input: 0 [ ]
gpio@44e0700021: input: 0 [ ]                   // RFMOD_A_RST GPIO0_21 Linux 0/21 (21)
gpio@44e0700022: input: 0 [ ]
gpio@44e0700023: input: 0 [ ]                   // RFMOD_A_DINE GPIO0_23 LInux 0/23 (23)
gpio@44e0700024: input: 0 [ ]
gpio@44e0700025: input: 0 [ ]
gpio@44e0700026: input: 0 [ ]
gpio@44e0700027: input: 0 [ ]                   // GPRS_PWR GPIO1_27 (D8) TP101 (59)
gpio@44e0700028: input: 0 [ ]                   // GPRS_VEN GPIO1_28 (A3) TP100 (60)
gpio@44e0700029: input: 0 [ ]
gpio@44e0700030: input: 0 [ ]
gpio@44e0700031: input: 0 [ ]

Bank gpio@4804c000:                             // bank 2  Linux 1
gpio@4804c0000: input: 0 [ ]
gpio@4804c0001: input: 0 [ ]
gpio@4804c0002: input: 0 [ ]
gpio@4804c0003: input: 0 [ ]
gpio@4804c0004: input: 0 [ ]
gpio@4804c0005: input: 0 [ ]
gpio@4804c0006: input: 0 [ ]
gpio@4804c0007: input: 0 [ ]
gpio@4804c0008: input: 1 [ ]
gpio@4804c0009: input: 1 [ ]
gpio@4804c00010: input: 0 [ ]
gpio@4804c00011: input: 0 [ ]
gpio@4804c00012: input: 0 [ ]
gpio@4804c00013: input: 0 [ ]
gpio@4804c00014: input: 0 [ ]
gpio@4804c00015: input: 0 [ ]
gpio@4804c00016: input: 0 [ ]                   // ethernet phy reset GPIO1_16   Linux 0/16
gpio@4804c00017: input: 0 [ ]                   // eMMC nRST GPIO1_17            Linux 0/17
gpio@4804c00018: input: 0 [ ]                   // ext_led        GPIO1_18
gpio@4804c00019: output: 1 [ ]                  // EN_DDR3_VTT    GPIO1_19
gpio@4804c00020: input: 0 [ ]                   // TP302  GPIO1_20
gpio@4804c00021: input: 0 [ ]                   // TP303  GPIO1_21
gpio@4804c00022: input: 0 [ ]                   // EXP_GPIO_0     GPIO1_22
gpio@4804c00023: input: 0 [ ]                   // EXP_GPIO_1     GPIO1_23
gpio@4804c00024: input: 0 [ ]                   // EXP_GPIO_2     GPIO1_24
gpio@4804c00025: input: 0 [ ]                   // EXP_GPIO_3     GPIO1_25
gpio@4804c00026: input: 0 [ ]
gpio@4804c00027: input: 0 [ ]                   // GPRS_PWR       GPIO1_27
gpio@4804c00028: input: 1 [ ]                   // GPRS_VEN       GPIO1_28
gpio@4804c00029: input: 0 [ ]
gpio@4804c00030: input: 0 [ ]
gpio@4804c00031: input: 0 [ ]

Bank gpio@481ae000:                             // bank 3    Linux 1
gpio@481ae0000: input: 1 [ ]
gpio@481ae0001: input: 0 [ ]
gpio@481ae0002: input: 0 [ ]
gpio@481ae0003: input: 0 [ ]
gpio@481ae0004: input: 0 [ ]
gpio@481ae0005: input: 0 [ ]
gpio@481ae0006: input: 0 [ ]
gpio@481ae0007: input: 0 [ ]                    // RFMOD_B_RST GPIO3_7 Linux 1/7 (39)
gpio@481ae0008: input: 0 [ ]                    // RFMOD_B_DINE GPIO3_8 Linux 1/8 (40)
gpio@481ae0009: input: 0 [ ]
gpio@481ae00010: input: 0 [ ]
gpio@481ae00011: input: 0 [ ]
gpio@481ae00012: input: 0 [ ]
gpio@481ae00013: input: 0 [ ]
gpio@481ae00014: input: 0 [ ]
gpio@481ae00015: input: 0 [ ]
gpio@481ae00016: input: 0 [ ]
gpio@481ae00017: input: 0 [ ]
gpio@481ae00018: input: 0 [ ]
gpio@481ae00019: input: 0 [ ]
gpio@481ae00020: input: 0 [ ]
gpio@481ae00021: input: 0 [ ]
gpio@481ae00022: input: 0 [ ]                   // 3v3B enable        Linux 2/22 (86)
gpio@481ae00023: input: 1 [ ]
gpio@481ae00024: input: 1 [ ]                   // red LED GPIO3_24   Linux 2/24 (88)
gpio@481ae00025: input: 1 [ ]
gpio@481ae00026: input: 0 [ ]
gpio@481ae00027: input: 0 [ ]
gpio@481ae00028: input: 0 [ ]
gpio@481ae00029: input: 0 [ ]
gpio@481ae00030: input: 0 [ ]
gpio@481ae00031: input: 0 [ ]

Bank gpio@48320000:                             // bank 4  Linux 3
gpio@483200000: input: 0 [ ]
gpio@483200001: input: 0 [ ]
gpio@483200002: input: 0 [ ]
gpio@483200003: input: 0 [ ]
gpio@483200004: input: 0 [ ]
gpio@483200005: input: 0 [ ]
gpio@483200006: input: 0 [ ]
gpio@483200007: input: 0 [ ]
gpio@483200008: input: 0 [ ]
gpio@483200009: input: 0 [ ]
gpio@4832000010: input: 0 [ ]
gpio@4832000011: input: 0 [ ]
gpio@4832000012: input: 0 [ ]
gpio@4832000013: input: 0 [ ]
gpio@4832000014: input: 0 [ ]
gpio@4832000015: input: 0 [ ]
gpio@4832000016: input: 0 [ ]
gpio@4832000017: input: 0 [ ]
gpio@4832000018: input: 0 [ ]
gpio@4832000019: input: 0 [ ]
gpio@4832000020: input: 0 [ ]
gpio@4832000021: input: 0 [ ]
gpio@4832000022: input: 0 [ ]
gpio@4832000023: input: 0 [ ]
gpio@4832000024: input: 0 [ ]
gpio@4832000025: input: 0 [ ]
gpio@4832000026: input: 0 [ ]
gpio@4832000027: input: 0 [ ]
gpio@4832000028: input: 0 [ ]
gpio@4832000029: input: 0 [ ]
gpio@4832000030: input: 0 [ ]
gpio@4832000031: input: 0 [ ]

Bank gpio@48322000:                             // bank 5  Linux 4
gpio@483220000: input: 1 [ ]
gpio@483220001: input: 1 [ ]
gpio@483220002: input: 1 [ ]
gpio@483220003: input: 1 [ ]
gpio@483220004: input: 1 [ ]                    // green LED GPIO5_4  Linux 4/4 = 132
gpio@483220005: input: 0 [ ]                    // blue LED GPIO5_5   Linux 4/5 = 133
gpio@483220006: input: 0 [ ]                    // MODEM_PWR  GPIO5_6          (166)
gpio@483220007: input: 1 [ ]                    // EN_232 GPIO_5_7 Linux 4/7 = 135
gpio@483220008: input: 0 [ ]
gpio@483220009: input: 0 [ ]
gpio@4832200010: input: 0 [ ]
gpio@4832200011: input: 0 [ ]
gpio@4832200012: input: 0 [ ]
gpio@4832200013: input: 0 [ ]
gpio@4832200014: input: 0 [ ]
gpio@4832200015: input: 0 [ ]
gpio@4832200016: input: 0 [ ]
gpio@4832200017: input: 0 [ ]
gpio@4832200018: input: 0 [ ]
gpio@4832200019: input: 0 [ ]
gpio@4832200020: input: 0 [ ]
gpio@4832200021: input: 0 [ ]
gpio@4832200022: input: 0 [ ]
gpio@4832200023: input: 0 [ ]
gpio@4832200024: input: 0 [ ]
gpio@4832200025: input: 0 [ ]
gpio@4832200026: input: 0 [ ]
gpio@4832200027: input: 0 [ ]
gpio@4832200028: input: 0 [ ]
gpio@4832200029: input: 0 [ ]
gpio@4832200030: input: 0 [ ]
gpio@4832200031: input: 0 [ ]
=> gpio toggle gpio@4832000022











------------------------------

mmcblk0: mmc0:0001 SEM08G 7.28 GiB 
mmcblk1: mmc1:aaaa SB16G 14.8 GiB 


-----------------------------

mkimage -f fitImage_nonsecure.its -r fitImage


-----------

U-boot config change:

include/configs/am43xx_evm.h

#define CONFIG_SYS_NS16550_COM1         0x481a8000      /* Base EVM has UART4 */


mkimage -f fitImage_nonsecure.its -r fitImage



-------------------------------

at#gpio=1,1,1  (Modem Green LED)
at#gpio=2,1,1  (Modem Red LED)


SIM switching

OK
at#ccid
#CCID: 89441000300307211676

OK
at#gpio=3,1,1
OK
at#simdet=0
OK
at#simdet=1
OK
at#ccid
#CCID: 89441000300307211544

OK

---------------------------------------------

import re
t=open('screen.cap').read()
d=re.compile('--- ([0-9]+) ---.*?NodeA(.*?)NodeB(.*?)---',re.DOTALL).findall(t)



--------------------------


# CyLec (v2.11.0.613142607)
# Hardware rev: 0000 00 @00000
# System address (CY3S): 0x5678
# Network address (CY3A): 0x0002
# Serial no (CYSN): 0x00001235
# Band (BND1): 865MHz Type Approval
# Channel (CHAN): 7
# Dynamic Thresholds (St1a & St2d): On
# Role (METR): Meter
# OTXU: On
# Boot address (CYBA): 0xFFFFFFFF


-------------------------


# i2cdetect -y -r 0
     0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f
00:          -- -- -- -- -- -- -- -- -- -- -- -- -- 
10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
20: -- -- -- -- UU -- -- -- -- 29 -- -- -- -- -- -- 
30: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
50: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
70: -- -- -- -- -- -- -- --                         


i2cget -y 0 0x29 0x00

# i2cdump -f -y -r 0x00-0x26 0 0x24
No size specified (using byte-data access)
     0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f    0123456789abcdef
00: 03 00 00 3f 3f 28 00 00 00 00 00 00 00 00 00 00    ?..??(..........
10: 00 3f 13 48 c0 00 19 19 98 b2 06 1f 00 00 00 00    .??H?.??????....
20: 00 00 98 70 00 63 03                               ..?p.c?         
# 


Remove freshness seal
i2cset -f -y 0 0x24 0x10 0xb1 0xfe 0xa3 i

Read status PMIC register
i2cget -f -y 0 0x24 0x05


------------------------------------------------------


*(0x44DF0000 + 0x2B68) = 0x00000002

*(0x44E07000 + ) = enabled




mount /dev/mmcblk0p1 /mnt
mknod /dev/hack c 100 0
insmod /mnt/GPIOHack.ko
python /home/app/ioctl.py /dev/hack 0


---------------------------

date +%Y%m%d -s "20081128"
date +%T -s "10:13:13"
hwclock -w


----------------------------------------------------

assertion "(irq1flags & RF_IRQFLAGS1_TIMEOUT) || (irq2flags & RF_IRQFLAGS2_PAYLOADREADY)" failed: file 0


------------------------------

debugfs from kernel:

mount -t debugfs none /sys/kernel/debug

------------------------

pinmux functions:
cat /sys/kernel/debug/pinctrl/44e10800.pinmux/pins


---------------------------------------------------------------


for _cable_, _main_, _diag_ :

cygh_uart_cable_get_baudrate
cygh_uart_cable_handshake_hw_available
cygh_uart_cable_handshake_set_enable
cygh_uart_cable_handshake_sw_available
cygh_uart_cable_initialise
cygh_uart_cable_process
cygh_uart_cable_rxchar
cygh_uart_cable_rx_clear
cygh_uart_cable_set_baudrate
cygh_uart_cable_tx
cygh_uart_cable_tx_buffer_free
cygh_uart_cable_tx_clear
cygh_uart_diag_tx_blocking
cygh_uart_diag_txchar_blocking




------------------------------

BR2_TOOLCHAIN_BUILDROOT_WCHAR=y
BR2_PTHREAD_DEBUG=y
BR2_PACKAGE_GDB=y
BR2_PACKAGE_GDB_SERVER=y
BR2_PACKAGE_GDB_DEBUGGER=y
BR2_PACKAGE_GDB_TUI=y



----------------------------------------------------

Store:

FILE_NANOPB_init();
FILE_init();           
FS_FIFO_init();
FS_FROM_FILE_init();   
FS_ONEFILE_init();
FS_init(); 
GPT_SDCARD_init();
GPT_init();
LIST_init();
MOUNT_init();          


-------------


https://artifactory.cyco.io:443/general-dev/cosmos/arm_buildroot_linux_gnueabihf/20170905/assembly.tar.gz






PATH="/BuildArea/BuildRoot/output/host/bin:/BuildArea/BuildRoot/output/host/sbin:/BuildArea/BuildRoot/output/host/usr/bin:/BuildArea/BuildRoot/output/host/usr/sbin:/opt/arm-buildroot-linux-gnueabihf/usr/bin:/opt/ae-toolchain/usr/bin:/usr/local/lib/ecog1x-cyan-elf-toolchain/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" BR_BINARIES_DIR=/BuildArea/BuildRoot/output/images KBUILD_BUILD_VERSION=1 KBUILD_BUILD_USER=buildroot KBUILD_BUILD_HOST=buildroot KBUILD_BUILD_TIMESTAMP="Mon May  1 22:00:00 UTC 2017" /usr/bin/make -j3 HOSTCC="/usr/bin/gcc" HOSTCFLAGS="" ARCH=arm INSTALL_MOD_PATH=/BuildArea/BuildRoot/output/target CROSS_COMPILE="/BuildArea/BuildRoot/output/host/usr/bin/arm-buildroot-linux-gnueabi-" DEPMOD=/BuildArea/BuildRoot/output/host/sbin/depmod INSTALL_MOD_STRIP=1 -C /BuildArea/BuildRoot/output/build/linux-4.9.13 zImage



----------------------------------------------


The detection of whether an image is present on a selected device differs by device type:
• On a GP Device type, a booting image (bootloader) is considered to be present when the first four
bytes of the sector are not equal to 00000000h or FFFFFFFFh.
During the first read sector call, the first sector is copied to a temporary RAM buffer. Once the image is
found and the destination address is known from the decoding the header, the content of the temporary
buffer is moved to the target RAM location so it is not needed to re-read the first image sector. On a GP
device the GP header is discarded, and only executable code is located in RAM with the first executable
instruction located at the destination address.
Memory booting
Initialization
and
Device detection
Set first / next valid block
Read a sector
Return
fail
Copying failed
No more sectors to read
Device detection
Initialization failed
No more blocks
Loading Initial SW
Completed?
Store the loaded sector with
Initial SW in the target buffer
Initial SW execution
No
Yes
www.ti.com Functional Description
SPRUHL7F–April 2014–Revised September 2016 195
Submit Documentation Feedback
Copyright © 2014–2016, Texas Instruments Incorporated
Initialization
MMC/SD cards (in raw mode), SPI, and NAND devices hold up to four copies of the booting image. The
ROM Code searches for one valid image out of the four, if present, by walking over the first four blocks of
the mass storage space. Other XIP devices (NOR) use only one copy of the booting image.




MMC and SD standards detail this phase as initialization phase. Both standards differ in the first
commands involved: CMD1 and ACMD41. The ROM Code uses this difference in command set to
discriminate between MMC and SD devices: CMD1 is supported only by the MMC standard, whereas
ACMD41 is only supported by SD standard.
The ROM Code first sends a CMD1 to the device and gets a response only if an MMC device is
connected. If no response is received, then ACMD41 (ACMD41 is made out of CMD55 and ACMD41) is
sent and a response is expected from an SD device. If no response is received, then it is assumed that no
device is connected and the ROM

5.2.6.5.5 MMC/SD Read Sector Procedure in Raw Mode
In raw mode the booting image can be located at one of the four consecutive locations in the main area:
• offset 0x0
• 0x40000 (256KB)
• 0x80000 (512KB)
• 0xC0000 (768KB)
A booting image must not exceed 256KB in size. However, it is possible to flash a device with an image
greater than 256KB starting at one of the four locations and the ROM Code will not check the image size.
The only drawback is that the image will cross the subsequent image boundary.
The raw mode is detected by reading sectors #0 and #1024. The content of these sectors is then verified
for presence of a TOC structure as described in 10. In the case of a GP Device, a Configuration Header
(CH) must be located in the first sector followed by a GP header (1)
. The CH might be void (only containing
a CHSETTINGS item for which the valid field is zero).





For Raw Mode, the Configuration Header should be formatted as follows:

 

Table 1. CH TOC Item

Offset     Field       Size (Bytes)          Value                      Description

0x0000    Start                        4              0x000000a0            Offset from the start address of TOC to the actual address of a section

0x0004    Size                         4              0x00000050            Size of a section

0x0008    Reserved                4              0x00000000            Unused

0x000C    Reserved                4              0x00000000            Unused

0x0010    Reserved                4              0x00000000            Unused

0x0014    Filename                  12            0x45534843

                                                                0x4e495454

                                                                0x00005347            12-character name of a section, including the zero (\0) terminator (these are the ASCII                                                                                                                                      characters for 'CHSETTINGS')

0x0020    Closing item             4              0xFFFFFFFF           

0x0024    Closing item             4              0xFFFFFFFF           

0x0028    Closing item             4              0xFFFFFFFF           

0x002C    Closing item             4              0xFFFFFFFF           

0x0030    Closing item             4              0xFFFFFFFF           

0x0034    Closing item             4              0xFFFFFFFF           

0x0038    Closing item             4              0xFFFFFFFF           

0x003C    Closing item             4              0xFFFFFFFF            32 bytes of 0xFF to signify the end of the TOC item

                                                               

 

Table 2. CHSETTINGS

Offset     Field                       Value                      Description

0000h      Section key             0xC0C0C0C1           Key used for section verification

0004h      Valid                        0x00                        Enables/disables the section

                                                                                00h: Disable

                                                                                Other: Enable

0005h      Version                   0x001                      Configuration header version

                                                                                Others: For future use

0006h      Reserved                0x00                        Set the reset of the header (offset 0x6 to 0xe0) to 0x00

...

0xe0     Reserved           0x00





Image format for GP Device
A GP device involves no security, so keys and certificates are not required in the boot image.
When the booting memory device is non-XIP (for example, MMC) the image must contain a small header
(referred as GP header) with the size of the image and the destination address where to store it.
The GP header is not required when booting from an XIP memory device (for example, NOR) or if
peripheral booting. In this case, the peripheral or memory booting image starts directly with executable
code.


GPHeader:

Size            +0  32 bit          Size of executable+8 byte header.
Destination     +4  32 bit          address
Image           +8  xxx bytes.A     image

TOC:



------------------------------------------------------------------------

mkimage:
betelgeuse/ti-processor-sdk-linux-am437x-evm-03.03.00.04/board-support/u-boot-2016.05+gitAUTOINC+4db46a6bbd-g4db46a6bbd/sandbox/tools/mkimage

-T gpimage | omapimage

Prepend GP-header:
mkimage -T gpimage -a 0x402f4000 -d MLO gpMLO
mkimage -T omapimage -a 0x402f4000 -d BuildRoot.Rigel/output/images/MLO omapMLO

dd if=/mnt/omapMLO of=/dev/mmcblk1 bs=256K seek=3


The raw mode is detected by reading sectors #0 and #1024. The content of these sectors is then verified
for presence of a TOC structure as described in 10. In the case of a GP Device, a Configuration Header
(CH) must be located in the first sector followed by a GP header (1)
. The CH might be void (only containing
a CHSETTINGS item for which the valid field is zero).

dd if=/mnt/omapMLO of=/dev/mmcblk1 bs=512 seek=1024
dd if=/dev/mmcblk1 bs=512 skip=1024 count=1 | od -t x4 -v


fdisk is not capable of performing eMMC native partitioning, it just creates a "HD-like" partition table on the eMMC user partition.  For most purposes this is fine.  Note in particular that the ROM bootloader will only boot from the eMMC user partition, it does not use eMMC boot mode.

You can still access the (fixed-size) eMMC-native boot0 and boot1 partitions in linux, which may be useful to retain some data even if the "whole device" (in practice: the whole user partition) is reflashed. They may also have enhanced reliability compared to the user partition. They appear as separate block devices, /dev/mmcblk0boot{0,1}.  Presumably if the eMMC has GP partitions, those will also show up, though I haven't checked whether linux supports these yet (it would be easy to support them though since accessing them is similar to the boot partitions).

Note however that eMMC native partitioning (splitting off parts of the user partition as gp0-gp3) is one time programmable only, there's no way to change or undo it afterwards. This is probably part of why it's not very popular to use that functionality. I have no idea what tool can be used to perform it.

I'm not sure whether you can (currently) access the RPMB on linux. Access to it follows a very specific protocol that is unlike accessing a normal partition.




----------------------------


Panmesh:

- apt-get install quilt gcc-arm-none-eabi gdb-arm-none-eabi binutils-arm-none-eabi
- unzip terminal.zip
- make fortec
- src/device/addons/metering/*.c (two modules, readings & sampling)
- src/device/drivers/fortec/*.c (one module ~1400 LoC). Duplicate this & modify.
- Add new meter driver to management module.
- Add new meter driver to Makefile.
- Need to know how to drive the system to cause a reading to happen, configuration to be applied  etc.
- add config/ytl32001.mk







st-util 1.3.1-15-g3d24377
2017-09-26T14:58:40 INFO src/common.c: Loading device parameters....
2017-09-26T14:58:40 INFO src/common.c: Device connected is: F2 device, id 0x201f6411
2017-09-26T14:58:40 INFO src/common.c: SRAM size: 0x20000 bytes (128 KiB), Flash: 0x100000 bytes (1024 KiB) in pages of 131072 bytes
2017-09-26T14:58:40 INFO src/gdbserver/gdb-server.c: Chip ID is 00000411, Core ID is  2ba01477.
2017-09-26T14:58:40 INFO src/gdbserver/gdb-server.c: Listening at *:4242...
2017-09-26T15:01:00 INFO src/gdbserver/gdb-server.c: Found 6 hw breakpoint registers
2017-09-26T15:01:00 INFO src/gdbserver/gdb-server.c: GDB connected.
2017-09-26T15:01:04 INFO src/common.c: Attempting to write 65536 (0x10000) bytes to stm32 address: 134283264 (0x8010000)
Flash page at addr: 0x08010000 erased
2017-09-26T15:01:05 INFO src/common.c: Finished erasing 1 pages of 65536 (0x10000) bytes
2017-09-26T15:01:05 INFO src/common.c: Starting Flash write for F2/F4/L4
2017-09-26T15:01:05 INFO src/flash_loader.c: Successfully loaded flash loader in sram
enabling 32-bit flash writes
size: 32768
size: 32768
2017-09-26T15:01:06 INFO src/common.c: Starting verification of write complete
2017-09-26T15:01:07 INFO src/common.c: Flash written and verified! jolly good!
2017-09-26T15:01:07 INFO src/common.c: Attempting to write 131072 (0x20000) bytes to stm32 address: 134348800 (0x8020000)
Flash page at addr: 0x08020000 erased
2017-09-26T15:01:08 INFO src/common.c: Finished erasing 1 pages of 131072 (0x20000) bytes
2017-09-26T15:01:08 INFO src/common.c: Starting Flash write for F2/F4/L4
2017-09-26T15:01:08 INFO src/flash_loader.c: Successfully loaded flash loader in sram
enabling 32-bit flash writes
size: 32768
size: 32768
size: 32768
size: 32768
2017-09-26T15:01:10 INFO src/common.c: Starting verification of write complete
2017-09-26T15:01:11 INFO src/common.c: Flash written and verified! jolly good!
2017-09-26T15:01:11 INFO src/common.c: Attempting to write 131072 (0x20000) bytes to stm32 address: 134479872 (0x8040000)
Flash page at addr: 0x08040000 erased
2017-09-26T15:01:12 INFO src/common.c: Finished erasing 1 pages of 131072 (0x20000) bytes
2017-09-26T15:01:12 INFO src/common.c: Starting Flash write for F2/F4/L4
2017-09-26T15:01:12 INFO src/flash_loader.c: Successfully loaded flash loader in sram
enabling 32-bit flash writes
size: 32768
size: 32768
size: 32768
size: 32768
2017-09-26T15:01:14 INFO src/common.c: Starting verification of write complete
2017-09-26T15:01:15 INFO src/common.c: Flash written and verified! jolly good!




----------------------------------------

host-ctrlporthub

ctrlporthub -controllerport 4000 -serial /dev/ttyUSB0 -loglevel debug

./rpc_prodtest.py --setparam server.ip -v fd00::1
./rpc_prodtest.py --setparam prod.lowpan.eui64 -v 00-1B-C5-0C-60-00-7D-63
./rpc_prodtest.py --loadkey -s client-key -f ../00-1B-C5-0C-60-00-7D-63/node.key.der
./rpc_prodtest.py --loadkey -s client-cert -f ../00-1B-C5-0C-60-00-7D-63/node.crt.der
./rpc_prodtest.py --loadkey -s root-cert -f ../00-1B-C5-0C-60-00-7D-63/ca.crt.der
./rpc_prodtest.py --loadkey -s mac-key -f ../00-1B-C5-0C-60-00-7D-63/mac_key
./rpc_prodtest.py –finalize




debug-stm32.sh


openocd \
    -f interface/stlink-v2.cfg \
    -f target/stm32f2x.cfg \
    -c "init" \
    -c "reset init" \
    -c "halt" \


Place this in “terminal/tools/gdb” along with the others.

Then:
Arm-none-eabi-geb <whatever>.elf
Tar rem:3333
Load
Mon reset
C

make bootloader


7e20a04103289381bc14800102020607010104040869017e

----------------------------------------------

genus   : 7e a0 20 03 41 93 28 bc 81 80 14 05 02 01 00 06 02 01 00 07 04 00 00 00 01 08 04 00 00 00 01 69 6d 7e
original: 7E A0 21 4E 32 0A A5 41 93 75 E8 81 80 12 05 01 FF 06 01 FF 07 04 00 00 00 01 08 04 00 00 00 01 55 1C 7E
current : 7e a0 23 04 e6 42 d2 42 93 ec f3 81 80 14 05 02 01 00 06 02 01 00 07 04 00 00 00 01 08 04 00 00 00 01 69 6d 7e

<HDLC len="31" >
<TargetAddress Value="1" />
<SourceAddress Value="32" />
<PDU>
<Ua>
  <MaxInfoRX Value="256" />
  <MaxInfoTX Value="256" />
  <WindowSizeRX Value="1" />
  <WindowSizeTX Value="1" />
</Ua>
</PDU>
</HDLC>


O<HDLC len="32" >
<TargetAddress Value="82199250" />
<SourceAddress Value="32" />
<PDU>
<Ua>
  <MaxInfoRX Value="255" />
  <MaxInfoTX Value="255" />
  <WindowSizeRX Value="1" />
  <WindowSizeTX Value="1" />
</Ua>
</PDU>
</HDLC>



82199250 = 04 e6 42 d2

7e a0 20 03 41 93 28 bc 81 80 14 05 02 01 00 06 02 01 00 07 04 00 00 00 01 08 04 00 00 00 01 69 6d 7e

---------------------------------------------------------------

make ytl-insecure ipa1-bl-insecure host-ctrlporthub


build/host-ctrlporthub/bin/ctrlporthub -controllerport 4000 -serial /dev/ttyUSB0

python tools/c4-tools/node-meter-bridge.py /dev/ttyUSB2 /dev/ttyUSB1

tools/gdb/debug-stm32.sh

arm-none-eabi-gdb -tui  build/ytl-dlms/bin/agent.elf

tools/c4-tools/coap_request.py --config device.dlms.lls_password '...'
tools/c4-tools/coap_request.py --config device.dlms.lls_password '12345678'

socat /dev/ttyUSB0,raw,echo=0,crnl /dev/ttyUSB1,raw,echo=0,crnl


tools/c4-tools/coap_request.py --config prod.lowpan.eui64 00-1b-c5-0c-60-00-bc-21

tools/c4-tools/coap_request.py --config prod.prodtime 1


---------------------------------------------------------------

<HDLC len="39" >
<TargetAddress Value="8" />
<SourceAddress Value="4011" />
<PDU>

<AssociationResponse>
  <ApplicationContextName Value="LN" />
  <AssociationResult Value="01" />
  <ResultSourceDiagnostic>
    <ACSEServiceUser Value="02" />
  </ResultSourceDiagnostic>
  <InitiateResponse>
    <NegotiatedDlmsVersionNumber Value="06" />
    <NegotiatedConformance>
      <ConformanceBit Name="Get" />
      <ConformanceBit Name="BlockTransferWithGetOrRead" />
    </NegotiatedConformance>
    <NegotiatedMaxPduSize Value="00B4" />
    <VaaName Value="0007" />
  </InitiateResponse>
</AssociationResponse>
</PDU>
</HDLC>


generated: 7e a0 23 4e 32 0a a5 41 93 ce df 81 80 14 05 02 01 00 06 02 01 00 07 04 00 00 00 01 08 04 00 00 00 01 69 6d 7e
original:  7E A0 21 4E 32 0A A5 41 93 75 E8 81 80 12 05 01 FF 06 01 FF 07 04 00 00 00 01 08 04 00 00 00 01 55 1C 7E


original:  
7E A0 21        Frame type & length.
4E 32 0A A5     address
41              address
93              frame type (SNRM).
75 E8 
81 80 12 05 01 FF 06 01 FF 07 04 00 00 00 01 08 04 00 00 00 01 55 1C 7E

generated: 
7e a0 23        Frame type & length.
4e 32 0a a5     address
41              address
93              frame type (SNRM)
ce df 
81 80 14 05 02 01 00 06 02 01 00 07 04 00 00 00 01 08 04 00 00 00 01 // connectLink.payload
69 6d 
7e


4E 32 0A A5  == 4e 32 0a a5




original:  7E A0 21 4E 32 0A A5 41 93 75 E8 81 80 12 05 01 FF 06 01 FF 07 04 00 00 00 01 08 04 00 00 00 01 55 1C 7E
           7e a0 21 4e 32 0a a5 41 93 75 e8 81 80 12 05 01 ff 06 01 ff 07 04 00 00 00 01 08 04 00 00 00 01 55 1c 7e





A<-B: RX: 7ea021000200231193bbd28180120501ff0601ff070400000001080400000001551c7e
A->B: RX: 7ea0231100020023732602818014050200b4060200b407040000000108040000000115ca7e
A<-B: RX: 7ea0470002002311106098e6e6006036a1090607608574050801018a0207808b0760857405080201ac0a80083132333435363738be10040e01000000065f1f0400001f1fffffdc527e
A->B: RX: 7ea03a1100020023304986e6e7006129a109060760857405080101a203020101a305a103020102be10040e0800065f1f040000101000b400072a9b7e


theirs:
<HDLC len="46" >
<TargetAddress Value="4E642D2" />
<SourceAddress Value="20" />
<PDU>
<AssociationRequest>
  <ApplicationContextName Value="LN" />
  <SenderACSERequirements Value="1" />
  <MechanismName Value="Low" />
  <CallingAuthentication Value="3132333435363738" />
  <InitiateRequest>
    <ProposedDlmsVersionNumber Value="06" />
    <ProposedConformance>
      <ConformanceBit Name="Action" />
      <ConformanceBit Name="EventNotification" />
      <ConformanceBit Name="SelectiveAccess" />
      <ConformanceBit Name="Set" />
      <ConformanceBit Name="Get" />
      <ConformanceBit Name="MultipleReferences" />
      <ConformanceBit Name="BlockTransferWithAction" />
      <ConformanceBit Name="BlockTransferWithSetOrWrite" />
      <ConformanceBit Name="BlockTransferWithGetOrRead" />
      <ConformanceBit Name="Attribute0SupportedWithGet" />
      <ConformanceBit Name="PriorityMgmtSupported" />
    </ProposedConformance>
    <ProposedMaxPduSize Value="04B0" />
  </InitiateRequest>
</AssociationRequest>
</PDU>
</HDLC>


Ours:
<HDLC len="46" >
<TargetAddress Value="4011" />
<SourceAddress Value="8" />
<PDU>
<AssociationRequest>
  <ApplicationContextName Value="LN" />
  <SenderACSERequirements Value="1" />
  <MechanismName Value="Low" />
  <CallingAuthentication Value="3132333435363738" />
  <InitiateRequest>
    <ProposedDlmsVersionNumber Value="06" />
    <ProposedConformance>
      <ConformanceBit Name="Action" />
      <ConformanceBit Name="EventNotification" />
      <ConformanceBit Name="SelectiveAccess" />
      <ConformanceBit Name="Set" />
      <ConformanceBit Name="Get" />
      <ConformanceBit Name="InformationReport" />
      <ConformanceBit Name="MultipleReferences" />
      <ConformanceBit Name="BlockTransferWithAction" />
      <ConformanceBit Name="BlockTransferWithSetOrWrite" />
      <ConformanceBit Name="BlockTransferWithGetOrRead" />
    </ProposedConformance>
    <ProposedMaxPduSize Value="FFFF" />
  </InitiateRequest>
</AssociationRequest>
</PDU>
</HDLC>

---------------------------------------
2017-10-03 16:16:19.172 #1   001bc50c600080d4 <log> 0:20:06.576 [ info] [        dlms] {   device}: Found register 0-0:1.0.0*255 ic 8 attrId 2  // clock
2017-10-03 16:16:19.172 #1   001bc50c600080d4 <log> 0:20:06.586 [ info] [        dlms] {   device}: Found register 1-0:0.1.2*255 ic 1 attrId 2
2017-10-03 16:16:19.172 #1   001bc50c600080d4 <log> 0:20:06.595 [ info] [        dlms] {   device}: Found register 1-0:31.7.0*255 ic 3 attrId 2 // L1 current
2017-10-03 16:16:19.215 #1   001bc50c600080d4 <log> 0:20:06.604 [ info] [        dlms] {   device}: Found register 1-0:51.7.0*255 ic 3 attrId 2 // L2 current
2017-10-03 16:16:19.215 #1   001bc50c600080d4 <log> 0:20:06.613 [ info] [        dlms] {   device}: Found register 1-0:71.7.0*255 ic 3 attrId 2 // L3 current
2017-10-03 16:16:19.215 #1   001bc50c600080d4 <log> 0:20:06.622 [ info] [        dlms] {   device}: Found register 1-0:32.7.0*255 ic 3 attrId 2 // L1 voltage
2017-10-03 16:16:19.215 #1   001bc50c600080d4 <log> 0:20:06.631 [ info] [        dlms] {   device}: Found register 1-0:52.7.0*255 ic 3 attrId 2 // L2 voltage
2017-10-03 16:16:19.215 #1   001bc50c600080d4 <log> 0:20:06.641 [ info] [        dlms] {   device}: Found register 1-0:72.7.0*255 ic 3 attrId 2 // L3 voltage
2017-10-03 16:16:19.258 #1   001bc50c600080d4 <log> 0:20:06.650 [ info] [        dlms] {   device}: Found register 1-0:81.7.4*255 ic 3 attrId 2
2017-10-03 16:16:19.258 #1   001bc50c600080d4 <log> 0:20:06.659 [ info] [        dlms] {   device}: Found register 1-0:81.7.15*255 ic 3 attrId 2
2017-10-03 16:16:19.258 #1   001bc50c600080d4 <log> 0:20:06.668 [ info] [        dlms] {   device}: Found register 1-0:81.7.26*255 ic 3 attrId 2
2017-10-03 16:16:19.259 #1   001bc50c600080d4 <log> 0:20:06.678 [ info] [        dlms] {   device}: Found register 1-0:13.7.0*255 ic 3 attrId 2 // system power factor
2017-10-03 16:16:19.259 #1   001bc50c600080d4 <log> 0:20:06.687 [ info] [        dlms] {   device}: Found register 1-0:33.7.0*255 ic 3 attrId 2 // L1 power factor
2017-10-03 16:16:19.302 #1   001bc50c600080d4 <log> 0:20:06.696 [ info] [        dlms] {   device}: Found register 1-0:53.7.0*255 ic 3 attrId 2 // L2 power factor
2017-10-03 16:16:19.302 #1   001bc50c600080d4 <log> 0:20:06.705 [ info] [        dlms] {   device}: Found register 1-0:73.7.0*255 ic 3 attrId 2 // L3 power factor
2017-10-03 16:16:19.302 #1   001bc50c600080d4 <log> 0:20:06.714 [ info] [        dlms] {   device}: Found register 1-0:1.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.302 #1   001bc50c600080d4 <log> 0:20:06.723 [ info] [        dlms] {   device}: Found register 1-0:2.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.345 #1   001bc50c600080d4 <log> 0:20:06.732 [ info] [        dlms] {   device}: Found register 1-0:21.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.345 #1   001bc50c600080d4 <log> 0:20:06.742 [ info] [        dlms] {   device}: Found register 1-0:22.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.345 #1   001bc50c600080d4 <log> 0:20:06.751 [ info] [        dlms] {   device}: Found register 1-0:41.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.345 #1   001bc50c600080d4 <log> 0:20:06.760 [ info] [        dlms] {   device}: Found register 1-0:42.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.345 #1   001bc50c600080d4 <log> 0:20:06.769 [ info] [        dlms] {   device}: Found register 1-0:61.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.388 #1   001bc50c600080d4 <log> 0:20:06.778 [ info] [        dlms] {   device}: Found register 1-0:62.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.388 #1   001bc50c600080d4 <log> 0:20:06.788 [ info] [        dlms] {   device}: Found register 1-0:3.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.388 #1   001bc50c600080d4 <log> 0:20:06.797 [ info] [        dlms] {   device}: Found register 1-0:4.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.388 #1   001bc50c600080d4 <log> 0:20:06.806 [ info] [        dlms] {   device}: Found register 1-0:23.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.388 #1   001bc50c600080d4 <log> 0:20:06.815 [ info] [        dlms] {   device}: Found register 1-0:24.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.432 #1   001bc50c600080d4 <log> 0:20:06.824 [ info] [        dlms] {   device}: Found register 1-0:43.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.432 #1   001bc50c600080d4 <log> 0:20:06.833 [ info] [        dlms] {   device}: Found register 1-0:44.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.432 #1   001bc50c600080d4 <log> 0:20:06.842 [ info] [        dlms] {   device}: Found register 1-0:63.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.432 #1   001bc50c600080d4 <log> 0:20:06.852 [ info] [        dlms] {   device}: Found register 1-0:64.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.475 #1   001bc50c600080d4 <log> 0:20:06.861 [ info] [        dlms] {   device}: Found register 1-0:1.6.0*255 ic 5 attrId 2
2017-10-03 16:16:19.475 #1   001bc50c600080d4 <log> 0:20:06.870 [ info] [        dlms] {   device}: Found register 1-0:1.6.1*255 ic 5 attrId 2
2017-10-03 16:16:19.475 #1   001bc50c600080d4 <log> 0:20:06.879 [ info] [        dlms] {   device}: Found register 1-0:1.6.2*255 ic 5 attrId 2
2017-10-03 16:16:19.475 #1   001bc50c600080d4 <log> 0:20:06.888 [ info] [        dlms] {   device}: Found register 1-0:1.6.3*255 ic 5 attrId 2
2017-10-03 16:16:19.475 #1   001bc50c600080d4 <log> 0:20:06.897 [ info] [        dlms] {   device}: Found register 1-0:1.6.4*255 ic 5 attrId 2
2017-10-03 16:16:19.519 #1   001bc50c600080d4 <log> 0:20:06.906 [ info] [        dlms] {   device}: Found register 1-0:2.6.0*255 ic 5 attrId 2
2017-10-03 16:16:19.519 #1   001bc50c600080d4 <log> 0:20:06.915 [ info] [        dlms] {   device}: Found register 1-0:2.6.1*255 ic 5 attrId 2
2017-10-03 16:16:19.519 #1   001bc50c600080d4 <log> 0:20:06.924 [ info] [        dlms] {   device}: Found register 1-0:2.6.2*255 ic 5 attrId 2
2017-10-03 16:16:19.519 #1   001bc50c600080d4 <log> 0:20:06.934 [ info] [        dlms] {   device}: Found register 1-0:2.6.3*255 ic 5 attrId 2
2017-10-03 16:16:19.519 #1   001bc50c600080d4 <log> 0:20:06.943 [ info] [        dlms] {   device}: Found register 1-0:2.6.4*255 ic 5 attrId 2
2017-10-03 16:16:19.562 #1   001bc50c600080d4 <log> 0:20:06.952 [ info] [        dlms] {   device}: Found register 1-0:1.8.0*255 ic 3 attrId 2
2017-10-03 16:16:19.562 #1   001bc50c600080d4 <log> 0:20:06.961 [ info] [        dlms] {   device}: Found register 1-0:1.8.1*255 ic 3 attrId 2
2017-10-03 16:16:19.562 #1   001bc50c600080d4 <log> 0:20:06.970 [ info] [        dlms] {   device}: Found register 1-0:1.8.2*255 ic 3 attrId 2
2017-10-03 16:16:19.562 #1   001bc50c600080d4 <log> 0:20:06.979 [ info] [        dlms] {   device}: Found register 1-0:1.8.3*255 ic 3 attrId 2
2017-10-03 16:16:19.562 #1   001bc50c600080d4 <log> 0:20:06.988 [ info] [        dlms] {   device}: Found register 1-0:1.8.4*255 ic 3 attrId 2
2017-10-03 16:16:19.605 #1   001bc50c600080d4 <log> 0:20:06.997 [ info] [        dlms] {   device}: Found register 1-0:2.8.0*255 ic 3 attrId 2
2017-10-03 16:16:19.605 #1   001bc50c600080d4 <log> 0:20:07.006 [ info] [        dlms] {   device}: Found register 1-0:2.8.1*255 ic 3 attrId 2
2017-10-03 16:16:19.605 #1   001bc50c600080d4 <log> 0:20:07.015 [ info] [        dlms] {   device}: Found register 1-0:2.8.2*255 ic 3 attrId 2
2017-10-03 16:16:19.605 #1   001bc50c600080d4 <log> 0:20:07.024 [ info] [        dlms] {   device}: Found register 1-0:2.8.3*255 ic 3 attrId 2
2017-10-03 16:16:19.605 #1   001bc50c600080d4 <log> 0:20:07.034 [ info] [        dlms] {   device}: Found register 1-0:2.8.4*255 ic 3 attrId 2
2017-10-03 16:16:19.648 #1   001bc50c600080d4 <log> 0:20:07.043 [ info] [        dlms] {   device}: Found register 1-0:1.2.0*255 ic 3 attrId 2
2017-10-03 16:16:19.648 #1   001bc50c600080d4 <log> 0:20:07.052 [ info] [        dlms] {   device}: Found register 1-0:1.2.1*255 ic 3 attrId 2
2017-10-03 16:16:19.648 #1   001bc50c600080d4 <log> 0:20:07.061 [ info] [        dlms] {   device}: Found register 1-0:1.2.2*255 ic 3 attrId 2
2017-10-03 16:16:19.648 #1   001bc50c600080d4 <log> 0:20:07.070 [ info] [        dlms] {   device}: Found register 1-0:1.2.3*255 ic 3 attrId 2
2017-10-03 16:16:19.692 #1   001bc50c600080d4 <log> 0:20:07.079 [ info] [        dlms] {   device}: Found register 1-0:1.2.4*255 ic 3 attrId 2
2017-10-03 16:16:19.692 #1   001bc50c600080d4 <log> 0:20:07.088 [ info] [        dlms] {   device}: Found register 1-0:2.2.0*255 ic 3 attrId 2
2017-10-03 16:16:19.692 #1   001bc50c600080d4 <log> 0:20:07.097 [ info] [        dlms] {   device}: Found register 1-0:2.2.1*255 ic 3 attrId 2
2017-10-03 16:16:19.692 #1   001bc50c600080d4 <log> 0:20:07.106 [ info] [        dlms] {   device}: Found register 1-0:2.2.2*255 ic 3 attrId 2
2017-10-03 16:16:19.692 #1   001bc50c600080d4 <log> 0:20:07.115 [ info] [        dlms] {   device}: Found register 1-0:2.2.3*255 ic 3 attrId 2
2017-10-03 16:16:19.735 #1   001bc50c600080d4 <log> 0:20:07.124 [ info] [        dlms] {   device}: Found register 1-0:2.2.4*255 ic 3 attrId 2
2017-10-03 16:16:19.735 #1   001bc50c600080d4 <log> 0:20:07.133 [ info] [        dlms] {   device}: Found register 1-0:3.6.0*255 ic 5 attrId 2
2017-10-03 16:16:19.735 #1   001bc50c600080d4 <log> 0:20:07.143 [ info] [        dlms] {   device}: Found register 1-0:3.6.1*255 ic 5 attrId 2
2017-10-03 16:16:19.735 #1   001bc50c600080d4 <log> 0:20:07.152 [ info] [        dlms] {   device}: Found register 1-0:3.6.2*255 ic 5 attrId 2
2017-10-03 16:16:19.735 #1   001bc50c600080d4 <log> 0:20:07.161 [ info] [        dlms] {   device}: Found register 1-0:3.6.3*255 ic 5 attrId 2
2017-10-03 16:16:19.779 #1   001bc50c600080d4 <log> 0:20:07.170 [ info] [        dlms] {   device}: Found register 1-0:3.6.4*255 ic 5 attrId 2
2017-10-03 16:16:19.779 #1   001bc50c600080d4 <log> 0:20:07.179 [ info] [        dlms] {   device}: Found register 1-0:4.6.0*255 ic 5 attrId 2
2017-10-03 16:16:19.779 #1   001bc50c600080d4 <log> 0:20:07.188 [ info] [        dlms] {   device}: Found register 1-0:4.6.1*255 ic 5 attrId 2
2017-10-03 16:16:19.779 #1   001bc50c600080d4 <log> 0:20:07.197 [ info] [        dlms] {   device}: Found register 1-0:4.6.2*255 ic 5 attrId 2
2017-10-03 16:16:19.779 #1   001bc50c600080d4 <log> 0:20:07.206 [ info] [        dlms] {   device}: Found register 1-0:4.6.3*255 ic 5 attrId 2
2017-10-03 16:16:19.822 #1   001bc50c600080d4 <log> 0:20:07.215 [ info] [        dlms] {   device}: Found register 1-0:4.6.4*255 ic 5 attrId 2
2017-10-03 16:16:19.822 #1   001bc50c600080d4 <log> 0:20:07.224 [ info] [        dlms] {   device}: Found register 1-0:3.8.0*255 ic 3 attrId 2
2017-10-03 16:16:19.822 #1   001bc50c600080d4 <log> 0:20:07.233 [ info] [        dlms] {   device}: Found register 1-0:3.8.1*255 ic 3 attrId 2
2017-10-03 16:16:19.822 #1   001bc50c600080d4 <log> 0:20:07.243 [ info] [        dlms] {   device}: Found register 1-0:3.8.2*255 ic 3 attrId 2
2017-10-03 16:16:19.865 #1   001bc50c600080d4 <log> 0:20:07.252 [ info] [        dlms] {   device}: Found register 1-0:3.8.3*255 ic 3 attrId 2
2017-10-03 16:16:19.865 #1   001bc50c600080d4 <log> 0:20:07.261 [ info] [        dlms] {   device}: Found register 1-0:3.8.4*255 ic 3 attrId 2
2017-10-03 16:16:19.865 #1   001bc50c600080d4 <log> 0:20:07.270 [ info] [        dlms] {   device}: Found register 1-0:4.8.0*255 ic 3 attrId 2
2017-10-03 16:16:19.865 #1   001bc50c600080d4 <log> 0:20:07.279 [ info] [        dlms] {   device}: Found register 1-0:4.8.1*255 ic 3 attrId 2
2017-10-03 16:16:19.865 #1   001bc50c600080d4 <log> 0:20:07.288 [ info] [        dlms] {   device}: Found register 1-0:4.8.2*255 ic 3 attrId 2
2017-10-03 16:16:19.909 #1   001bc50c600080d4 <log> 0:20:07.297 [ info] [        dlms] {   device}: Found register 1-0:4.8.3*255 ic 3 attrId 2
2017-10-03 16:16:19.909 #1   001bc50c600080d4 <log> 0:20:07.306 [ info] [        dlms] {   device}: Found register 1-0:4.8.4*255 ic 3 attrId 2
2017-10-03 16:16:19.909 #1   001bc50c600080d4 <log> 0:20:07.315 [ info] [        dlms] {   device}: Found register 1-0:3.2.0*255 ic 3 attrId 2
2017-10-03 16:16:19.909 #1   001bc50c600080d4 <log> 0:20:07.324 [ info] [        dlms] {   device}: Found register 1-0:3.2.1*255 ic 3 attrId 2
2017-10-03 16:16:19.909 #1   001bc50c600080d4 <log> 0:20:07.333 [ info] [        dlms] {   device}: Found register 1-0:3.2.2*255 ic 3 attrId 2
2017-10-03 16:16:19.952 #1   001bc50c600080d4 <log> 0:20:07.343 [ info] [        dlms] {   device}: Found register 1-0:3.2.3*255 ic 3 attrId 2
2017-10-03 16:16:19.952 #1   001bc50c600080d4 <log> 0:20:07.352 [ info] [        dlms] {   device}: Found register 1-0:3.2.4*255 ic 3 attrId 2
2017-10-03 16:16:19.952 #1   001bc50c600080d4 <log> 0:20:07.361 [ info] [        dlms] {   device}: Found register 1-0:4.2.0*255 ic 3 attrId 2
2017-10-03 16:16:19.952 #1   001bc50c600080d4 <log> 0:20:07.370 [ info] [        dlms] {   device}: Found register 1-0:4.2.1*255 ic 3 attrId 2
2017-10-03 16:16:19.952 #1   001bc50c600080d4 <log> 0:20:07.379 [ info] [        dlms] {   device}: Found register 1-0:4.2.2*255 ic 3 attrId 2
2017-10-03 16:16:20.005 #1   001bc50c600080d4 <log> 0:20:07.388 [ info] [        dlms] {   device}: Found register 1-0:4.2.3*255 ic 3 attrId 2
2017-10-03 16:16:20.005 #1   001bc50c600080d4 <log> 0:20:07.397 [ info] [        dlms] {   device}: Found register 1-0:4.2.3*255 ic 3 attrId 2
2017-10-03 16:16:20.005 #1   001bc50c600080d4 <log> 0:20:07.406 [ info] [        dlms] {   device}: Found register 0-0:1.0.0*255 ic 8 attrId 3
2017-10-03 16:16:20.005 #1   001bc50c600080d4 <log> 0:20:07.415 [ info] [        dlms] {   device}: Found 92 registers in IS Profile object

---------------------------------------------------------


dlmsParseProfileCaptureObjects()
dlmsGetIsProfileObject()
ProfileObject


s_isProfileObjects[j].instantObject.code
s_isProfileObjects[index].scalerIndex
s_isProfileObjects[j].attrId


-----------------------------------


MessageReadoutRequest:
request->type == ReadingReadoutPeriodicSample
s_isActiveIsProfile == true

processIsProfileResponse() gets called for response.

s_currentMsg->x.readoutRequest.request.type = ReadingReadoutPeriodicSample



dlmsGetParseFn(s_currentObj, s_readingState);
dlmsGetParseFn(const CosemData* object, int8_t attribute)





2017-10-13 11:25:10.531 #1   001bc50c6000bc21 <log> 0:03:13.502 [ info] [   meter/ytl] {   device}: Reading ready 91/91
2017-10-13 11:25:10.531 #1   001bc50c6000bc21 <log> 0:03:13.509 [ info] [   meter/ytl] {   device}: --- processIsProfileResponse (4) ---
2017-10-13 11:25:10.531 #1   001bc50c6000bc21 <log> 0:03:13.517 [ info] [   meter/ytl] {   device}: ---- Register 0:  ----
2017-10-13 11:25:10.531 #1   001bc50c6000bc21 <log> 0:03:13.524 [ info] [   meter/ytl] {   device}: ---- Register 1:  ----
2017-10-13 11:25:10.531 #1   001bc50c6000bc21 <log> 0:03:13.532 [ info] [   meter/ytl] {   device}: ---- Register 2: 0.000 *10^0 A ----
2017-10-13 11:25:10.574 #1   001bc50c6000bc21 <log> 0:03:13.540 [ info] [   meter/ytl] {   device}: ---- Register 3: 0.024 *10^0 A ----
2017-10-13 11:25:10.574 #1   001bc50c6000bc21 <log> 0:03:13.548 [ info] [   meter/ytl] {   device}: ---- Register 4: 0.000 *10^0 A ----
2017-10-13 11:25:10.574 #1   001bc50c6000bc21 <log> 0:03:13.557 [ info] [   meter/ytl] {   device}: ---- Register 5: 0.000 *10^0 V ----
2017-10-13 11:25:10.574 #1   001bc50c6000bc21 <log> 0:03:13.565 [ info] [   meter/ytl] {   device}: ---- Register 6: 0.006 *10^0 V ----
2017-10-13 11:25:10.574 #1   001bc50c6000bc21 <log> 0:03:13.574 [ info] [   meter/ytl] {   device}: ---- Register 7: 0.000 *10^0 V ----
2017-10-13 11:25:10.617 #1   001bc50c6000bc21 <log> 0:03:13.582 [ info] [   meter/ytl] {   device}: ---- Register 8: 0.000 *10^0 degree ----
2017-10-13 11:25:10.617 #1   001bc50c6000bc21 <log> 0:03:13.591 [ info] [   meter/ytl] {   device}: ---- Register 9: 0.000 *10^0 degree ----
2017-10-13 11:25:10.617 #1   001bc50c6000bc21 <log> 0:03:13.600 [ info] [   meter/ytl] {   device}: ---- Register 10: 0.000 *10^0 degree ----
2017-10-13 11:25:10.617 #1   001bc50c6000bc21 <log> 0:03:13.608 [ info] [   meter/ytl] {   device}: ---- Register 11: 0.000 *10^0  ----
2017-10-13 11:25:10.617 #1   001bc50c6000bc21 <log> 0:03:13.617 [ info] [   meter/ytl] {   device}: ---- Register 12: 0.000 *10^0  ----
2017-10-13 11:25:10.659 #1   001bc50c6000bc21 <log> 0:03:13.625 [ info] [   meter/ytl] {   device}: ---- Register 13: 0.006 *10^0  ----
2017-10-13 11:25:10.659 #1   001bc50c6000bc21 <log> 0:03:13.634 [ info] [   meter/ytl] {   device}: ---- Register 14: 0.000 *10^0  ----
2017-10-13 11:25:10.659 #1   001bc50c6000bc21 <log> 0:03:13.642 [ info] [   meter/ytl] {   device}: ---- Register 15: 1.000 *10^3 W ----
2017-10-13 11:25:10.660 #1   001bc50c6000bc21 <log> 0:03:13.650 [ info] [   meter/ytl] {   device}: ---- Register 16: 0.000 *10^3 W ----
2017-10-13 11:25:10.660 #1   001bc50c6000bc21 <log> 0:03:13.659 [ info] [   meter/ytl] {   device}: ---- Register 17: 0.000 *10^3 W ----
2017-10-13 11:25:10.702 #1   001bc50c6000bc21 <log> 0:03:13.667 [ info] [   meter/ytl] {   device}: ---- Register 18: 0.000 *10^3 W ----
2017-10-13 11:25:10.702 #1   001bc50c6000bc21 <log> 0:03:13.676 [ info] [   meter/ytl] {   device}: ---- Register 19: 0.000 *10^3 W ----
2017-10-13 11:25:10.702 #1   001bc50c6000bc21 <log> 0:03:13.684 [ info] [   meter/ytl] {   device}: ---- Register 20: 0.000 *10^3 W ----
2017-10-13 11:25:10.702 #1   001bc50c6000bc21 <log> 0:03:13.693 [ info] [   meter/ytl] {   device}: ---- Register 21: 0.005 *10^3 W ----
2017-10-13 11:25:10.702 #1   001bc50c6000bc21 <log> 0:03:13.701 [ info] [   meter/ytl] {   device}: ---- Register 22: 0.006 *10^3 W ----
2017-10-13 11:25:10.745 #1   001bc50c6000bc21 <log> 0:03:13.710 [ info] [   meter/ytl] {   device}: ---- Register 23: 0.000 *10^3 var ----
2017-10-13 11:25:10.745 #1   001bc50c6000bc21 <log> 0:03:13.718 [ info] [   meter/ytl] {   device}: ---- Register 24: 0.000 *10^3 var ----
2017-10-13 11:25:10.745 #1   001bc50c6000bc21 <log> 0:03:13.727 [ info] [   meter/ytl] {   device}: ---- Register 25: 0.000 *10^3 var ----
2017-10-13 11:25:10.745 #1   001bc50c6000bc21 <log> 0:03:13.736 [ info] [   meter/ytl] {   device}: ---- Register 26: 0.000 *10^3 var ----
2017-10-13 11:25:10.745 #1   001bc50c6000bc21 <log> 0:03:13.744 [ info] [   meter/ytl] {   device}: ---- Register 27: 0.000 *10^3 var ----
2017-10-13 11:25:10.788 #1   001bc50c6000bc21 <log> 0:03:13.753 [ info] [   meter/ytl] {   device}: ---- Register 28: 0.000 *10^3 var ----
2017-10-13 11:25:10.788 #1   001bc50c6000bc21 <log> 0:03:13.762 [ info] [   meter/ytl] {   device}: ---- Register 29: 0.000 *10^3 var ----
2017-10-13 11:25:10.788 #1   001bc50c6000bc21 <log> 0:03:13.770 [ info] [   meter/ytl] {   device}: ---- Register 30: 0.000 *10^3 var ----
2017-10-13 11:25:10.788 #1   001bc50c6000bc21 <log> 0:03:13.779 [ info] [   meter/ytl] {   device}: ---- Register 31: 0.000 *10^3 W ----
2017-10-13 11:25:10.788 #1   001bc50c6000bc21 <log> 0:03:13.787 [ info] [   meter/ytl] {   device}: ---- Register 32: 0.000 *10^3 W ----
2017-10-13 11:25:10.830 #1   001bc50c6000bc21 <log> 0:03:13.796 [ info] [   meter/ytl] {   device}: ---- Register 33: 0.000 *10^3 W ----
2017-10-13 11:25:10.830 #1   001bc50c6000bc21 <log> 0:03:13.804 [ info] [   meter/ytl] {   device}: ---- Register 34: 0.000 *10^3 W ----
2017-10-13 11:25:10.830 #1   001bc50c6000bc21 <log> 0:03:13.813 [ info] [   meter/ytl] {   device}: ---- Register 35: 0.000 *10^3 W ----
2017-10-13 11:25:10.830 #1   001bc50c6000bc21 <log> 0:03:13.821 [ info] [   meter/ytl] {   device}: ---- Register 36: 0.000 *10^3 W ----
2017-10-13 11:25:10.830 #1   001bc50c6000bc21 <log> 0:03:13.830 [ info] [   meter/ytl] {   device}: ---- Register 37: 0.000 *10^3 W ----
2017-10-13 11:25:10.873 #1   001bc50c6000bc21 <log> 0:03:13.838 [ info] [   meter/ytl] {   device}: ---- Register 38: 0.000 *10^3 W ----
2017-10-13 11:25:10.873 #1   001bc50c6000bc21 <log> 0:03:13.847 [ info] [   meter/ytl] {   device}: ---- Register 39: 0.000 *10^3 W ----
2017-10-13 11:25:10.873 #1   001bc50c6000bc21 <log> 0:03:13.855 [ info] [   meter/ytl] {   device}: ---- Register 40: 0.000 *10^3 W ----
2017-10-13 11:25:10.873 #1   001bc50c6000bc21 <log> 0:03:13.864 [ info] [   meter/ytl] {   device}: ---- Register 41: 1.000 *10^3 Wh ----
2017-10-13 11:25:10.873 #1   001bc50c6000bc21 <log> 0:03:13.872 [ info] [   meter/ytl] {   device}: ---- Register 42: 1.000 *10^3 Wh ----
2017-10-13 11:25:10.916 #1   001bc50c6000bc21 <log> 0:03:13.881 [ info] [   meter/ytl] {   device}: ---- Register 43: 1.000 *10^3 Wh ----
2017-10-13 11:25:10.916 #1   001bc50c6000bc21 <log> 0:03:13.889 [ info] [   meter/ytl] {   device}: ---- Register 44: 0.000 *10^3 Wh ----
2017-10-13 11:25:10.916 #1   001bc50c6000bc21 <log> 0:03:13.898 [ info] [   meter/ytl] {   device}: ---- Register 45: 0.000 *10^3 Wh ----
2017-10-13 11:25:10.916 #1   001bc50c6000bc21 <log> 0:03:13.907 [ info] [   meter/ytl] {   device}: ---- Register 46: 0.000 *10^3 Wh ----
2017-10-13 11:25:10.916 #1   001bc50c6000bc21 <log> 0:03:13.915 [ info] [   meter/ytl] {   device}: ---- Register 47: 0.000 *10^3 Wh ----
2017-10-13 11:25:10.958 #1   001bc50c6000bc21 <log> 0:03:13.924 [ info] [   meter/ytl] {   device}: ---- Register 48: 0.000 *10^3 Wh ----
2017-10-13 11:25:10.958 #1   001bc50c6000bc21 <log> 0:03:13.932 [ info] [   meter/ytl] {   device}: ---- Register 49: 0.000 *10^3 Wh ----
2017-10-13 11:25:10.958 #1   001bc50c6000bc21 <log> 0:03:13.941 [ info] [   meter/ytl] {   device}: ---- Register 50: 0.000 *10^3 Wh ----
2017-10-13 11:25:10.958 #1   001bc50c6000bc21 <log> 0:03:13.949 [ info] [   meter/ytl] {   device}: ---- Register 51: 2 *10^3 W ----
2017-10-13 11:25:10.958 #1   001bc50c6000bc21 <log> 0:03:13.957 [ info] [   meter/ytl] {   device}: ---- Register 52: 0.000 *10^3 W ----
2017-10-13 11:25:11.001 #1   001bc50c6000bc21 <log> 0:03:13.966 [ info] [   meter/ytl] {   device}: ---- Register 53: 0.000 *10^3 W ----
2017-10-13 11:25:11.001 #1   001bc50c6000bc21 <log> 0:03:13.974 [ info] [   meter/ytl] {   device}: ---- Register 54: 0.000 *10^3 W ----
2017-10-13 11:25:11.001 #1   001bc50c6000bc21 <log> 0:03:13.983 [ info] [   meter/ytl] {   device}: ---- Register 55: 247.589 *10^3 W ----
2017-10-13 11:25:11.001 #1   001bc50c6000bc21 <log> 0:03:13.992 [ info] [   meter/ytl] {   device}: ---- Register 56: 0.000 *10^3 W ----
2017-10-13 11:25:11.001 #1   001bc50c6000bc21 <log> 0:03:14.000 [ info] [   meter/ytl] {   device}: ---- Register 57: 0.000 *10^3 W ----
2017-10-13 11:25:11.044 #1   001bc50c6000bc21 <log> 0:03:14.009 [ info] [   meter/ytl] {   device}: ---- Register 58: 0.000 *10^3 W ----
2017-10-13 11:25:11.044 #1   001bc50c6000bc21 <log> 0:03:14.017 [ info] [   meter/ytl] {   device}: ---- Register 59: 0.000 *10^3 W ----
2017-10-13 11:25:11.044 #1   001bc50c6000bc21 <log> 0:03:14.025 [ info] [   meter/ytl] {   device}: ---- Register 60: 0.000 *10^3 W ----
2017-10-13 11:25:11.044 #1   001bc50c6000bc21 <log> 0:03:14.034 [ info] [   meter/ytl] {   device}: ---- Register 61: 0.000 *10^3 var ----
2017-10-13 11:25:11.044 #1   001bc50c6000bc21 <log> 0:03:14.043 [ info] [   meter/ytl] {   device}: ---- Register 62: 0.000 *10^3 var ----
2017-10-13 11:25:11.087 #1   001bc50c6000bc21 <log> 0:03:14.051 [ info] [   meter/ytl] {   device}: ---- Register 63: 0.000 *10^3 var ----
2017-10-13 11:25:11.087 #1   001bc50c6000bc21 <log> 0:03:14.060 [ info] [   meter/ytl] {   device}: ---- Register 64: 0.003 *10^3 var ----
2017-10-13 11:25:11.087 #1   001bc50c6000bc21 <log> 0:03:14.069 [ info] [   meter/ytl] {   device}: ---- Register 65: 0.000 *10^3 var ----
2017-10-13 11:25:11.087 #1   001bc50c6000bc21 <log> 0:03:14.077 [ info] [   meter/ytl] {   device}: ---- Register 66: 0.000 *10^3 var ----
2017-10-13 11:25:11.087 #1   001bc50c6000bc21 <log> 0:03:14.086 [ info] [   meter/ytl] {   device}: ---- Register 67: 0.000 *10^3 var ----
2017-10-13 11:25:11.129 #1   001bc50c6000bc21 <log> 0:03:14.094 [ info] [   meter/ytl] {   device}: ---- Register 68: 0.000 *10^3 var ----
2017-10-13 11:25:11.129 #1   001bc50c6000bc21 <log> 0:03:14.103 [ info] [   meter/ytl] {   device}: ---- Register 69: 0.000 *10^3 var ----
2017-10-13 11:25:11.129 #1   001bc50c6000bc21 <log> 0:03:14.112 [ info] [   meter/ytl] {   device}: ---- Register 70: 0.000 *10^3 var ----
2017-10-13 11:25:11.129 #1   001bc50c6000bc21 <log> 0:03:14.120 [ info] [   meter/ytl] {   device}: ---- Register 71: 0.001 *10^3 varh ----
2017-10-13 11:25:11.129 #1   001bc50c6000bc21 <log> 0:03:14.129 [ info] [   meter/ytl] {   device}: ---- Register 72: 0.000 *10^3 varh ----
2017-10-13 11:25:11.172 #1   001bc50c6000bc21 <log> 0:03:14.138 [ info] [   meter/ytl] {   device}: ---- Register 73: 0.000 *10^3 varh ----
2017-10-13 11:25:11.172 #1   001bc50c6000bc21 <log> 0:03:14.147 [ info] [   meter/ytl] {   device}: ---- Register 74: 0.000 *10^3 varh ----
2017-10-13 11:25:11.172 #1   001bc50c6000bc21 <log> 0:03:14.155 [ info] [   meter/ytl] {   device}: ---- Register 75: 0.000 *10^3 varh ----
2017-10-13 11:25:11.172 #1   001bc50c6000bc21 <log> 0:03:14.164 [ info] [   meter/ytl] {   device}: ---- Register 76: 0.000 *10^3 varh ----
2017-10-13 11:25:11.172 #1   001bc50c6000bc21 <log> 0:03:14.173 [ info] [   meter/ytl] {   device}: ---- Register 77: 0.000 *10^3 varh ----
2017-10-13 11:25:11.215 #1   001bc50c6000bc21 <log> 0:03:14.182 [ info] [   meter/ytl] {   device}: ---- Register 78: 0.000 *10^3 varh ----
2017-10-13 11:25:11.215 #1   001bc50c6000bc21 <log> 0:03:14.190 [ info] [   meter/ytl] {   device}: ---- Register 79: 0.000 *10^3 varh ----
2017-10-13 11:25:11.215 #1   001bc50c6000bc21 <log> 0:03:14.199 [ info] [   meter/ytl] {   device}: ---- Register 80: 0.000 *10^3 varh ----
2017-10-13 11:25:11.215 #1   001bc50c6000bc21 <log> 0:03:14.208 [ info] [   meter/ytl] {   device}: ---- Register 81: 0.000 *10^3 var ----
2017-10-13 11:25:11.215 #1   001bc50c6000bc21 <log> 0:03:14.216 [ info] [   meter/ytl] {   device}: ---- Register 82: 0.000 *10^3 var ----
2017-10-13 11:25:11.258 #1   001bc50c6000bc21 <log> 0:03:14.225 [ info] [   meter/ytl] {   device}: ---- Register 83: 0.000 *10^3 var ----
2017-10-13 11:25:11.258 #1   001bc50c6000bc21 <log> 0:03:14.234 [ info] [   meter/ytl] {   device}: ---- Register 84: 0.000 *10^3 var ----
2017-10-13 11:25:11.258 #1   001bc50c6000bc21 <log> 0:03:14.242 [ info] [   meter/ytl] {   device}: ---- Register 85: 0.000 *10^3 var ----
2017-10-13 11:25:11.258 #1   001bc50c6000bc21 <log> 0:03:14.251 [ info] [   meter/ytl] {   device}: ---- Register 86: 0.000 *10^3 var ----
2017-10-13 11:25:11.258 #1   001bc50c6000bc21 <log> 0:03:14.260 [ info] [   meter/ytl] {   device}: ---- Register 87: 0.000 *10^3 var ----
2017-10-13 11:25:11.294 #1   001bc50c6000bc21 <log> 0:03:14.268 [ info] [   meter/ytl] {   device}: ---- Register 88: 0.000 *10^3 var ----
2017-10-13 11:25:11.294 #1   001bc50c6000bc21 <log> 0:03:14.277 [ info] [   meter/ytl] {   device}: ---- Register 89: 0.000 *10^3 var ----
2017-10-13 11:25:11.294 #1   001bc50c6000bc21 <log> 0:03:14.286 [ info] [   meter/ytl] {   device}: ---- Register 90: 0.000 *10^3 var ----
2017-10-13 11:25:11.355 #1   001bc50c6000bc21 <log> 0:03:14.344 [ info] [        dlms] {   device}: Disconnect HDLC link





-------------------------------


load profile


sampleComplexProfiles()


request for load profile buffer.
0x01, 0x02, 0x04, 0x02, 0x04, 
DLMS_TYPE_U_LONG, 0x00, 0x08, 0x09, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0xff,
DLMS_TYPE_INTEGER, 0x02, 
DLMS_TYPE_U_LONG, 0x00, 0x00, 
'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 
'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 
0x01, 0x00 // All columns to retrieve


<GetRequest>
  <GetRequestNormal>
    <InvokeIdAndPriority Value="131" />
    <AttributeDescriptor>
      <!--PROFILE_GENERIC-->
      <ClassId Value="7" />
      <!--1.0.99.1.1.255-->
      <InstanceId Value="0100630101FF" />
      <AttributeId Value="2" />
    </AttributeDescriptor>
    <AccessSelection>
      <AccessSelector Value="1" />
      <AccessParameters>
        <Structure Qty="4" >
          <Structure Qty="4" >
            <UInt16 Value="8" />
            <!--0.0.1.0.0.255-->
            <OctetString Value="0000010000FF" />
            <Int8 Value="2" />
            <UInt16 Value="0" />
          </Structure>
          <!--2016-11-28 10:00:00-->
          <OctetString Value="07E00B1CFF0A000000FFFFFF" />
          <!--2016-11-29 00:00:00-->
          <OctetString Value="07E00B1DFF00000000FFFFFF" />
          <Array Qty="0" >
          </Array>
        </Structure>
      </AccessParameters>
    </AccessSelection>
  </GetRequestNormal>
</GetRequest>

processComplexSampleResponse()



processComplexSampleResponse()
 -> profileSampleCreate()

bad frame:
7e a023 00020023 41 93 f736 818014050200b4060200b407040000000108040000000 115ca 7e

7e a013 41 00020023 30 92e4 e6e700 0e010600 3ef5 7e


7e a04b 00020023 41 32 1df8 e6e600 
c001 81 00 070100630101ff0201010204020412000809060000010000ff0f0212000007d0010400021500ff80000007d0010400021800ff8000000100
00d3
7e


07d0010400021500ff80000007d0010400021800ff800000010000d37e


c001 81 00 0701005e4200ff0201010204020412000809060000010000ff0f0212000007d0010400021500ff80000007d0010400021800ff8000000100



pbEncodeDataProfileValues()
 pb_encode_string()


dlmsParseProfileScalerUnit()

/sm/[deviceId]/[action]->smResourceCallback()->getDiscoveryAction()->getDiscoveryCb()->sendDataProfileDiscovery()


src/device/addons/metering/readings.h:18:#define READING_REG_VALUE_SIZE               (  60 )


if bad deviceId, getDiscoveryCb is called with NULL response and logProfileDiscovery gets called 
with a NULL ptr which it dereferences causing a hard-fault.

pbEncodeProfiles(): pbProfileConfig.registers.arg = (void*)currentProfile;  // BUG: was address-of currentProfile.


#define PB_BUFFER_MAX_SIZE 8192




-------------------------------

saveDataProfileSample() -> uint32_t seqNo = mqCreate(MqEntry_dataProfileSample_tag, MqDataProfileSample_fields, &dpSample);


----------------------------------


I1.0.71.7.0.255,I1.0.51.7.0.255,I1.0.94.66.0.255

"<ProfileResult>, this is a very long profile result, will t"

",07e10b07020e0c06ff800000*10^-86,07d0000000000000ff800000*10^-86,2*10^0 A,0.270*10^0 A,0.000*10^0 A,0.000*10^0 V,249.644*10^0 V,0.000*10^0 V,0.000*10^0 degree,70.852*10^0 degree,0.000*10^0 degree,0.000*10^0,0.324*10^0,0.274*10^0,1.000*10^0,1.000*10^3 W"
",07e10b07020f0615ff800000*10^-86,07d0000000000000ff800000*10^-86,2*10^0 A,0.257*10^0 A,0.000*10^0 A,0.000*10^0 V,247.273*10^0 V,0.000*10^0 V,0.000*10^0 degree,69.923*10^0 degree,0.000*10^0 degree,0.000*10^0,0.337*10^0,0.285*10^0,1.000*10^0,1.000*10^3 W,0.018*10^3 W,0.000*10^3 W,0.018*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 var,0.050*10^3 var,0.000*10^3 var,0.050*10^3 var,0.000*10^3 var,0.000*10^3 var,0.000*10^3 var,0.000*10^3 var,0.000*10^-86,0.895*10^-86,0.198*10^-86,0.052*10^-86,0.895*10^-86,0.019*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^3 Wh,7.308*10^3 Wh,1.781*10^3 Wh,1.753*10^3 Wh,2.005*10^3 Wh,1.766*10^3 Wh,0.000*10^3 Wh,0.000*10^3 Wh,0.000*10^3 Wh,0.000*10^3 Wh,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^-86,0.063*10^-86,0.061*10^-86,0.061*10^-86,0.062*10^-86,0.062*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^3 varh,20.371*10^3 varh,5.013*10^3 varh,5.107*10^3 varh,5.097*10^3 varh,5.152*10^3 varh,0.036*10^3 varh,0.009*10^3 varh,0.008*10^3 varh,0.008*10^3 varh,0.009*10^3 var,0.000*10^3 var,0.000*10^3 var"
[,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,278,1000,1000,18,0,18,0,0,0,0,0,52,0,52,0,0,0,0,0,895,0,0,0,0,0,0,0,0,0,0,1890,1865,2116,1868,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,0],


",07e10b0702111a31ff800000*10^-86,07d0000000000000ff800000*10^-86,2*10^0 A,0.278*10^0 A,0.000*10^0 A,0.000*10^0 V,250.481*10^0 V,0.000*10^0 V,0.000*10^0 degree,71.255*10^0 degree,0.000*10^0 degree,0.000*10^0,0.318*10^0,0.269*10^0,1.000*10^0,1.000*10^3 W,0.018*10^3 W,0.000*10^3 W,0.018*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 var,0.055*10^3 var,0.000*10^3 var,0.055*10^3 var,0.000*10^3 var,0.000*10^3 var,0.000*10^3 var,0.000*10^3 var,0.000*10^-86,0.895*10^-86,0.198*10^-86,0.052*10^-86,0.895*10^-86,0.019*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^3 Wh,7.345*10^3 Wh,1.781*10^3 Wh,1.791*10^3 Wh,2.005*10^3 Wh,1.766*10^3 Wh,0.000*10^3 Wh,0.000*10^3 Wh,0.000*10^3 Wh,0.000*10^3 Wh,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^-86,0.063*10^-86,0.061*10^-86,0.061*10^-86,0.062*10^-86,0.062*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^3 varh,20.479*10^3 varh,5.013*10^3 varh,5.216*10^3 varh,5.097*10^3 varh,5.152*10^3 varh,0.036*10^3 varh,0.009*10^3 varh,0.008*10^3 varh,0.008*10^3 varh,0.009*10^3 var,0.000*10^3 var,0.000*10^3 var"
",07d0020500061c0fff800000*10^-86,255*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,07d0011000063900ff800000*10^-86,0*10^-86,0.326*10^-86,249.136*10^-86,0.000*10^-86,0.000*10^-86,0.268*10^-86,0.000*10^-86,0.000*10^-86,8.030*10^-86,0.229*10^-86,0.239*10^-86,0.137*10^-86,0.002*10^-86,0.002*10^-86,0.275*10^-86,1.000*10^-86,1.000*10^-86,07d0011000063a00ff800000*10^-86,0*10^-86,0.327*10^-86,249.192*10^-86,0.000*10^-86,0.000*10^-86,0.267*10^-86,0.000*10^-86,0.000*10^-86,8.020*10^-86,0.229*10^-86,0.239*10^-86,0.136*10^-86,0.002*10^-86,0.002*10^-86,0.276*10^-86,1.000*10^-86,1.000*10^-86,07d0011000063b00ff800000*10^-86,0*10^-86,0.326*10^-86,249.449*10^-86,0.000*10^-86,0.000*10^-86,0.268*10^-86,0.000*10^-86,0.000*10^-86,8.130*10^-86,0.228*10^-86,0.238*10^-86,0.137*10^-86,0.002*10^-86,0.002*10^-86,0.275*10^-86,1.000*10^-86,1.000*10^-86,07d0011000070000ff800000*10^-86,0*10^-86,0.325*10^-86,249.449*10^-86,0.000*10^-86,0.000*10^-86,0.268*10^-86,0.000*10^-86,0.000*10^-86,8.158*10^-86,0.228*10^-86,0.237*10^-86,0.137*10^-86"

"[07d0020500061c0fff800000*10^-86,255*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86], 
 [07d0011000171d00ff800000*10^-86,0*10^-86,0.335*10^-86,247.602*10^-86,0.000*10^-86,0.000*10^-86,0.259*10^-86,0.000*10^-86,0.000*10^-86,7.956*10^-86,0.232*10^-86,0.240*10^-86,0.133*10^-86,0.002*10^-86,0.002*10^-86,0.283*10^-86,1.000*10^-86,1.000*10^-86], 
 [07d0011000171e00ff800000*10^-86,0*10^-86,0.334*10^-86,247.579*10^-86,0.000*10^-86,0.000*10^-86,0.259*10^-86,0.000*10^-86,0.000*10^-86,8.036*10^-86,0.231*10^-86,0.240*10^-86,0.133*10^-86,0.002*10^-86,0.002*10^-86,0.283*10^-86,1.000*10^-86,1.000*10^-86], 
 [07d0011000171f00ff800000*10^-86,0*10^-86,0.333*10^-86,247.857*10^-86,0.000*10^-86,0.000*10^-86,0.261*10^-86,0.000*10^-86,0.000*10^-86,8.090*10^-86,0.232*10^-86,0.240*10^-86,0.134*10^-86,0.002*10^-86,0.002*10^-86,0.281*10^-86,1.000*10^-86,1.000*10^-86], 
 [07d0011000172000ff800000*10^-86,0*10^-86,0.333*10^-86,247.806*10^-86,0.000*10^-86,0.000*10^-86,0.261*10^-86,0.000*10^-86,0.000*10^-86,8.087*10^-86,0.232*10^-86,0.240*10^-86,0.134*10^-86,0.002*10^-86,0.002*10^-86,*10^-86,*10^-86,*10^-86], "




discoverNextProfile()
discoverProfiles()

#registers.append('L1.0.31.7.0.255')
#registers.append('I1.0.51.7.0.255')
#registers.append('I1.0.71.7.0.255')
registers.append('I1.0.94.66.0.255')
#registers.append('I1.0.99.1.1.255')


I1.0.99.1.1.255:-120
I1.0.94.66.0.255
I1.0.94.66.0.255,I1.0.99.1.1.255:-900
I1.0.98.1.0.255

I1.0.98.1.0.255:-9:9:18
I1.0.98.1.0.255:-9:4:10

I1.0.98.1.0.255:-9:0:1,I1.0.98.1.0.255:-9:1:2,I1.0.98.1.0.255:-9:2:3,I1.0.98.1.0.255:-9:3:4
I1.0.98.1.0.255:-9:0:1,I1.0.98.1.0.255:-9:1:2

I1.0.99.1.1.255:-7200,I1.0.94.66.0.255,I1.0.99.1.1.255:-3600

I1.0.98.1.0.255:-9:0:1,I1.0.98.1.0.255:-9:1:2
I1.0.98.1.0.255:-9:2:3,I1.0.98.1.0.255:-9:3:4

I1.0.98.1.0.255:-9:0:1, I1.0.98.1.0.255:-9:1:2, I1.0.98.1.0.255:-9:2:3, I1.0.98.1.0.255:-9:3:4



MessageReadoutRequest:
readingsCreateResponse()

LOG_DEBUG("--> %s:%d",__FILE__,__LINE__);


0000600A02FF is 1, 3?
0000600A02FF

2017-06-01T08:51:00.000-00:00 0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.2,0.0,0.0,0.2,0.2,0.4,0.0,0.0,0.4,0.4,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,117282.796,117531.601,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,246545.78,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,07e1051c00091611ff800000,07e1051f030e2600ff800000,0000000000000000ff800000,07e1051c10091711ff800000


I1.0.98.1.0.255:-9:9:18



--------------------------------------------------------------

P1.0.94.66.0.255    - IS
P1.0.99.1.0.255     - LS


I0.0.1.0.0.255
I1.0.0.1.2.255
I1.0.0.1.1.255
I1.0.31.7.0.255
I1.0.51.7.0.255
I1.0.71.7.0.255
I1.0.32.7.0.255
I1.0.52.7.0.255
I1.0.72.7.0.255
I1.0.81.7.4.255
I1.0.81.7.15.255
I1.0.81.7.26.255
I1.0.13.7.0.255
I1.0.33.7.0.255
I1.0.53.7.0.255
I1.0.73.7.0.255
I1.0.1.7.0.255
I1.0.2.7.0.255
I1.0.21.7.0.255
I1.0.22.7.0.255
I1.0.41.7.0.255
I1.0.42.7.0.255
I1.0.61.7.0.255
I1.0.62.7.0.255
I1.0.3.7.0.255
I1.0.4.7.0.255
I1.0.23.7.0.255
I1.0.24.7.0.255
I1.0.43.7.0.255
I1.0.44.7.0.255
I1.0.63.7.0.255
I1.0.64.7.0.255
I1.0.1.6.0.255
I1.0.1.6.1.255
I1.0.1.6.2.255
I1.0.1.6.3.255
I1.0.2.6.0.255
I1.0.2.6.1.255
I1.0.2.6.2.255
I1.0.2.6.3.255
I1.0.1.8.0.255
I1.0.1.8.1.255
I1.0.1.8.2.255
I1.0.1.8.3.255
I1.0.2.8.0.255
I1.0.2.8.1.255
I1.0.2.8.2.255
I1.0.2.8.3.255
I1.0.1.2.0.255
I1.0.1.2.1.255
I1.0.1.2.2.255
I1.0.1.2.3.255
I1.0.2.2.0.255
I1.0.2.2.1.255
I1.0.2.2.2.255
I1.0.2.2.3.255
I1.0.3.6.0.255
I1.0.3.6.1.255
I1.0.3.6.2.255
I1.0.3.6.3.255
I1.0.4.6.0.255
I1.0.4.6.1.255
I1.0.4.6.2.255
I1.0.4.6.3.255
I1.0.3.8.0.255
I1.0.3.8.1.255
I1.0.3.8.2.255
I1.0.3.8.3.255
I1.0.4.8.0.255
I1.0.4.8.1.255
I1.0.4.8.2.255
I1.0.4.8.3.255
I1.0.3.2.0.255
I1.0.3.2.1.255
I1.0.3.2.2.255
I1.0.3.2.3.255
I1.0.4.2.0.255
I1.0.4.2.1.255
I1.0.4.2.2.255
I1.0.4.2.3.255

-------------------------------------

Mitsu IS

"0.0.1.0.0.255"     : Time
"1.0.0.1.2.255"     : Time/date of billing reset
"1.0.0.1.1.255"     : Total number of billing reset
"1.0.11.7.0.255"    : Current: Inst. Value (A)
"1.0.31.7.0.255"    : L1 Current ; Inst. value;
"1.0.51.7.0.255"    : L2 Current ; Inst. value;
"1.0.71.7.0.255"    : L3 Current ; Inst. value;
"1.0.12.7.0.255"    : Voltage: Inst. Value (V)
"1.0.32.7.0.255"    : L1 Voltage; Inst. Value;
"1.0.52.7.0.255"    : L2 Voltage; Inst. Value;
"1.0.72.7.0.255"    : L3 Voltage; Inst. Value;
"1.0.81.7.4.255"    : Angle of I(L1) - U(L1)
"1.0.81.7.15.255"   : Angle of I(L2) - U(L2)
"1.0.81.7.26.255"   : Angle of I(L3) - U(L3)
"1.0.13.7.0.255"    : System power factor: Inst. value
"1.0.33.7.0.255"    : L1 Power factor; Current avg. 5  ?
"1.0.53.7.0.255"    : L2 Power factor; Current avg. 5  ?
"1.0.73.7.0.255"    : L3 Power factor; Current avg. 5  ?
"1.0.1.7.0.255"     : ΣLi Active power+ (QI+QIV); Inst. Value
"1.0.2.7.0.255"     : ΣLi Active power- (QII+QIII); Inst. Value
"1.0.21.7.0.255"    : L1 Active power+ (QI+QIV); Inst. Value
"1.0.22.7.0.255"    : L1 Active power- (QII+QIII); Inst. Value
"1.0.41.7.0.255"    : L2 Active power+ (QI+QIV); Inst. Value
"1.0.42.7.0.255"    : L2 Active power- (QII+QIII); Inst. Value
"1.0.61.7.0.255"    : L3 Active power+ (QI+QIV); Inst. Value
"1.0.62.7.0.255"    : L3 Active power- (QII+QIII); Inst. Value
"1.0.3.7.0.255"     : ΣLi Reactive power+ (QI+QII); Inst. Value
"1.0.4.7.0.255"     : ΣLi Reactive power- (QIII+QIV); Inst. Value
"1.0.23.7.0.255"    : L1 Reactive power+ (QI+QII); Inst. Value
"1.0.24.7.0.255"    : L1 Reactive power- (QIII+QIV); Inst. Value
"1.0.43.7.0.255"    : L2 Reactive power+ (QI+QII); Inst. Value
"1.0.44.7.0.255"    : L2 Reactive power- (QIII+QIV); Inst. Value
"1.0.63.7.0.255"    : L3 Reactive power+ (QI+QII); Inst. Value
"1.0.64.7.0.255"    : L3 Reactive power- (QIII+QIV); Inst. Value
"1.0.1.6.0.255"     : ΣLi Active power+ (QI+QIV); Max.; [Total, Rate 0]
"1.0.2.6.0.255"     : ΣLi Active power- (QII+QIII); Max.; Rate 0 
"1.0.1.6.1.255"     : ΣLi Active power+ (QI+QIV); Max.; [Total, Rate 1]
"1.0.2.6.1.255"     : ΣLi Active power- (QII+QIII); Max.; Rate 1
"1.0.1.6.2.255"     : ΣLi Active power+ (QI+QIV); Max.; [Total, Rate 2]
"1.0.2.6.2.255"     : ΣLi Active power- (QII+QIII); Max.; Rate 2
"1.0.1.6.3.255"     : ΣLi Active power+ (QI+QIV); Max.; [Total, Rate 3]
"1.0.2.6.3.255"     : ΣLi Active power- (QII+QIII); Max.; Rate 3
"1.0.1.6.4.255"     : ΣLi Active power+ (QI+QIV); Max.; [Total, Rate 4]
"1.0.2.6.4.255"     : ΣLi Active power- (QII+QIII); Max.; Rate 4
"1.0.1.8.0.255"     : ΣLi Active power+ (QI+QIV); Time integral 1; Rate 0
"1.0.2.8.0.255"     : ΣLi Active power- (QII+QIII); Time integral 1; Rate 0
"1.0.1.8.1.255"     : ΣLi Active power+ (QI+QIV); Time integral 1; Rate 1
"1.0.2.8.1.255"     : ΣLi Active power- (QII+QIII); Time integral 1; Rate 1
"1.0.1.8.2.255"     : ΣLi Active power+ (QI+QIV); Time integral 1; Rate 2
"1.0.2.8.2.255"     : ΣLi Active power- (QII+QIII); Time integral 1; Rate 2
"1.0.1.8.3.255"     : ΣLi Active power+ (QI+QIV); Time integral 1; Rate 3
"1.0.2.8.3.255"     : ΣLi Active power- (QII+QIII); Time integral 1; Rate 3
"1.0.1.8.4.255"     : ΣLi Active power+ (QI+QIV); Time integral 1; Rate 4
"1.0.2.8.4.255"     : ΣLi Active power- (QII+QIII); Time integral 1; Rate 4
"1.0.1.2.0.255"     : ΣLi Active power+ (QI+QIV); Cum. max. 1; Rate 0
"1.0.2.2.0.255"     : ΣLi Active power- (QII+QIII); Cum. max. 1; Rate 0
"1.0.1.2.1.255"     : ΣLi Active power+ (QI+QIV); Cum. max. 1; Rate 1
"1.0.2.2.1.255"     : ΣLi Active power- (QII+QIII); Cum. max. 1; Rate 1
"1.0.1.2.2.255"     : ΣLi Active power+ (QI+QIV); Cum. max. 1; Rate 2
"1.0.2.2.2.255"     : ΣLi Active power- (QII+QIII); Cum. max. 1; Rate 2
"1.0.1.2.3.255"     : ΣLi Active power+ (QI+QIV); Cum. max. 1; Rate 3
"1.0.2.2.3.255"     : ΣLi Active power- (QII+QIII); Cum. max. 1; Rate 3
"1.0.1.2.4.255"     : ΣLi Active power+ (QI+QIV); Cum. max. 1; Rate 4
"1.0.2.2.4.255"     : ΣLi Active power- (QII+QIII); Cum. max. 1; Rate 4
"1.0.3.6.0.255"     : ΣLi Reactive power+ (QI+QIV); Max.; Rate 0
"1.0.4.6.0.255"     : ΣLi Reactive power- (QII+QIII); Max.; Rate 0
"1.0.3.6.1.255"     : ΣLi Reactive power+ (QI+QIV); Max.; Rate 1
"1.0.4.6.1.255"     : ΣLi Reactive power- (QII+QIII); Max.; Rate 1
"1.0.3.6.2.255"     : ΣLi Reactive power+ (QI+QIV); Max.; Rate 2
"1.0.4.6.2.255"     : ΣLi Reactive power- (QII+QIII); Max.; Rate 2
"1.0.3.6.3.255"     : ΣLi Reactive power+ (QI+QIV); Max.; Rate 3
"1.0.4.6.3.255"     : ΣLi Reactive power- (QII+QIII); Max.; Rate 3
"1.0.3.6.4.255"     : ΣLi Reactive power+ (QI+QIV); Max.; Rate 4
"1.0.4.6.4.255"     : ΣLi Reactive power- (QII+QIII); Max.; Rate 4
"1.0.3.8.0.255"     : ΣLi Reactive power+ (QI+QIV); Time integral 1; Rate 0
"1.0.4.8.0.255"     : ΣLi Reactive power- (QII+QIII); Time integral 1; Rate 0
"1.0.3.8.1.255"     : ΣLi Reactive power+ (QI+QIV); Time integral 1; Rate 1
"1.0.4.8.1.255"     : ΣLi Reactive power- (QII+QIII); Time integral 1; Rate 1
"1.0.3.8.2.255"     : ΣLi Reactive power+ (QI+QIV); Time integral 1; Rate 2
"1.0.4.8.2.255"     : ΣLi Reactive power- (QII+QIII); Time integral 1; Rate 2
"1.0.3.8.3.255"     : ΣLi Reactive power+ (QI+QIV); Time integral 1; Rate 3
"1.0.4.8.3.255"     : ΣLi Reactive power- (QII+QIII); Time integral 1; Rate 3
"1.0.3.8.4.255"     : ΣLi Reactive power+ (QI+QIV); Time integral 1; Rate 4
"1.0.4.8.4.255"     : ΣLi Reactive power- (QII+QIII); Time integral 1; Rate 4
"1.0.3.2.0.255"     : ΣLi Reactive power+ (QI+QIV); Cum. max. 1; Rate 0
"1.0.4.2.0.255"     : ΣLi Reactive power- (QII+QIII); Cum. max. 1; Rate 0
"1.0.3.2.1.255"     : ΣLi Reactive power+ (QI+QIV); Cum. max. 1; Rate 1
"1.0.4.2.1.255"     : ΣLi Reactive power- (QII+QIII); Cum. max. 1; Rate 1
"1.0.3.2.2.255"     : ΣLi Reactive power+ (QI+QIV); Cum. max. 1; Rate 2
"1.0.4.2.2.255"     : ΣLi Reactive power- (QII+QIII); Cum. max. 1; Rate 2
"1.0.3.2.3.255"     : ΣLi Reactive power+ (QI+QIV); Cum. max. 1; Rate 3
"1.0.4.2.3.255"     : ΣLi Reactive power- (QII+QIII); Cum. max. 1; Rate 3
"1.0.3.2.4.255"     : ΣLi Reactive power+ (QI+QIV); Cum. max. 1; Rate 4
"1.0.4.2.4.255"     : ΣLi Reactive power- (QII+QIII); Cum. max. 1; Rate 4


2017-11-28T11:35:13.000-00:00 00 0xff
2017-11-28T11:35:13.000-00:00 00 0xff
4
0
0
0
0
21.941
21.941
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

--------------------------------------------------


Mitsu LS:

"0.0.1.0.0.255","0.0.96.5.0.255","1.0.1.4.0.255","1.0.2.4.0.255","1.0.3.4.0.255","1.0.4.4.0.255","1.0.1.29.0.255","1.0.2.29.0.255","1.0.3.29.0.255","1.0.4.29.0.255","1.0.12.27.0.255","1.0.11.27.0.255","1.0.12.128.124.255","1.0.11.128.124.255","1.0.13.27.0.255","1.0.81.128.4.255"


2017-11-28T11:30:00.000-00:00 00 0xff
0
0
0
0
0
0
0
0
0
21971
0
0
0
0
0
2.659
0
0
0
0
0
0
0
0
0
0
0
0


------------------------------------------------

C:\Users\SteveTickle\AppData\Local\Programs\Python\Python36-32\Lib\site-packages\suds\sax

cp /usr/lib/python3/dist-packages/suds/client.py .
cp /usr/lib/python3/dist-packages/suds/sax/text.py .

--------------------------------------------------

node.boot

terminal.c:232 temrinalTask generates EVENT_CREATE(event, EVENT_NODE_BOOT);



----------------------------

SM API notes:
- Capabiliites info? event support, profile support, permissions
- How opinionated are we? e.g. can on-deman come from retrieved data? come with latency but simplifies our system.
- Are we intending to present a unified interface or an infinitely configurable interface? middle-ground?.
- Are we wedding ourselves to DLMS? should we be presenting a DLMS/OBIS interface? or simply IS/LS/BP, i.e. no OBISs.
- Should profileObisCode be necessary? should be hidden? use name instead? which is the identifier?
- "ic" interface class, attributeID, etc are a DLMS-ism that is only of importance when interrogating the meter, not for the user of the data.
- We should not really be exposing DLMS-isms to the outer API. We need to consider what portions of DLMS that we want to expose.
- "scaler" not "scalar" i.e. a value that represents the scale, not that it is a scalar value.
- MeterRegisterValue. I don't think we should be exposing the low-level interface to the end user API.
- Format of returned data is not described. Either refer to A-XDR doc or describe fully here.
- "ws" prefix. Does this have a real meaning? surely not "web service"?! that would be implied.
- API versioning? Should this be in the URL or negotiated on a client-by-client basis?
- Do we need a distinction between profiles and single values? or simply multi-valued results with a common request interface?
- Asynchronous events? no API is apparent for those yet other than polling (long-poll connection? / websockets?).
- Time its own smart-metering API, legal time shouldn't be part of the NMS.
- Should capabilities even be exposed to the API user? isn't the purpose to abstract them away?


-------------------------------------

3e  :   hw1:v104
2d  :   mitsubishi-insecure:v102.1
2e  :   mitsubishi-insecure:v102.1
2f  :   mitsubishi-insecure:v102.1
31  :   ytl-insecure:v101-310-gcd0cc63
34  :   ytl-insecure:v101-310-gcd0cc63
35  :   mitsubishi-insecure:v102.1
36  :   mitsubishi-insecure:v102.1


-------------------------------------------------


cygh/sdram.c:

int cygh_sdram_read(uint32_t offset, void *buf, size_t size)
int cygh_sdram_write(uint32_t offset, const void *buf, size_t size)

used by:
- firmware_updater
- store/file.c   FILERESULT FILE_write(file_t *file, const void *buf, size_t len)
- store/file.c   FILERESULT FILE_read(file_t *file, void *buf, size_t len, size_t *outlen)
- store/fs.c     FSRESULT FS_storage_read(fs_t *handle, uint32_t lba_offset, void * buffer)

used by:
- file_nanopb.c
- list.c
- fs_onefile.c
- fs.c
- stream_output_fs.c
- meter_command_protocol.c
- passthrough.c
- licensing.c
- gprs.c
- command_handler.c


- can we allocate dynamically or statically >64KB on the eCog?

-------------------------------------------

cyglib build instability:

git clean -xfd
./build

PASSED erase_with_filter_main_alt
Writing preferences until compaction happens.
Measuring time for unlimited sized preference store.
Write     0: took   0 milliseconds, read took   0 milliseconds
Write     1: took   0 milliseconds, read took   0 milliseconds
Write     2: took   0 milliseconds, read took   0 milliseconds
Write     3: took   0 milliseconds, read took   0 milliseconds
Write     4: took   0 milliseconds, read took   0 milliseconds
Write     5: took   0 milliseconds, read took   0 milliseconds
Write     6: took   0 milliseconds, read took   0 milliseconds
Write     7: took   0 milliseconds, read took   0 milliseconds
Write     8: took   0 milliseconds, read took   0 milliseconds
Write     9: took   0 milliseconds, read took   0 milliseconds
Write    10: took   0 milliseconds, read took   0 milliseconds
Write    11: took   0 milliseconds, read took   0 milliseconds
Write    12: took   0 milliseconds, read took   0 milliseconds
Write    13: took   0 milliseconds, read took   0 milliseconds
Write    14: took   0 milliseconds, read took   0 milliseconds
Write    15: took   0 milliseconds, read took   0 milliseconds
Write    16: took   1 milliseconds, read took   0 milliseconds
FAILED 448: compaction_timing:On max memory with unlimited tags, the last write must fail
PASSED read_chip_id
Test suite summary for: preferences
Tests run 22
Tests passed 21
Tests failed 1
Test suite details for: preferences
PASSED test_the_test
PASSED initialise
PASSED read_empty
PASSED size
PASSED read_from_main
PASSED read_from_alt
PASSED write_to_empty
PASSED write_new_value_for_tag
PASSED write_two_tags
PASSED write_two_tags_twice
PASSED compact
PASSED write_after_compact
PASSED compact_auto
PASSED write_and_compact_blank
PASSED erase_main
PASSED erase_alt
PASSED erase_main_alt
PASSED erase_with_filter_main
PASSED erase_with_filter_alt
PASSED erase_with_filter_main_alt
FAILED 448: compaction_timing:On max memory with unlimited tags, the last write must fail
PASSED read_chip_id
Tests run 22
Tests passed 21
Tests failed 1
make[1]: *** [run] Error 1
/project/cyghlib/tools/cygh_py_app.mak:57: recipe for target 'run' failed
make[1]: Leaving directory '/project/test/preferences'
Makefile:227: recipe for target 'stamp-test-cyghpy' failed
make: *** [stamp-test-cyghpy] Error 1

----------------------------------------------------------

hwicce build instability:

event_diag_log_id: 59 event_rec_log_id: 54 timestamp: 1083 time_since_boot_secs: 1083 module: METERCOMMS line: 481 severity: WARNING metercomms_datacol_disabled { } 
event_diag_log_id: 60 event_rec_log_id: 55 timestamp: 1113 time_since_boot_secs: 1113 module: METERCOMMS line: 481 severity: WARNING metercomms_datacol_disabled { } 
event_diag_log_id: 61 event_rec_log_id: 56 timestamp: 1144 time_since_boot_secs: 1144 module: METERCOMMS line: 481 severity: WARNING metercomms_datacol_disabled { } 
event_diag_log_id: 62 timestamp: 1152 time_since_boot_secs: 1152 module: CABLE line: 187 severity: INFO cable_connection_attempt_while_connected { } 
event_diag_log_id: 63 timestamp: 1155 time_since_boot_secs: 1155 ok
module: FS_ONEFILE line: 87 severity: INFO fs_onefile { commit_success { data: "dcu_config_runtime" } } 
event_diag_log_id: 64 event_rec_log_id: 57 timestamp: 1155 time_since_boot_secs: 1155 module: METERCOMMS line: 491 severity: WARNING metercomms_datacol_enabled { } 
event_diag_log_id: 65 timestamp: 1164 time_since_boot_secs: 1164 module: FS_ONEFILE line: 87 severity: INFO fs_onefile { commit_success { data: "dcu_config_runtime" } } 
event_diag_log_id: 66 event_rec_log_id: 58 timestamp: 1164 time_since_boot_secs: 1164 module: METERCOMMS line: 180 severity: ERROR metercomms_success_command { uuid { uuid_bytes: "\310\277\177\302\036,K\023\221\372Z\362o\246}\227" } meter_cmd { metercmd_protocol_read_type_instantaneous_schedule { } } meter_uuid { uuid_bytes: "\227\266\316\027\221yJ2\253\214\0359f\322\000\004" } scheduled: true instantaneous_schedule_collection_config_secs: 1800 } 


hwicce build instability:

PYTHONPATH='/usr/local/lib/cylec_scripts:/project/thirdparty/nanopb/generator:/usr/local/lib/cygh/cyghlib/CyGHPyDebug' python -u -c 'from ctypes import PyDLL; PyDLL("/project/dcuunittest/dcu/metercomms/instantaneous_schedule/CyGHPyDebug/_lib.so")'
PYTHONPATH='/usr/local/lib/cylec_scripts:/project/thirdparty/nanopb/generator:/usr/local/lib/cygh/cyghlib/CyGHPyDebug' python -u /usr/bin/nosetests -s -v
dcuunittest.dcu.metercomms.instantaneous_schedule.test.test_main ... Starting Suite config

Start and Reading Timing test.FAILED 152: IS_start_and_reading_timing_test:diff >= start_sec-5

End Timing test................................................................
PASSED IS_end_timing_test

Reset Timing test
PASSED IS_reset_timing_test
Test suite summary for: config
Tests run 3
Tests passed 2
Tests failed 1
Test suite details for: config
FAILED 152: IS_start_and_reading_timing_test:diff >= start_sec-5
PASSED IS_end_timing_test
PASSED IS_reset_timing_test
Tests run 3
Tests passed 2
Tests failed 1
FAIL

======================================================================
FAIL: dcuunittest.dcu.metercomms.instantaneous_schedule.test.test_main
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.7/dist-packages/nose/case.py", line 197, in runTest
    self.test(*self.arg)
  File "/project/dcuunittest/dcu/metercomms/instantaneous_schedule/test.py", line 11, in test_main
    eq_(lib.cygh_main(), 0) #@UndefinedVariable
AssertionError: 1 != 0

----------------------------------------------------------------------
Ran 1 test in 17.540s

FAILED (failures=1)
../../../common.mak:80: recipe for target 'test' failed
make[2]: *** [test] Error 1
make[2]: Leaving directory '/project/dcuunittest/dcu/metercomms/instantaneous_schedule'
Makefile:15: recipe for target 'dcu/metercomms/instantaneous_schedule-test' failed
make[1]: Leaving directory '/project/dcuunittest'
make[1]: *** [dcu/metercomms/instantaneous_schedule-test] Error 2
Makefile:69: recipe for target 'unittest' failed
make: *** [unittest] Error 2

------------------------------------------------------------------------

hwicce build instability:

grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
--------------------- >> end captured logging << ---------------------

----------------------------------------------------------------------
Ran 6 tests in 8.068s

FAILED (failures=1)

Exception in thread Thread-9 (most likely raised during interpreter shutdown):
Traceback (most recent call last):
  File "/usr/lib/python2.7/threading.py", line 801, in __bootstrap_inner
  File "/project/dcuunittest/dcutestutils/network_sim.py", line 545, in run
  File "/usr/lib/python2.7/Queue.py", line 177, in get
  File "/usr/lib/python2.7/threading.py", line 355, in wait
<type 'exceptions.TypeError'>: 'NoneType' object is not callable
config/chip/python/time.c:42: error: cygh_py_abort called
Exception in thread DCU Main Thread (most likely raised during interpreter shutdown):
Traceback (most recent call last):
  File "/usr/lib/python2.7/threading.py", line 801, in __bootstrap_inner
  File "/project/dcuunittest/dcutestutils/dcu.py", line 291, in run
  File "/usr/local/lib/cygh/cyghlib/CyGHPyDebug/cygh/time.py", line 76, in clock
  File "/usr/local/lib/cygh/cyghlib/CyGHPyDebug/cygh/time.py", line 125, in _now
<type 'exceptions.AttributeError'>: 'NoneType' object has no attribute 'time'
Makefile:67: recipe for target 'dcuapptest/licensing_test/licensing_test.py-apptest' failed
make: *** [dcuapptest/licensing_test/licensing_test.py-apptest] Error 1







----------------------------------------------------------------------
Ran 2 tests in 26.357s

OK
make: *** [dcuapptest/config_tests/test_disable_datacol.py-apptest] Segmentation fault (core dumped)
Makefile:67: recipe for target 'dcuapptest/config_tests/test_disable_datacol.py-apptest' failed

-----------------------------------------------

From meter:

main
 CYLEC_process
  CYLEC_PROTO_process
   CYLEC_PROTO_receive_frame
    CYLEC_MSG_receive_frame


METER_COMMAND_protocol_process_task
 

protocol_0010_process_received_data

protocol_load_unsigned8

protocol_internal.h

protocol_integration.h
PR_READ
protocol_store_signed32_be
protocol_store_unsigned32_le
protocol_store_unsigned16_be
protocol_store_unsigned16_le
protocol_store_unsigned8

protocol_buffer_copy
protocol_buffer_cmp

METER_COMMAND_protocol_callback() supplies bytes to cmp.



------------------------------------------------------------

test_protocol.c: read_buffer_line() READ_BUFFER_SIZE



---------------------------------------------------------

chesney cable SWD:

SWDIO   -
SWDCLK  -
SWO     -
nRESET  -
GND     -
VTRef   -


JTAG pins:

TCK     - AD0
TDI     - AD1
TDO     - AD2
TMS     - AD3
TRST    - AC0 ?
SRST    - AC1 ?



---------------------------------------------------------

bellatrix port:


make PROJECT_BASE=.. CYLEC_METER_PROTOCOL_BASE=../Dependencies/cylec_meter_protocol TOOLCHAIN_BASE=/usr/bin TOOLS=HostGCC clean all


bug:
if cygh_uart_initialise() fails, then CYLEC_PROTO_init short circuits initialisation of some data
and consequently it looks as if a message has falsely been received and the length of the non-existent
message is used in a memcpy, crashing hard.

-------------------------------------------------


b protocol_0010.c:2027 if _step==12




./test_protocol_dcuv2_linux
  readings/0010/1004/LSS_med.txt.rep_length = 88
.rep_length = 44
.rep_length = 44
.rep_length = 44
.rep_length = 44
.rep_length = 44
.rep_length = 44
.rep_length = 25
.rep_length = 65
.rep_length = 25
.rep_length = 65
.rep_length = 17
.rep_length = 9360
.pass


O.rep_length = 44
.rep_length = 44
.rep_length = 44
.rep_length = 44
.rep_length = 44
.rep_length = 44
.rep_length = 25
.rep_length = 65
.rep_length = 25
.rep_length = 65
.rep_length = 17
.rep_length = 8192

__assert_fail@plt





------------------------



(gdb) p *(FILE*)sourceFile
$3 = {
  _p = 0xbaef "7ea8894103b4f32e00270505000000000500000000050000005605000000c4020c090c07dd0c13ff0c0f19ff014a0011440500005d640500005d640500005d6405000009c30500000000050000000005000000560500000000050000000005000000c702"..., _r = 881, _w = 0, 
  _flags = 3204, _file = 7, _bf = {
    _base = 0xba60 "0000056050000000005000000c0020c090c07dd0c13ff0c0e16ff014a00113b0500005d640500005d640500005d64050000000005000000000500b2c37e\n7ea00703415144817e\n7ea8894103b4f32e00270505000000000500000000050000005605000"..., _size = 1024}, 
  _lbfsize = 0, _cookie = 0xb5c0, _read = 0x800013a <__sread$ind>, 
  _write = 0x8000140 <__swrite$ind>, _seek = 0x8000146 <__sseek$ind>, 
  _close = 0x800014c <__sclose$ind>, _ub = {_base = 0x0, _size = 0}, _up = 0x0, 
  _ur = 0, _ubuf = "\000\000", _nbuf = "", _lb = {_base = 0x0, _size = 0}, 
  _blksize = 1024, _offset = -32768, _data = 0x0, _lock = 0}
(gdb) 



/build/bakery/toolchain-gnu-ecog1-trunk-111113-085438/linux/cyan-dists/gnu/newlib/libgloss/ecog1x/lseek.c:45

off_t                                                                                     
_DEFUN (_lseek, (fd,  offset, whence),                                                    
       int fd _AND                                                                        
       off_t offset _AND                                                                  
       int whence)                                                                        
{                                                                                         
  int res_lo, res_hi;                                                                     
  int buffer[6] = {fd, (int)(offset >> 16), (int)offset, (int)whence, (int)&res_hi, (int)&
                                                                                          
  int r;                                                                                  
  off_t res;                                                                              
  asm volatile ("simtrap # %0 %1 %2" :                                                    
                "=&Ral" (r) :                                                             
                "0" (SYSCALL_lseek), "Rah" (buffer) :                                     
                "memory");                                                                
                                                                                          
  res = ((long)res_hi & 0xffff) << 16 | ((long)res_lo & 0xffff);                          
  if (r < 0)                                                                              
    {                                                                                     
      errno = -r;                                                                         
      res = -1;                                                                           
    }                                                                                     
                                                                                          
  return (res);                                                                           
}                                                                                         
                                                                                          

The above code pieces the result back togther in the wrong form, so for example passing offset==141000 (0x226c8) should return this same value.
Instead this returns 0x26c80000 i.e. it gets res_lo and res_hi the wrong way around and res_hi gets zeroed, possibly using an incorrect register for res_lo.






Only need to walk back to beginning of line:

do
{
    fseek(sourceFile, -1, SEEK_CUR)
    c   = fgetc(sourceFile);

} while(c != '\n');



but:

METER_COMMAND_protocol_callback() needs 'index' from start of line.
rewind to beginning, then read 'index' bytes forward:

for(uint32_t i=0; i<index; i++)
{
    fgetc(sourceFile);
}





----------------------------------------------


ssh://stevetickle@gerrit.se.cyco.io:29418/ipa_prod

scp to:
prod@172.16.32.133:~/ipa_prod



---------------------------------------------


UGVCL gap analysis:

- Tariff server/agent.
- Large data streaming (COAP-blockwise), server/agent.
- Retrieving data from meter rather than relying on scheduled profile read.
- Change from OBIS->generic labels (If de-DLMS-ifying the API) server/agent.
- Normalisation of data types (If de-DLMS-ifying the API).
- Schema definitions (If de-DLMS-ifying the API) server/agent.
- Time sync mechanism. (+-10sec sync, etc) server/agent. Use Blue-book style?
- configuration of meter (definition) This is a significant amount of work if we are to abstract away the DLMS details for calendars/ToU tables/etc.
- different calendar support Gregorian,  season profile, week profile and day profile support
- configuration of meter implementation server/agent. (See COSEM billing model).
- tamper work on supported agents, driver work.
- Async API server changes (request ID & response mechanism?) server only.
- batch mechanism from API? are groups sufficient?
- alarm read == profile read. Alarm reset mechanism by sevrer when read?? server/agent work, mechanism does not exist yet.
- accounting model for configuration, e.g. emergency credit with thresholds and accounts?
- How much of DataNotification is supported. Graeme says agenet has support for push of tamper. extend to be generic? it assumes a single type of message being pushed.
- Are we still using prefixes I/L/P?? why??
- firmware upgrade, file distribution.
- max demand reset.
- do we clear/reset buffers after capture and push or do we push deduplication duties to user of API?


config:
- demand integration period (how many periods?, which registers?, reset? last-period value?)
- push setup?
- profile capture periods.
- single action schedule for billing dates.
- activity calendar for time zones
- real time clock, date and time.
- script table (probably not needed, due to it being full of pseudo-OBISs).
- 

Events can capture any of the following (configured by utility):
- Date and time of event 0 0 1 0 0 255 8 (Clock)
- Event code 0 0 96 11 0 255 1 (Data)
- Current, IR 1 0 31 7 0 255 3 (Register)
- Current, IY 1 0 51 7 0 255 3 (Register)
- Current, IB 1 0 71 7 0 255 3 (Register)
- Voltage, VRN (3 Φ/4W) 1 0 32 7 0 255 3 (Register)
- Voltage, VYN (3 Φ/4W) 1 0 52 7 0 255 3 (Register)
- Voltage, VBN (3 Φ/4W) 1 0 72 7 0 255 3 (Register)
- Voltage, VRY (3 Φ/3W) 1 0 32 7 0 255 3 (Register)
- Voltage, VYB (3 Φ/3W) 1 0 52 7 0 255 3 (Register)
- Power factor, R-Phase 1 0 33 7 0 255 3 (Register)
- Power factor, Y-Phase 1 0 53 7 0 255 3 (Register)
- Power factor, B-Phase 1 0 73 7 0 255 3 (Register)
- Cumulative energy, kWh 1 0 1 8 0 255 3 (Register)

From xls:
- RTC-Date and Time
- Demand integration period
- Profile capture period
- Single-action schedule for billing dates
- Activity calander for time zones
- Load limit(kw)
- Enable/disable load limit function
- Image transfer
- Metering mode
- Payment mode
- Last token recharge amount
- Last token recharge time
- Total amount at last recharge
- Current balance amount
- Current balance time
- LLS secret
- HLS secret
- Global key change
- Image activation single action schedule
- ESWF
- MD reset
- Apparent calculation- lag only / lag+lead
- LCD Display- Auto Parameters
- LCD Display- Push Parameters



log reading:
- supply events (voltage, current, power) (Profile generic) (not supported yet).
- billing (not supported yet).
- transaction events (RTC, demand integration period, profile capture period, singls action schedule for billing dates, activity calendar for time zones) (not supported yet).
- control events (not supported yet).
- non rollover events (not supported yet).
- other events (not supported yet).
- tamper alarms/reset? (not supported yet).



Phase 1:
- Low level API.
- Exposes details of meters.
- Since this is a low-level API and we expose details, do we also expose that meters don't implement (e.g IS on the mitsu?)
- Essentially an API that is at the level of DLMS/COSEM.
- data format is raw A-XDR data.
- Mixes domains, i.e. not strictly SM. NM is mixed in.
- Its what we have already, quick to implement.
- Specific to electricity.
- Synchronous.
- Pipe API.


Phase 2:
- High level API.
- Exposes SM concepts, but *not* meter individual details.
- Separates domains into Smart Metering, Comms Network Management, Supply Network Management.
- Generic enough for gas, elec, water, etc.
- Asynchronous.
- Non-pipe API.



----------------------------------


Push to gerrit:

https://gerrit.se.cyco.io/Documentation/user-upload.html

git push ssh://stevetickle@gerrit.se.cyco.io:29418/ipa_prod HEAD:refs/for/master



-----------------------------------------------------------



- Watchdog
- Storage
- Time
- Schedule
- Monitor
- Log
- FS
- CNDFS
- UFFS
- CtrlPort
- AlertBits
- BootLoader
- Configuration
- ConfiguratonBackEnd
- Security
- OSAL (OS Abstraction Layer)
- UI
- UID
- UART
- SPI 
- RTC

- Radio
- Radio CC1200/Simulator
- PowerDown
- PgmFLASH
- Panic
- MTD
- MTD/SPI
- Modem
- I2C
- RNG
- HiResTimer
- GPIO
- Ethernet
- DMA
- DigIO
- DeviceKeys
- CRC

- Data (Structures)
   - BinaryBuf
   - BinaryReader
   - BinaryWriter
   - BitVec
   - Encoder
   - FIFO
   - Heap
   - RingBuffer
   - PacketBuf
   - PktQ
   - StringList
   - StringPairList
   - Vector
- AsyncIO
- Management
   - activity
   - configuration
   - DataRate
   - Events
   - File
   - Fuzz
   - LogCOAP
   - Login
   - MOnitor
   - NetInfo
   - Ping
   - PreferredParent
   - ProdMode
   - Restart
   - Status
   - 

------------------------------------

dtls.c:122
uint8_t s_fifoBuf[1400];

Magic number... also suspiciously similar to the point where we hit problems. (Maybe should be IP_MAX_PAYLOAD)

also:
#define IP_MAX_PAYLOAD 1240

#define IP_LOWPAN_MTU 1280



Comment in IPSec.c:

"If there are two valid SAs, it is possible that the wrong one is     
picked. But this is a rare case and probably not worth handling. The 
gateway would need to send more packets than the limit which
triggered the new key, and all of those packets must be lost somehow.
Assuming that the limit is high enough, the keep alive mechanism on
the mesh should have deemed the link dead way before this scenario
can happen."


- Current Ping module is a CoAP-level ping, going to Node only. We need an SM-level ping that is directed at the meter (i.e. wraps up a read of RTC).
- UFFS: intended for NAND, not NOR... do the IPAx boards have NAND??
- no calculations about wear-rate on the FLASH has been performed.


-------------------------------------------------------------------------------------

Genus test rig:

- Black hole GW.
- Need to be able to get power fail notifications transferred from node to gw in some recognisable and actionable format.
- Need to be able to get tamper alert notifications transferred from node to gw in some recognisable and actionable format.
- The Node will be expecting to be talking to a Genus meter in order to perform TX/RX on UART pins, do we monitor or simulate a meter?
- Need to be able to trigger and deactivate a (all?) tamper mechanism(s) and see correct notifications.
- Need to be able to put Node into 'test' mode where it writes the signal strength to the meter at 5Hz.
- Visibility of Comms is not a good indicator of power.... could just be repreated resets or bad data. Do we need a proper 'quality' rather than 'presence of comms' signal?
- UART TX/RX ability of Node&Meter to successfully go thru the login mechanism SNRM/AARQ and read the time would be a good indicator of comms.


--------------------------------------------------------------

Omnimesh build

docker run -v `pwd`:'/project'   -it panmesh/buildenv_panmesh bash

but the code also now exists in buildenv_omnimesh repo.

now:
docker run -v `pwd`:'/project'   -it omnimesh/buildenv_omnimesh bash


Run ctrlporthub priot to agent:
./build/host-ctrlporthub/bin/ctrlporthub -controllerport 4000 -serial /dev/ttyUSB0 -loglevel debug
./build/host-genus-insecure/bin/agent  -eui64 00-00-00-00-00-00-00-00 -meter /dev/ttyUSB0 -initrtc -ctrlhub 127.0.0.1 -ctrlhubport 4000 -loglevel debug -param device.dlms.lls_password=1A2B3C4D,device.dlms.authentication_key=756776636c656b616b67313836616263,device.dlms.encryption_key=756776636c656b616b67313836616263



to run with ctrlporthub:
./build/host-ctrlporthub/bin/ctrlporthub -listen 4242 -controllerport 4000  -loglevel debug
./build/host-genus-insecure/bin/agent  -eui64 00-00-00-00-00-00-00-00 -meter /dev/ttyUSB0 -initrtc -ctrlhub 127.0.0.1 -ctrlhubport 4242 -loglevel debug -param device.dlms.lls_password=1A2B3C4D,device.dlms.authentication_key=756776636c656b616b67313836616263,device.dlms.encryption_key=756776636c656b616b67313836616263


to request a DLMS object:
 ./tools/c4-tools/coap_request.py --device KT026802  --device-op GET 7 0.0.99.98.6.255 3

----------------------------

Omnimesh server install

apt-get install npm gradle

Update node to latest stable version:

sudo npm cache clean -f
sudo npm install -g n
sudo n stable


./cibuild.sh 



--------------------------------

0.0.99.98.0.255/3
array 
{ 
    struct 
    { 
        int { 8 }, 
        octet-string { b'0000010000ff' }, 
        int { 2 }, 
        int { 0 } 
    }, 
    struct 
    { 
        int { 1 }, 
        octet-string { b'0000600b00ff' }, 
        int { 2 }, 
        int { 0 } 
    }, 
    struct 
    { 
        int { 3 }, 
        octet-string { b'01001f0700ff' }, 
        int { 2 }, 
        int { 0 } 
    }, 
    struct 
    { 
        int { 3 }, 
        octet-string { b'0100330700ff' }, 
        int { 2 }, 
        int { 0 } 
    }, 
    struct 
    { 
        int { 3 }, 
        octet-string { b'0100470700ff' }, 
        int { 2 }, 
        int { 0 } 
    }, 
    struct 
    { 
        int { 3 }, 
        octet-string { b'0100200700ff' }, 
        int { 2 }, 
        int { 0 } 
    }, 
    struct 
    { 
        int { 3 }, 
        octet-string { b'0100340700ff' }, 
        int { 2 }, 
        int { 0 } 
    }, 
    struct 
    { int { 3 }, octet-string { b'0100480700ff' }, int { 2 }, int { 0 } }, struct { int { 3 }, octet-string { b'0100210700ff' }, int { 2 }, int { 0 } }, struct { int { 3 }, octet-string { b'0100350700ff' }, int { 2 }, int { 0 } }, struct { int { 3 }, octet-string { b'0100490700ff' }, int { 2 }, int { 0 } }, struct { int { 3 }, octet-string { b'0100010800ff' }, int { 2 }, int { 0 } }, struct { int { 3 }, octet-string { b'0100020800ff' }, int { 2 }, int { 0 } }, struct { int { 1 }, octet-string { b'00005e5b00ff' }, int { 2 }, int { 0 } }, struct { int { 1 }, octet-string { b'0000600f00ff' }, int { 2 }, int { 0 } } }

0.0.99.98.0.255/2
array 
{ 
    struct 
    { 
         datetime-octet-string { 2017-06-20T15:06:01 dev 330 status: 0x0 } 
         int { 1 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 228.3000030517578 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         int { 1 }
         int { 1 }
    }
    struct 
    { 
         datetime-octet-string { 2017-06-20T15:06:01 dev 330 status: 0x0 }
         int { 3 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 228.3000030517578 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         int { 2 }
         int { 2 }
    }
    struct 
    { 
         datetime-octet-string { 2017-06-23T18:04:21 dev 330 status: 0x0 }
         int { 5 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 230.10000610351562 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         int { 4 }
         int { 3 }
    }
    struct
    { 
         datetime-octet-string { 2017-06-23T18:04:23 dev 330 status: 0x0 }
         int { 2 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 230.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         int { 4 }
         int { 4 }
    }
    struct 
    { 
         datetime-octet-string { 2018-01-30T16:54:28 dev 330 status: 0x0 }
         int { 1 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 248.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         int { 22 }
         int { 5 }
    }
    struct
    { 
         datetime-octet-string { 2018-01-30T16:54:31 dev 330 status: 0x0 }
         int { 6 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 248.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         int { 22 }
         int { 6 }
    }
}



-----------------------------------

Others event log:

array { 
	struct { datetime-octet-string { 2018-01-31T17:06:04 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 248.10000610351562 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 32 }, int { 55 } }, 
	struct { datetime-octet-string { 2018-01-31T17:35:53 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 247.8000030517578 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 32 }, int { 56 } }, 
	struct { datetime-octet-string { 2018-01-31T17:36:03 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 248.1999969482422 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 33 }, int { 57 } }, 
	struct { datetime-octet-string { 2018-01-31T17:46:17 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 247.6999969482422 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 33 }, int { 58 } }, 
	struct { datetime-octet-string { 2018-01-31T17:48:26 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 247.60000610351562 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 34 }, int { 59 } }, 
	struct { datetime-octet-string { 2018-01-31T18:22:46 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 247.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 34 }, int { 60 } }, 
	struct { datetime-octet-string { 2018-01-31T18:23:30 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 246.5 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 35 }, int { 61 } }, 
	struct { datetime-octet-string { 2018-01-31T18:27:01 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 245.89999389648438 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 35 }, int { 62 } }, 
	struct { datetime-octet-string { 2018-01-31T18:27:23 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 245.89999389648438 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 36 }, int { 63 } }, 
	struct { datetime-octet-string { 2018-01-31T18:28:20 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 247.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 36 }, int { 64 } }, 
	struct { datetime-octet-string { 2018-01-31T19:16:43 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 247.39999389648438 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 37 }, int { 65 } }, 
	struct { datetime-octet-string { 2018-01-31T19:21:54 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 247.89999389648438 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 37 }, int { 66 } }, 
	struct { datetime-octet-string { 2018-01-31T19:23:29 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 248.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 38 }, int { 67 } }, 
	struct { datetime-octet-string { 2018-01-31T19:36:33 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 247.39999389648438 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 38 }, int { 68 } }, 
	struct { datetime-octet-string { 2018-01-31T19:37:00 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 247.60000610351562 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 39 }, int { 69 } }, 
	struct { datetime-octet-string { 2018-01-31T20:33:23 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 247.39999389648438 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 39 }, int { 70 } }, 
	struct { datetime-octet-string { 2018-01-31T20:38:23 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 247.10000610351562 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 40 }, int { 71 } }, 
	struct { datetime-octet-string { 2018-02-01T03:28:59 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 251.8000030517578 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 40 }, int { 72 } }, 
	struct { datetime-octet-string { 2018-02-01T03:52:12 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 252.6999969482422 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 41 }, int { 73 } }, 
	struct { datetime-octet-string { 2018-02-01T11:02:33 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 248.3000030517578 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 41 }, int { 74 } }, 
	struct { datetime-octet-string { 2018-02-01T11:03:10 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 248.39999389648438 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 42 }, int { 75 } }, 
	struct { datetime-octet-string { 2018-02-01T11:04:08 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 248.3000030517578 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 42 }, int { 76 } }, 
	struct { datetime-octet-string { 2018-02-01T11:04:48 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 248.60000610351562 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 43 }, int { 77 } }, 
	struct { datetime-octet-string { 2018-02-01T11:05:00 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 248.5 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 43 }, int { 78 } }, 
	struct { datetime-octet-string { 2018-02-01T11:05:22 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 248.5 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 44 }, int { 79 } }, 
	struct { datetime-octet-string { 2018-02-01T16:10:04 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 246.60000610351562 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 44 }, int { 80 } }, 
	struct { datetime-octet-string { 2018-02-01T16:10:19 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 246.6999969482422 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 45 }, int { 81 } }, 
	struct { datetime-octet-string { 2018-02-01T16:17:14 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 246.60000610351562 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 45 }, int { 82 } }, 
	struct { datetime-octet-string { 2018-02-01T16:17:33 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 246.60000610351562 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 46 }, int { 83 } }, 
	struct { datetime-octet-string { 2018-02-01T16:18:31 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 246.3000030517578 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 46 }, int { 84 } }, 
	struct { datetime-octet-string { 2018-02-01T16:19:33 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 246.6999969482422 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 47 }, int { 85 } }, 
	struct { datetime-octet-string { 2018-02-01T16:22:11 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 246.5 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 47 }, int { 86 } }, 
	struct { datetime-octet-string { 2018-02-01T16:22:40 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 246.39999389648438 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 48 }, int { 87 } }, 
	struct { datetime-octet-string { 2018-02-01T16:27:12 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 246.39999389648438 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 48 }, int { 88 } }, 
	struct { datetime-octet-string { 2018-02-01T16:30:38 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 246.1999969482422 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 49 }, int { 89 } }, 
	struct { datetime-octet-string { 2018-02-01T16:31:49 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 246.39999389648438 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 49 }, int { 90 } }, 
	struct { datetime-octet-string { 2018-02-02T04:27:14 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 254.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 50 }, int { 91 } }, 
	struct { datetime-octet-string { 2018-02-02T04:28:28 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 253.3000030517578 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 50 }, int { 92 } }, 
	struct { datetime-octet-string { 2018-02-02T04:38:34 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 249.3000030517578 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 51 }, int { 93 } }, 
	struct { datetime-octet-string { 2018-02-02T17:27:03 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 247.6999969482422 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 51 }, int { 94 } } }



----------------------------------------

Standalone:
./build/host-genus-insecure/bin/agent  -eui64 00-00-00-00-00-00-00-00 -meter /dev/ttyUSB0 -initrtc -ctrlhub 127.0.0.1 -ctrlhubport 4242 -loglevel debug -param device.dlms.lls_password=1A2B3C4D,device.dlms.authentication_key=756776636c656b616b67313836616263,device.dlms.encryption_key=756776636c656b616b67313836616263

Connected to server:
./build/host-genus-insecure/bin/agent  -eui64 00-00-00-00-00-00-00-00 -meter /dev/ttyUSB0 -initrtc -ctrlhub 127.0.0.1 -ctrlhubport 4242 -loglevel debug -param device.dlms.lls_password=1A2B3C4D,device.dlms.authentication_key=756776636c656b616b67313836616263,device.dlms.encryption_key=756776636c656b616b67313836616263


----------------------------------------

Possible memory allocation issue:

--- a/src/device/communication/dlms/dlms.c
+++ b/src/device/communication/dlms/dlms.c
@@ -1325,7 +1325,7 @@ bool dlmsParseListOfProfileObjects(const uint8_t* pkt, size_t pktLen, MeterProfi
         profile->objects = MALLOCZ(numOfElements * sizeof(ProfileObject));
     } else {
         profile->objects = NULL;
-        return true;
+        return false;       // malloc failure, we should be PANICing here, we should not be in this situation in normal circumstances.
     }


-------------------------------------------

make pypb2 host-genus-insecure host-ctrlporthub




------------------------------------------------


//
// - Send time request to meter
// - Extract meter time from response
//
DISCOVERY_PROFILE_STEP_0,

//
// - Request capture objects (attr 3) from profile-generic objects.
// - Populate profile->objects[i].instantObject from response data for all objects in profile.
//
DISCOVERY_PROFILE_STEP_1,

//
// - Perform a selective-access read request for the profile.
// - Populate profile->objects[i].valueOffset/Len/Type from generic-profile buffer data.
//
DISCOVERY_PROFILE_STEP_2,

//
// - Request the capture-period from the profile-generic object.
// - Populates profile->capturePeriod from the value in the response.
//
DISCOVERY_PROFILE_STEP_3,

//
// - Send request for capture-objects of the profile-generic object. 
// - populates profile->objects[index].scalerIndex from the capture-objects response data
// for those objects where scalers are supported.
//
DISCOVERY_PROFILE_STEP_4,

//
// - Request the profile-generic buffer data.
// - Populates profile->objects[i].scalerUnit from profile-generic buffer response data.
//
DISCOVERY_PROFILE_STEP_5,

//
// For all objects in profile:
// - request object buffer data.
// - parse response to populate ic/scaler info.
//
DISCOVERY_PROFILE_STEP_6,



- Reading the buffer data from an event-profile-generic object produces a nested-PDU... very odd
and it fails to parse.
- dlmsParseProfileScalerUnit() seems to be trying to extract scaler data from the buffer attribute
data from a profile-generic. This contains only value data, not scaler.


------------------------------------------------------------

nested message:

7ea0190341d86ef5e6e600c001810007
0000636200ff020091797e

7ea9094103bc9184e6e700c402810000
0000010082019c0106020f090c07e106
14ff0f0601ff014a0012000117000000
00170000000017000000001700000000
17000000001743644ccd170000000017
00000000170000000017000000001700
0000001200010600000001020f090c07
e10614ff0f0601ff014a001200031700
00000017000000001700000000170000
000017000000001743644ccd17000000
00170000000017000000001700000000
17000000001200020600000002020f09
0c07e10617ff120415ff014a00120005
17000000001700000000170000000017
4366199a170000000017000000001700
00000017000000001700000000170000
00001700000000123b427e

7ea0070341f14e247e

7ea0b44103bef41c0004060000000302
0f090c07e10617ff120417ff014a0012
00021700000000170000000017000000
00174366000017000000001700000000
17000000001700000000170000000017
00000000170000000012000406000000
04020f090c07e2011eff10361cff014a
00120001170000000017000000001700
00000017000000001700000000174378
00001700000000170000000017000000
00170000000017000000001200160600
00000514ee7e


7ea01303411adecce6e600c002810000
0001737f7e

7ea06a4103d0b6c0e6e700c402810100
00000200820052020f090c07e2011eff
10361fff014a00120006170000000017
00000000170000000017000000001700
00000017437800001700000000170000
00001700000000170000000017000000
001200160600000006ede97e








7ea9094103bc9184e6e700c4028100000000010082019c0106020f090c07e10614ff0f0601ff014a00120001170000000017000000001700000000170000000017000000001743644ccd170000000017000000001700000000170000000017000000001200010600000001020f090c07e10614ff0f0601ff014a00120003170000000017000000001700000000170000000017000000001743644ccd170000000017000000001700000000170000000017000000001200020600000002020f090c07e10617ff120415ff014a00120005170000000017000000001700000000174366199a1700000000170000000017000000001700000000170000000017000000001700000000123b427e

----------------------------------------



DataProfileSample* profileSampleCreate(const uint8_t* pkt, uint32_t pktLen)


----------------------------------------------


Steve Tickle [11:38 AM]
ctrlporthub -controllerport 4000 -serial /dev/ttyUSB0 -loglevel debug

./rpc_prodtest.py --setparam server.ip -v fd00::1
./rpc_prodtest.py --setparam prod.lowpan.eui64 -v 00-1B-C5-0C-60-00-7D-63
./rpc_prodtest.py --loadkey -s client-key -f ../00-1B-C5-0C-60-00-7D-63/node.key.der
./rpc_prodtest.py --loadkey -s client-cert -f ../00-1B-C5-0C-60-00-7D-63/node.crt.der
./rpc_prodtest.py --loadkey -s root-cert -f ../00-1B-C5-0C-60-00-7D-63/ca.crt.der
./rpc_prodtest.py --loadkey -s mac-key -f ../00-1B-C5-0C-60-00-7D-63/mac_key
./rpc_prodtest.py –finalize



-------------------------------------------------------------------

docker run -v /Data/Projects/terminalSwedish:/project -it  omnimesh/buildenv_omnimesh bash
make pypb2 host-genus-insecure host-ctrlporthub ipa1-bl-insecure
./build/host-ctrlporthub/bin/ctrlporthub -controllerport 4000 -listen 4242 -loglevel debug
./build/host-genus-insecure/bin/agent  -eui64 00-00-00-00-00-00-00-00 -meter /dev/ttyUSB0 -initrtc -ctrlhub 127.0.0.1 -ctrlhubport 4242 -loglevel debug -param device.dlms.lls_password=1A2B3C4D,device.dlms.authentication_key=756776636c656b616b67313836616263,device.dlms.encryption_key=756776636c656b616b67313836616263,device.dlms.encryption_key=756776636c656b616b67313836616263



----------------------------------------------------------

install npm (not from repo).
apt-get install gradle openjdk-8-jdk-headless mysql-server
git clone omnimesh
git submodule update for 4pp and interfaces repos
./cibuild.sh

mkdir /opt/connode
mkdir /opt/sma
cp server.tar.gz /opt/connode
cp server-ws.tar.gz /opt/connode
cp SmartMetering.tar.gz /opt/sma

tar zxvf all the above in place.

mysql -p -uroot -e "create user 'meshnet'@'localhost' identified by 'meshnet';"
mysql -p -uroot -e "create database sma;grant all on sma.* to 'meshnet'@'localhost';flush privileges;"
mysql -p -umeshnet -pmeshnet sma < /opt/sma/db/mysql-ddl.sql

mysql -p -uroot -e "create database smc;grant all on smc.* to 'meshnet'@'localhost';flush privileges;"
mysql -p -umeshnet -pmeshnet smc < /usr/local/connode/db/mysql-ddl.sql

sudo systemctl enable /usr/local/connode/etc/c4server.service
sudo systemctl enable /opt/sma/config/sma.service
sudo systemctl start sma
sudo systemctl start c4server

http://<server address>:8882/

logs in /opt/sma/logs/sma.log
and:
/usr/local/connode/logs

agent side:
in ipa.mk
change CONFIG_UPLINK=y
CONFIG_GATEWAY=y
 change CONFIG_UPLINK_TUN6 to CONFIG_UPLINK_LINUX_TUN

./build/host-genus-insecure/bin/agent  -eui64 00-00-00-00-00-00-00-00 -meter /dev/ttyUSB0 -initrtc -ctrlhub 127.0.0.1 -ctrlhubport 4242 -loglevel debug -param device.dlms.lls_password=1A2B3C4D,device.dlms.authentication_key=756776636c656b616b67313836616263,device.dlms.encryption_key=756776636c656b616b67313836616263,device.dlms.encryption_key=756776636c656b616b67313836616263,server.ip=::1


get root.crt,root.key,server.crt and cerver.key from:
https://confluence.se.cyco.io/display/ENG/How+to+launch+agent+using+meshsim.pl?focusedCommentId=49579179#


(https://confluence.se.cyco.io/display/ENG/Panmesh+Operations+Manual+-+NMS+Installation)


Generate server certs and keys:

#!/bin/bash
openssl req \
    -new \
    -nodes \
    -out server.csr \
    -newkey ec:tools/c4-tools/cert/ec/root.crt \
    -keyout server.key \
    -sha256 \
    -outform DER \
    -subj "/CN=C4 Server"

openssl x509 \
    -req \
    -in server.csr \
    -CA tools/c4-tools/cert/ec/root.crt \
    -CAkey tools/c4-tools/cert/ec/root.key \
    -set_serial 1 \
    -out server.crt \
    -sha256 \
    -days 365


on server go to server->pki, find "Server Security Pair: is ABSENT Add". click "Add".

Server security pair generation:
openssl genrsa -aes128 -passout pass:'1234' -out key.priv 2048
openssl rsa -aes128 -in key.priv -passin pass:'1234' -pubout > key.pub


on server, got to server->pki->create server DTLS




---------------------------------------------

Building of the omnimesh "buildenv":

git clone git@gitlab.cyco.io:SteveTickle/buildenv_omnimesh.git
cd buildenv_omnimesh
./build.sh


Building of Omnimesh server:

git clone ssh://stevetickle@gerrit.se.cyco.io:29418/omnimesh
cd omnimesh
git submodule init
git submodule update
docker run -v $PWD:/project -it  omnimesh/buildenv_omnimesh:latest ./cibuild.sh


Building of the Ommimesh server container:

cd buildenv_omnimesh
./build_omnimesh_server.sh ../omnimesh


Running of the Omnimesh server container:

./run_omnimesh_server 


Now go to:
http://172.17.0.2/nms/dashboard

To get a shell on the running container:
docker exec -i -t dbe4d35ba242 bash




--------------------------------

service mysql stop
mkdir -p /var/run/mysqld
chown mysql /var/run/mysqld
mysqld_safe --skip-grant-tables --skip-syslog &
use mysql;
flush privileges;
ALTER USER 'root'@'localhost' IDENTIFIED BY '1234';

service mysql start

---------------------------------------


./build/host-genus-insecure/bin/agent  -eui64 00-00-00-00-00-00-00-01 -meter /dev/ttyUSB0 -initrtc -ctrlhub 127.0.0.1 -ctrlhubport 4242 -loglevel debug -param device.dlms.lls_password=1A2B3C4D,device.dlms.authentication_key=756776636c656b616b67313836616263,device.dlms.encryption_key=756776636c656b616b67313836616263,device.dlms.encryption_key=756776636c656b616b67313836616263,server.ip=fe80::42:25ff:fe6f:df4c

coap_request.py --ctrlporthub localhost:4000 --load-key client-key node.key.der
coap_request.py --ctrlporthub localhost:4000 --load-key client-cert node.crt.der
coap_request.py --ctrlporthub localhost:4000 --load-key root-cert ca.crt.der
coap_request.py --ctrlporthub localhost:4000 --load-key mac-key mac_key


Crypto options:
   -rootcert file                      DER root certificate for authenticating coap server
   -cert file                          DER agent certificate
   -key file                           DER agent private key
   -mackey file                        MAC Layer key file. One line per key, first is preferred
                                       <index> <hexstring of key>
                                       Binary MAC layer AES-128 key (deprecated)

    -gateway




--------------------------------------------------------------

Running host-agent thru tun6d to localhost

Make sure your local machine has an ipv6 address:
"ip -6 add add fd00::1 dev eth0"
...or better, get an IPv6 address handed out via the DHCP6 server. Make sure you *don't* use ::1 (i.e loopback) as
that will get swallowed by the agent and not transmitted to the server.


sudo TUN6D_SECRET=whatsfordinner /usr/bin/tun6d --loglevel debug 

./build/host-genus-insecure/bin/agent   -eui64 00-00-00-00-00-00-00-01  \
                                        -meter /dev/serial/by-id/usb-FTDI_FT232R_USB_UART_A6023SX7-if00-port0  \
                                        -initrtc  \
                                        -ctrlhub 127.0.0.1  \
                                        -ctrlhubport 4242  \
                                        -loglevel debug  \
                                        -param device.dlms.lls_password=1A2B3C4D  \
                                        -param device.dlms.authentication_key=756776636c656b616b67313836616263    \
                                        -param device.dlms.encryption_key=756776636c656b616b67313836616263    \
                                        -param device.dlms.encryption_key=756776636c656b616b67313836616263    \
                                        -param server.ip=fd00::1  \
                                        -param modem.tun6.ip=localhost \
                                        -param modem.tun6.secret=whatsfordinner   \
                                        -param modem.apn=4g.tele2.se  \
                                        -rootcert /Data/Temp/KeyTest/root.crt.der  \
                                        -cert /Data/Temp/KeyTest/node.crt.der  \
                                        -key /Data/Temp/KeyTest/node.key.der  \
                                        -mackey /Data/Temp/KeyTest/mac-keys.txt  \
                                        -gateway  \
                                        -statedir AgentState \
                                        -socket


-----------------------------------------------

(gdb) p msg
$1 = {has_deviceHash = true, deviceHash = {size = 16 '\020', bytes = ">\016u&BN\220R\341.\233#\303\304ů"}, has_deviceAlarmHash = false, deviceAlarmHash = {size = 0 '\000', bytes = '\000' <repeats 15 times>}, 
  has_globalProfileHash = true, globalProfileHash = {size = 16 '\020', bytes = "\354\305\071\363~V瀖\361N\274g\306\035\b"}}




NMS:
2018-03-02 11:22:16,992 TRACE [dtls-pool-4] [node=00-00-00-00-00-00-00-01] LocalCoapSession - ENTER receiveRequestMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, PUT /registration, CONFIRMABLE, 4803)
2018-03-02 11:22:16,992 TRACE [dtls-pool-4] [node=00-00-00-00-00-00-00-01] LocalCoapSession - ENTER handleConfirmableRequestMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, PUT /registration, CONFIRMABLE, 4803)
2018-03-02 11:22:16,995 TRACE [dtls-pool-4] [node=00-00-00-00-00-00-00-01] NodeRegistrationCoapResource - Node registration Node registration request attributes:nodeId:00-00-00-00-00-00-00-01, globalProfileHash: ecc539f37e56e78096f14ebc67c61d08, deviceHash: 3e0e7526424e9052e12e9b23c3c4c5af, nms address: http://127.0.0.1:8880/appserver/
2018-03-02 11:22:16,995 TRACE [dtls-pool-4] [node=00-00-00-00-00-00-00-01] LocalCoapSession - ENTER sendMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, ACKNOWLEDGEMENT, 4803)
2018-03-02 11:22:16,995 TRACE [dtls-pool-4] [node=00-00-00-00-00-00-00-01] LocalCoapSession - EXIT handleConfirmableRequestMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, PUT /registration, CONFIRMABLE, 4803)
2018-03-02 11:22:16,995 TRACE [dtls-pool-4] [node=00-00-00-00-00-00-00-01] LocalCoapSession - EXIT receiveRequestMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, PUT /registration, CONFIRMABLE, 4803)
2018-03-02 11:22:16,995 TRACE [dtls] DTLSConnection - DTLS packet 548d1e2 added to queue, address=/fd51:3c22:ee1f:0:200:0:0:1:5684, sessionId=SessionId(c54b440a1918032ba40177e174a4359871702d75c62a01557a1ea69f32568366), migrating=false

SMA:
2018-03-02 11:22:17.012 [http-nio-8880-exec-6] TRACE c.c.sma.rest.NmsController - Node registration request received with parameters for nodeId: 00-00-00-00-00-00-00-01
2018-03-02 11:22:17.017 [http-nio-8880-exec-6] DEBUG c.c.s.s.m.NodeRegistrationHandler - Node with node Id 00-00-00-00-00-00-00-01 already exists in DB
2018-03-02 11:22:17.049 [devDiscResp-00-00-00-00-00-00-00-01] WARN c.c.s.h.tasks.DeviceDiscoveryTask - Device discovery on node 00-00-00-00-00-00-00-01 failed. Status code received is 406. Message recevied is 


-------------------------


 protoc: stdout: . stderr: /project/common/interface/src/main/proto: warning: directory does not exist.
  device_dataprofile.proto:10:5: "DATA_PROFILE" is already defined in file "device_mgmt.proto".
  device_dataprofile.proto:10:5: Note that enum values use C++ scoping rules, meaning that enum values are siblings of their type, not children of it.  Therefore, "DATA_PROFILE" must be unique within the global scope, not just within "ProfileFeature".

---------------------------------------

include directories in Makefile:

include_dirs       += src/device/drivers/dlms


-------------------------------


2018-03-05 16:45:04.653 #1   0000000000000001 <log> 0:06:06.898 [debug] [ tran_switch] {     coap}: UDP send from port 5684 to [fd00::1]:5684 of size 61: dtls session: 1
2018-03-05 16:45:04.653 #1   0000000000000001 <log> 0:06:06.899 [debug] [   coap/task] {     coap}: CoAP sessions: 0 in, 1 out
2018-03-05 16:45:04.654 #1   0000000000000001 <log> 0:06:06.899 [debug] [          ip] {     dtls}: Send IP on uplink, 98 B, type 17, ttl 32: fd51:3c22:ee1f:0:200::1 -> fd00::1
2018-03-05 16:45:04.654 #1   0000000000000001 <log> 0:06:06.899 [debug] [   ipv4/core] {uplink_tx}: eth_up: tx 127.0.0.1 -> 127.0.0.1 146B proto=17
2018-03-05 16:45:04.701 #1   0000000000000001 <log> 0:06:06.939 [debug] [   ipv4/core] {socketUplink}: eth_up: rx 127.0.0.1 -> 127.0.0.1 128B proto=17
2018-03-05 16:45:04.701 #1   0000000000000001 <log> 0:06:06.939 [debug] [    ipv4/udp] {socketUplink}: Got UDP 127.0.0.1:8050 -> 127.0.0.1:50412
2018-03-05 16:45:04.701 #1   0000000000000001 <log> 0:06:06.939 [debug] [ uplink-tun6] {socketUplink}: Got IPv6 packet on eth_up from 127.0.0.1:8050 120B
2018-03-05 16:45:04.701 #1   0000000000000001 <log> 0:06:06.939 [debug] [ tran_switch] {socketUplink}: UDP received from [fd00::1]:5684 to [fd51:3c22:ee1f:0:200::1]:5684 of size 72: dtls session: 1
2018-03-05 16:45:04.701 #1   0000000000000001 <log> 0:06:06.940 [debug] [ tran_switch] {     dtls}: DTLS session 1: payload from [fd00::1]:5684 to [fd51:3c22:ee1f:0:200::1]:5684 of size 43
2018-03-05 16:45:04.701 #1   0000000000000001 <log> 0:06:06.946 [debug] [   coap/task] {     coap}: session 10 (0be40f92): Received ack
2018-03-05 16:45:04.701 #1   0000000000000001 <log> 0:06:06.947 [ info] [   coap/task] {     coap}: session 10 (0be40f92): Response from [fd00::1]:5684: 5.03 (T=ACK, MID=0x5164): 32 B: No application server configured
2018-03-05 16:45:04.701 #1   0000000000000001 <log> 0:06:06.947 [ WARN] [meter/device] {     coap}: Unexpected response 163 from server,reschedule sending node registration
2018-03-05 16:45:04.701 #1   0000000000000001 <log> 0:06:06.947 [debug] [   coap/task] {     coap}: session 10 (0be40f92): Removing outgoing because of response
2018-03-05 16:45:04.701 #1   0000000000000001 <log> 0:06:06.947 [debug] [   coap/task] {     coap}: CoAP sessions: 0 in, 0 out
2018-03-05 16:45:04.905 #1   0000000000000001 <log> 0:06:07.149 [debug] [  meter/dlms] {   device}: Setup AA using HLS without ciphering
2018-03-05 16:45:04.905 #1   0000000000000001 <log> 0:06:07.149 [debug] [        dlms] {   device}: Setup AA with HLS
2018-03-05 16:45:04.956 #1   0000000000000001 <log> 0:06:07.200 [debug] [        hdlc] {     hdlc}: Connect HDLC link
2018-03-05 16:45:04.962 #1   0000000000000001 <log> 0:06:07.206 [debug] [        hdlc] {     hdlc}: tx: (1/3): 7ea0200361931b9f8180140502010006
2018-03-05 16:45:04.962 #1   0000000000000001 <log> 0:06:07.206 [debug] [        hdlc] {     hdlc}: tx: (2/3): 02010007040000000108040000000169
2018-03-05 16:45:04.962 #1   0000000000000001 <log> 0:06:07.206 [debug] [        hdlc] {     hdlc}: tx: (3/3): 6d7e
2018-03-05 16:45:05.042 #1   0000000000000001 <log> 0:06:07.286 [debug] [        hdlc] {     hdlc}: rx: (1/3): 7ea020610373059e8180140502010006
2018-03-05 16:45:05.042 #1   0000000000000001 <log> 0:06:07.286 [debug] [        hdlc] {     hdlc}: rx: (2/3): 02010007040000000108040000000169
2018-03-05 16:45:05.042 #1   0000000000000001 <log> 0:06:07.286 [debug] [        hdlc] {     hdlc}: rx: (3/3): 6d7e
2018-03-05 16:45:05.047 #1   0000000000000001 <log> 0:06:07.292 [debug] [        hdlc] {     hdlc}: tx: (1/5): 7ea04c0361105827e6e600603ea10906
2018-03-05 16:45:05.048 #1   0000000000000001 <log> 0:06:07.292 [debug] [        hdlc] {     hdlc}: tx: (2/5): 07608574050801018a0207808b076085
2018-03-05 16:45:05.048 #1   0000000000000001 <log> 0:06:07.292 [debug] [        hdlc] {     hdlc}: tx: (3/5): 7405080202ac12801030654537456363
2018-03-05 16:45:05.048 #1   0000000000000001 <log> 0:06:07.292 [debug] [        hdlc] {     hdlc}: tx: (4/5): 633938356635344342be10040e010000
2018-03-05 16:45:05.048 #1   0000000000000001 <log> 0:06:07.292 [debug] [        hdlc] {     hdlc}: tx: (5/5): 00065f1f0400001f1ffffff8547e
2018-03-05 16:45:05.266 #1   0000000000000001 <log> 0:06:07.511 [debug] [        hdlc] {     hdlc}: rx: (1/6): 7ea0586103300751e6e700614aa10906
2018-03-05 16:45:05.267 #1   0000000000000001 <log> 0:06:07.511 [debug] [        hdlc] {     hdlc}: rx: (2/6): 0760857405080101a203020100a305a1
2018-03-05 16:45:05.267 #1   0000000000000001 <log> 0:06:07.511 [debug] [        hdlc] {     hdlc}: rx: (3/6): 0302010e880207808907608574050802
2018-03-05 16:45:05.267 #1   0000000000000001 <log> 0:06:07.511 [debug] [        hdlc] {     hdlc}: rx: (4/6): 02aa12801047656e7573190000000061
2018-03-05 16:45:05.267 #1   0000000000000001 <log> 0:06:07.512 [debug] [        hdlc] {     hdlc}: rx: (5/6): 001815c346be10040e0800065f1f0400
2018-03-05 16:45:05.267 #1   0000000000000001 <log> 0:06:07.512 [debug] [        hdlc] {     hdlc}: rx: (6/6): 00181d01000007bdf57e
2018-03-05 16:45:05.268 #1   0000000000000001 <log> 0:06:07.512 [debug] [        dlms] {     dlms}: extracted server max pdu size is 256
2018-03-05 16:45:05.268 #1   0000000000000001 <log> 0:06:07.512 [debug] [        dlms] {     dlms}: Action 0-0:40.0.0*255 ic 15 methodId 1 actionLen: 18 B
2018-03-05 16:45:05.324 #1   0000000000000001 <log> 0:06:07.568 [debug] [        hdlc] {     hdlc}: tx: (1/3): 7ea02b0361328debe6e600c30181000f
2018-03-05 16:45:05.324 #1   0000000000000001 <log> 0:06:07.568 [debug] [        hdlc] {     hdlc}: tx: (2/3): 0000280000ff010109105c89ea5f7433
2018-03-05 16:45:05.324 #1   0000000000000001 <log> 0:06:07.568 [debug] [        hdlc] {     hdlc}: tx: (3/3): a6ba0fbecc91ea38bf96ef6a7e
2018-03-05 16:45:05.410 #1   0000000000000001 <log> 0:06:07.654 [debug] [        hdlc] {     hdlc}: rx: (1/2): 7ea011610352c7fee6e700c701c1010c
2018-03-05 16:45:05.410 #1   0000000000000001 <log> 0:06:07.655 [debug] [        hdlc] {     hdlc}: rx: (2/2): 48677e
2018-03-05 16:45:05.411 #1   0000000000000001 <log> 0:06:07.655 [ WARN] [        dlms] {     dlms}: Action Response result: hw fault
2018-03-05 16:45:05.412 #1   0000000000000001 <log> 0:06:07.655 [ WARN] [        dlms] {     dlms}: processXDlmsApdu(5 B): failed
2018-03-05 16:45:05.412 #1   0000000000000001 <log> 0:06:07.655 [ WARN] [  meter/dlms] {   device}: Broken response: check failed
2018-03-05 16:45:05.412 #1   0000000000000001 <log> 0:06:07.655 [ WARN] [meter/device] {   device}: Error from USC 0000006: comm: broken rsp
2018-03-05 16:45:05.412 #1   0000000000000001 <log> 0:06:07.655 [debug] [meter/device] {   device}: Ignoring alarm over rate limit
2018-03-05 16:45:05.412 #1   0000000000000001 <log> 0:06:07.655 [debug] [  meter/dlms] {   device}: Setup AA failed. Trying again with ciphering enabled
2018-03-05 16:45:05.412 #1   0000000000000001 <log> 0:06:07.655 [debug] [  meter/dlms] {   device}: Setup AA using HLS with ciphering
2018-03-05 16:45:05.412 #1   0000000000000001 <log> 0:06:07.656 [debug] [        dlms] {   device}: Setup AA with HLS
2018-03-05 16:45:05.467 #1   0000000000000001 <log> 0:06:07.712 [debug] [        hdlc] {     hdlc}: tx: (1/6): 7ea0580361543592e6e600604aa10906
2018-03-05 16:45:05.468 #1   0000000000000001 <log> 0:06:07.712 [debug] [        hdlc] {     hdlc}: tx: (2/6): 0760857405080103a60a04084d4d4d00
2018-03-05 16:45:05.469 #1   0000000000000001 <log> 0:06:07.713 [debug] [        hdlc] {     hdlc}: tx: (3/6): 00bc614e8a0207808b07608574050802
2018-03-05 16:45:05.469 #1   0000000000000001 <log> 0:06:07.713 [debug] [        hdlc] {     hdlc}: tx: (4/6): 02ac1280103065453745636363393835
2018-03-05 16:45:05.469 #1   0000000000000001 <log> 0:06:07.714 [debug] [        hdlc] {     hdlc}: tx: (5/6): 6635344342be10040e01000000065f1f
2018-03-05 16:45:05.469 #1   0000000000000001 <log> 0:06:07.714 [debug] [        hdlc] {     hdlc}: tx: (6/6): 0400001f1fffffa64c7e
2018-03-05 16:45:05.713 #1   0000000000000001 <log> 0:06:07.958 [debug] [        hdlc] {     hdlc}: rx: (1/8): 7ea0776103748d68e6e7006169a10906
2018-03-05 16:45:05.713 #1   0000000000000001 <log> 0:06:07.959 [debug] [        hdlc] {     hdlc}: rx: (2/8): 0760857405080103a203020101a305a1
2018-03-05 16:45:05.713 #1   0000000000000001 <log> 0:06:07.959 [debug] [        hdlc] {     hdlc}: rx: (3/8): 0302010e880207808907608574050802
2018-03-05 16:45:05.714 #1   0000000000000001 <log> 0:06:07.959 [debug] [        hdlc] {     hdlc}: rx: (4/8): 02aa12801047656e7573190000000061
2018-03-05 16:45:05.714 #1   0000000000000001 <log> 0:06:07.959 [debug] [        hdlc] {     hdlc}: rx: (5/8): 001815c346a40a0408474f4500000000
2018-03-05 16:45:05.714 #1   0000000000000001 <log> 0:06:07.959 [debug] [        hdlc] {     hdlc}: rx: (6/8): 06be230421281f3000000025eadcddb4
2018-03-05 16:45:05.714 #1   0000000000000001 <log> 0:06:07.959 [debug] [        hdlc] {     hdlc}: rx: (7/8): ff961527c0673409564861718a069e59
2018-03-05 16:45:05.714 #1   0000000000000001 <log> 0:06:07.960 [debug] [        hdlc] {     hdlc}: rx: (8/8): 8f082d6fe414ff307e
2018-03-05 16:45:05.715 #1   0000000000000001 <log> 0:06:07.960 [ WARN] [        dlms] {     dlms}: COSEM AA is rejected: authentication required
2018-03-05 16:45:05.715 #1   0000000000000001 <log> 0:06:07.960 [ WARN] [        dlms] {     dlms}: processAcseApdu(107 B): failed
2018-03-05 16:45:05.715 #1   0000000000000001 <log> 0:06:07.960 [ WARN] [  meter/dlms] {   device}: Broken response: check failed
2018-03-05 16:45:05.715 #1   0000000000000001 <log> 0:06:07.960 [ WARN] [meter/device] {   device}: Error from USC 0000006: comm: broken rsp
2018-03-05 16:45:05.715 #1   0000000000000001 <log> 0:06:07.960 [debug] [meter/device] {   device}: Ignoring alarm over rate limit
2018-03-05 16:45:05.766 #1   0000000000000001 <log> 0:06:08.010 [debug] [        dlms] {   device}: Disconnect HDLC link
2018-03-05 16:45:05.771 #1   0000000000000001 <log> 0:06:08.015 [debug] [        hdlc] {     hdlc}: tx: (1/1): 7ea00703615365817e
2018-03-05 16:45:05.793 #1   0000000000000001 <log> 0:06:08.037 [debug] [        hdlc] {     hdlc}: rx: (1/1): 7ea00761037377467e
2018-03-05 16:45:05.794 #1   0000000000000001 <log> 0:06:08.037 [debug] [        hdlc] {     hdlc}: HDLC link disconnected
2018-03-05 16:45:09.282 #1   0000000000000001 <log> 0:06:11.526 [debug] [ uplink-tun6] { schedule}: Scheduling keepalive in 20s



------------------------------------------


0:56:33:255 6/3/2018 to 5:56:33:255 6/3/2018

# No data
[Tue Mar  6 01:26:33 2018] [14:10:08.836] 1520295993 51008836 dlms  device  Profile Block load: From time: 2018-03-06 00:56:33
[Tue Mar  6 01:26:33 2018] [14:10:08.846] 1520295993 51008846 dlms  device  Profile Block load: To time: 2018-03-06 05:56:33
[Tue Mar  6 01:26:33 2018] [14:10:08.846] 1520295993 51008846 dlms  device  Get 1-0:99.1.0*255 ic 7 attr 2 selective access
[Tue Mar  6 01:26:33 2018] [14:10:08.979] 1520295993 51008979 hdlc  hdlc    tx: (1/5): 7ea04c0341327b06e6e600c001810007
[Tue Mar  6 01:26:33 2018] [14:10:08.979] 1520295993 51008979 hdlc  hdlc    tx: (2/5): 0100630100ff0201 0102040204120008
[Tue Mar  6 01:26:33 2018] [14:10:08.980] 1520295993 51008980 hdlc  hdlc    tx: (3/5): 09060000010000ff0f02120000090c07e20306ff003821fffeb600090c07e20306ff053821fffeb6000100bff57e
[Tue Mar  6 01:26:33 2018] [14:10:09.015] 1520295993 51009015 hdlc  hdlc    rx: (1/2): 7ea01c4103527376e6e700c402810100
[Tue Mar  6 01:26:33 2018] [14:10:09.015] 1520295993 51009015 hdlc  hdlc    rx: (2/2): 00000100820004018200004e3d7e
# Has data
#                                                                                          // DIDN'T CAPTURE FIRST LINE
[Tue Mar  6 01:26:34 2018] [14:10:09.611] 1520295994 51009611 hdlc  hdlc    tx: (2/5): 0100630100ff0201 0102040204120008
[Tue Mar  6 01:26:34 2018] [14:10:09.612] 1520295994 51009612 hdlc  hdlc    tx: (3/5): 09060000010000ff0f02120000 090c 07e20306 00 052d00 00 014a 00 090c 07e20306 ff 053822 fffeb600 0100 91da7e


0100630100ff0201010204020412000809060000010000ff0f02120000090c07e2030600052d0000014a00090c07e20306ff053822fffeb600010091da7e



-------------------------------------

possible exploit:

use time sync format packets to intentionally drift the clock on the meter using the time sync mechanism.
Broadcast the packets


timeServiceRegisterEpochTimeCallback()
timeServiceRegisterTzCallback()
updateMeterTime()

------------------------------------------

decode protobuf hex in file t:

xxd -r -p < t | protoc --decode_raw 



------------------


mysql> set FOREIGN_KEY_CHECKS=0;




-------------------------------------------------

[Mon Mar 12 11:34:33 2018] [28:50:10.869] 1520850873 103810869 dlms device  Profile Block load: From time: 2018-03-12 11:04:33
[Mon Mar 12 11:34:33 2018] [28:50:10.879] 1520850873 103810879 dlms device  Profile Block load: To time: 2018-03-12 16:04:33
[Mon Mar 12 11:34:33 2018] [28:50:10.880] 1520850873 103810880 dlms device  Get 1-0:99.1.0*255 ic 7 attr 2 selective access
[Mon Mar 12 11:34:33 2018] [28:50:11.013] 1520850873 103811013 hdlc hdlc    tx: (1/5): 7ea04c0341327b06e6e600c001810007
[Mon Mar 12 11:34:33 2018] [28:50:11.013] 1520850873 103811013 hdlc hdlc    tx: (2/5): 0100630100ff02010102040204120008
[Mon Mar 12 11:34:33 2018] [28:50:11.014] 1520850873 103811014 hdlc hdlc    tx: (3/5): 09060000010000ff0f02120000090c07
[Mon Mar 12 11:34:33 2018] [28:50:11.014] 1520850873 103811014 hdlc hdlc    tx: (4/5): e2030cff0b0421ff014a00090c07e203
[Mon Mar 12 11:34:33 2018] [28:50:11.014] 1520850873 103811014 hdlc hdlc    tx: (5/5): 0cff100421ff014a000100fd6c7e
[Mon Mar 12 11:34:33 2018] [28:50:11.052] 1520850873 103811052 hdlc hdlc    rx: (1/2): 7ea01c4103527376e6e700c402810100
[Mon Mar 12 11:34:33 2018] [28:50:11.052] 1520850873 103811052 hdlc hdlc    rx: (2/2): 00000100820004018200004e3d7e



------------------------------------------

power cycle @ 21:11 (meter time)

SA read:

7ea04c0341dc0b08e6e600c001810007
0000636202ff02010102040204120008
09060000010000ff0f02120000090c07
e2030cff131128ff014a00090c07e203
0cff151128ff014a00010021027e
7ea01c4103fc073ae6e700c402810100
00000100820004018200004e3d7e


Full read:

7ea0190341dc4ab3e6e600c001810007
0000636202ff0200e7407e
7ea9094103fc95c6e6e700c402810100
000001008200f40182000a0203090c07
e10b06ff101300ff014a001200650600
0000010203090c07e10b06ff101700ff
014a0012006606000000020203090c07
e20217ff143500ff014a001200650600
0000030203090c07e20217ff143b00ff
014a0012006606000000040203090c07
e20217ff150200ff014a001200650600
0000050203090c07e20217ff150300ff
014a0012006606000000060203090c07
e2030cff123300ff014a001200650600
0000070203090c07e2030cff123400ff
014a0012006606000000080203090c07
e2030cff123900ff014a001200650600
0000090203090c07e2030cff123a00ff
014a001200660600f7867e


SA read:
7ea04c0341dc0b08e6e600c001810007
0000636202ff02010102040204120008
09060000010000ff0f02120000090c07
e2030cff142931ff014a00090c07e203
0cff162931ff014a000100628a7e
7ea01c4103fc073ae6e700c402810100
00000100820004018200004e3d7e





mysql -umeshnet -pmeshnet -N -B -e  "select HEX(registerValues) from sma.meter_sample where device_profile_id=2;" | xargs -I % sh -c "echo % | xxd -r -p | protoc --decode_raw " | grep "3: \".t" | cut -c4-100

import binascii
[binascii.hexlify(t[1:-1].decode('string_escape'))[4:] for t in open('t','rb').read().split()]


mysql -umeshnet -pmeshnet -N -B -e  "select HEX(registerValues) from sma.meter_sample where device_profile_id=2;" | xargs -I % sh -c "echo % | xxd -r -p | protoc --decode_raw " | grep "3: \".t" | cut -c4-100 | xargs -I + python -c "import binascii;print(binascii.hexlify(\"+\")[4:]) " | xargs -I @ python ~/Playground/DT_conv_cli.py @





------------------------------------------------------

7ea0190341dc4ab3e6e600c001810007
0000636202ff0200e7407e
 7ea9094103fc95c6e6e700c402810000
 00000100820184018200140203090c07
 e10b06ff101300ff014a001200650600
 0000010203090c07e10b06ff101700ff
 014a0012006606000000020203090c07
 e20217ff143500ff014a001200650600
 0000030203090c07e20217ff143b00ff
 014a0012006606000000040203090c07
 e20217ff150200ff014a001200650600
 0000050203090c07e20217ff150300ff
 014a0012006606000000060203090c07
 e2030cff123300ff014a001200650600
 0000070203090c07e2030cff123400ff
 014a0012006606000000080203090c07
 e2030cff123900ff014a001200650600
 0000090203090c07e2030cff123a00ff
 014a00120066060032a37e

7ea0070341f14e247e
 7ea09c4103fe7b3400000a0203090c07
 e2030cff161e00ff014a001200650600
 00000b0203090c07e2030cff161f00ff
 014a00120066060000000c0203090c07
 e2030cff162300ff014a001200650600
 00000d0203090c07e2030cff162400ff
 014a00120066060000000e0203090c07
 e2030cff162600ff014a001200650600
 00000f0203090c07e2030cff162700ff
 014a001200660600000010ddc17e
7ea01303411efa8ae6e600c002810000
0001737f7e
7ea0784103106dfce6e700c402810100
000002008200600203090c07e2030dff
0f2f00ff014a00120065060000001102
03090c07e2030dff0f3000ff014a0012
006606000000120203090c07e2030dff
100900ff014a00120065060000001302
03090c07e2030dff100a00ff014a0012
0066060000001473117e


<HDLC len="24" >
<TargetAddress Value="1" />
<SourceAddress Value="32" />
<!--I frame.-->
<FrameType Value="DC" />
<PDU>
<GetRequest>
  <GetRequestNormal>
    <InvokeIdAndPriority Value="129" />
    <AttributeDescriptor>
      <!--PROFILE_GENERIC-->
      <ClassId Value="7" />
      <!--0.0.99.98.2.255-->
      <InstanceId Value="0000636202FF" />
      <AttributeId Value="2" />
    </AttributeDescriptor>
  </GetRequestNormal>
</GetRequest>
</PDU>
</HDLC>
<HDLC len="264" >
<TargetAddress Value="32" />
<SourceAddress Value="1" />
<!--I frame.-->
<FrameType Value="FC" />
<NextFrame Value
</HDLC>
<HDLC len="9" >
<TargetAddress Value="1" />
<SourceAddress Value="32" />
<!--S frame.-->
<FrameType Value="F1" />
<Command Value="NextFrame" />
</HDLC>
<HDLC len="155" >
<TargetAddress Value="32" />
<SourceAddress Value="1" />
<!--I frame.-->
<FrameType Value="FE" />
<NextFrame Value="00000A0203090C07E2030CFF161E00FF014A00120065060000000B0203090C07E2030CFF161F00FF014A00120066060000000C0203090C07E2030CFF162300FF014A00120065060000000D0203090C07E2030CFF162400FF014A00120066060000000E0203090C07E2030CFF162600FF014A00120065060000000F0203090C07E2030CFF162700FF014A001200660600000010" />
</HDLC>
<HDLC len="18" >
<TargetAddress Value="1" />
<SourceAddress Value="32" />
<!--I frame.-->
<FrameType Value="1E" />
<PDU>
<GetRequest>
  <GetRequestForNextDataBlock>
    <InvokeIdAndPriority Value="129" />
    <BlockNumber Value="1" />
  </GetRequestForNextDataBlock>
</GetRequest>
</PDU>
</HDLC>
<HDLC len="119" >
<TargetAddress Value="32" />
<SourceAddress Value="1" />
<!--AARQ frame.-->
<FrameType Value="10" />
<PDU>
<GetResponse>
  <GetResponsewithDataBlock>
    <InvokeIdAndPriority Value="129" />
    <Result>
      <LastBlock Value="1" />
      <BlockNumber Value="2" />
      <Result>
        <RawData Value="0203090C07E2030DFF0F2F00FF014A0012006506000000110203090C07E2030DFF0F3000FF014A0012006606000000120203090C07E2030DFF100900FF014A0012006506000000130203090C07E2030DFF100A00FF014A001200660600000014" />
      </Result>
    </Result>
  </GetResponsewithDataBlock>
</GetResponse>
</PDU>
</HDLC>





C4 

02 81 00000000 01 00 82 01 84 
01 82 00 14 
    02 03 
     090C 07E10B06FF101300FF014A00 12 0065 06 00000001 
    0203
     090C 07E10B06FF101700FF014A00 12 0066 06 00000002
    0203 
     090C 07E20217FF143500FF014A00 12 0065 06 00000003 
    0203 
     090C 07E20217FF143B00FF014A00 12 0066 06 00000004 
    0203 
     090C 07E20217FF150200FF014A00 12 0065 06 00000005 
    0203 
     090C 07E20217FF150300FF014A00 12 0066 06 00000006 
    0203 
     090C 07E2030CFF123300FF014A00 12 0065 06 00000007 
    0203 
     090C 07E2030CFF123400FF014A00 12 0066 06 00000008 
    0203 
     090C 07E2030CFF123900FF014A00 12 0065 06 00000009 
    0203 
     090C 07E2030CFF123A00FF014A00 12 0066 06 0000000A 
    0203 
     090C 07E2030CFF161E00FF014A00 12 0065 06 0000000B 
    0203 
     090C 07E2030CFF161F00FF014A00 12 0066 06 0000000C 
    0203 
     090C 07E2030CFF162300FF014A00 12 0065 06 0000000D 
    0203 
     090C 07E2030CFF162400FF014A00 12 0066 06 0000000E 
    0203 
     090C 07E2030CFF162600FF014A00 12 0065 06 0000000F 
    0203 
     090C 07E2030CFF162700FF014A00 12 0066 06 00000010 
    0203 
     090C 07E2030DFF0F2F00FF014A00 12 0065 06 00000011 
    0203 
     090C 07E2030DFF0F3000FF014A00 12 0066 06 00000012 
    0203 
     090C 07E2030DFF100900FF014A00 12 0065 06 00000013 
    0203 
     090C 07E2030DFF100A00FF014A00 12 0066 06 00000014


   <Data>
     <Array length="20" offset="4">
     <ArrayElement index="0" offset="4">
       <Structure length="3" offset="5">
       <Field index="0" offset="6">
         <OctetString offset="7" datetime="16:19:0:255 6/11/2017">07e10b06ff101300ff014a00</OctetString>
       </Field>
       <Field index="1" offset="20">
         <Uint16 offset="21">0065</Uint16>
       </Field>
       <Field index="2" offset="23">
         <Uint32 offset="24">00000001</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="1" offset="28">
       <Structure length="3" offset="29">
       <Field index="0" offset="30">
         <OctetString offset="31" datetime="16:23:0:255 6/11/2017">07e10b06ff101700ff014a00</OctetString>
       </Field>
       <Field index="1" offset="44">
         <Uint16 offset="45">0066</Uint16>
       </Field>
       <Field index="2" offset="47">
         <Uint32 offset="48">00000002</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="2" offset="52">
       <Structure length="3" offset="53">
       <Field index="0" offset="54">
         <OctetString offset="55" datetime="20:53:0:255 23/2/2018">07e20217ff143500ff014a00</OctetString>
       </Field>
       <Field index="1" offset="68">
         <Uint16 offset="69">0065</Uint16>
       </Field>
       <Field index="2" offset="71">
         <Uint32 offset="72">00000003</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="3" offset="76">
       <Structure length="3" offset="77">
       <Field index="0" offset="78">
         <OctetString offset="79" datetime="20:59:0:255 23/2/2018">07e20217ff143b00ff014a00</OctetString>
       </Field>
       <Field index="1" offset="92">
         <Uint16 offset="93">0066</Uint16>
       </Field>
       <Field index="2" offset="95">
         <Uint32 offset="96">00000004</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="4" offset="100">
       <Structure length="3" offset="101">
       <Field index="0" offset="102">
         <OctetString offset="103" datetime="21:2:0:255 23/2/2018">07e20217ff150200ff014a00</OctetString>
       </Field>
       <Field index="1" offset="116">
         <Uint16 offset="117">0065</Uint16>
       </Field>
       <Field index="2" offset="119">
         <Uint32 offset="120">00000005</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="5" offset="124">
       <Structure length="3" offset="125">
       <Field index="0" offset="126">
         <OctetString offset="127" datetime="21:3:0:255 23/2/2018">07e20217ff150300ff014a00</OctetString>
       </Field>
       <Field index="1" offset="140">
         <Uint16 offset="141">0066</Uint16>
       </Field>
       <Field index="2" offset="143">
         <Uint32 offset="144">00000006</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="6" offset="148">
       <Structure length="3" offset="149">
       <Field index="0" offset="150">
         <OctetString offset="151" datetime="18:51:0:255 12/3/2018">07e2030cff123300ff014a00</OctetString>
       </Field>
       <Field index="1" offset="164">
         <Uint16 offset="165">0065</Uint16>
       </Field>
       <Field index="2" offset="167">
         <Uint32 offset="168">00000007</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="7" offset="172">
       <Structure length="3" offset="173">
       <Field index="0" offset="174">
         <OctetString offset="175" datetime="18:52:0:255 12/3/2018">07e2030cff123400ff014a00</OctetString>
       </Field>
       <Field index="1" offset="188">
         <Uint16 offset="189">0066</Uint16>
       </Field>
       <Field index="2" offset="191">
         <Uint32 offset="192">00000008</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="8" offset="196">
       <Structure length="3" offset="197">
       <Field index="0" offset="198">
         <OctetString offset="199" datetime="18:57:0:255 12/3/2018">07e2030cff123900ff014a00</OctetString>
       </Field>
       <Field index="1" offset="212">
         <Uint16 offset="213">0065</Uint16>
       </Field>
       <Field index="2" offset="215">
         <Uint32 offset="216">00000009</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="9" offset="220">
       <Structure length="3" offset="221">
       <Field index="0" offset="222">
         <OctetString offset="223" datetime="18:58:0:255 12/3/2018">07e2030cff123a00ff014a00</OctetString>
       </Field>
       <Field index="1" offset="236">
         <Uint16 offset="237">0066</Uint16>
       </Field>
       <Field index="2" offset="239">
         <Uint32 offset="240">0000000a</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="10" offset="244">
       <Structure length="3" offset="245">
       <Field index="0" offset="246">
         <OctetString offset="247" datetime="22:30:0:255 12/3/2018">07e2030cff161e00ff014a00</OctetString>
       </Field>
       <Field index="1" offset="260">
         <Uint16 offset="261">0065</Uint16>
       </Field>
       <Field index="2" offset="263">
         <Uint32 offset="264">0000000b</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="11" offset="268">
       <Structure length="3" offset="269">
       <Field index="0" offset="270">
         <OctetString offset="271" datetime="22:31:0:255 12/3/2018">07e2030cff161f00ff014a00</OctetString>
       </Field>
       <Field index="1" offset="284">
         <Uint16 offset="285">0066</Uint16>
       </Field>
       <Field index="2" offset="287">
         <Uint32 offset="288">0000000c</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="12" offset="292">
       <Structure length="3" offset="293">
       <Field index="0" offset="294">
         <OctetString offset="295" datetime="22:35:0:255 12/3/2018">07e2030cff162300ff014a00</OctetString>
       </Field>
       <Field index="1" offset="308">
         <Uint16 offset="309">0065</Uint16>
       </Field>
       <Field index="2" offset="311">
         <Uint32 offset="312">0000000d</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="13" offset="316">
       <Structure length="3" offset="317">
       <Field index="0" offset="318">
         <OctetString offset="319" datetime="22:36:0:255 12/3/2018">07e2030cff162400ff014a00</OctetString>
       </Field>
       <Field index="1" offset="332">
         <Uint16 offset="333">0066</Uint16>
       </Field>
       <Field index="2" offset="335">
         <Uint32 offset="336">0000000e</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="14" offset="340">
       <Structure length="3" offset="341">
       <Field index="0" offset="342">
         <OctetString offset="343" datetime="22:38:0:255 12/3/2018">07e2030cff162600ff014a00</OctetString>
       </Field>
       <Field index="1" offset="356">
         <Uint16 offset="357">0065</Uint16>
       </Field>
       <Field index="2" offset="359">
         <Uint32 offset="360">0000000f</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="15" offset="364">
       <Structure length="3" offset="365">
       <Field index="0" offset="366">
         <OctetString offset="367" datetime="22:39:0:255 12/3/2018">07e2030cff162700ff014a00</OctetString>
       </Field>
       <Field index="1" offset="380">
         <Uint16 offset="381">0066</Uint16>
       </Field>
       <Field index="2" offset="383">
         <Uint32 offset="384">00000010</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="16" offset="388">
       <Structure length="3" offset="389">
       <Field index="0" offset="390">
         <OctetString offset="391" datetime="15:47:0:255 13/3/2018">07e2030dff0f2f00ff014a00</OctetString>
       </Field>
       <Field index="1" offset="404">
         <Uint16 offset="405">0065</Uint16>
       </Field>
       <Field index="2" offset="407">
         <Uint32 offset="408">00000011</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="17" offset="412">
       <Structure length="3" offset="413">
       <Field index="0" offset="414">
         <OctetString offset="415" datetime="15:48:0:255 13/3/2018">07e2030dff0f3000ff014a00</OctetString>
       </Field>
       <Field index="1" offset="428">
         <Uint16 offset="429">0066</Uint16>
       </Field>
       <Field index="2" offset="431">
         <Uint32 offset="432">00000012</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="18" offset="436">
       <Structure length="3" offset="437">
       <Field index="0" offset="438">
         <OctetString offset="439" datetime="16:9:0:255 13/3/2018">07e2030dff100900ff014a00</OctetString>
       </Field>
       <Field index="1" offset="452">
         <Uint16 offset="453">0065</Uint16>
       </Field>
       <Field index="2" offset="455">
         <Uint32 offset="456">00000013</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="19" offset="460">
       <Structure length="3" offset="461">
       <Field index="0" offset="462">
         <OctetString offset="463" datetime="16:10:0:255 13/3/2018">07e2030dff100a00ff014a00</OctetString>
       </Field>
       <Field index="1" offset="476">
         <Uint16 offset="477">0066</Uint16>
       </Field>
       <Field index="2" offset="479">
         <Uint32 offset="480">00000014</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     </Array>
   </Data>



-----------------------------------------------------------------------

DCUb4:
Note that there is a lot of potential "simplification" work such as removal of the filesystem that may make
further tasks much easier rather than having to deal with the archaic implementations.

Platform:
- Booting issue (Linux,C,low-level).
- Install scripts split and drive from MTS (Python/sh).

Application (From AppDeRisk branch):
- DCUTool interaction (serial 'break' issue) (Python?).
- Break up Stubs.c (C, makefile)
- Complete stub functionality for UART (mostly working) (C, Linux, Node & debug-terminal interaction).
- Complete stub functionality for clock/timing (Nothing done) (C, Linux).
- Complete stub functionality for SDCard (mostly working).
- Complete stub functionality for SDRAM (mostly working).
- Complete stub functionality for GPRSModem (nothing done, integrate with Python ModemController).
- Complete stub functionality for TCPIP (implemented but untested) (C, Linux, TCP/IP, DCUTool/server interaction).
- Complete stub functionality for OTXU storage/behaviour (nothing) (C, Platform & Linux interaction).
- Complete stub functionality for preferences (mostly working) (C, file ops, reimplement?).
- Complete stub functionality for Entropy (C,Linux, /dev/urandom).
- Complete stub functionality for power monitoring & control (C,Linux, GPIO, MTS?).
- Complete stub functionality for RTC (C, Linux, hwclock).
- Complete stub functionality for hunter reset pin?
- Complete stub functionality for FLASH? maybe remove instead, part of OTXU image storage IIRC.
- Complete stub functionality for reset functionality.
- Complete stub functionality for Watchdog.
- Move Stubs back into cygh (build/makefile issues?).
- Removal of 'dcutime' (its just wrappers around time/gmtime/localtime).
- Removal of 'timezone' (its just wrappers around tzset).

Testing:
- Evaluation of content of Hwicce unit tests and usefullness to Bellatrix.
- DCUTool interaction for configuration and further mnaual&dev testing.
- Maintenance of the hwicce unit tests.
- Upgrade testsi OTXU (Do we have them already?).
- End-to-end/system tests.
- Work through all functionality of DCUTool and ensure its all working.
- Integration & testing with 1 node (existing setup).
- Testing with 2 nodes (new setup).
- Performance testing with 1 node.
- Performance testing with 2 nodes.
- Watchdog/power reset/recovery/robustness testing.
- testing of ethernet functionality.

New functionality:
- Two-Node mods ().
- Replacement of SharkSSL with... (WolfSSL?)

Design work (priority TBD):
- Two node mods (may make sense to do some simplification work prior to this).
- Removal of filesystem (store) code from DCU (simplification and removal of old fs code). Maybe use SqLite for atomic/rollback/robustness reasons.
- More appropriate preferences implementation (use config.xml directly?, simple k-v store? sqlite would be nice, well supported & tested? redis?).
- Removal of SDRAM emulation (unnecessary).
- Removal of SDCard emulation (unnecessary).
- Investigate process-model changes & low-power/non-super-loop options.
- Without resource restrictions (RAM), the stream system is over-complicated. Investigate simplification & replacement.
- Reimplementation of 'event' into Python.
- Reimplementation of 'config' into Python.
- Reimplementation of 'metercomms' into Python.
- Reimplementation of 'command' into Python.
- Reimplementation of decoders in Python (bigger job, different repo).



-------------------------------------------------------------------


NMS/C4server restarted while agent logged in results in:

2018-03-16 11:30:03,573 TRACE [dtls] DTLSConnection - DTLS packet 6bf0a78c added to queue, address=/fd51:3c22:ee1f:0:200:0:0:1:5684, sessionId=SessionId(d53278cdf99b7beb878f976675847bae5c6d54eea6d891fe2ea1f74d3a0d2f37), migrating=false
2018-03-16 11:30:03,573 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] DTLSConnection - DTLS packet 6bf0a78c being processed, address=/fd51:3c22:ee1f:0:200:0:0:1:5684, sessionId=SessionId(d53278cdf99b7beb878f976675847bae5c6d54eea6d891fe2ea1f74d3a0d2f37), migrating=false
2018-03-16 11:30:03,573 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] LocalCoapSession - ENTER receiveRequestMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, POST /mq, CONFIRMABLE, 3312)
2018-03-16 11:30:03,573 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] LocalCoapSession - ENTER handleConfirmableRequestMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, POST /mq, CONFIRMABLE, 3312)
2018-03-16 11:30:03,573 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] IncomingCoapExchange - Received request POST /mq from peer /fd51:3c22:ee1f:0:200:0:0:1:5684 with payload [0811124408bbd5aed505723c0a024e4112060000636202ff1a0e090c07e20310ff0b2000ff014a001a031200651a05060000002b22108230e77dc4ad7272dd023b3c9a11fe282800].
2018-03-16 11:30:03,573 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] MqCoapResource - Node 00-00-00-00-00-00-00-01 sent 1 messages starting with sequence number 17.
2018-03-16 11:30:03,573 DEBUG [dtls-pool-2] [node=00-00-00-00-00-00-00-01] MessageQueuePersister - Sending to queue com.connode.service.terminal.mq.MessagesFromNode message of type class com.connode.service.terminal.mq.MessagesFromNode.
2018-03-16 11:30:03,578 TRACE [dtls] DTLSConnection - DTLS packet 37bfa3d4 added to queue, address=/fd51:3c22:ee1f:0:200:0:0:1:5684, sessionId=SessionId(d53278cdf99b7beb878f976675847bae5c6d54eea6d891fe2ea1f74d3a0d2f37), migrating=false
2018-03-16 11:30:03,610 DEBUG [dtls-pool-2] [node=00-00-00-00-00-00-00-01] MessageQueuePersister - Successfuly delivered to queue com.connode.service.terminal.mq.MessagesFromNode message MessagesFromNode{dbNodeId=1, scheduledPush=false, startSequenceNumber=17, messages=[MessageWithPayloads{message=Message{resetCounter=0, sequenceNumber=17, status=PUSH, timestamp=Fri Mar 16 11:30:03 GMT 2018, timestampUnreliable=false}, payloads=[DataProfileSamplePayload{deviceId='NA', profile=[0, 0, 99, 98, 2, -1], profileHash=[-126, 48, -25, 125, -60, -83, 114, 114, -35, 2, 59, 60, -102, 17, -2, 40], sampleTime=Thu Jan 01 01:00:00 GMT 1970, message=Message{resetCounter=0, sequenceNumber=17, status=PUSH, timestamp=Fri Mar 16 11:30:03 GMT 2018, timestampUnreliable=false}, createTime=null}]}]}
2018-03-16 11:30:03,611 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] LocalCoapSession - ENTER sendResponseMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, 2.01 Created, ACKNOWLEDGEMENT, 3312) for request (/fd51:3c22:ee1f:0:200:0:0:1:5684, POST /mq, CONFIRMABLE, 3312)
2018-03-16 11:30:03,611 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] LocalCoapSession - ENTER sendMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, 2.01 Created, ACKNOWLEDGEMENT, 3312)
2018-03-16 11:30:03,611 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] LocalCoapSession - EXIT sendResponseMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, 2.01 Created, ACKNOWLEDGEMENT, 3312) for request (/fd51:3c22:ee1f:0:200:0:0:1:5684, POST /mq, CONFIRMABLE, 3312)
2018-03-16 11:30:03,611 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] LocalCoapSession - EXIT handleConfirmableRequestMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, POST /mq, CONFIRMABLE, 3312)
2018-03-16 11:30:03,611 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] LocalCoapSession - EXIT receiveRequestMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, POST /mq, CONFIRMABLE, 3312)
2018-03-16 11:30:03,611 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] DTLSConnection - DTLS packet 37bfa3d4 being processed, address=/fd51:3c22:ee1f:0:200:0:0:1:5684, sessionId=SessionId(d53278cdf99b7beb878f976675847bae5c6d54eea6d891fe2ea1f74d3a0d2f37), migrating=false
2018-03-16 11:30:03,611 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] LocalCoapSession - ENTER receiveRequestMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, POST /mq, CONFIRMABLE, 3313)
2018-03-16 11:30:03,611 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] LocalCoapSession - ENTER handleConfirmableRequestMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, POST /mq, CONFIRMABLE, 3313)
2018-03-16 11:30:03,611 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] IncomingCoapExchange - Received request POST /mq from peer /fd51:3c22:ee1f:0:200:0:0:1:5684 with payload [0812124408bbd5aed505723c0a024e4112060000636202ff1a0e090c07e20310ff0b2200ff014a001a031200661a05060000002c22108230e77dc4ad7272dd023b3c9a11fe282800].
2018-03-16 11:30:03,611 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] MqCoapResource - Node 00-00-00-00-00-00-00-01 sent 1 messages starting with sequence number 18.
2018-03-16 11:30:03,611 DEBUG [dtls-pool-2] [node=00-00-00-00-00-00-00-01] MessageQueuePersister - Sending to queue com.connode.service.terminal.mq.MessagesFromNode message of type class com.connode.service.terminal.mq.MessagesFromNode.
2018-03-16 11:30:03,621 DEBUG [ActiveMQ Session Task-29] [node=00-00-00-00-00-00-00-01] MessageQueuePersister - Received payload MessagesFromNode{dbNodeId=1, scheduledPush=false, startSequenceNumber=17, messages=[MessageWithPayloads{message=Message{resetCounter=0, sequenceNumber=17, status=PUSH, timestamp=Fri Mar 16 11:30:03 GMT 2018, timestampUnreliable=false}, payloads=[DataProfileSamplePayload{deviceId='NA', profile=[0, 0, 99, 98, 2, -1], profileHash=[-126, 48, -25, 125, -60, -83, 114, 114, -35, 2, 59, 60, -102, 17, -2, 40], sampleTime=Thu Jan 01 01:00:00 GMT 1970, message=Message{resetCounter=0, sequenceNumber=17, status=PUSH, timestamp=Fri Mar 16 11:30:03 GMT 2018, timestampUnreliable=false}, createTime=null}]}]} from ActiveMQ queue com.connode.service.terminal.mq.MessagesFromNode
2018-03-16 11:30:03,625 DEBUG [dtls-pool-2] [node=00-00-00-00-00-00-00-01] MessageQueuePersister - Successfuly delivered to queue com.connode.service.terminal.mq.MessagesFromNode message MessagesFromNode{dbNodeId=1, scheduledPush=false, startSequenceNumber=18, messages=[MessageWithPayloads{message=Message{resetCounter=0, sequenceNumber=18, status=PUSH, timestamp=Fri Mar 16 11:30:03 GMT 2018, timestampUnreliable=false}, payloads=[DataProfileSamplePayload{deviceId='NA', profile=[0, 0, 99, 98, 2, -1], profileHash=[-126, 48, -25, 125, -60, -83, 114, 114, -35, 2, 59, 60, -102, 17, -2, 40], sampleTime=Thu Jan 01 01:00:00 GMT 1970, message=Message{resetCounter=0, sequenceNumber=18, status=PUSH, timestamp=Fri Mar 16 11:30:03 GMT 2018, timestampUnreliable=false}, createTime=null}]}]}
2018-03-16 11:30:03,625 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] LocalCoapSession - ENTER sendResponseMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, 2.01 Created, ACKNOWLEDGEMENT, 3313) for request (/fd51:3c22:ee1f:0:200:0:0:1:5684, POST /mq, CONFIRMABLE, 3313)
2018-03-16 11:30:03,625 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] LocalCoapSession - ENTER sendMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, 2.01 Created, ACKNOWLEDGEMENT, 3313)
2018-03-16 11:30:03,626 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] LocalCoapSession - EXIT sendResponseMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, 2.01 Created, ACKNOWLEDGEMENT, 3313) for request (/fd51:3c22:ee1f:0:200:0:0:1:5684, POST /mq, CONFIRMABLE, 3313)
2018-03-16 11:30:03,626 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] LocalCoapSession - EXIT handleConfirmableRequestMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, POST /mq, CONFIRMABLE, 3313)
2018-03-16 11:30:03,626 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] LocalCoapSession - EXIT receiveRequestMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, POST /mq, CONFIRMABLE, 3313)
2018-03-16 11:30:03,629 TRACE [ActiveMQ Session Task-29] [node=00-00-00-00-00-00-00-01] MqTracker - Ignoring message with sequence number 17, since it was already processed.
2018-03-16 11:30:03,629 WARN  [ActiveMQ Session Task-29] [node=00-00-00-00-00-00-00-01] ApplicationServiceMessagePusher - No smart metering application server available
2018-03-16 11:30:03,629 WARN  [ActiveMQ Session Task-29] [node=00-00-00-00-00-00-00-01] ApplicationServiceMessagePusher - No smart metering application server available
2018-03-16 11:30:03,629 TRACE [ActiveMQ Session Task-29] [node=00-00-00-00-00-00-00-01] MqTracker - Node 1 has MQ state MessageQueueState{node=00-00-00-00-00-00-00-01, resetCounter=0, startSequenceNumber=78009, lastReceivedSequenceNumber=81506, lastPullTime=null, pullInterval=null} after persisting 0 messages and 0 payloads.
2018-03-16 11:30:03,632 DEBUG [ActiveMQ Session Task-29] [node=00-00-00-00-00-00-00-01] MessageQueuePersister - Consumer accepted the message, acknowledging it for ActiveMQ
2018-03-16 11:30:03,651 DEBUG [ActiveMQ Session Task-29] [node=00-00-00-00-00-00-00-01] MessageQueuePersister - Received payload MessagesFromNode{dbNodeId=1, scheduledPush=false, startSequenceNumber=18, messages=[MessageWithPayloads{message=Message{resetCounter=0, sequenceNumber=18, status=PUSH, timestamp=Fri Mar 16 11:30:03 GMT 2018, timestampUnreliable=false}, payloads=[DataProfileSamplePayload{deviceId='NA', profile=[0, 0, 99, 98, 2, -1], profileHash=[-126, 48, -25, 125, -60, -83, 114, 114, -35, 2, 59, 60, -102, 17, -2, 40], sampleTime=Thu Jan 01 01:00:00 GMT 1970, message=Message{resetCounter=0, sequenceNumber=18, status=PUSH, timestamp=Fri Mar 16 11:30:03 GMT 2018, timestampUnreliable=false}, createTime=null}]}]} from ActiveMQ queue com.connode.service.terminal.mq.MessagesFromNode
2018-03-16 11:30:03,656 TRACE [ActiveMQ Session Task-29] [node=00-00-00-00-00-00-00-01] MqTracker - Ignoring message with sequence number 18, since it was already processed.
2018-03-16 11:30:03,656 WARN  [ActiveMQ Session Task-29] [node=00-00-00-00-00-00-00-01] ApplicationServiceMessagePusher - No smart metering application server available
2018-03-16 11:30:03,656 WARN  [ActiveMQ Session Task-29] [node=00-00-00-00-00-00-00-01] ApplicationServiceMessagePusher - No smart metering application server available
2018-03-16 11:30:03,656 TRACE [ActiveMQ Session Task-29] [node=00-00-00-00-00-00-00-01] MqTracker - Node 1 has MQ state MessageQueueState{node=00-00-00-00-00-00-00-01, resetCounter=0, startSequenceNumber=78009, lastReceivedSequenceNumber=81506, lastPullTime=null, pullInterval=null} after persisting 0 messages and 0 payloads.
2018-03-16 11:30:03,660 DEBUG [ActiveMQ Session Task-29] [node=00-00-00-00-00-00-00-01] MessageQueuePersister - Consumer accepted the message, acknowledging it for ActiveMQ
2018-03-16 11:30:05,976 TRACE [mq-gap-filler] MqTracker - ENTER checkOutNodeState
2018-03-16 11:30:05,977 TRACE [mq-gap-filler] MqTracker - EXIT checkOutNodeState dbNodeId=null



100,000 meters.
100 msgs per day

1 year = 365 * 100 = 36500/8 = 4.5KB per year per meter

after 1 year, 456MB on the one server....



---------------------------------------------


CND-7801: Scheduled event log collection

Add event log OBISs to the Genus-variant profile table.
This enables access to the logs via the existing profile-read mechanisms.

Change-Id: I4e74020ea5451e4d5a4fe0cac3ab8a47ec20ca35



------------------------------------------


util/nanopb/tariff_tou.proto
util/nanopb/meter_data.proto
util/nanopb/meter_cmd.proto
util/nanopb/meter.proto
util/nanopb/load_survey.proto
util/nanopb/load_curtailment.proto
util/nanopb/event_severity.proto
util/nanopb/event.proto
util/nanopb/configrun.proto
util/nanopb/config.proto
stack_extra_info.py
metercomms/metercomms.h
metercomms/metercomms.c
metercomms/meter_command_start.c
metercomms/meter_command_protocol.c
dcuunittest/dcutestutils/otxu.py
dcuunittest/dcutestutils/network_sim.py
dcuunittest/dcu_callbacks/metercomms/metercomms.c
dcuapptest/otxu_tests/test_otxu_operation.py
dcuapptest/meter_command_tests/meter_command_test.py
Makefile

cygh/Stubs.py
build.sh
Output/Makefile
EmbeddedPython.c
ChildBuild.sh



-----------------

Working:
./build/host-genus-insecure/bin/agent   -eui64 00-00-00-00-00-00-00-01  \
                                        -meter /dev/ttyUSB0  \
                                        -initrtc  \
                                        -ctrlhub 127.0.0.1  \
                                        -ctrlhubport 4242  \
                                        -loglevel debug  \
                                        -param device.dlms.lls_password=1A2B3C4D \
                                        -param device.dlms.hls_key=756776636c686c737567313836616263 \
                                        -param device.dlms.authentication_key=756776636c656b616b67313836616263 \
                                        -param device.dlms.encryption_key=756776636c656b616b67313836616263 \
                                        -param server.ip=fd00::1  \
                                        -param modem.tun6.ip=localhost \
                                        -param modem.tun6.secret=whatsfordinner   \
                                        -param modem.apn=4g.tele2.se  \
                                        -rootcert /Data/Temp/KeyTest/root.crt.der  \
                                        -cert /Data/Temp/KeyTest/node.crt.der  \
                                        -key /Data/Temp/KeyTest/node.key.der  \
                                        -mackey /Data/Temp/KeyTest/mac-keys.txt  \
                                        -gateway  \
                                        -statedir AgentState \
                                        -socket







Profile 0-0:99.98.1*255 (in dlmsParseProfileValue): Bad struct                      x
Profile 0-0:99.98.1*255: Discovery failed at step 2                                 x
Profile discovery for 0-0:99.98.2*255 PowerEventLog: step 1                         x
Get 0-0:99.98.2*255 ic 7 attr 3 normal access                                       x
tx: (1/2): 7ea0190341502efde6e600c001810007                                         x
tx: (2/2): 0000636202ff03003f597e                                                   x
rx: (1/6): 7ea050410334c0f1e6e700c402810100                                         x
rx: (2/6): 00000100820038010302041200080906                                         x
rx: (3/6): 0000010000ff0f021200000204120001                                         x
rx: (4/6): 09060000600b02ff0f02120000020412                                         x
rx: (5/6): 000109060000600f02ff0f0212000095                                         x
rx: (6/6): cd7e                                                                     x
Profile 0-0:99.98.2*255: Extracting 3 objects                                       xr
Profile 0-0:99.98.2*255: 1/3: 0-0:1.0.0*255 ic 8 attr 2                             x
Profile 0-0:99.98.2*255: 2/3: 0-0:96.11.2*255 ic 1 attr 2                           x
Profile 0-0:99.98.2*255: 3/3: 0-0:96.15.2*255 ic 1 attr 2                           x
Profile discovery for 0-0:99.98.2*255 PowerEventLog: step 2                         x
Selective read: by range                                                            x
Selective read: by range - the latest entry                                         x
Get 0-0:99.98.2*255 ic 7 attr 2 by range:                                           x
Profile PowerEventLog: From time: 2018-03-23 17:36:15                               x
Profile PowerEventLog: To time: 2018-03-23 17:50:55                                 x
tx: (1/5): 7ea04c0341727f44e6e600c001810007                                         x
tx: (2/5): 0000636202ff02010102040204120008                                         x
tx: (3/5): 09060000010000ff0f02120000090c07                                         x
tx: (4/5): e20317ff11240fffffc400090c07e203                                         x
tx: (5/5): 17ff113237ffffc40001004bae7e                                             x
rx: (1/2): 7ea01c4103565730e6e700c402810100                                         x
rx: (2/2): 00000100820004018200004e3d7e                                             x
Bad struct: Too short: 0 B                                                          x
Profile 0-0:99.98.2*255 (in dlmsParseProfileValue): Bad struct                      x
Profile 0-0:99.98.2*255: Discovery failed at step 2                                 x
Profile discovery for 0-0:99.98.3*255 TransactionEventLog: step 1                   x
Get 0-0:99.98.3*255 ic 7 attr 3 normal access                                       x
0: transmit DIO to ff02::1a (rank=128, version=240)                                 x
ICMPv6 multicast to ff02::1a, RPL control message (DIO), 80 B                       x
Send IP on lowpan, 84 B, type 58, ttl 32: fe80::200:0:0:1 -> ff02::1a               x
Tx 113 B at 20 dBm as #114 to fd-ff-ff-ff-ff-ff-ff-ff: Failed: Radio error          x


-----------------------------------------------------------

Refactoring notes for device-dlms:

Device-dlms: (currently ~4500 line file):

Functionality:
- Module/device lifecycle management (deviceStart, stop, etc)
- Association support.
- Authentication support (pluggable? mixed issue with dlms.c)
- Session support (e.g. setup&releaseHdlcConnection)
- In-RAM profile structure support (alloc,free,access,find,etc)
- Simple/single-record profile support
- Complex/multi-record profile support.
- Psuedo-profile support (instantaneous & name-plate).
- Scheduled profile reading.
- immediate reads support
- Alarm support.
- Selective-access support.
- IS15159-specific 'features' such as 7xevent-logs. 
- On-demand profile
- On-demand register
- Discovery state-machine.
- Meter-time support, read/write/sync.
- driver/WAN facing message-handlers & pb encoding.
- meter-facing message handlers.
- Disconnector.
- Hash management.

Issues:
- Speed of discovery
- Discovery requires data in profile to complete successfully.
- Confusing naming issues (e.g. saveDpTs, processOnDemandProfileSamplesProcess, loadFrameCounter-look at what it does).
- global state.
- memory usage? *lots* of allocating/freeing. Worst-case analysis? fragmentation? failure-modes?
- Variant mechanism needs to take into account a customer variant of the same meter type.
- unit tests?
- Add support utilities for iterating over the profile list & profile->object list?
- Should be a more-defined/more-obvious lifecycle for each request/response chain.
- Lots of boilerplate code for processing responses.


dlms.c split possibilities (Currently ~4500 line file):
- Module lifecycle.
- HDLC facing handlers.
- Association and session and generic error support.
- Crypto support (multiple, pluggable?)
- Data notification.
- DLMS "stack" (i.e. core protocol handling, req/rsp handling).
- A-XDR encoder/decoder.
- Multi-block management.
- Date/time utilities.
- Profile parsing and utilities (unclear split of responsibilities between dlms/device-dlms).
- Hash computation.
- capture period utilities.
- Type parser (array,struct,scalers).
- FrameCounter, we have read/write/load. Load perform a read and write (misnamed). Possible race
condition with setting counterToWrite and reading from it (message received while writing, since
its performed on a schedule, possibly...).

Issues:
- Need to be a separate task? combine with HDLC and save stack space and complexity.
- If DLMS frame-counter fails to restore correctly, it is set to zero (FIXME).
- Framecounter being persisted to FLASH every message, lots of FLASH activity?
- Framecounter needs wraparound situation considered.
- unit tests?
- Add support utilities for iterating over DLMS array & struct?


Overall:
- Need for more of a proper stack layering, i.e app-level generic DLMS objects such as capture-period
and profile-generic utilities/methods separated from the lower-levels.
- separation need from core protocol behaviour (session mgmt, req/resp/error mgmt) and messgae encoding and
decoding (i.e. A-XDR stream-oriented methods).
- Control path through the code needs to be more obvious.
- State machine(s) need more structure.
- Too much global state.

Larger issues:
- Make more use of the queue and less use of large state machines, e.g. break up the discovery state machine to 
individual parts that can be queued.
- retrieve data from the meter, not from FLASH, don't use the mq.
- make the mq a priority q.
- Remove state 0 (time read) of disco state machine and queue a time read instead.


----------------------------------------------------------------------


break condition:

steve@blackbox1:~$ stty -a -F /dev/ttyUSB0 
speed 57600 baud; rows 0; columns 0; line = 0;
intr = ^C; quit = ^\; erase = ^?; kill = ^U; eof = ^D; eol = <undef>;
eol2 = <undef>; swtch = <undef>; start = ^Q; stop = ^S; susp = ^Z; rprnt = ^R;
werase = ^W; lnext = ^V; discard = ^O; min = 1; time = 0;
-parenb -parodd -cmspar cs8 hupcl -cstopb cread clocal -crtscts
-ignbrk -brkint -ignpar parmrk -inpck -istrip -inlcr -igncr -icrnl ixon -ixoff
-iuclc -ixany -imaxbel -iutf8
-opost -olcuc -ocrnl -onlcr -onocr -onlret -ofill -ofdel nl0 cr0 tab0 bs0 vt0 ff0
-isig -icanon -iexten -echo -echoe -echok -echonl -noflsh -xcase -tostop -echoprt
-echoctl -echoke -flusho -extproc


break -> 0xff 0x00 0x00 (iff parmrk is set).
break -> 0x00 (iff parmrk is *not* set).

stty -F /dev/serial/by-id/usb-FTDI_TTL232R-3V3_FT9SI5ZW-if00-port0 -parenb -parodd -cmspar cs8 hupcl -cstopb cread clocal -crtscts -ignbrk -brkint -ignpar parmrk -inpck -istrip -inlcr -igncr -icrnl ixon -ixoff -iuclc -ixany -imaxbel -iutf8 -isig -icanon -iexten -echo -echoe -echok -echonl -noflsh -xcase -tostop -echoprt


------------------------------------------------------


cable_has_connection_attempt
CABLE_rx_connection_request()

b command_link.c:236

command_link_current_state = SEND_HELLO_INDICATION

b COMMAND_LINK_tx_put

WAIT_HELLO_RESPONSE

cygh_uart_txchar_blocking

b command_link.c:361

FS_storage_read_fileheader returns FS_CORRUPT_FILE_HEADER while popping hello message for tx and
assert fails, causing byte out of diag port.

stream_output_pb_encode fails in stream_nanopb.c:37
b stream_nanopb.c:37 func=pb_enc_varint


b command_link.c:361
assert fails.... FS_FIFO_peek fails with FS_CORRUPT_FILE_HEADER
b fs.c:145

if (!UUID_equals(expected_fs_uuid, &fs_uuid)) fails.... fs isnt formatted, maybe use or create
a fs image.

dcu is unlicensed. licensing_state == LICENSING_STATE_UNLICENSED.

command_link.c:268: COMMAND_LINK_tx_put(&msg); not outputing hello.
COMMAND_LINK_tx_put() works ok.

command_link.c:357
FS_FIFO_pop() fails. rerr==FS_CORRUPT_FILE_HEADER

in state FS_OPEN_FILE_STATE_START_OFFSETo

FS_file_header_unpack fails because UUID_equals(expected_fs_uuid, &fs_uuid) fails.
fs.c:145

COMMAND_LINK_init calls FS_FIFO_new_sdram() for command_link_rx_fifo and command_link_tx_fifo.

file that fials is:
FS_FIFO_pop(&command_link_tx_fifo, &command_link_tx_read_file)


this reads zeros:
cygh_sdram_read (offset=2732544, buf=0x6786a0 <fs_gpt_work_block>, size=512) at ../cygh/Stubs.c:1119
cygh_sdram_write
b cygh_sdram_read if offset == 2732544
b cygh_sdram_write if offset == 2732544



--------------------------------------------------------

get node out of production mode:

tools/c4-tools/coap_request.py --config prod.lowpan.eui64 00-1b-c5-0c-60-00-bc-21
tools/c4-tools/coap_request.py --config prod.prodtime 1
tools/c4-tools/coap_request.py --load-key client-key node.key.der
tools/c4-tools/coap_request.py --load-key client-cert node.crt.der 
tools/c4-tools/coap_request.py --load-key root-cert ca.crt.der
tools/c4-tools/coap_request.py --rll-key mac.key
--------------------------------------------------------


From DCU:

c2022f0a120a100e1dd35389e344879b3aecd3fb786d6c100118022001280435ff7f00003d0000000042004a005d01000000

echo -n "c2022f0a120a100e1dd35389e344879b3aecd3fb786d6c100118022001280435ff7f00003d0000000042004a005d01000000" | xxd -r -p | protoc --decode_raw
40 {
  1 {
    1: "\016\035\323S\211\343D\207\233:\354\323\373xml"
  }
  2: 1
  3: 2
  4: 1
  5: 4
  6: 0x00007fff
  7: 0x00000000
  8: ""
  9: ""
  11: 0x00000001
}

23c2022f0a120a100e1dd35389e344879b3aecd3fb786d6c100118022001280435ff7f

COBS encoded output:
23 C2 02 2F 0A 12 0A 10 0E 1D D3 53 89 E3 44 87 9B 3A EC D3 FB 78 6D 6C 10 01 18 02 20 01 28 04 35 FF 7F 01 02 3D 01 01 01 02 42 02 4A 03 5D 01 01 01 01 01 01 00 
   c2 02 2f 0a 12 0a 10 0e 1d d3 53 89 e3 44 87 9b 3a ec d3 fb 78 6d 6c 10 01 18 02 20 01 28 04 35 ff 7f 00 00 3d 00 00 00 00 42 00 4a 00 5d 01 00 00 00
xx                                                                                                       xx xx    xx xx xx xx    xx    xx       xx xx xx xx xx xx   


------------------------------------------------



Ok, we've seen a few problems that taken together may be pointing towards the SMA not updating its meter/node info when upgraded:
- We have seen an instance of an agent being upgraded yet the new firmware version not being seen on the UI.
- Event profiles that should not have been discovered (since the agent fails to discover profiles that are empty) appeared after an upgrade.
- After an upgrade from an agent that did not support on-demand profiles to one that does, we have seen that the "on-demand" flags were not visible.

I briefly chatted to Bojan about it and he mentioned that the SMA has a discovery re-trigger mechanism that works in two cases:
- The global hash changes (which should pick up f/w version changes).
- The SMA receives data for a profile that it did not previously have registered for the meter.

The logs I've got do not seem conclusive to me but I can imagine that if the SMA isn't rediscovering a meter after a hash change then that 
mechanism could cause the above effects.

Any thoughts? From the node logs, I can see that the discovery process works fine and certainly in the case of the version being incorrect then
the agent has no mechanism for reporting an old version so its unlikely to be an agent-side problem in that case.



./build/host-ctrlporthub/bin/ctrlporthub -controllerport 4000 -listen 4242 -loglevel debug

./build/host-genus-insecure/bin/agent   -eui64 00-00-00-00-00-00-00-01  \
                                        -meter /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0  \
                                        -initrtc  \
                                        -ctrlhub 127.0.0.1  \
                                        -ctrlhubport 4242  \
                                        -loglevel debug  \
                                        -param device.dlms.lls_password=1A2B3C4D  \
                                        -param device.dlms.authentication_key=756776636c656b616b67313836616263    \
                                        -param device.dlms.encryption_key=756776636c656b616b67313836616263    \
                                        -param device.dlms.encryption_key=756776636c656b616b67313836616263    \
                                        -param server.ip=fd00::1  \
                                        -param modem.tun6.ip=localhost \
                                        -param modem.tun6.secret=whatsfordinner   \
                                        -param modem.apn=4g.tele2.se  \
                                        -rootcert /Data/Temp/KeyTest/root.crt.der  \
                                        -cert /Data/Temp/KeyTest/node.crt.der  \
                                        -key /Data/Temp/KeyTest/node.key.der  \
                                        -mackey /Data/Temp/KeyTest/mac-keys.txt  \
                                        -gateway  \
                                        -statedir AgentState \
                                        -socket



-----------------------------

1: "859def03282f6117dff596579b2bd873"
2 {
  1 {
    10: 0x30205453
    6: 48
    6: 48
    6: 53
  }
  2: "GENUS POWER INFRASTRUCTURES LTD"
  3: "Three phase a.c. static direct connected watt-hour smart"
  4: "GF6B7.325030"
  5: 1
  5: 2
  5: 3
  5: 4
  5: 5
  5: 6
  5: 7
  6: "genus_dlms"
}


---------------------------------------------------------


curl -s -X POST -H 'Content-Type: application/json' 'http://localhost:8880/ws/meterAlarms' --data '{"meterId":"UST 0000006",  "startId": "1", "count": "10"}' | python -m json.tool

curl -s -X POST -H 'Content-Type: application/json' 'http://localhost:8880/ws/meterAlarms' --data '{"meterId":"UST 0000006",  "startId": "600", "count": "1000"}' | python -m json.tool | grep alarmTime
-------------------------------------

docker run -v `pwd`:'/project'   -it omnimesh/buildenv_omnimesh  make pypb2 host-genus-insecure host-ctrlporthub ipa1-bl-insecure



------------------------------------------------

./build/host-genus-insecure/bin/agent   -eui64 00-00-00-00-00-00-00-01  \
                                        -meter /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0  \
                                        -initrtc  \
                                        -ctrlhub 127.0.0.1  \
                                        -ctrlhubport 4242  \
                                        -loglevel debug  \
                                        -param device.dlms.lls_password=1A2B3C4D  \
                                        -param device.dlms.authentication_key=756776636c656b616b67313836616263    \
                                        -param device.dlms.encryption_key=756776636c656b616b67313836616263    \
                                        -param server.ip=fd00::1  \
                                        -param modem.tun6.ip=localhost \
                                        -param modem.tun6.secret=whatsfordinner   \
                                        -param modem.apn=4g.tele2.se  \
                                        -rootcert ~/KeyTest/root.crt.der  \
                                        -cert ~/KeyTest/node.crt.der  \
                                        -key ~/KeyTest/node.key.der  \
                                        -mackey ~/KeyTest/mac-keys.txt  \
                                        -gateway  \
                                        -statedir AgentState \
                                        -socket



-------------------------------------

git show tags:

git show-ref --tags

10c3d49151a4402c0b4468e4c8823baab306d222 refs/tags/v106

tag v106
Tagger: Jonas Norling <jonas.norling@cyanconnode.com>
Date:   Tue Dec 12 12:18:42 2017 +0100

----------------------------------------------


grep "Node reg" /opt/sma/logs/sma.log  | cut -d' ' -f1,2 

----------------------------------------------

$ sudo vim /etc/resolvconf/resolv.conf.d/base
Then put your nameserver list in like so:

nameserver 8.8.8.8
nameserver 8.8.4.4
Finally update resolvconf:

$ sudo resolvconf -u

Omnibox1:
sudo ip -6 add add fd19::1 dev eth0






------------------------------


cd buildenv_omnimesh
./build.sh
cd ../omnimesh
docker run -v `pwd`:'/project'   -it omnimesh/buildenv_omnimesh  ./cibuild.sh
cd ../buildenv_omnimesh
./build_omnimesh_server.sh ../omnimesh
./run_omnimesh_server


----------------------------------------------

Omnibox2:

When prompted for a password, use "steve" and "123456789"

NMS URL:
http://omnibox2/nms/dashboard

SMA URL:
http://omnibox2:8880

To run the agent, you may want three windows onto the Omniboxi as they all output text (that you may want to look at). 
The commands to run are:
"sudo ./RunTun.sh"
"./RunCtrlPortHubForAgent.sh"
"./RunAgent.sh"

If you change the opto probe, you need to change the device name in RunAgent.sh
It currently is:
"/dev/serial/by-id/usb-FTDI_FT232R_USB_UART_A6023SX7-if00-port0"
Change it as appropriate.

to discover the opto-probe name, plug it in and do:
"ls /dev/serial/by-id/"


create a tarball of the new code, copy it to the omnibox with:
"scp LnT.tar steve@omnibox2:~/"

Log on to the OmniBox with:
"ssh steve@omnibox2"

Expand the tarball with:
"tar xvf LnT.tar"
"cd LnT"
"make host-lnt"

If you want to monitor the NMS:
"tail -f /usr/local/connode/logs/server.log"

If you want to monitor the SMA:
"tail -f /opt/sma/logs/sma.log"


----------------------------

IID: 02-1b-c5-0c-60-00-ea-11
G102032


2018-04-25 10:18:07,558 TRACE [http-63] ProxyController - method=GET, nodeId=00-1b-c5-0c-60-00-ea-11, coapUri=/sm/G102032/powerswitch
2018-04-25 10:18:07,559 TRACE [http-63] ProxyController - Node not found nodeId=00-1b-c5-0c-60-00-ea-11, coapUri=/sm/G102032/powerswitch
2018-04-25 10:18:07,559 TRACE [http-63] DeferredHttpCoapRequestContext - proxy response nodeId=00-1b-c5-0c-60-00-ea-11, coapUri=/sm/G102032/powerswitch, statusCode=502, payload=4e6f6465206e6f7420666f756e64


-------------------

sudo ./coap_request.py --server localhost:8080 --agent fd5f:fe8f:36c3:0:21b:c50c:6000:ea11 --config dtls.timeout.initial.s 55

--------------------------

Setting power control off:

lowpan.powercontrol 0

ssh tunnel to remote server then use tunnel to pass coap_request commands thru to meter.

ssh -f -L 9000:localhost:8080 stickle@omnireltest1.dev.cyanconnode.com sleep 172800
./tools/c4-tools/coap_request.py --server localhost:9000 --agent fd5f:fe8f:36c3:0:21b:c50c:6000:e9ef --config lowpan.powercontrol 0


------------------------------------------------

./sma-nms-service/src/main/java/com/cyanconnode/sma/service/mq/message/MessageServices.java
./sma-nms-service/src/test/java/com/cyanconnode/sma/service/mq/message/MessageServicesTest.java
./sma-common/src/main/java/com/cyanconnode/sma/common/sample/MeterSampleService.java
./sma-common/src/main/java/com/cyanconnode/sma/common/group/DeviceGroupService.java
./sma-common/src/main/java/com/cyanconnode/sma/common/profile/MeterProfileService.java
./sma-common/src/main/java/com/cyanconnode/sma/common/alarm/MeterAlarmService.java
./sma-common/src/test/java/com/cyanconnode/sma/common/group/DeviceGroupServiceTest.java
./sma-nms-httpproxy/src/main/java/com/cyanconnode/sma/httpproxy/HttpCoapProxyService.java
./sma-nms-httpproxy/src/main/java/com/cyanconnode/sma/httpproxy/DiscoveryServiceExecutor.java
./sma-nms-httpproxy/src/main/java/com/cyanconnode/sma/httpproxy/ondemand/OnDemandProfileService.java
./sma-nms-httpproxy/src/main/java/com/cyanconnode/sma/httpproxy/DeviceServices.java
./sma-nms-httpproxy/src/main/java/com/cyanconnode/sma/httpproxy/DiscoveryService.java
./sma-nms-httpproxy/src/test/java/com/cyanconnode/sma/httpproxy/ServiceDiscoveryTest.java
./sma-nms-httpproxy/src/test/java/com/cyanconnode/sma/httpproxy/OnDemandMeterSampleServiceTest.java
./sma-nms-httpproxy/src/test/java/com/cyanconnode/sma/httpproxy/PowerSwitchServiceTest.java


sma-nms-service/src/main/java/com/cyanconnode/sma/service/mq/message/PostProcessingTask.java:3:public interface PostProcessingTask extends Runnable {
sma-nms-httpproxy/src/main/java/com/cyanconnode/sma/httpproxy/DiscoveryServiceExecutor.java:24:        public Thread newThread(Runnable r) {
sma-nms-httpproxy/src/main/java/com/cyanconnode/sma/httpproxy/tasks/DiscoveryTask.java:31:        public Thread newThread(Runnable r) {
sma-nms-httpproxy/src/main/java/com/cyanconnode/sma/httpproxy/DiscoveryService.java:27:public class DiscoveryService implements Runnable{


-----------------------------------------

Checking that hash changes as a result of features & capture list change.

2018-04-30 12:21:39.210 [debug] [        meter/dlms] {      device}: !!! Feature change 
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}: Starting dlsmComputeHash:
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}:  --- hash: : (1/1): 29b15f641ebdd079343dddc7c021b5dc
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}:  --- hash: : (1/1): 8c65bbb524c9df3da9cd9c8cf2ee21ca
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}:  --- hash: : (1/1): 1a9f2139482b968346ae87c661725604
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}:  --- hash: : (1/1): 438426051854215b2bccf0aae20475ca
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}:  --- hash: : (1/1): 90ae0f00d33bfe7cf16bfab3f2bad140
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}:  --- hash: : (1/1): 57ef5547afc35524c643f854e43ea922
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}:  --- hash: : (1/1): 9e77e7990818c88823b0c76aba21e5cf
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}:  --- hash: : (1/1): 4d597ae3bfd4df1bec0d2e19049f81f9
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}:  --- hash: : (1/1): bc2653c82345f196009f03c2f42dcc3a
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}:  --- hash: : (1/1): 0f7b43d0a0815a483311b5889ffad793
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}:  --- profilesHash: : (1/1): 62df13cd
2018-04-30 12:21:39.210 [debug] [        meter/dlms] {      device}: !!! Feature change 
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}: Starting dlsmComputeHash:
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}:  --- hash: : (1/1): 1cc07dcea6f3ab84f53dcd4afac648b9
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}:  --- hash: : (1/1): 8c65bbb524c9df3da9cd9c8cf2ee21ca
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}:  --- hash: : (1/1): 1a9f2139482b968346ae87c661725604
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}:  --- hash: : (1/1): 438426051854215b2bccf0aae20475ca
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 90ae0f00d33bfe7cf16bfab3f2bad140
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 57ef5547afc35524c643f854e43ea922
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 9e77e7990818c88823b0c76aba21e5cf
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 4d597ae3bfd4df1bec0d2e19049f81f9
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): bc2653c82345f196009f03c2f42dcc3a
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 0f7b43d0a0815a483311b5889ffad793
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- profilesHash: : (1/1): 37506577
2018-04-30 12:21:39.211 [debug] [        meter/dlms] {      device}: !!! objects change 
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}: Starting dlsmComputeHash:
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 3f081f5de36c2388d80c3e096f90a417
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 8c65bbb524c9df3da9cd9c8cf2ee21ca
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 1a9f2139482b968346ae87c661725604
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 438426051854215b2bccf0aae20475ca
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 90ae0f00d33bfe7cf16bfab3f2bad140
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 57ef5547afc35524c643f854e43ea922
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 9e77e7990818c88823b0c76aba21e5cf
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 4d597ae3bfd4df1bec0d2e19049f81f9
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): bc2653c82345f196009f03c2f42dcc3a
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 0f7b43d0a0815a483311b5889ffad793
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- profilesHash: : (1/1): 09104aa7
2018-04-30 12:21:39.211 [debug] [        meter/dlms] {      device}: !!! original 
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}: Starting dlsmComputeHash:
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 29b15f641ebdd079343dddc7c021b5dc
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 8c65bbb524c9df3da9cd9c8cf2ee21ca
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 1a9f2139482b968346ae87c661725604
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 438426051854215b2bccf0aae20475ca
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 90ae0f00d33bfe7cf16bfab3f2bad140
2018-04-30 12:21:39.212 [debug] [              dlms] {      device}:  --- hash: : (1/1): 57ef5547afc35524c643f854e43ea922
2018-04-30 12:21:39.212 [debug] [              dlms] {      device}:  --- hash: : (1/1): 9e77e7990818c88823b0c76aba21e5cf
2018-04-30 12:21:39.212 [debug] [              dlms] {      device}:  --- hash: : (1/1): 4d597ae3bfd4df1bec0d2e19049f81f9
2018-04-30 12:21:39.212 [debug] [              dlms] {      device}:  --- hash: : (1/1): bc2653c82345f196009f03c2f42dcc3a
2018-04-30 12:21:39.212 [debug] [              dlms] {      device}:  --- hash: : (1/1): 0f7b43d0a0815a483311b5889ffad793
2018-04-30 12:21:39.212 [debug] [              dlms] {      device}:  --- profilesHash: : (1/1): 62df13cd
2018-04-30 12:21:39.212 [debug] [        meter/dlms] {      device}: deviceProfileHash is : (1/1): 62df13cdf8d9cfd9b953fee6d482cc3c


------------------------------------

Time set/update:

2018-04-30 13:49:00.841 [debug] [        meter/dlms] {      device}: ----> Forcing time set
2018-04-30 13:49:00.841 [ info] [        meter/dlms] {      device}: Setting time: 2018-04-30T13:49:00.000-01:00 0
2018-04-30 13:49:00.841 [debug] [              dlms] {      device}: Set 0-0:1.0.0*255 ic 8 attr 2 valueLen 14 B
2018-04-30 13:49:00.903 [debug] [              hdlc] {        hdlc}: tx: (1/3): 7ea027036154897ae6e600c101810008
2018-04-30 13:49:00.903 [debug] [              hdlc] {        hdlc}: tx: (2/3): 0000010000ff0200090c07e2041eff0d
2018-04-30 13:49:00.903 [debug] [              hdlc] {        hdlc}: tx: (3/3): 3100ffffc48019e87e
2018-04-30 13:49:01.065 [debug] [              hdlc] {        hdlc}: rx: (1/2): 7ea01061037448a6e6e700c501810036
2018-04-30 13:49:01.065 [debug] [              hdlc] {        hdlc}: rx: (2/2): cf7e
2018-04-30 13:49:01.065 [debug] [        meter/dlms] {      device}: ----> UpdateMeterClock
2018-04-30 13:49:01.065 [ info] [        meter/dlms] {      device}: Setting time offset: -60 minutes
2018-04-30 13:49:01.065 [debug] [              dlms] {      device}: Set 0-0:1.0.0*255 ic 8 attr 3 valueLen 3 B
2018-04-30 13:49:01.122 [debug] [              hdlc] {        hdlc}: tx: (1/2): 7ea01c0361767ef4e6e600c101810008
2018-04-30 13:49:01.122 [debug] [              hdlc] {        hdlc}: tx: (2/2): 0000010000ff030010ffc426977e
2018-04-30 13:49:01.176 [debug] [              hdlc] {        hdlc}: rx: (1/2): 7ea0106103965462e6e700c501810036
2018-04-30 13:49:01.177 [debug] [              hdlc] {        hdlc}: rx: (2/2): cf7e


2018-04-30 13:53:35.774 [debug] [        meter/dlms] {      device}: Either node or meter time is not known
2018-04-30 13:53:35.774 [debug] [        meter/dlms] {      device}: Clock drift is 3602 seconds
2018-04-30 13:53:35.774 [debug] [        meter/dlms] {      device}: ----> Forcing time set
2018-04-30 13:53:35.774 [ info] [        meter/dlms] {      device}: Setting time: 2018-04-30T14:53:35.000-01:00 0
2018-04-30 13:53:35.774 [debug] [              dlms] {      device}: Set 0-0:1.0.0*255 ic 8 attr 2 valueLen 14 B
2018-04-30 13:53:35.836 [debug] [              hdlc] {        hdlc}: tx: (1/3): 7ea027036154897ae6e600c101810008
2018-04-30 13:53:35.837 [debug] [              hdlc] {        hdlc}: tx: (2/3): 0000010000ff0200090c07e2041eff0e
2018-04-30 13:53:35.837 [debug] [              hdlc] {        hdlc}: tx: (3/3): 3523ffffc480862d7e
2018-04-30 13:53:35.996 [debug] [              hdlc] {        hdlc}: rx: (1/2): 7ea01061037448a6e6e700c501810036
2018-04-30 13:53:35.996 [debug] [              hdlc] {        hdlc}: rx: (2/2): cf7e
2018-04-30 13:53:35.996 [debug] [        meter/dlms] {      device}: ----> UpdateMeterClock
2018-04-30 13:53:35.996 [ info] [        meter/dlms] {      device}: Setting time offset: -60 minutes
2018-04-30 13:53:35.996 [debug] [              dlms] {      device}: Set 0-0:1.0.0*255 ic 8 attr 3 valueLen 3 B
2018-04-30 13:53:36.056 [debug] [              hdlc] {        hdlc}: tx: (1/2): 7ea01c0361767ef4e6e600c101810008
2018-04-30 13:53:36.056 [debug] [              hdlc] {        hdlc}: tx: (2/2): 0000010000ff030010ffc426977e
2018-04-30 13:53:36.125 [debug] [              hdlc] {        hdlc}: rx: (1/2): 7ea0106103965462e6e700c501810036
2018-04-30 13:53:36.125 [debug] [              hdlc] {        hdlc}: rx: (2/2): cf7e


2018-04-30 14:01:22.920 [debug] [        meter/dlms] {      device}: ----> Forcing time adjust
2018-04-30 14:01:22.920 [debug] [              dlms] {      device}: Action 0-0:1.0.0*255 ic 8 methodId 6 actionLen: 3 B
2018-04-30 14:01:22.976 [debug] [              hdlc] {        hdlc}: tx: (1/2): 7ea01c0361546ef6e6e600c301810008
2018-04-30 14:01:22.976 [debug] [              hdlc] {        hdlc}: tx: (2/2): 0000010000ff060110fff669ab7e
2018-04-30 14:01:23.046 [debug] [              hdlc] {        hdlc}: rx: (1/2): 7ea011610374f3bae6e700c701c10000
2018-04-30 14:01:23.046 [debug] [              hdlc] {        hdlc}: rx: (2/2): fcb47e
2018-04-30 14:01:23.046 [debug] [        meter/dlms] {      device}: ----> UpdateMeterClock
2018-04-30 14:01:23.047 [ info] [        meter/dlms] {      device}: Setting time offset: -60 minutes
2018-04-30 14:01:23.047 [debug] [              dlms] {      device}: Set 0-0:1.0.0*255 ic 8 attr 3 valueLen 3 B
2018-04-30 14:01:23.102 [debug] [              hdlc] {        hdlc}: tx: (1/2): 7ea01c0361767ef4e6e600c101810008
2018-04-30 14:01:23.102 [debug] [              hdlc] {        hdlc}: tx: (2/2): 0000010000ff030010ffc426977e
2018-04-30 14:01:23.158 [debug] [              hdlc] {        hdlc}: rx: (1/2): 7ea0106103965462e6e700c501810036
2018-04-30 14:01:23.158 [debug] [              hdlc] {        hdlc}: rx: (2/2): cf7e
2018-04-30 14:01:23.158 [debug] [        meter/dlms] {      device}: ----> UpdateMeterClock


2018-04-30 14:02:39.713 [debug] [        meter/dlms] {      device}: Clock drift is 3 seconds
2018-04-30 14:02:39.713 [debug] [        meter/dlms] {      device}: ----> Forcing time adjust
2018-04-30 14:02:39.713 [debug] [              dlms] {      device}: Action 0-0:1.0.0*255 ic 8 methodId 6 actionLen: 3 B
2018-04-30 14:02:39.770 [debug] [              hdlc] {        hdlc}: tx: (1/2): 7ea01c0361546ef6e6e600c301810008
2018-04-30 14:02:39.770 [debug] [              hdlc] {        hdlc}: tx: (2/2): 0000010000ff060110005acf3b7e
2018-04-30 14:02:39.841 [debug] [              hdlc] {        hdlc}: rx: (1/2): 7ea011610374f3bae6e700c701c10000
2018-04-30 14:02:39.841 [debug] [              hdlc] {        hdlc}: rx: (2/2): fcb47e
2018-04-30 14:02:39.841 [debug] [        meter/dlms] {      device}: ----> UpdateMeterClock
2018-04-30 14:02:39.841 [ info] [        meter/dlms] {      device}: Setting time offset: -60 minutes
2018-04-30 14:02:39.841 [debug] [              dlms] {      device}: Set 0-0:1.0.0*255 ic 8 attr 3 valueLen 3 B
2018-04-30 14:02:39.897 [debug] [              hdlc] {        hdlc}: tx: (1/2): 7ea01c0361767ef4e6e600c101810008
2018-04-30 14:02:39.897 [debug] [              hdlc] {        hdlc}: tx: (2/2): 0000010000ff030010ffc426977e
2018-04-30 14:02:39.969 [debug] [              hdlc] {        hdlc}: rx: (1/2): 7ea0106103965462e6e700c501810036
2018-04-30 14:02:39.969 [debug] [              hdlc] {        hdlc}: rx: (2/2): cf7e
2018-04-30 14:02:39.969 [debug] [        meter/dlms] {      device}: ----> UpdateMeterClock

2018-04-30 14:07:19.211 [debug] [        meter/dlms] {      device}: Either node or meter time is not known
2018-04-30 14:07:19.211 [debug] [        meter/dlms] {      device}: Clock drift is -57 seconds
2018-04-30 14:07:19.211 [debug] [        meter/dlms] {      device}: ----> Forcing time adjust
2018-04-30 14:07:19.211 [debug] [              dlms] {      device}: Action 0-0:1.0.0*255 ic 8 methodId 6 actionLen: 3 B
2018-04-30 14:07:19.269 [debug] [              hdlc] {        hdlc}: tx: (1/2): 7ea01c0361546ef6e6e600c301810008
2018-04-30 14:07:19.269 [debug] [              hdlc] {        hdlc}: tx: (2/2): 0000010000ff060110ffa6ecf97e
2018-04-30 14:07:19.339 [debug] [              hdlc] {        hdlc}: rx: (1/2): 7ea011610374f3bae6e700c701c10000
2018-04-30 14:07:19.339 [debug] [              hdlc] {        hdlc}: rx: (2/2): fcb47e
2018-04-30 14:07:19.339 [debug] [        meter/dlms] {      device}: ----> UpdateMeterClock
2018-04-30 14:07:19.339 [ info] [        meter/dlms] {      device}: Setting time offset: -60 minutes
2018-04-30 14:07:19.339 [debug] [              dlms] {      device}: Set 0-0:1.0.0*255 ic 8 attr 3 valueLen 3 B
2018-04-30 14:07:19.395 [debug] [              hdlc] {        hdlc}: tx: (1/2): 7ea01c0361767ef4e6e600c101810008
2018-04-30 14:07:19.395 [debug] [              hdlc] {        hdlc}: tx: (2/2): 0000010000ff030010ffc426977e
2018-04-30 14:07:19.452 [debug] [              hdlc] {        hdlc}: rx: (1/2): 7ea0106103965462e6e700c501810036
2018-04-30 14:07:19.452 [debug] [              hdlc] {        hdlc}: rx: (2/2): cf7e
2018-04-30 14:07:19.452 [debug] [        meter/dlms] {      device}: ----> UpdateMeterClock
2018-04-30 14:07:19.503 [debug] [              dlms] {      device}: Disconnect HDLC link
2018-04-30 14:07:19.509 [debug] [              hdlc] {        hdlc}: tx: (1/1): 7ea00703615365817e
2018-04-30 14:07:19.530 [debug] [              hdlc] {        hdlc}: rx: (1/1): 7ea00761037377467e
2018-04-30 14:07:19.531 [debug] [              hdlc] {        hdlc}: HDLC link disconnected
2018-04-30 14:07:19.531 [debug] [        meter/dlms] {      device}: processAlarmsActivationRequest




------------------------
Omnibox wifi:


sudo iwlist wlan0 scanning | grep ESSID

nmcli dev

nmcli con

nmtui

nmcli dev wifi list

nmcli device status

wpa_supplicant -B -i wlan0 -c /etc/wpa_supplicant/wpa_supplicant.conf

sudo wpa_supplicant -i wlan0 -c /etc/wpa_supplicant/wpa_supplicant.conf
dhclient wlan0



----------------------------------

git push ssh://stevetickle@gerrit.cyco.io:222/terminal HEAD:refs/for/master






---------------------------------

Does this sync?










