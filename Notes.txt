



























































BackOffice VPN:
SteveTickle
garment seize optimism allow
b67bc45987c51f40f43606839cfd757b

"sudo openvpn --config ~/.vpn/SteveTickle.ovpn"
sudo openvpn --config ~/.vpn/SteveTickle.ovpn --auth-user-pass "garment seize optimism allow"


CC VPN
netExtender --u SteveTickle -p "mango surfeit balance yellow" -d CyanTechnology gw.cyantechnology.com:4433


Cyanconnode-1__________
<Client>

<WPA & WPA2 Personal>
W6&v$8?6d!p3___________


CC-Guest:
beamstar59TP


stickle@omnireltest1.dev.cyanconnode.com

https://monuk2.prod.cyanconnode.com/zabbix/
SteveTickle
jJs&5bZd*0Ae

VPN:
garment seize optimism allow
b67bc45987c51f40f43606839cfd757b

GitLab:
git clone https://gitlab.cyco.io/CyLecNode/cylec_node.git
SteveTickle
garment seize optimism allow

JIRA
stickle
b$1488#8OFX3

Slack
cyanconnode.slack.com
steve.tickle@cyantechnology.com
Cy4nST$239

https://artifactory.cyco.io
SteveTickle
garment seize optimism allow

vm:
username:ubuntu
pw:ubuntu

email:
steve.tickle@cyanconnode.com
Cy4nST$239

Windows:
Cy4nST$239

Linux
cy4nst$239


cylec_node:


Connode:
(gerrit.se.cyco.io)
stevetickle
Homeowner2#


https://jira.se.cyco.io
changeme


https://confluence.se.cyco.io/dologin.action
SteveTickle
garment seize optimism allow

JIRA
SteveTickle
garment seize optimism allow


Microsoft Teams & Office 365:
new email:
Steve.Tickle@cyanconnode.com
Slobber13#

Laptop:
Ubuntu13#

mysql root user ubuntu


https://diskstation.se.cyco.io:5001/
diskstation.se.cyco.io
admin
Response1

ryanair.com
travel@cyanconnode.com
Cy4ntravel

ssh stickle@lnt-dev2.dev.cyanconnode.com


Windows Network
stevetickle
Homeowner10#


Username:         SteveTickle
Password:           mango surfeit balance yellow
Server:                 gw.cyantechnology.com:4433
Domain:               CyanTechnology               ( case sensitive – no space )


Instagram
2586 7014
9407 3812
9532 1670
6327 9184
0126 4893


----------------------------------------------------------


Another way to squash all your commits is to reset the index to master:

 git checkout yourBranch
 git reset $(git merge-base master yourBranch)
 git add -A
 git commit -m "one commit on yourBranch"


-----------------------------------------------------------

PVVNL


 * @subsection main_subsection_core Core Radio Modules
 * - @ref transport
 * - @ref collector
 * - @ref netmon
 *
 * @subsection main_subsection_system System-Wide Routines
 * - @ref system
 * - @ref preferences
 *
 * @subsection main_subsection_serial Serial Interface
 * - @ref command
 * - @ref meter
 *
 * @subsection main_subsection_utils Utility Modules
 * - @ref clock
 * - @ref security
 * - @ref otxu
 * - @ref dio
 * - @ref tamper
 * - @ref frame
 * - @ref led
 * - @ref sleep
 * - @ref debug
 *
 * @subsection main_subsection_lib CyLec Library
 * - @ref cylec
 * - @ref crc
 * - @ref xxtea
 * - @ref network_common
 * - @ref preferences_common
 * - @ref version


------------------------------------------------


PR_READ         - abstraction to allow reading from file/flash/etc.


consistent overhead byte stuffing (COBS). Why in HAL?


----------------------

EVENT_mount_sdcard_partition_table_size_mismatch_warning_WARNING

GPT_store() -> while(1) appropriate?


-----------------------------------------

Command.c
#define COMMAND_HANDLER_METER_DATA_STORE_SIZE (100l * 1024l * 1024l)

Look at .tpl files for protocol 0x80 at the load survey
request/response PDUs.

determine total for 45 days (dates in .json).

multiply by expected number of meters.


From LSS1.tpl:
- grep 7e LSS1.hex
LSS1.hex = 19904
therefore LSS1.bin would be 19904/2 = 9952 bytes
LSS1 is 3 days worth of data:


2016-09-22T00:00:00-00:00 ->
2016-09-24T00:00:00-00:00 ->
2016-09-27T19:19:41-00:00 ->

over 45 request/response pairs.

-----------------------------------------

DCU
callback
dlms
hdlc
meter_emulator
protocol_xxxx
protocol


- generally wrapped messages are passed up but
for some requests that need iteration over the meter
side to form a single HES message, the dates need
to be extracted (e.g. logs).


---------------------------------------------

CyLec DCU v2 (Hwicce)


The DCUv2 has a python emulator called the python DCU.
It can be used to debug or reproduce problems and usually with DCUTool.
(I can't find the latest archive so if someone can add a link here it would be great)

When you build hwicce, you can run:

./dist/run_elecmeterdcu2 --sim --cylec_sim --gprs_tcpip --default_config=dcu_default_config.txt --sdcard_file=sdcard.raw --trace_cylec cylec.log --serial_number 2118245 --rky1 1b79c0ba24525a3fae008daff981a2e1

[uncompress sdcard-128.raw.xz and change path accordingly]

NOTE: there is a config_default.txt in hwicce as well.
The files attached have some of my settings.

------------------------------------
Q1) CYLEC_MAX_DATA_SIZE == 128 bytes but tx/rx buffers are 256 bytes each.
Q2) meter_command_protocol.c:630 arbitrary 128 byte buffer on stack.
Q3) cmode?/protobuf mode. cylec-frame-mode?
Q4) back end == head end??
Q5) datacol == data collector? IS/LS data.
Q6) DINE == Digital INput Events?
Q7) command_link.c:364 arbitrary 128 byte buffer on stack.
Q8) text/binary mode unnecessary... text mode for demo only? why is it in the product? complex state-machine.
Q9) lots of message buffers around, static and on stack.


meat of the DCU:
-           COMMAND_process(sdcard_fs_ready);
-           METERCOMMS_process(sdcard_fs_ready);


COMMAND_process:
- COMMAND_HANDLER_process
- COMMAND_LINK_process
- CABLE_process
- GPRS_process

METERCOMMS_process:
- CYLEC_process
- METERCOMMS_loadsurvey_schedule_process
- METERCOMMS_instantaneous_schedule_process
- METER_COMMAND_idle
- METERCOMMS_dine_run
- METERCOMMS_run_backend
- METERCOMMS_loadsurvey_schedule_next
- METERCOMMS_instantaneous_schedule_next
- METER_COMMAND_completed
- METERCOMMS_datacol_finish
- METERCOMMS_do_completed_actions


CYLEC_process:
if anything ready to transmit....
- CYLEC_PROTO_process
- CYLEC_LOCK_process_task
- METERCOMMS_dine_process_task
- CYLEC_CHANNEL_process_task()
- PASSTHROUGH_process_task
- METER_COMMAND_process_task
- CYLEC_PROTO_tx_frame


-------------------------------

CyLec_Msg       : Formation and parsing of frames.
CyLec_Proto     : transmission of frames
UART            : pipe to RF module (?)
CyLec:          : Top level state machine for transmission of messages.
CyLec_Channel   : Channel management state machine.

Meter_Command   :
Meter_Command_Protoocol : top-level message handling switch for meter-targeted messages.
Meter_Command_DINE      : Process a DINE message (simple state machine).

MeterComms_DINE : Manage a FIFO of DINE events.


command_meter_data_list                     : 100MB FIFO, data to backend, from
command_command_list                        : 1MB FIFO, commands from backend,
command_response_list                       : 1MB FIFO, commands to backend
command_passthough_frames_to_backend_fifo   : 1MB FIFO,
command_passthough_frames_from_backend_fifo : 1MB FIFO,

command_link_tx_fifo                        : Stores the pb encoded RX DCU_CommunicationUnion post CRC/COBS/framing/etc.
command_link_rx_fifo                        : Stores the pb encoded TX DCU_CommunicationUnion pre CRC/COBS/framing/etc.

METERCOMMS_init

MeterComms.c:
case FROM_BACKEND:
case FROM_DATACOL_LOADSURVEY_SCHEDULE:
case FROM_DATACOL_INSTANTANEOUS_SCHEDULE:
case FROM_DINE:


---------------------------------------------------------------
Last Gasp:
- Tamper/power-fail detect.
   - Another DIN?
   - On trigger, see if meter is alive to distnguish between tamper/powerFail?
- debounce.
- Separate pin is safest to implement from s/w perspective (no need to distinguish between tamper/powerfail)
-


On detect:
- stop all other comms to quieten the channel.
- wait a duration based on the meter number (form of TDMA). Each meter is allocated a transmit 'slot'.
- reduce power-usage until the duration expires, then generate message and transmit.
- The slots need to have a bit of space on either side for 'wiggle room'.
- create event in local event log? do we even have one? is it maintained by the meter?
- define message.


In normal mode:
- If a power-fail event message is received, assume a meter(s) on the network are
experiencing a power-failure and stop transmitting to clear the air (for x seconds).
- Only forward power-fail events if one has been detected (for x seconds).


Security:
- If not careful, it could be used as an exploit.


Implementation:
-


Testing:
- many nodes needed to test impact of many transmissions.
- synchronised power-fail.
- jittered power-fail.


---------------------------------------------------------------

PREFERENCES_BACKOFF_A
PREFERENCES_BACKOFF_B
PREFERENCES_BACKOFF_N
PREFERENCES_DINE3_PAYLOAD




PREFERENCES_ASYNC_JITTER_OFFSET
PREFERENCES_ASYNC_JITTER_MASK
PREFERENCES_ASYNC_JITTER_MAX_TRANSMITS


 203 Memory Configuration
 204
 205 Name             Origin             Length             Attributes
 206 CodeFlash        0x0000000008010000 0x0000000000028000 = 160KB : 0x27ce4
 207 DataFlash        0x0000000000000000 0x0000000000007fe0 = 32KB  :
 208 InfoFlash        0x0000000000007fe0 0x0000000000000020 = 32B   :
 209 TROMFlash        0x0000000020000000 0x0000000000002000 = 8KB   :
 210 BootFlash        0x0000000040000000 0x0000000000002000 = 8KB   :
 211 DataRam          0x0000000000008000 0x0000000000005fc0 = 24KB  :
 212 codelow          0x0000000008000000 0x0000000000010000 = 64KB  :
 213 codehigh         0x0000000008010000 0x0000000000028000 = 160KB :
 214 rodata           0x0000000000000000 0x0000000000007fe0 = 32KB  :
 215 info             0x0000000000007fe0 0x0000000000000020 = 32B   :
 216 trom             0x0000000020000000 0x0000000000002000 = 8KB   :
 217 boot             0x0000000040000000 0x0000000000002000 = 8KB   :
 218 rwdata           0x0000000000008000 0x0000000000005fc0 = 24KB  :
 219 *default*        0x0000000000000000 0xffffffffffffffff =
 220

--------------------------------------------------

Current:
   text    data     bss     dec     hex filename
 189116      32   22146  211294   3395e cylec_node.elf



LD script in : ~/Projects/cygh/cyghlib/config/board/mCOG-RF-1X-SPA1


ca build --buildenv build --cmd 'make clean stamp-build-cylec-node-cyanide'





------------------------------------------------------------------------


To free up space, remove:
PREFERENCES_RELAY0_CONFIGURATION    : R0CF
PREFERENCES_RELAY0_CONTROL          : R0CT
PREFERENCES_TAMPER0_CONFIGURATION   : T0CF
PREFERENCES_TAMPER0_STATE           : T0ST

relay_control.c
tamper_monitor.c


config set NSYC xQZD3GW37dz
config set CYSN 0xabcd

transport_send_udp() generates the event.
look at tamper_process_transition()




------------------------------------------------------------------------

New architecture notes:
- Option 1: Translate DLMS from meter->OMP in node.
- Option 2: Pass-thru DLMS from meter up into node and further.

- Option 2 can potentially mean less code on Node, but is this significant if both options are available in cheapest configuration?
- Option 1 puts more intelligence onto Node. This can be tailored to meter. i.e. Meter-specific builds.
- Option 1 will can be more optimal regarding communications, optimised, proprietary comms will beat DLMS/HDLC forwarding and the multiple round-trips that are currently needed can be
  reduced to one potentially (RAM limitation here?)
- Option 1 means intelligence drops out of DCU, meaning a cheaper DCU potentially.
- Potentially use compressed packets, leading to less congestion and more overhead for larger networks.
- Reduction of on-air traffic means more clear-air for comms and hence more supported Nodes per DCU.


- Possible formats for over the air in Option 1.
binary FlatBuffers <--- looks very good.
OMP
MessagePack
BER
protobuf
BSON
thrift

format comparison:
google.github.io/flatbuffers/flatbuffers_benchmarks.html


--------------------------------------

BAN-41

- defaults for preferences
- cancel tamper id.


-----------------------------------------------------


MDM UI:
- Drill down. chart showing Number of alerts of different types->list of meters in spreadsheet view->individual meter->action.
- use existing logs to form usage model.

------------------------------------

build commands:

cylec_node:
ca build --buildenv build --cmd 'make clean stamp-build-cylec-node-cyanide'
~/Projects/cylec_node$ docker rmi build && ca docker_build --dockerfile Dockerfile.build --tag build:latest


cyghlib:
ca build --buildenv cygh/buildenv_cygh --cmd 'make clean stamp-build-cyghlib-cyanide'
rm stamp-build-cyghlib-cyanide && ca build --buildenv cygh/buildenv_cygh --cmd 'make stamp-build-cyghlib-cyanide'



Command line:
ca build --buildenv build


-----------------------------------------------
udev rules in doc.


 1486  ls /etc/udev/rules.d/
 1487  ls
 1488  cd
 1489  cd Projects/stlink/etc/udev/rules.d/
 1490  ls
 1491  sudo cp * /etc/udev/rules.d
 1492  ls /etc/udev/rules.d/
 1493  sudo udevadm control --reload-rules
 1494  sudo udevadm trigger


--------------------------------------------------



rg.gpio.ef.ip_en    = 0x0001;
rg.gpio.ef.op_en    = 0xfffe;
fd.gpio.ef.op_sel.porte_0   = 1;//enable gpio
while(true)
{
    volatile uint8_t state  = fd.gpio.ef.ip_state.porte_0;
    state++;
}

---------------------------------------

Cylec frame ids for DINE:
- CYLEC_FRAME_ID_DIN_EVENT_EXTENDED
- CYLEC_FRAME_ID_DIN_EVENT

dine states on DCU.
- PROTOCOL_SEND_CANCEL
- PROTOCOL_SEND_WAIT_OK
- PROTOCOL_SEND_ERSC
- PROTOCOL_SEND_WAIT_CONFIGDATA



cygh_uart_main_set_config(CYGH_CONFIG_UART_MAIN_BITS, CYGH_CONFIG_UART_MAIN_STOP_BITS, CYGH_CONFIG_UART_MAIN_PARITY);


---------------------------------------------------


1234
INFO


Welcome to minicom 2.7

OPTIONS: I18n
Compiled on Feb  7 2016, 13:37:27.
Port /dev/ttyUSB1, 09:38:20

Press CTRL-A Z for help on special keys

Meter-Node
# CyLec (v2.9.0.515130044)
# Hardware rev: 0000 00 @00000
# System address (CY3S): 0xE1EC
# Network address (CY3A): 0x0000
# Serial no (CYSN): 0x00000000
# Band (BND1): 865MHz Type Approval
# Channel (CHAN): 0
# Dynamic Thresholds (St1a & St2d): On
# Role (METR): Meter
# OTXU: Off
# Boot address (CYBA): 0xFFFFFFFF
METR: 1



DCU-Node.
# CyLec (v2.9.0.515130044)
# Hardware rev: 0000 00 @00000
# System address (CY3S): 0x0002
# Network address (CY3A): 0x0001
# Serial no (CYSN): 0x00001002
# Band (BND1): 865MHz Type Approval
# Channel (CHAN): 0
# Dynamic Thresholds (St1a & St2d): On
# Role (METR): Concentrator/Handheld
# OTXU: Off
# Boot address (CYBA): 0xFFFFFFFF

-----------------------------------------------------

config get ERSC

1 == active
0 = not active.



PREFERENCES_DINE3_PAYLOAD
PREFERENCES_ASYNC_JITTER_OFFSET
PREFERENCES_ASYNC_JITTER_MASK
PREFERENCES_ASYNC_JITTER_MAX_TRANSMITS


0x60000 in 1/65536 units = 6 seconds. 6 seconds in 1/1024 units = 6*1024=0x1800.
0x7ffff in 1/65536 units = 7 seconds. 7 seocnds in 1/1024 units = 7*1024=0x1c00
0x1fff in 1/1024 units = 7 seconds.


def decode_alarm(meter_protocol_id, octets, metadata):
    """
    decode octets into it's decoded json structure
    """

    #
    # decode the meter-generic messages.
    #
    decoder = MeterCommonAlarmDecoder()
    decoded = decoder.decode_alarm(octets, metadata)
    octets_out = meterproto_json.dumps(decoded)

    if octets_out == None:

        #
        # This wasn't a message common to all meters, so
        # decode the meter-specific messages.
        #
        decoder = get_decoder(meter_protocol_id)
        decoded = decoder.decode_alarm(octets, metadata)
        octets_out = meterproto_json.dumps(decoded)

    return octets_out

------------------------------------------------------------------------

DCUb4

- CM-T43 dev board Compulab.
- Primary bootloader FLASH is SPI0. expose these for boot purposes.
- JTAG, 6xUARTs, SPI0 FLASH, I2C0 (board-info), ADC for monitoring,



------------------------------------------------------------------------


|
ERROR: Task 3520 (/BuildArea/cm-t43-yocto-dev/tisdk/sources/oe-core/meta/recipes-multimedia/gstreamer/gstreamer1.0-plugins-bad_1.2.3.bb, do_unpack) failed with exit code '1'
WARNING: Failed to fetch URL http://releases.linaro.org/13.03/components/toolchain/gcc-linaro/4.7/gcc-linaro-4.7-2013.03.tar.bz2, attempting MIRRORS if available
ERROR: Fetcher failure: Fetch command failed with exit code 8, output:
http://releases.linaro.org/13.03/components/toolchain/gcc-linaro/4.7/gcc-linaro-4.7-2013.03.tar.bz2:
2017-05-25 09:33:17 ERROR 404: NOT FOUND.

ERROR: Function failed: Fetcher failure for URL: 'http://releases.linaro.org/13.03/components/toolchain/gcc-linaro/4.7/gcc-linaro-4.7-2013.03.tar.bz2'. Unable to fetch URL from any source.
ERROR: Logfile of failure stored in: /BuildArea/cm-t43-yocto-dev/tisdk/build/arago-tmp-external-linaro-toolchain/work/cortexa9t2hf-vfp-neon-linux-gnueabi/gcc/linaro-4.7-r2013.03-arago1/temp/log.do_fetch.10728
ERROR: Task 3368 (/BuildArea/cm-t43-yocto-dev/tisdk/sources/meta-arago/meta-arago-distro/recipes-devtools/gcc/gcc_linaro-4.7.bb, do_fetch) failed with exit code '1'



--------------------------------

U-Boot

*
* NAND Device Support
*
Support Denali NAND controller (NAND_DENALI) [N/y/?] (NEW)
Support for Freescale NFC for VF610/MPC5125 (NAND_VF610_NFC) [N/y/?] (NEW)
Support for NAND on PXA3xx and Armada 370/XP/38x (NAND_PXA3XX) [N/y/?] (NEW)
Configure Arasan Nand (NAND_ARASAN) [N/y/?] (NEW)
Support for Zynq Nand controller (NAND_ZYNQ) [N/y/?] (NEW)

*
* Generic NAND options
*
*
* SPI Flash Support
*
Legacy SPI Flash Interface support (SPI_FLASH) [N/y/?] (NEW)


*
* SPI Support
*
Freescale eSPI driver (FSL_ESPI) [N/y/?] (NEW)
Freescale QSPI driver (FSL_QSPI) [N/y/?] (NEW)
TI QSPI driver (TI_QSPI) [N/y/?] (NEW)




------------------------------------------------


BeagleBone:

login: debian
password: temppwd

The IP Address for usb0 is: 192.168.7.2
beaglebone login: debian
Password:
Linux beaglebone 3.8.13-bone79 #1 SMP Tue Oct 13 20:44:55 UTC 2015 armv7l

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
debian@beaglebone:~$ ifconfig
eth0      Link encap:Ethernet  HWaddr 04:a3:16:e1:44:07
          inet addr:172.16.32.112  Bcast:172.16.32.255  Mask:255.255.255.0
          inet6 addr: fe80::6a3:16ff:fee1:4407/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:2514 errors:0 dropped:7 overruns:0 frame:0
          TX packets:151 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:382899 (373.9 KiB)  TX bytes:23452 (22.9 KiB)
          Interrupt:40

lo        Link encap:Local Loopback
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:32 errors:0 dropped:0 overruns:0 frame:0
          TX packets:32 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:2592 (2.5 KiB)  TX bytes:2592 (2.5 KiB)

usb0      Link encap:Ethernet  HWaddr 04:a3:16:e1:44:00
          inet addr:192.168.7.2  Bcast:192.168.7.3  Mask:255.255.255.252
          inet6 addr: fe80::6a3:16ff:fee1:4400/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

debian@beaglebone:~$


----------------------------------------------------------------------

u-boot (from SD-Card):

setenv bootcmd "load mmc 0:1 0x82000000 /boot/zImage; load mmc 0:1 0x88000000 /boot/am437x-sbc-t43.dtb; bootz 0x82000000 - 0x88000000 "

setenv bootargs "root=/dev/mmcblk0p1 ro console=ttyO0,115200n8 rootwait "
setenv bootargs "root=/dev/mmcblk0p1 ro console=ttyO0,115200n8 rootwait quiet "

device tree is am437x-sbc-t43.dts


Welcome to Cosmos
Cosmos login: root
# blkid
/dev/mmcblk1p2: LABEL="rootfs" UUID="c861bdea-fbfd-420a-bb47-4945d15a9d61"
/dev/mmcblk1p1: LABEL="boot" UUID="1a3e2366-ba6c-456b-bf0b-d3321b66ed44"
/dev/mmcblk0p1: UUID="4e730d6a-3941-42f7-a5be-f5fdaa50a375"
#

bcm7xxx
mdio-bcm-unimac
pxa168_eth
bcmsysport
genet


BeagleBone black boot lines:
load mmc 0:1 0x82000000 /boot/zImage; load mmc 0:1 0x88000000 /boot/am335x-boneblack.dtb; bootz 0x82000000 - 0x88000000
bootargs=root=/dev/mmcblk0p1 ro console=ttyO0,115200n8 rootwait quiet



------------------------------------------------


METERCOMMS_process()
METERCOMMS_run_backend()
EVENT_metercomms_starting_command_from_backend_ERROR(&req->uuid);




METERCOMMS_start_new_command()
EVENT_metercomms_failed_command_unkown_meter_ERROR()
METER_get_by_uuid() failed.


METER_get_by_uuid()
 CONFIG_meter_iterate_start() -> LIST_iterate()
  CONFIG_meter_next() -> LIST_next()
   UUID_equals()


- UUID reported is actualyl correct, therefore the list must be corrupt (or the search thru it).

error triggered by NULL uuid. (in util/nanopb/event.pb.macro.h)
#define EVENT_metercomms_starting_command_from_backend_ERROR(u_metercomms_starting_command_from_backend_uuid) \
  /* type check enum arguments by comparing them to something of the expected type */ \
  if (u_metercomms_starting_command_from_backend_uuid == (const UUID *)0) {} \
  EVENT_metercomms_starting_command_from_backend_log_(MODULE, __LINE__, EventSeverity_ERROR, u_metercomms_starting_command_from_backend_uuid)

&req->uuid must != 0 therefore this will always cause an error.





event_diag_log_id: 79 timestamp: 1496997186 time_since_boot_secs: 163 module: CYLEC line: 46 severity: DEBUG cylec { packet_from_node { cylec_frame { frame_id: DIN_EVENT_EXTENDED flags: 0 src_addr: 2 dst_addr: 1 payload: "CYLEC_DINE3_LAST_GASP_SENTINEL" } } }


event_diag_log_id: 112 timestamp: 1496997378 time_since_boot_secs: 355 module: CYLEC line: 46 severity: DEBUG cylec { packet_from_node { cylec_frame { frame_id: DIN_EVENT_EXTENDED flags: 0 src_addr: 2 dst_addr: 1 payload: "CYLEC_DINE3_LAST_GASP_SENTINEL" } } }
event_diag_log_id: 113 event_rec_log_id: 221 timestamp: 1496997378 time_since_boot_secs: 355 module: METERCOMMS_DINE line: 154 severity: WARNING din_event { meter_uuid { uuid_bytes: "9\343e\205\244\206E\332\251r\265\337) !\000" } tamper_data: "CYLEC_DINE3_LAST_GASP_SENTINEL" }
event_diag_log_id: 114 timestamp: 1496997378 time_since_boot_secs: 355 module: CYLEC line: 74 severity: DEBUG cylec { packet_from_dcu { cylec_frame { frame_id: OPEN_CHANNEL flags: 0 src_addr: 1 dst_addr: 2 payload: "" } } }
event_diag_log_id: 115 timestamp: 1496997378 time_since_boot_secs: 355 module: CYLEC line: 46 severity: DEBUG cylec { packet_from_node { cylec_frame { frame_id: OK flags: 0 src_addr: 2 dst_addr: 1 payload: "" } } }
event_diag_log_id: 116 timestamp: 1496997378 time_since_boot_secs: 355 module: CYLEC line: 74 severity: DEBUG cylec { packet_from_dcu { cylec_frame { frame_id: SET_CONFIG flags: 0 src_addr: 1 dst_addr: 2 payload: "CSRE\000\002\000\000" } } }



<- CyLecFrame(FRAME_EVENT_DATA 0x2->0x1 "CYLEC_DINE3_LAST_GASP_SENTINEL")
-> CyLecFrame(OPEN_CHANNEL 0x1->0x2 "")
<- CyLecFrame(OK 0x2->0x1 "")
-> CyLecFrame(SET_CONFIG 0x1->0x2 "CSRE\x00\x02\x00\x00")
<- CyLecFrame(UNKNOWN_PREF 0x2->0x1 "")
-> CyLecFrame(CLOSE_CHANNEL 0x1->0x2 "")
<- CyLecFrame(OK 0x2->0x1 "")
-> CyLecFrame(OPEN_CHANNEL 0x1->0x2 "")
<- CyLecFrame(OK 0x2->0x1 "")
-> CyLecFrame(SET_CONFIG 0x1->0x2 "CSRE\x00\x02\x00\x00")
<- CyLecFrame(UNKNOWN_PREF 0x2->0x1 "")
-> CyLecFrame(CLOSE_CHANNEL 0x1->0x2 "")
<- CyLecFrame(OK 0x2->0x1 "")


event_diag_log_id: 633 timestamp: 1497007698 time_since_boot_secs: 5631 module: CYLEC line: 46 severity: DEBUG cylec { packet_from_node { cylec_frame { frame_id: DIN_EVENT_EXTENDED flags: 0 src_addr: 2 dst_addr: 1 payload: "CYLEC_DINE3_LAST_GASP_SENTINEL" } } }
event_diag_log_id: 634 event_rec_log_id: 262 timestamp: 1497007698 time_since_boot_secs: 5631 module: METERCOMMS_DINE line: 154 severity: WARNING din_event { meter_uuid { uuid_bytes: "9\343e\205\244\206E\332\251r\265\337) !\000" } tamper_data: "CYLEC_DINE3_LAST_GASP_SENTINEL" }
event_diag_log_id: 635 timestamp: 1497007698 time_since_boot_secs: 5631 module: CYLEC line: 74 severity: DEBUG cylec { packet_from_dcu { cylec_frame { frame_id: OPEN_CHANNEL flags: 0 src_addr: 1 dst_addr: 2 payload: "" } } }
event_diag_log_id: 636 timestamp: 1497007698 time_since_boot_secs: 5632 module: CYLEC line: 46 severity: DEBUG cylec { packet_from_node { cylec_frame { frame_id: OK flags: 0 src_addr: 2 dst_addr: 1 payload: "" } } }
event_diag_log_id: 637 timestamp: 1497007698 time_since_boot_secs: 5632 module: CYLEC line: 74 severity: DEBUG cylec { packet_from_dcu { cylec_frame { frame_id: SET_CONFIG flags: 0 src_addr: 1 dst_addr: 2 payload: "CSRE\000\002\000\000" } } }
event_diag_log_id: 638 timestamp: 1497007698 time_since_boot_secs: 5632 module: CYLEC line: 46 severity: DEBUG cylec { packet_from_node { cylec_frame { frame_id: UNKNOWN_PREF flags: 0 src_addr: 2 dst_addr: 1 payload: "" } } }
event_diag_log_id: 639 timestamp: 1497007698 time_since_boot_secs: 5632 module: CYLEC line: 74 severity: DEBUG cylec { packet_from_dcu { cylec_frame { frame_id: CLOSE_CHANNEL flags: 0 src_addr: 1 dst_addr: 2 payload: "" } } }
event_diag_log_id: 640 timestamp: 1497007698 time_since_boot_secs: 5632 module: CYLEC line: 46 severity: DEBUG cylec { packet_from_node { cylec_frame { frame_id: OK flags: 0 src_addr: 2 dst_addr: 1 payload: "" } } }


event_diag_log_id: 79 timestamp: 1497009253 time_since_boot_secs: 120 module: MAIN line: 332 severity: DEBUG main_loop_stats { period_in_microseconds: 713 sdcard_peak_writes_in_main_loop: 0 main_loop_peak_us: 22158 }
event_diag_log_id: 80 timestamp: 1497009254 time_since_boot_secs: 120 module: COMMAND_LINK line: 434 severity: DEBUG dcucomms_rx_msg_type { receive_msg: 21 }
event_diag_log_id: 81 timestamp: 1497009254 time_since_boot_secs: 120 module: COMMAND_LINK line: 479 severity: DEBUG dcucomms_tx_msg_type { transmit_msg: 22 }
event_diag_log_id: 82 timestamp: 1497009255 time_since_boot_secs: 122 module: CYLEC line: 46 severity: DEBUG cylec { packet_from_node { cylec_frame { frame_id: DIN_EVENT_EXTENDED flags: 0 src_addr: 2 dst_addr: 1 payload: "CYLEC_DINE3_LAST_GASP_SENTINEL" } } }
event_diag_log_id: 83 event_rec_log_id: 272 timestamp: 1497009255 time_since_boot_secs: 122 module: METERCOMMS_DINE line: 154 severity: WARNING din_event { meter_uuid { uuid_bytes: "9\343e\205\244\206E\332\251r\265\337) !\000" } tamper_data: "CYLEC_DINE3_LAST_GASP_SENTINEL" }
event_diag_log_id: 84 timestamp: 1497009255 time_since_boot_secs: 122 module: CYLEC line: 74 severity: DEBUG cylec { packet_from_dcu { cylec_frame { frame_id: OPEN_CHANNEL flags: 0 src_addr: 1 dst_addr: 2 payload: "" } } }


2017-06-09 15:31:52,132 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:56846): event id 291: processing
2017-06-09 15:31:52,184 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:56846): Re-mapping event id 291 to uuid d5751a00-09a6-4bf8-824a-c05494c6e3be
2017-06-09 15:31:52,184 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:56846): event id d5751a00-09a6-4bf8-824a-c05494c6e3be: is dine3, sending to node_alarm processor
2017-06-09 15:31:52,185 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:56846): event id 291: done







-----------------------------

old:
2017-05-23 17:32:18,188 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52330): checking dcu config version
2017-05-23 17:32:18,204 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52330): generated config is 5950fa7e415b4b8cbaab16d858c5274d
2017-05-23 17:32:18,214 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52330): dcu config version is 97eb2eedd4ee20ebd77549788b5dc8ff
2017-05-23 17:32:18,231 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52330): last applied config is 97eb2eedd4ee20ebd77549788b5dc8ff
2017-05-23 17:32:18,231 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52330): generated different to last-applied: saving generated
2017-05-23 17:32:18,232 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52330): storing previous config "5950fa7e415b4b8cbaab16d858c5274d" to database
2017-05-23 17:32:18,265 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52330): generated different to dcu: updating dcu
2017-05-23 17:32:18,289 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52330): dcu config updated to "5950fa7e415b4b8cbaab16d858c5274d"
2017-05-23 17:32:18,289 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52330): resetting dcu after config update
2017-05-23 17:32:18,330 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52330): dcu confirmed reset
2017-05-23 17:32:18,342 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52330): dcu=34eea9bf-222c-49d3-8348-09510e767ea9: disconnected
2017-05-23 17:32:18,343 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52330): main loop: terminated
2017-05-23 17:32:18,343 craik.clm INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52330): ended for 172.17.0.1:52330

2017-05-23 17:32:19,437 craik.clm INFO Have new connection from 172.17.0.1:52334
2017-05-23 17:32:19,486 craik.clm INFO CLM(None,172.17.0.1:52334): starting for 172.17.0.1:52334
2017-05-23 17:32:19,486 root INFO CLM(None,172.17.0.1:52334): mainloop: starting
2017-05-23 17:32:19,487 root INFO CLM(None,172.17.0.1:52334): got hello: DCUDetails(dcu_id=UUID('34eea9bf-222c-49d3-8348-09510e767ea9'),firmware_version=Version(major=2, minor=10, bug=1, build=3769),timestamp=datetime.datetime(2017, 5, 23, 16, 32, 19, tzinfo=<UTC>),serial=2118245,hardware=HardwareCode(product_code=u'PRODUCT-CODE', revision=u'REVISION'),licence_serial=0,supported_features=DCUFeatures(METER_UUID))
2017-05-23 17:32:19,501 root INFO CLM(None,172.17.0.1:52334): dcu=34eea9bf-222c-49d3-8348-09510e767ea9: authenticated ok
2017-05-23 17:32:19,516 craik.notify.api INFO subscribing to notifications from: 34eea9bf-222c-49d3-8348-09510e767ea9
2017-05-23 17:32:19,579 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): time to update dcu time
2017-05-23 17:32:19,585 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): setting dcu time to datetime.datetime(2017, 5, 23, 16, 32, 19, 585215, tzinfo=<UTC>)
2017-05-23 17:32:19,594 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): checking dcu config version
2017-05-23 17:32:19,609 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): generated config is 5950fa7e415b4b8cbaab16d858c5274d
2017-05-23 17:32:19,616 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): dcu config version is 5950fa7e415b4b8cbaab16d858c5274d
2017-05-23 17:32:19,640 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): last applied config is 5950fa7e415b4b8cbaab16d858c5274d
2017-05-23 17:32:19,647 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): generated same as dcu: not updating dcu
2017-05-23 17:32:19,649 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): dcuconfig update done
2017-05-23 17:32:19,649 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): checking DCU for eventlogs
2017-05-23 17:32:19,653 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): (from dcu) last event: 40
2017-05-23 17:32:19,659 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): (from db) last event: 21
2017-05-23 17:32:19,659 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): updated eventlogs last_pending: 21
2017-05-23 17:32:19,661 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): new events to get: 22->40 (19)
2017-05-23 17:32:19,661 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): event id 22: processing
2017-05-23 17:32:19,710 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): Re-mapping event id 22 to uuid 88344ca7-9bea-4a8f-9e87-b19835ab5bfb
2017-05-23 17:32:19,711 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): event id 22: done
2017-05-23 17:32:19,711 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): event id 23: processing
2017-05-23 17:32:19,759 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): Re-mapping event id 23 to uuid 969c1351-ff8a-46e8-8f0f-e9155c49deeb
2017-05-23 17:32:19,760 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.1:52334): event id 23: done



new:

2017-06-15 11:48:33,793 craik.clm INFO Have new connection from 172.17.0.2:33668
2017-06-15 11:48:33,836 craik.clm INFO CLM(None,172.17.0.2:33668): starting for 172.17.0.2:33668
2017-06-15 11:48:33,837 root INFO CLM(None,172.17.0.2:33668): mainloop: starting
2017-06-15 11:48:33,838 root INFO CLM(None,172.17.0.2:33668): got hello: DCUDetails(dcu_id=UUID('34eea9bf-222c-49d3-8348-09510e767ea9'),firmware_version=Version(major=2, minor=11, bug=0, build=3972),timestamp=datetime.datetime(2017, 6, 15, 10, 48, 33, tzinfo=<UTC>),serial=2118245,hardware=HardwareCode(product_code=u'PRODUCT-CODE', revision=u'REVISION'),licence_serial=656,supported_features=DCUFeatures(METER_UUID))
2017-06-15 11:48:33,905 root INFO CLM(None,172.17.0.2:33668): dcu=34eea9bf-222c-49d3-8348-09510e767ea9: authenticated ok
2017-06-15 11:48:33,914 craik.notify.api INFO subscribing to notifications from: 34eea9bf-222c-49d3-8348-09510e767ea9
2017-06-15 11:48:33,956 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.2:33668): time to update dcu time
2017-06-15 11:48:33,961 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.2:33668): setting dcu time to datetime.datetime(2017, 6, 15, 10, 48, 33, 961932, tzinfo=<UTC>)
2017-06-15 11:48:33,965 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.2:33668): checking dcu config version
2017-06-15 11:48:33,976 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.2:33668): generated config is 5950fa7e415b4b8cbaab16d858c5274d
2017-06-15 11:48:33,981 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.2:33668): dcu config version is e14e8ceee7141bb9b8bf4c9284e46ec8
2017-06-15 11:48:34,000 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.2:33668): last applied config is 5950fa7e415b4b8cbaab16d858c5274d
2017-06-15 11:48:34,000 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.2:33668): dcu different to last-applied: saving dcu config
2017-06-15 11:48:34,044 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.2:33668): storing previous config "e14e8ceee7141bb9b8bf4c9284e46ec8" to database
2017-06-15 11:48:34,072 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.2:33668): generated different to dcu: updating dcu
2017-06-15 11:48:34,133 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.2:33668): dcu config updated to "5950fa7e415b4b8cbaab16d858c5274d"
2017-06-15 11:48:34,134 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.2:33668): resetting dcu after config update
2017-06-15 11:48:34,175 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.2:33668): dcu confirmed reset
2017-06-15 11:48:34,211 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.2:33668): dcu=34eea9bf-222c-49d3-8348-09510e767ea9: disconnected
2017-06-15 11:48:34,212 root INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.2:33668): main loop: terminated
2017-06-15 11:48:34,213 craik.clm INFO CLM(34eea9bf-222c-49d3-8348-09510e767ea9,172.17.0.2:33668): ended for 172.17.0.2:33668












2017-06-15 13:37:01,488 craikdecoder.processor INFO <craikdecoder.processor.AlarmDecoderProcessor object at 0x7f9d2acb7350>: outage: got msg
2017-06-15 13:37:01,489 craikdecoder.processor INFO <craikdecoder.processor.AlarmDecoderProcessor object at 0x7f9d2acb7350>: event outage: processing
2017-06-15 13:37:01,513 craikdecoder.processor INFO <craikdecoder.processor.AlarmDecoderProcessor object at 0x7f9d2acb7350>: event outage: decode failed done.
2017-06-15 13:37:01,513 root ERROR <craikdecoder.processor.AlarmDecoderProcessor object at 0x7f9d2acb7350>: outage: decode failure
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/craikdecoder/processor.py", line 188, in handle_msg
    out_octets = self._handle_msg(in_msg)
  File "/usr/local/lib/python2.7/dist-packages/craikdecoder/processor.py", line 526, in _handle_msg
    response = self.handle_alarm(in_obj)
  File "/usr/local/lib/python2.7/dist-packages/craikdecoder/processor.py", line 490, in handle_alarm
    metadata=metadata2,
  File "/usr/local/lib/python2.7/dist-packages/meterprotocol/decode.py", line 107, in decode_alarm
    decoder = get_decoder(meter_protocol_id, octets)
  File "/usr/local/lib/python2.7/dist-packages/meterprotocol/decode.py", line 58, in get_decoder
    package="meterprotocol"
  File "/usr/lib/python2.7/importlib/__init__.py", line 38, in import_module
    return sys.modules[name]
KeyError: 'meterprotocol.decoders.nodealarm.'
2017-06-15 13:37:01,515 craikdecoder.processor ERROR <craikdecoder.processor.AlarmDecoderProcessor object at 0x7f9d2acb7350>: outage: rejected(hard): why="KeyError('meterprotocol.decoders.nodealarm.',)": msg=Message[body: {"alarm_raw": {"octets": "Q1lMRUNfRElORTNfTEFTVF9HQVNQX1NFTlRJTkVM"}, "metadata": {"event_idx": 3013, "meter_serial": "TEST1", "meter_id": "39e36585-a486-45da-a972-b5df29202100", "dcu_id": "34eea9bf-222c-49d3-8348-09510e767ea9", "dcu_rtc": "2017-06-15T12:36:03+00:00", "event_id": "outage", "type": "alarm", "meter_protocol_type": "METER_TYPE_COMP_0010"}}, delivery_info: {'exchange': 'al-decoder-ex', 'consumer_tag': 'amq.ctag-Fo5OeArUoyaURlPLmlelJw', 'routing_key': 'COMP.0010', 'redelivered': 0, 'delivery_tag': 1, 'channel': <haigha.channel.Channel object at 0x7f9d2acb7050>}, properties: {'correlation_id': 'outage', 'type': 'alarm'}]
2017-06-15 13:37:01,519 craikdecoder.processor INFO <craikdecoder.processor.AlarmDecoderProcessor object at 0x7f9d2acb7350>: outage: done msg





craik@198a71bd54cd:/var/log/craik$ tail -f craik-decoder.log
    event_.snapshot.accept(decoder)
  File "/usr/local/lib/python2.7/dist-packages/meterprotocol/decoders/nodealarm.py", line 94, in snapshot
    snap = self.make_snapshot(snap_data)
  File "/usr/local/lib/python2.7/dist-packages/meterprotocol/decoders/comp_0010/event.py", line 107, in make_snapshot
    snap = snapshot.Snapshot.make_snapshot(snap_data)
  File "/usr/local/lib/python2.7/dist-packages/meterprotocol/decoders/comp_0010/snapshot.py", line 166, in make_snapshot
    snap_id = snap_data[0]
TypeError: 'int' object has no attribute '__getitem__'
2017-06-15 14:17:02,294 craikdecoder.processor ERROR <craikdecoder.processor.AlarmDecoderProcessor object at 0x7fab746fdc10>: outage: rejected(hard): why='TypeError("\'int\' object has no attribute \'__getitem__\'",)': msg=Message[body: {"alarm_raw": {"octets": "Q1lMRUNfRElORTNfTEFTVF9HQVNQX1NFTlRJTkVM"}, "metadata": {"event_idx": 3021, "meter_serial": "TEST1", "meter_id": "39e36585-a486-45da-a972-b5df29202100", "dcu_id": "34eea9bf-222c-49d3-8348-09510e767ea9", "dcu_rtc": "2017-06-15T13:16:46+00:00", "event_id": "outage", "type": "alarm", "meter_protocol_type": "METER_TYPE_COMP_0010"}}, delivery_info: {'exchange': 'al-decoder-ex', 'consumer_tag': 'amq.ctag-NlBqOepIDjuCdkRJ4k5-8A', 'routing_key': 'COMP.0010', 'redelivered': 0, 'delivery_tag': 2, 'channel': <haigha.channel.Channel object at 0x7fab746fdc50>}, properties: {'correlation_id': 'outage', 'type': 'alarm'}]
2017-06-15 14:17:02,295 craikdecoder.processor INFO <craikdecoder.processor.AlarmDecoderProcessor object at 0x7fab746fdc10>: outage: done msg


-----------------------------------------------------------

bootargs=root=/dev/mmcblk0p1 ro console=ttyO0,115200n8 rootwait quiet
bootargs=root=/dev/mmcblk0p2 ro console=ttyO0,115200n8 rootwait quiet
bootargs=root=/dev/sda2 ro console=ttyO0,115200n8 rootwait quiet

bootcmd
load mmc 0:1 0x82000000 /boot/zImage; load mmc 0:1 0x88000000 /boot/am437x-sbc-t43.dtb; bootz 0x82000000 - 0x88000000
load mmc 0:2 0x82000000 /boot/zImage; load mmc 0:2 0x88000000 /boot/am437x-sbc-t43.dtb; bootz 0x82000000 - 0x88000000
usb start;load usb 0:2 0x82000000 /boot/zImage; load usb 0:2 0x88000000 /boot/am437x-sbc-t43.dtb; bootz 0x82000000 - 0x88000000

bootargs=root=/dev/sda3 ro console=ttyO0,115200n8 rootwait quiet
usb start;load usb 0:3 0x82000000 /boot/zImage; load usb 0:3 0x88000000 /boot/am437x-sbc-t43.dtb; bootz 0x82000000 - 0x88000000

usb start
ls usb 0:1 /


----------------------------------------

Boot from u-boot script on /dev/sda1

ext2load usb 0:1 0x83000000 /bootscr.img

usb start ; ext2load usb 0:1 0x83000000 /bootscr.img; source 0x83000000

setenv bootcmd "usb start ; ext2load usb 0:1 0x83000000 /bootscr.img; source 0x83000000"




--------------------------------------------------




GPIO

echo 67 > /sys/class/gpio/export
ls /sys/class/gpio
ls -laF /sys/class/gpio/gpio67/

echo out > /sys/class/gpio/gpio67/direction
echo 1 > /sys/class/gpio/gpio67/value
echo 0 > /sys/class/gpio/gpio67/value


https://www.allaboutcircuits.com/projects/how-to-use-the-digital-i-o-on-a-beaglebone/


----------------------------------


git pull origin
git checkout master
git pull
git reset --hard origin/master
git pull --rebase
git merge --no-ff origin/<branchname>


----------------------------------------------------------


43594c45435f44494e45335f4c4153545f474153505f53454e54494e454c

{
    "EVENT_METER_ALARM":
    {
        "event_type": "outage",
        "meter": "39e36585-a486-45da-a972-b5df29202100",
        "dcu_rtc__datetime": "2017-06-28T16:37:04+00:00",
        "meter_serial": "TEST1",
        "event_start_end": "start",
        "dcu": "34eea9bf-222c-49d3-8348-09510e767ea9",
        "event_data":
        {
            "EVENT_EMPTY": {}
        }
    }
}


-------------------------------------------------


wget http://127.0.0.1:5000/UpgradePack/Patch.tar
dd if=/dev/sda2 of=/dev/sda3 bs=1M
mount /dev/sda3 /mnt

- need translation between uid 'ubuntu'(1000) and root(0) i.e. a 'pseudo root'.
- need translation between gid 'ubuntu'(1000) and root(0) i.e. a 'pseudo root'.
- need to minimise chowns/mkdirs/chmod

wget -nv --post-data "value=08585858&message=This is yet another log entry" http://172.16.32.107:5000/Log
wget -nv http://172.16.32.107:5000/UpgradePack/Patch.tar

ssh-keygen: generating new host keys: RSA Saving key "/etc/ssh/ssh_host_rsa_key" failed: Read-only filem
ssh-keygen: generating new host keys: DSA Saving key "/etc/ssh/ssh_host_dsa_key" failed: Read-only filem
ssh-keygen: generating new host keys: ECDSA Saving key "/etc/ssh/ssh_host_ecdsa_key" failed: Read-only m
ssh-keygen: generating new host keys: ED25519 Saving key "/etc/ssh/ssh_host_ed25519_key" failed: Read-om

----------------------------------------------

BAN-78-0083-Update-OUCVBCS-HES-API

----------------------------------------------

Starting logging: OK
read-only file system detected...done
Starting network: OK
ssh-keygen: generating new host keys: RSA Saving key "/etc/ssh/ssh_host_rsa_key" failed: Read-only filem
ssh-keygen: generating new host keys: DSA Saving key "/etc/ssh/ssh_host_dsa_key" failed: Read-only filem
ssh-keygen: generating new host keys: ECDSA Saving key "/etc/ssh/ssh_host_ecdsa_key" failed: Read-only m
ssh-keygen: generating new host keys: ED25519 Saving key "/etc/ssh/ssh_host_ed25519_key" failed: Read-om
Starting sshd: Could not load host key: /etc/ssh/ssh_host_rsa_key
Could not load host key: /etc/ssh/ssh_host_dsa_key
Could not load host key: /etc/ssh/ssh_host_ecdsa_key
Could not load host key: /etc/ssh/ssh_host_ed25519_key
sshd: no hostkeys available -- exiting.
OK
no interfaces have a carrier
forked to background, child pid 145
[   15.264080] libphy: PHY 4a101000.mdio:00 not found
[   15.269168] net eth0: phy "4a101000.mdio:00" not found on slave 0, err -19
[   15.288399] libphy: PHY 4a101000.mdio:01 not found
[   15.293538] net eth1: phy "4a101000.mdio:01" not found on slave 1, err -19

----------------------------------------------


Starting logging: OK
read-only file system detected...done
Starting network: OK
Starting sshd: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Permissions 0644 for '/etc/ssh/ssh_host_rsa_key' are too open.
It is required that your private key files are NOT accessible by others.
This private key will be ignored.
key_load_private: bad permissions
Could not load host key: /etc/ssh/ssh_host_rsa_key
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Permissions 0644 for '/etc/ssh/ssh_host_dsa_key' are too open.
It is required that your private key files are NOT accessible by others.
This private key will be ignored.
key_load_private: bad permissions
Could not load host key: /etc/ssh/ssh_host_dsa_key
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Permissions 0644 for '/etc/ssh/ssh_host_ecdsa_key' are too open.
It is required that your private key files are NOT accessible by others.
This private key will be ignored.
key_load_private: bad permissions
Could not load host key: /etc/ssh/ssh_host_ecdsa_key
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Permissions 0644 for '/etc/ssh/ssh_host_ed25519_key' are too open.
It is required that your private key files are NOT accessible by others.
This private key will be ignored.
key_load_private: bad permissions
Could not load host key: /etc/ssh/ssh_host_ed25519_key
sshd: no hostkeys available -- exiting.
OK
no interfaces have a carrier
forked to background, child pid 146
[    4.509449] libphy: PHY 4a101000.mdio:00 not found
[    4.514495] net eth0: phy "4a101000.mdio:00" not found on slave 0, err -19
[    4.534625] libphy: PHY 4a101000.mdio:01 not found
[    4.539726] net eth1: phy "4a101000.mdio:01" not found on slave 1, err -19

Welcome to Cosmos


------------------------------------------------------------------


python3 SecureFirmware.py -m t

python3 SecureFirmware.py -m g -e enc_key -p sign_key_pub.der -q signing_key_private.der
cp enc_key
cp sign_key_pub.der
cp signing_key_private.der

python3 SecureFirmware.py -m e -e enc_key -q signing_key_private.der -i Patch.tar -o SignedPatch.tar

python3 SecureFirmware.py -m d -e enc_key -p sign_key_pub.der -i SignedPatch.tar -o Patch2.tar




------------------------------------------------------------------


cd /home/app
python SecureFirmware.py -m e -e Keys/enc_key -q Keys/signing_key_private.der -i /tmp/Patch.tar -o SignedPatch.tar

------------------------------------------------------------------

mknod /dev/ppp c 108 0
insmod ppp
start-stop-daemon --start --background --make-pidfile --pidfile /run/WANMonitor.pid --startas /usr/bin/WANMonitor.py -- ppp0 -l /var/log/WANMonitor.log


---------------------------------

Loose ends:

- SecureFirmware.py needs to not produce an output on verification failure.
- GenerateHash needs to generate same results on host & target. Also needs to incorporate metadata (permissions, gid, uid, etc).
- Add the logic for determining if a new upgrade is available to incorporate the hash generation.
- Before marking the new rootfs as good, it must match hashes with the downloaded patch.
- minimisation of Patch.sh commands (currently does more than is needed).
- Check for broken links in new fs prior to patch generation.
- Check for interrupted upgrade on boot (i.e. power failed during application).
- Download process needs to check for available space before downloading patch.
- Should do an fsck on the new rootfs prior to marking it ready to boot (or even prior to copy?).
- Verify hash of previous source rootfs before copy??
- Current STOP mode is in U-boot. is this desirable? avoidable?
- If no partitions marked as bootable, try last-known-good? (possible security hole here).
- Change disk image name.
- Add genext2fs to Dockerfile.
- Add LVM2 and initrd (needed to boot from LVM2). This also needs the partition arrangement to change.
- Change the fw upgrade from a 'dd' copy to a 'mkfs and cp-R' copy which will allow resizing of partitions.
- Need resize2fs on the platform to allow for fs resizing.
- CMUX on UART to modem, to allow for status checking while call in progress.

--------------------------------------


Jan  1 00:04:13 Cosmos daemon.notice pppd[232]: pppd 2.4.7 started by root, uid 0
Jan  1 00:04:14 Cosmos local2.info chat[236]: abort on (BUSY)
Jan  1 00:04:14 Cosmos local2.info chat[236]: abort on (NO CARRIER)
Jan  1 00:04:14 Cosmos local2.info chat[236]: abort on (VOICE)
Jan  1 00:04:14 Cosmos local2.info chat[236]: abort on (NO DIALTONE)
Jan  1 00:04:14 Cosmos local2.info chat[236]: abort on (NO DIAL TONE)
Jan  1 00:04:14 Cosmos local2.info chat[236]: abort on (NO ANSWER)
Jan  1 00:04:14 Cosmos local2.info chat[236]: abort on (DELAYED)
Jan  1 00:04:14 Cosmos local2.info chat[236]: report (CONNECT)
Jan  1 00:04:14 Cosmos local2.info chat[236]: timeout set to 6 seconds
Jan  1 00:04:14 Cosmos local2.info chat[236]: send (ATQ0^M)
Jan  1 00:04:14 Cosmos local2.info chat[236]: expect (OK)
Jan  1 00:04:14 Cosmos local2.info chat[236]: ATQ0^M^M
Jan  1 00:04:14 Cosmos local2.info chat[236]: OK
Jan  1 00:04:14 Cosmos local2.info chat[236]:  -- got it
Jan  1 00:04:14 Cosmos local2.info chat[236]: send (ATZ^M)
Jan  1 00:04:14 Cosmos local2.info chat[236]: timeout set to 3 seconds
Jan  1 00:04:14 Cosmos local2.info chat[236]: expect (OKd)
Jan  1 00:04:14 Cosmos local2.info chat[236]: ^M
Jan  1 00:04:14 Cosmos local2.info chat[236]: ATZ^M^M
Jan  1 00:04:14 Cosmos local2.info chat[236]: OK^M
Jan  1 00:04:17 Cosmos local2.info chat[236]: alarm
Jan  1 00:04:17 Cosmos local2.info chat[236]: send (AT^M)
Jan  1 00:04:17 Cosmos local2.info chat[236]: expect (OK)
Jan  1 00:04:17 Cosmos local2.info chat[236]: AT^M^M
Jan  1 00:04:17 Cosmos local2.info chat[236]: OK
Jan  1 00:04:17 Cosmos local2.info chat[236]:  -- got it
Jan  1 00:04:17 Cosmos local2.info chat[236]: send (ATI^M)
Jan  1 00:04:17 Cosmos local2.info chat[236]: expect (OK)
Jan  1 00:04:17 Cosmos local2.info chat[236]: ^M
Jan  1 00:04:17 Cosmos local2.info chat[236]: ATI^M^M
Jan  1 00:04:17 Cosmos local2.info chat[236]: 332^M
Jan  1 00:04:17 Cosmos local2.info chat[236]: ^M
Jan  1 00:04:17 Cosmos local2.info chat[236]: OK
Jan  1 00:04:17 Cosmos local2.info chat[236]:  -- got it
Jan  1 00:04:17 Cosmos local2.info chat[236]: send (ATZ^M)
Jan  1 00:04:17 Cosmos local2.info chat[236]: expect (OK)
Jan  1 00:04:17 Cosmos local2.info chat[236]: ^M
Jan  1 00:04:17 Cosmos local2.info chat[236]: ATZ^M^M
Jan  1 00:04:17 Cosmos local2.info chat[236]: OK
Jan  1 00:04:17 Cosmos local2.info chat[236]:  -- got it
Jan  1 00:04:17 Cosmos local2.info chat[236]: send (AT+CGDCONT=1,"IP","wirelesslogic.co.uk"^M)
Jan  1 00:04:18 Cosmos local2.info chat[236]: expect (OK)
Jan  1 00:04:18 Cosmos local2.info chat[236]: ^M
Jan  1 00:04:18 Cosmos local2.info chat[236]: AT+CGDCONT=1,"IP","wirelesslogic.co.uk"^M^M
Jan  1 00:04:18 Cosmos local2.info chat[236]: OK
Jan  1 00:04:18 Cosmos local2.info chat[236]:  -- got it
Jan  1 00:04:18 Cosmos local2.info chat[236]: send (ATD*99***1#^M)
Jan  1 00:04:18 Cosmos local2.info chat[236]: timeout set to 30 seconds
Jan  1 00:04:18 Cosmos local2.info chat[236]: expect (CONNECT)
Jan  1 00:04:18 Cosmos local2.info chat[236]: ^M
Jan  1 00:04:18 Cosmos local2.info chat[236]: ATD*99***1#^M^M
Jan  1 00:04:18 Cosmos local2.info chat[236]: CONNECT
Jan  1 00:04:18 Cosmos local2.info chat[236]:  -- got it
Jan  1 00:04:18 Cosmos local2.info chat[236]: send (^M)
Jan  1 00:04:18 Cosmos daemon.debug pppd[232]: Script /usr/sbin/chat -v -t15 -f /etc/ppp/chatscripts/mo0
Jan  1 00:04:18 Cosmos daemon.info pppd[232]: Serial connection established.
Jan  1 00:04:18 Cosmos daemon.debug pppd[232]: using channel 1
Jan  1 00:04:18 Cosmos daemon.info pppd[232]: Using interface ppp0
Jan  1 00:04:18 Cosmos daemon.notice pppd[232]: Connect: ppp0 <--> /dev/ttyUSB1
[  259.364850] PPP Deflate Compression module registered
Jan  1 00:04:19 Cosmos daemon.debug pppd[232]: sent [LCP ConfReq id=0x1 <asyncmap 0x0> <magic 0x811df57]
Jan  1 00:04:19 Cosmos daemon.debug pppd[232]: rcvd [LCP ConfAck id=0x1 <asyncmap 0x0> <magic 0x811df57]
Jan  1 00:04:19 Cosmos daemon.debug pppd[232]: rcvd [LCP ConfReq id=0x1 <asyncmap 0x0> <auth pap> <magi]
Jan  1 00:04:19 Cosmos daemon.debug pppd[232]: sent [LCP ConfAck id=0x1 <asyncmap 0x0> <auth pap> <magi]
Jan  1 00:04:19 Cosmos daemon.debug pppd[232]: sent [PAP AuthReq id=0x1 user="cyan" password=<hidden>]
Jan  1 00:04:19 Cosmos daemon.debug pppd[232]: rcvd [PAP AuthAck id=0x1 "Welcome!"]
Jan  1 00:04:19 Cosmos daemon.info pppd[232]: Remote message: Welcome!
Jan  1 00:04:19 Cosmos daemon.notice pppd[232]: PAP authentication succeeded
Jan  1 00:04:19 Cosmos user.info kernel: [  259.364850] PPP Deflate Compression module registered
Jan  1 00:04:19 Cosmos daemon.debug pppd[232]: sent [CCP ConfReq id=0x1 <deflate 15> <deflate(old#) 15>]
Jan  1 00:04:19 Cosmos daemon.debug pppd[232]: sent [IPCP ConfReq id=0x1 <addr 0.0.0.0> <ms-dns1 0.0.0.]
Jan  1 00:04:19 Cosmos daemon.debug pppd[232]: rcvd [IPCP ConfReq id=0x1 <addr 192.168.202.0>]
Jan  1 00:04:19 Cosmos daemon.debug pppd[232]: sent [IPCP ConfAck id=0x1 <addr 192.168.202.0>]
Jan  1 00:04:19 Cosmos daemon.debug pppd[232]: rcvd [LCP ProtRej id=0x1 80 fd 01 01 00 0c 1a 04 78 00 1]
Jan  1 00:04:19 Cosmos daemon.debug pppd[232]: Protocol-Reject for 'Compression Control Protocol' (0x80d
Jan  1 00:04:20 Cosmos daemon.debug pppd[232]: rcvd [IPCP ConfNak id=0x1 <addr 10.7.61.28> <ms-dns1 10.]
Jan  1 00:04:20 Cosmos daemon.debug pppd[232]: sent [IPCP ConfReq id=0x2 <addr 10.7.61.28> <ms-dns1 10.]
Jan  1 00:04:20 Cosmos daemon.debug pppd[232]: rcvd [IPCP ConfAck id=0x2 <addr 10.7.61.28> <ms-dns1 10.]
Jan  1 00:04:20 Cosmos daemon.err pppd[232]: not replacing existing default route via 172.16.32.254
Jan  1 00:04:20 Cosmos daemon.notice pppd[232]: local  IP address 10.7.61.28
Jan  1 00:04:20 Cosmos daemon.notice pppd[232]: remote IP address 192.168.202.0
Jan  1 00:04:20 Cosmos daemon.notice pppd[232]: primary   DNS address 10.4.0.240
Jan  1 00:04:20 Cosmos daemon.notice pppd[232]: secondary DNS address 10.4.0.230





---------------------


mknod /dev/ppp c 108 0

/etc/resolv.conf
nameserver 8.8.8.8
nameserver 8.8.4.4


ifup ppp0


route add default ppp0

/etc/network/interfaces
remove wait-for line.

---------------------------------

with SSH access on port 22222 at address 185.81.161.158
debian:temppwd



-------------------------------------------------

TestApplication ports

dcuhw/rf_node.py:        'tty': '/dev/ttyUSB5'
dcuhw/rf_node.py:        'tty': '/dev/ttyUSB6'
dcuhw/gprs.py:        Gprs.instance = Gprs(tty='/dev/ttyUSB1')
mts/mts_serial.py:    def __init__(self, port='/dev/ttyUSB4', baudrate=115200, timeout=1):



aux_power_check_request.json                            - WILL FAIL
ethernet_autoneg_test_execute_request.json              - PASS
ethernet_ping_test_execute_request.json                 - PASS
fat_flag_set_request.json                               - DONE
gprs_network_status_check_execute_request.json          - PASS
gprs_sim_check_present_execute_request.json             - PASS
main_power_check_request.json                           - WILL FAIL
nand_test_execute_request.json                          - PASS
reset_request.json                                      - DONE
rf_loopback_test_execute_request.json                   - PASS
rtc_date_check_request.json                             - PASS
rtc_date_set_request.json                               - PASS
rtc_time_check_request.json                             - PASS
rtc_time_set_request.json                               - PASS
scap_voltage_check_execute_request.json                 - WILL FAIL
sdram_test_execute_request.json                         - PASS
test_log_read_request.json                              - DONE
usb_loopback_test_execute_request.json                  - WILL FAIL
usb_peripheral_detect_test_execute_request.json         - WILL FAIL



----------------------------------------

Star names:

"Zubenelgenubi"


# CyLec (v2.12.0.720122308)
# Hardware rev: 0000 00 @00000
# System address (CY3S): 0x5678
# Network address (CY3A): 0x0002
# Serial no (CYSN): 0x00008235
# Band (BND1): BD 433MHz
# Channel (CHAN): 6
# Dynamic Thresholds (St1a & St2d): On
# Role (METR): Meter
# OTXU: Off
# Boot address (CYBA): 0xFFFFFFFF

am437x-cm-t43 am437x-idk-evm am437x-sbc-t43 am437x-gp-evm
DeviceTree/am437x-cm-t43.dts DeviceTree/am437x-idk-evm.dts DeviceTree/am437x-sbc-t43.dts DeviceTree/am437x-gp-evm.dts


-----------------------------------

MTS loose ends:
- RF node loopback test can be intermittent as it picks up "CMD>" in the response from the receiving node.
- SDRAM test needs to be rewritten.
- NAND test is not thorough enough.
- USB OTG (as device) needs implementing (or does it? what requirement?)
- modem test mode should have a new test.
- rf node PRBS should have a new test.



RTC DTS
cd /sys/firmware/devicetree/base/ocp@44000000/rtc@44e3e000


{
    "MTS__TEST_EXECUTE__REQUEST": {
        "RTC_Time_Set": {
            "Time": "10:55:44"
        }
    }
}

{
    "MTS__TEST_EXECUTE__REQUEST": {
        "RTC_Time_Check": {
            "Time": "10:55:59"
        }
    }
}


-------------------------------------

eMMC

emmc_pins: pinmux_emmc_pins {

        emmc_pins: pinmux_emmc_pins {
                pinctrl-single,pins = <
                        AM33XX_IOPAD(0x880, PIN_INPUT_PULLUP | MUX_MODE2) /* gpmc_csn1.mmc1_clk */
                        AM33XX_IOPAD(0x884, PIN_INPUT_PULLUP | MUX_MODE2) /* gpmc_csn2.mmc1_cmd */
                        AM33XX_IOPAD(0x800, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad0.mmc1_dat0 */
                        AM33XX_IOPAD(0x804, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad1.mmc1_dat1 */
                        AM33XX_IOPAD(0x808, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad2.mmc1_dat2 */
                        AM33XX_IOPAD(0x80c, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad3.mmc1_dat3 */
                        AM33XX_IOPAD(0x810, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad4.mmc1_dat4 */
                        AM33XX_IOPAD(0x814, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad5.mmc1_dat5 */
                        AM33XX_IOPAD(0x818, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad6.mmc1_dat6 */
                        AM33XX_IOPAD(0x81c, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad7.mmc1_dat7 */
                >;
        };

};


&mmc2 {
        vmmc-supply = <&vmmcsd_fixed>;
        pinctrl-names = "default";
        pinctrl-0 = <&emmc_pins>;
        bus-width = <8>;
        status = "okay";
};



                mmc2: mmc@481d8000 {
                        compatible = "ti,omap4-hsmmc";
                        ti,hwmods = "mmc2";
                        ti,needs-special-reset;
                        dmas = <&edma 2 0
                                &edma 3 0>;
                        dma-names = "tx", "rx";
                        interrupts = <28>;
                        interrupt-parent = <&intc>;
                        reg = <0x481d8000 0x1000>;
                        status = "disabled";
                };



=> gpio status -a
Bank gpio@44e07000:                             // bank 1
gpio@44e070000: input: 0 [ ]
gpio@44e070001: input: 0 [ ]
gpio@44e070002: input: 1 [ ]
gpio@44e070003: input: 1 [ ]
gpio@44e070004: input: 1 [ ]
gpio@44e070005: input: 0 [ ]
gpio@44e070006: input: 1 [ ]
gpio@44e070007: input: 0 [ ]
gpio@44e070008: input: 0 [ ]
gpio@44e070009: input: 0 [ ]
gpio@44e0700010: input: 0 [ ]
gpio@44e0700011: input: 0 [ ]
gpio@44e0700012: input: 1 [ ]
gpio@44e0700013: input: 1 [ ]
gpio@44e0700014: input: 0 [ ]
gpio@44e0700015: input: 0 [ ]
gpio@44e0700016: input: 0 [ ]                   //
gpio@44e0700017: input: 0 [ ]
gpio@44e0700018: input: 0 [ ]                   // EXT_LED GPIO1_18 Llinux 0/18 (18)
gpio@44e0700019: input: 0 [ ]
gpio@44e0700020: input: 0 [ ]
gpio@44e0700021: input: 0 [ ]                   // RFMOD_A_RST GPIO0_21 Linux 0/21 (21)
gpio@44e0700022: input: 0 [ ]
gpio@44e0700023: input: 0 [ ]                   // RFMOD_A_DINE GPIO0_23 LInux 0/23 (23)
gpio@44e0700024: input: 0 [ ]
gpio@44e0700025: input: 0 [ ]
gpio@44e0700026: input: 0 [ ]
gpio@44e0700027: input: 0 [ ]                   // GPRS_PWR GPIO1_27 (D8) TP101 (59)
gpio@44e0700028: input: 0 [ ]                   // GPRS_VEN GPIO1_28 (A3) TP100 (60)
gpio@44e0700029: input: 0 [ ]
gpio@44e0700030: input: 0 [ ]
gpio@44e0700031: input: 0 [ ]

Bank gpio@4804c000:                             // bank 2  Linux 1
gpio@4804c0000: input: 0 [ ]
gpio@4804c0001: input: 0 [ ]
gpio@4804c0002: input: 0 [ ]
gpio@4804c0003: input: 0 [ ]
gpio@4804c0004: input: 0 [ ]
gpio@4804c0005: input: 0 [ ]
gpio@4804c0006: input: 0 [ ]
gpio@4804c0007: input: 0 [ ]
gpio@4804c0008: input: 1 [ ]
gpio@4804c0009: input: 1 [ ]
gpio@4804c00010: input: 0 [ ]
gpio@4804c00011: input: 0 [ ]
gpio@4804c00012: input: 0 [ ]
gpio@4804c00013: input: 0 [ ]
gpio@4804c00014: input: 0 [ ]
gpio@4804c00015: input: 0 [ ]
gpio@4804c00016: input: 0 [ ]                   // ethernet phy reset GPIO1_16   Linux 0/16
gpio@4804c00017: input: 0 [ ]                   // eMMC nRST GPIO1_17            Linux 0/17
gpio@4804c00018: input: 0 [ ]                   // ext_led        GPIO1_18
gpio@4804c00019: output: 1 [ ]                  // EN_DDR3_VTT    GPIO1_19
gpio@4804c00020: input: 0 [ ]                   // TP302  GPIO1_20
gpio@4804c00021: input: 0 [ ]                   // TP303  GPIO1_21
gpio@4804c00022: input: 0 [ ]                   // EXP_GPIO_0     GPIO1_22
gpio@4804c00023: input: 0 [ ]                   // EXP_GPIO_1     GPIO1_23
gpio@4804c00024: input: 0 [ ]                   // EXP_GPIO_2     GPIO1_24
gpio@4804c00025: input: 0 [ ]                   // EXP_GPIO_3     GPIO1_25
gpio@4804c00026: input: 0 [ ]
gpio@4804c00027: input: 0 [ ]                   // GPRS_PWR       GPIO1_27
gpio@4804c00028: input: 1 [ ]                   // GPRS_VEN       GPIO1_28
gpio@4804c00029: input: 0 [ ]
gpio@4804c00030: input: 0 [ ]
gpio@4804c00031: input: 0 [ ]

Bank gpio@481ae000:                             // bank 3    Linux 1
gpio@481ae0000: input: 1 [ ]
gpio@481ae0001: input: 0 [ ]
gpio@481ae0002: input: 0 [ ]
gpio@481ae0003: input: 0 [ ]
gpio@481ae0004: input: 0 [ ]
gpio@481ae0005: input: 0 [ ]
gpio@481ae0006: input: 0 [ ]
gpio@481ae0007: input: 0 [ ]                    // RFMOD_B_RST GPIO3_7 Linux 1/7 (39)
gpio@481ae0008: input: 0 [ ]                    // RFMOD_B_DINE GPIO3_8 Linux 1/8 (40)
gpio@481ae0009: input: 0 [ ]
gpio@481ae00010: input: 0 [ ]
gpio@481ae00011: input: 0 [ ]
gpio@481ae00012: input: 0 [ ]
gpio@481ae00013: input: 0 [ ]
gpio@481ae00014: input: 0 [ ]
gpio@481ae00015: input: 0 [ ]
gpio@481ae00016: input: 0 [ ]
gpio@481ae00017: input: 0 [ ]
gpio@481ae00018: input: 0 [ ]
gpio@481ae00019: input: 0 [ ]
gpio@481ae00020: input: 0 [ ]
gpio@481ae00021: input: 0 [ ]
gpio@481ae00022: input: 0 [ ]                   // 3v3B enable        Linux 2/22 (86)
gpio@481ae00023: input: 1 [ ]
gpio@481ae00024: input: 1 [ ]                   // red LED GPIO3_24   Linux 2/24 (88)
gpio@481ae00025: input: 1 [ ]
gpio@481ae00026: input: 0 [ ]
gpio@481ae00027: input: 0 [ ]
gpio@481ae00028: input: 0 [ ]
gpio@481ae00029: input: 0 [ ]
gpio@481ae00030: input: 0 [ ]
gpio@481ae00031: input: 0 [ ]

Bank gpio@48320000:                             // bank 4  Linux 3
gpio@483200000: input: 0 [ ]
gpio@483200001: input: 0 [ ]
gpio@483200002: input: 0 [ ]
gpio@483200003: input: 0 [ ]
gpio@483200004: input: 0 [ ]
gpio@483200005: input: 0 [ ]
gpio@483200006: input: 0 [ ]
gpio@483200007: input: 0 [ ]
gpio@483200008: input: 0 [ ]
gpio@483200009: input: 0 [ ]
gpio@4832000010: input: 0 [ ]
gpio@4832000011: input: 0 [ ]
gpio@4832000012: input: 0 [ ]
gpio@4832000013: input: 0 [ ]
gpio@4832000014: input: 0 [ ]
gpio@4832000015: input: 0 [ ]
gpio@4832000016: input: 0 [ ]
gpio@4832000017: input: 0 [ ]
gpio@4832000018: input: 0 [ ]
gpio@4832000019: input: 0 [ ]
gpio@4832000020: input: 0 [ ]
gpio@4832000021: input: 0 [ ]
gpio@4832000022: input: 0 [ ]
gpio@4832000023: input: 0 [ ]
gpio@4832000024: input: 0 [ ]
gpio@4832000025: input: 0 [ ]
gpio@4832000026: input: 0 [ ]
gpio@4832000027: input: 0 [ ]
gpio@4832000028: input: 0 [ ]
gpio@4832000029: input: 0 [ ]
gpio@4832000030: input: 0 [ ]
gpio@4832000031: input: 0 [ ]

Bank gpio@48322000:                             // bank 5  Linux 4
gpio@483220000: input: 1 [ ]
gpio@483220001: input: 1 [ ]
gpio@483220002: input: 1 [ ]
gpio@483220003: input: 1 [ ]
gpio@483220004: input: 1 [ ]                    // green LED GPIO5_4  Linux 4/4 = 132
gpio@483220005: input: 0 [ ]                    // blue LED GPIO5_5   Linux 4/5 = 133
gpio@483220006: input: 0 [ ]                    // MODEM_PWR  GPIO5_6          (166)
gpio@483220007: input: 1 [ ]                    // EN_232 GPIO_5_7 Linux 4/7 = 135
gpio@483220008: input: 0 [ ]
gpio@483220009: input: 0 [ ]
gpio@4832200010: input: 0 [ ]
gpio@4832200011: input: 0 [ ]
gpio@4832200012: input: 0 [ ]
gpio@4832200013: input: 0 [ ]
gpio@4832200014: input: 0 [ ]
gpio@4832200015: input: 0 [ ]
gpio@4832200016: input: 0 [ ]
gpio@4832200017: input: 0 [ ]
gpio@4832200018: input: 0 [ ]
gpio@4832200019: input: 0 [ ]
gpio@4832200020: input: 0 [ ]
gpio@4832200021: input: 0 [ ]
gpio@4832200022: input: 0 [ ]
gpio@4832200023: input: 0 [ ]
gpio@4832200024: input: 0 [ ]
gpio@4832200025: input: 0 [ ]
gpio@4832200026: input: 0 [ ]
gpio@4832200027: input: 0 [ ]
gpio@4832200028: input: 0 [ ]
gpio@4832200029: input: 0 [ ]
gpio@4832200030: input: 0 [ ]
gpio@4832200031: input: 0 [ ]
=> gpio toggle gpio@4832000022











------------------------------

mmcblk0: mmc0:0001 SEM08G 7.28 GiB
mmcblk1: mmc1:aaaa SB16G 14.8 GiB


-----------------------------

mkimage -f fitImage_nonsecure.its -r fitImage


-----------

U-boot config change:

include/configs/am43xx_evm.h

#define CONFIG_SYS_NS16550_COM1         0x481a8000      /* Base EVM has UART4 */


mkimage -f fitImage_nonsecure.its -r fitImage



-------------------------------

at#gpio=1,1,1  (Modem Green LED)
at#gpio=2,1,1  (Modem Red LED)


SIM switching

OK
at#ccid
#CCID: 89441000300307211676

OK
at#gpio=3,1,1
OK
at#simdet=0
OK
at#simdet=1
OK
at#ccid
#CCID: 89441000300307211544

OK

---------------------------------------------

import re
t=open('screen.cap').read()
d=re.compile('--- ([0-9]+) ---.*?NodeA(.*?)NodeB(.*?)---',re.DOTALL).findall(t)



--------------------------


# CyLec (v2.11.0.613142607)
# Hardware rev: 0000 00 @00000
# System address (CY3S): 0x5678
# Network address (CY3A): 0x0002
# Serial no (CYSN): 0x00001235
# Band (BND1): 865MHz Type Approval
# Channel (CHAN): 7
# Dynamic Thresholds (St1a & St2d): On
# Role (METR): Meter
# OTXU: On
# Boot address (CYBA): 0xFFFFFFFF


-------------------------


# i2cdetect -y -r 0
     0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f
00:          -- -- -- -- -- -- -- -- -- -- -- -- --
10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
20: -- -- -- -- UU -- -- -- -- 29 -- -- -- -- -- --
30: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
50: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
70: -- -- -- -- -- -- -- --


i2cget -y 0 0x29 0x00

# i2cdump -f -y -r 0x00-0x26 0 0x24
No size specified (using byte-data access)
     0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f    0123456789abcdef
00: 03 00 00 3f 3f 28 00 00 00 00 00 00 00 00 00 00    ?..??(..........
10: 00 3f 13 48 c0 00 19 19 98 b2 06 1f 00 00 00 00    .??H?.??????....
20: 00 00 98 70 00 63 03                               ..?p.c?
#


Remove freshness seal
i2cset -f -y 0 0x24 0x10 0xb1 0xfe 0xa3 i

Read status PMIC register
i2cget -f -y 0 0x24 0x05


------------------------------------------------------


*(0x44DF0000 + 0x2B68) = 0x00000002

*(0x44E07000 + ) = enabled




mount /dev/mmcblk0p1 /mnt
mknod /dev/hack c 100 0
insmod /mnt/GPIOHack.ko
python /home/app/ioctl.py /dev/hack 0


---------------------------

date +%Y%m%d -s "20081128"
date +%T -s "10:13:13"
hwclock -w


----------------------------------------------------

assertion "(irq1flags & RF_IRQFLAGS1_TIMEOUT) || (irq2flags & RF_IRQFLAGS2_PAYLOADREADY)" failed: file 0


------------------------------

debugfs from kernel:

mount -t debugfs none /sys/kernel/debug

------------------------

pinmux functions:
cat /sys/kernel/debug/pinctrl/44e10800.pinmux/pins


---------------------------------------------------------------


for _cable_, _main_, _diag_ :

cygh_uart_cable_get_baudrate
cygh_uart_cable_handshake_hw_available
cygh_uart_cable_handshake_set_enable
cygh_uart_cable_handshake_sw_available
cygh_uart_cable_initialise
cygh_uart_cable_process
cygh_uart_cable_rxchar
cygh_uart_cable_rx_clear
cygh_uart_cable_set_baudrate
cygh_uart_cable_tx
cygh_uart_cable_tx_buffer_free
cygh_uart_cable_tx_clear
cygh_uart_diag_tx_blocking
cygh_uart_diag_txchar_blocking




------------------------------

BR2_TOOLCHAIN_BUILDROOT_WCHAR=y
BR2_PTHREAD_DEBUG=y
BR2_PACKAGE_GDB=y
BR2_PACKAGE_GDB_SERVER=y
BR2_PACKAGE_GDB_DEBUGGER=y
BR2_PACKAGE_GDB_TUI=y



----------------------------------------------------

Store:

FILE_NANOPB_init();
FILE_init();
FS_FIFO_init();
FS_FROM_FILE_init();
FS_ONEFILE_init();
FS_init();
GPT_SDCARD_init();
GPT_init();
LIST_init();
MOUNT_init();


-------------


https://artifactory.cyco.io:443/general-dev/cosmos/arm_buildroot_linux_gnueabihf/20170905/assembly.tar.gz






PATH="/BuildArea/BuildRoot/output/host/bin:/BuildArea/BuildRoot/output/host/sbin:/BuildArea/BuildRoot/output/host/usr/bin:/BuildArea/BuildRoot/output/host/usr/sbin:/opt/arm-buildroot-linux-gnueabihf/usr/bin:/opt/ae-toolchain/usr/bin:/usr/local/lib/ecog1x-cyan-elf-toolchain/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" BR_BINARIES_DIR=/BuildArea/BuildRoot/output/images KBUILD_BUILD_VERSION=1 KBUILD_BUILD_USER=buildroot KBUILD_BUILD_HOST=buildroot KBUILD_BUILD_TIMESTAMP="Mon May  1 22:00:00 UTC 2017" /usr/bin/make -j3 HOSTCC="/usr/bin/gcc" HOSTCFLAGS="" ARCH=arm INSTALL_MOD_PATH=/BuildArea/BuildRoot/output/target CROSS_COMPILE="/BuildArea/BuildRoot/output/host/usr/bin/arm-buildroot-linux-gnueabi-" DEPMOD=/BuildArea/BuildRoot/output/host/sbin/depmod INSTALL_MOD_STRIP=1 -C /BuildArea/BuildRoot/output/build/linux-4.9.13 zImage



----------------------------------------------


The detection of whether an image is present on a selected device differs by device type:
• On a GP Device type, a booting image (bootloader) is considered to be present when the first four
bytes of the sector are not equal to 00000000h or FFFFFFFFh.
During the first read sector call, the first sector is copied to a temporary RAM buffer. Once the image is
found and the destination address is known from the decoding the header, the content of the temporary
buffer is moved to the target RAM location so it is not needed to re-read the first image sector. On a GP
device the GP header is discarded, and only executable code is located in RAM with the first executable
instruction located at the destination address.
Memory booting
Initialization
and
Device detection
Set first / next valid block
Read a sector
Return
fail
Copying failed
No more sectors to read
Device detection
Initialization failed
No more blocks
Loading Initial SW
Completed?
Store the loaded sector with
Initial SW in the target buffer
Initial SW execution
No
Yes
www.ti.com Functional Description
SPRUHL7F–April 2014–Revised September 2016 195
Submit Documentation Feedback
Copyright © 2014–2016, Texas Instruments Incorporated
Initialization
MMC/SD cards (in raw mode), SPI, and NAND devices hold up to four copies of the booting image. The
ROM Code searches for one valid image out of the four, if present, by walking over the first four blocks of
the mass storage space. Other XIP devices (NOR) use only one copy of the booting image.




MMC and SD standards detail this phase as initialization phase. Both standards differ in the first
commands involved: CMD1 and ACMD41. The ROM Code uses this difference in command set to
discriminate between MMC and SD devices: CMD1 is supported only by the MMC standard, whereas
ACMD41 is only supported by SD standard.
The ROM Code first sends a CMD1 to the device and gets a response only if an MMC device is
connected. If no response is received, then ACMD41 (ACMD41 is made out of CMD55 and ACMD41) is
sent and a response is expected from an SD device. If no response is received, then it is assumed that no
device is connected and the ROM

5.2.6.5.5 MMC/SD Read Sector Procedure in Raw Mode
In raw mode the booting image can be located at one of the four consecutive locations in the main area:
• offset 0x0
• 0x40000 (256KB)
• 0x80000 (512KB)
• 0xC0000 (768KB)
A booting image must not exceed 256KB in size. However, it is possible to flash a device with an image
greater than 256KB starting at one of the four locations and the ROM Code will not check the image size.
The only drawback is that the image will cross the subsequent image boundary.
The raw mode is detected by reading sectors #0 and #1024. The content of these sectors is then verified
for presence of a TOC structure as described in 10. In the case of a GP Device, a Configuration Header
(CH) must be located in the first sector followed by a GP header (1)
. The CH might be void (only containing
a CHSETTINGS item for which the valid field is zero).





For Raw Mode, the Configuration Header should be formatted as follows:



Table 1. CH TOC Item

Offset     Field       Size (Bytes)          Value                      Description

0x0000    Start                        4              0x000000a0            Offset from the start address of TOC to the actual address of a section

0x0004    Size                         4              0x00000050            Size of a section

0x0008    Reserved                4              0x00000000            Unused

0x000C    Reserved                4              0x00000000            Unused

0x0010    Reserved                4              0x00000000            Unused

0x0014    Filename                  12            0x45534843

                                                                0x4e495454

                                                                0x00005347            12-character name of a section, including the zero (\0) terminator (these are the ASCII                                                                                                                                      characters for 'CHSETTINGS')

0x0020    Closing item             4              0xFFFFFFFF

0x0024    Closing item             4              0xFFFFFFFF

0x0028    Closing item             4              0xFFFFFFFF

0x002C    Closing item             4              0xFFFFFFFF

0x0030    Closing item             4              0xFFFFFFFF

0x0034    Closing item             4              0xFFFFFFFF

0x0038    Closing item             4              0xFFFFFFFF

0x003C    Closing item             4              0xFFFFFFFF            32 bytes of 0xFF to signify the end of the TOC item





Table 2. CHSETTINGS

Offset     Field                       Value                      Description

0000h      Section key             0xC0C0C0C1           Key used for section verification

0004h      Valid                        0x00                        Enables/disables the section

                                                                                00h: Disable

                                                                                Other: Enable

0005h      Version                   0x001                      Configuration header version

                                                                                Others: For future use

0006h      Reserved                0x00                        Set the reset of the header (offset 0x6 to 0xe0) to 0x00

...

0xe0     Reserved           0x00





Image format for GP Device
A GP device involves no security, so keys and certificates are not required in the boot image.
When the booting memory device is non-XIP (for example, MMC) the image must contain a small header
(referred as GP header) with the size of the image and the destination address where to store it.
The GP header is not required when booting from an XIP memory device (for example, NOR) or if
peripheral booting. In this case, the peripheral or memory booting image starts directly with executable
code.


GPHeader:

Size            +0  32 bit          Size of executable+8 byte header.
Destination     +4  32 bit          address
Image           +8  xxx bytes.A     image

TOC:



------------------------------------------------------------------------

mkimage:
betelgeuse/ti-processor-sdk-linux-am437x-evm-03.03.00.04/board-support/u-boot-2016.05+gitAUTOINC+4db46a6bbd-g4db46a6bbd/sandbox/tools/mkimage

-T gpimage | omapimage

Prepend GP-header:
mkimage -T gpimage -a 0x402f4000 -d MLO gpMLO
mkimage -T omapimage -a 0x402f4000 -d BuildRoot.Rigel/output/images/MLO omapMLO

dd if=/mnt/omapMLO of=/dev/mmcblk1 bs=256K seek=3


The raw mode is detected by reading sectors #0 and #1024. The content of these sectors is then verified
for presence of a TOC structure as described in 10. In the case of a GP Device, a Configuration Header
(CH) must be located in the first sector followed by a GP header (1)
. The CH might be void (only containing
a CHSETTINGS item for which the valid field is zero).

dd if=/mnt/omapMLO of=/dev/mmcblk1 bs=512 seek=1024
dd if=/dev/mmcblk1 bs=512 skip=1024 count=1 | od -t x4 -v


fdisk is not capable of performing eMMC native partitioning, it just creates a "HD-like" partition table on the eMMC user partition.  For most purposes this is fine.  Note in particular that the ROM bootloader will only boot from the eMMC user partition, it does not use eMMC boot mode.

You can still access the (fixed-size) eMMC-native boot0 and boot1 partitions in linux, which may be useful to retain some data even if the "whole device" (in practice: the whole user partition) is reflashed. They may also have enhanced reliability compared to the user partition. They appear as separate block devices, /dev/mmcblk0boot{0,1}.  Presumably if the eMMC has GP partitions, those will also show up, though I haven't checked whether linux supports these yet (it would be easy to support them though since accessing them is similar to the boot partitions).

Note however that eMMC native partitioning (splitting off parts of the user partition as gp0-gp3) is one time programmable only, there's no way to change or undo it afterwards. This is probably part of why it's not very popular to use that functionality. I have no idea what tool can be used to perform it.

I'm not sure whether you can (currently) access the RPMB on linux. Access to it follows a very specific protocol that is unlike accessing a normal partition.




----------------------------


Panmesh:

- apt-get install quilt gcc-arm-none-eabi gdb-arm-none-eabi binutils-arm-none-eabi
- unzip terminal.zip
- make fortec
- src/device/addons/metering/*.c (two modules, readings & sampling)
- src/device/drivers/fortec/*.c (one module ~1400 LoC). Duplicate this & modify.
- Add new meter driver to management module.
- Add new meter driver to Makefile.
- Need to know how to drive the system to cause a reading to happen, configuration to be applied  etc.
- add config/ytl32001.mk







st-util 1.3.1-15-g3d24377
2017-09-26T14:58:40 INFO src/common.c: Loading device parameters....
2017-09-26T14:58:40 INFO src/common.c: Device connected is: F2 device, id 0x201f6411
2017-09-26T14:58:40 INFO src/common.c: SRAM size: 0x20000 bytes (128 KiB), Flash: 0x100000 bytes (1024 KiB) in pages of 131072 bytes
2017-09-26T14:58:40 INFO src/gdbserver/gdb-server.c: Chip ID is 00000411, Core ID is  2ba01477.
2017-09-26T14:58:40 INFO src/gdbserver/gdb-server.c: Listening at *:4242...
2017-09-26T15:01:00 INFO src/gdbserver/gdb-server.c: Found 6 hw breakpoint registers
2017-09-26T15:01:00 INFO src/gdbserver/gdb-server.c: GDB connected.
2017-09-26T15:01:04 INFO src/common.c: Attempting to write 65536 (0x10000) bytes to stm32 address: 134283264 (0x8010000)
Flash page at addr: 0x08010000 erased
2017-09-26T15:01:05 INFO src/common.c: Finished erasing 1 pages of 65536 (0x10000) bytes
2017-09-26T15:01:05 INFO src/common.c: Starting Flash write for F2/F4/L4
2017-09-26T15:01:05 INFO src/flash_loader.c: Successfully loaded flash loader in sram
enabling 32-bit flash writes
size: 32768
size: 32768
2017-09-26T15:01:06 INFO src/common.c: Starting verification of write complete
2017-09-26T15:01:07 INFO src/common.c: Flash written and verified! jolly good!
2017-09-26T15:01:07 INFO src/common.c: Attempting to write 131072 (0x20000) bytes to stm32 address: 134348800 (0x8020000)
Flash page at addr: 0x08020000 erased
2017-09-26T15:01:08 INFO src/common.c: Finished erasing 1 pages of 131072 (0x20000) bytes
2017-09-26T15:01:08 INFO src/common.c: Starting Flash write for F2/F4/L4
2017-09-26T15:01:08 INFO src/flash_loader.c: Successfully loaded flash loader in sram
enabling 32-bit flash writes
size: 32768
size: 32768
size: 32768
size: 32768
2017-09-26T15:01:10 INFO src/common.c: Starting verification of write complete
2017-09-26T15:01:11 INFO src/common.c: Flash written and verified! jolly good!
2017-09-26T15:01:11 INFO src/common.c: Attempting to write 131072 (0x20000) bytes to stm32 address: 134479872 (0x8040000)
Flash page at addr: 0x08040000 erased
2017-09-26T15:01:12 INFO src/common.c: Finished erasing 1 pages of 131072 (0x20000) bytes
2017-09-26T15:01:12 INFO src/common.c: Starting Flash write for F2/F4/L4
2017-09-26T15:01:12 INFO src/flash_loader.c: Successfully loaded flash loader in sram
enabling 32-bit flash writes
size: 32768
size: 32768
size: 32768
size: 32768
2017-09-26T15:01:14 INFO src/common.c: Starting verification of write complete
2017-09-26T15:01:15 INFO src/common.c: Flash written and verified! jolly good!




----------------------------------------

host-ctrlporthub

ctrlporthub -controllerport 4000 -serial /dev/ttyUSB0 -loglevel debug

./rpc_prodtest.py --setparam server.ip -v fd00::1
./rpc_prodtest.py --setparam prod.lowpan.eui64 -v 00-1B-C5-0C-60-00-7D-63
./rpc_prodtest.py --loadkey -s client-key -f ../00-1B-C5-0C-60-00-7D-63/node.key.der
./rpc_prodtest.py --loadkey -s client-cert -f ../00-1B-C5-0C-60-00-7D-63/node.crt.der
./rpc_prodtest.py --loadkey -s root-cert -f ../00-1B-C5-0C-60-00-7D-63/ca.crt.der
./rpc_prodtest.py --loadkey -s mac-key -f ../00-1B-C5-0C-60-00-7D-63/mac_key
./rpc_prodtest.py –finalize




debug-stm32.sh


openocd \
    -f interface/stlink-v2.cfg \
    -f target/stm32f2x.cfg \
    -c "init" \
    -c "reset init" \
    -c "halt" \


Place this in “terminal/tools/gdb” along with the others.

Then:
Arm-none-eabi-geb <whatever>.elf
Tar rem:3333
Load
Mon reset
C

make bootloader


7e20a04103289381bc14800102020607010104040869017e

----------------------------------------------

genus   : 7e a0 20 03 41 93 28 bc 81 80 14 05 02 01 00 06 02 01 00 07 04 00 00 00 01 08 04 00 00 00 01 69 6d 7e
original: 7E A0 21 4E 32 0A A5 41 93 75 E8 81 80 12 05 01 FF 06 01 FF 07 04 00 00 00 01 08 04 00 00 00 01 55 1C 7E
current : 7e a0 23 04 e6 42 d2 42 93 ec f3 81 80 14 05 02 01 00 06 02 01 00 07 04 00 00 00 01 08 04 00 00 00 01 69 6d 7e

<HDLC len="31" >
<TargetAddress Value="1" />
<SourceAddress Value="32" />
<PDU>
<Ua>
  <MaxInfoRX Value="256" />
  <MaxInfoTX Value="256" />
  <WindowSizeRX Value="1" />
  <WindowSizeTX Value="1" />
</Ua>
</PDU>
</HDLC>


O<HDLC len="32" >
<TargetAddress Value="82199250" />
<SourceAddress Value="32" />
<PDU>
<Ua>
  <MaxInfoRX Value="255" />
  <MaxInfoTX Value="255" />
  <WindowSizeRX Value="1" />
  <WindowSizeTX Value="1" />
</Ua>
</PDU>
</HDLC>



82199250 = 04 e6 42 d2

7e a0 20 03 41 93 28 bc 81 80 14 05 02 01 00 06 02 01 00 07 04 00 00 00 01 08 04 00 00 00 01 69 6d 7e

---------------------------------------------------------------

make ytl-insecure ipa1-bl-insecure host-ctrlporthub


build/host-ctrlporthub/bin/ctrlporthub -controllerport 4000 -serial /dev/ttyUSB0

python tools/c4-tools/node-meter-bridge.py /dev/ttyUSB2 /dev/ttyUSB1

tools/gdb/debug-stm32.sh

arm-none-eabi-gdb -tui  build/ytl-dlms/bin/agent.elf

tools/c4-tools/coap_request.py --config device.dlms.lls_password '...'
tools/c4-tools/coap_request.py --config device.dlms.lls_password '12345678'

socat /dev/ttyUSB0,raw,echo=0,crnl /dev/ttyUSB1,raw,echo=0,crnl


tools/c4-tools/coap_request.py --config prod.lowpan.eui64 00-1b-c5-0c-60-00-bc-21

tools/c4-tools/coap_request.py --config prod.prodtime 1


---------------------------------------------------------------

<HDLC len="39" >
<TargetAddress Value="8" />
<SourceAddress Value="4011" />
<PDU>

<AssociationResponse>
  <ApplicationContextName Value="LN" />
  <AssociationResult Value="01" />
  <ResultSourceDiagnostic>
    <ACSEServiceUser Value="02" />
  </ResultSourceDiagnostic>
  <InitiateResponse>
    <NegotiatedDlmsVersionNumber Value="06" />
    <NegotiatedConformance>
      <ConformanceBit Name="Get" />
      <ConformanceBit Name="BlockTransferWithGetOrRead" />
    </NegotiatedConformance>
    <NegotiatedMaxPduSize Value="00B4" />
    <VaaName Value="0007" />
  </InitiateResponse>
</AssociationResponse>
</PDU>
</HDLC>


generated: 7e a0 23 4e 32 0a a5 41 93 ce df 81 80 14 05 02 01 00 06 02 01 00 07 04 00 00 00 01 08 04 00 00 00 01 69 6d 7e
original:  7E A0 21 4E 32 0A A5 41 93 75 E8 81 80 12 05 01 FF 06 01 FF 07 04 00 00 00 01 08 04 00 00 00 01 55 1C 7E


original:
7E A0 21        Frame type & length.
4E 32 0A A5     address
41              address
93              frame type (SNRM).
75 E8
81 80 12 05 01 FF 06 01 FF 07 04 00 00 00 01 08 04 00 00 00 01 55 1C 7E

generated:
7e a0 23        Frame type & length.
4e 32 0a a5     address
41              address
93              frame type (SNRM)
ce df
81 80 14 05 02 01 00 06 02 01 00 07 04 00 00 00 01 08 04 00 00 00 01 // connectLink.payload
69 6d
7e


4E 32 0A A5  == 4e 32 0a a5




original:  7E A0 21 4E 32 0A A5 41 93 75 E8 81 80 12 05 01 FF 06 01 FF 07 04 00 00 00 01 08 04 00 00 00 01 55 1C 7E
           7e a0 21 4e 32 0a a5 41 93 75 e8 81 80 12 05 01 ff 06 01 ff 07 04 00 00 00 01 08 04 00 00 00 01 55 1c 7e





A<-B: RX: 7ea021000200231193bbd28180120501ff0601ff070400000001080400000001551c7e
A->B: RX: 7ea0231100020023732602818014050200b4060200b407040000000108040000000115ca7e
A<-B: RX: 7ea0470002002311106098e6e6006036a1090607608574050801018a0207808b0760857405080201ac0a80083132333435363738be10040e01000000065f1f0400001f1fffffdc527e
A->B: RX: 7ea03a1100020023304986e6e7006129a109060760857405080101a203020101a305a103020102be10040e0800065f1f040000101000b400072a9b7e


theirs:
<HDLC len="46" >
<TargetAddress Value="4E642D2" />
<SourceAddress Value="20" />
<PDU>
<AssociationRequest>
  <ApplicationContextName Value="LN" />
  <SenderACSERequirements Value="1" />
  <MechanismName Value="Low" />
  <CallingAuthentication Value="3132333435363738" />
  <InitiateRequest>
    <ProposedDlmsVersionNumber Value="06" />
    <ProposedConformance>
      <ConformanceBit Name="Action" />
      <ConformanceBit Name="EventNotification" />
      <ConformanceBit Name="SelectiveAccess" />
      <ConformanceBit Name="Set" />
      <ConformanceBit Name="Get" />
      <ConformanceBit Name="MultipleReferences" />
      <ConformanceBit Name="BlockTransferWithAction" />
      <ConformanceBit Name="BlockTransferWithSetOrWrite" />
      <ConformanceBit Name="BlockTransferWithGetOrRead" />
      <ConformanceBit Name="Attribute0SupportedWithGet" />
      <ConformanceBit Name="PriorityMgmtSupported" />
    </ProposedConformance>
    <ProposedMaxPduSize Value="04B0" />
  </InitiateRequest>
</AssociationRequest>
</PDU>
</HDLC>


Ours:
<HDLC len="46" >
<TargetAddress Value="4011" />
<SourceAddress Value="8" />
<PDU>
<AssociationRequest>
  <ApplicationContextName Value="LN" />
  <SenderACSERequirements Value="1" />
  <MechanismName Value="Low" />
  <CallingAuthentication Value="3132333435363738" />
  <InitiateRequest>
    <ProposedDlmsVersionNumber Value="06" />
    <ProposedConformance>
      <ConformanceBit Name="Action" />
      <ConformanceBit Name="EventNotification" />
      <ConformanceBit Name="SelectiveAccess" />
      <ConformanceBit Name="Set" />
      <ConformanceBit Name="Get" />
      <ConformanceBit Name="InformationReport" />
      <ConformanceBit Name="MultipleReferences" />
      <ConformanceBit Name="BlockTransferWithAction" />
      <ConformanceBit Name="BlockTransferWithSetOrWrite" />
      <ConformanceBit Name="BlockTransferWithGetOrRead" />
    </ProposedConformance>
    <ProposedMaxPduSize Value="FFFF" />
  </InitiateRequest>
</AssociationRequest>
</PDU>
</HDLC>

---------------------------------------
2017-10-03 16:16:19.172 #1   001bc50c600080d4 <log> 0:20:06.576 [ info] [        dlms] {   device}: Found register 0-0:1.0.0*255 ic 8 attrId 2  // clock
2017-10-03 16:16:19.172 #1   001bc50c600080d4 <log> 0:20:06.586 [ info] [        dlms] {   device}: Found register 1-0:0.1.2*255 ic 1 attrId 2
2017-10-03 16:16:19.172 #1   001bc50c600080d4 <log> 0:20:06.595 [ info] [        dlms] {   device}: Found register 1-0:31.7.0*255 ic 3 attrId 2 // L1 current
2017-10-03 16:16:19.215 #1   001bc50c600080d4 <log> 0:20:06.604 [ info] [        dlms] {   device}: Found register 1-0:51.7.0*255 ic 3 attrId 2 // L2 current
2017-10-03 16:16:19.215 #1   001bc50c600080d4 <log> 0:20:06.613 [ info] [        dlms] {   device}: Found register 1-0:71.7.0*255 ic 3 attrId 2 // L3 current
2017-10-03 16:16:19.215 #1   001bc50c600080d4 <log> 0:20:06.622 [ info] [        dlms] {   device}: Found register 1-0:32.7.0*255 ic 3 attrId 2 // L1 voltage
2017-10-03 16:16:19.215 #1   001bc50c600080d4 <log> 0:20:06.631 [ info] [        dlms] {   device}: Found register 1-0:52.7.0*255 ic 3 attrId 2 // L2 voltage
2017-10-03 16:16:19.215 #1   001bc50c600080d4 <log> 0:20:06.641 [ info] [        dlms] {   device}: Found register 1-0:72.7.0*255 ic 3 attrId 2 // L3 voltage
2017-10-03 16:16:19.258 #1   001bc50c600080d4 <log> 0:20:06.650 [ info] [        dlms] {   device}: Found register 1-0:81.7.4*255 ic 3 attrId 2
2017-10-03 16:16:19.258 #1   001bc50c600080d4 <log> 0:20:06.659 [ info] [        dlms] {   device}: Found register 1-0:81.7.15*255 ic 3 attrId 2
2017-10-03 16:16:19.258 #1   001bc50c600080d4 <log> 0:20:06.668 [ info] [        dlms] {   device}: Found register 1-0:81.7.26*255 ic 3 attrId 2
2017-10-03 16:16:19.259 #1   001bc50c600080d4 <log> 0:20:06.678 [ info] [        dlms] {   device}: Found register 1-0:13.7.0*255 ic 3 attrId 2 // system power factor
2017-10-03 16:16:19.259 #1   001bc50c600080d4 <log> 0:20:06.687 [ info] [        dlms] {   device}: Found register 1-0:33.7.0*255 ic 3 attrId 2 // L1 power factor
2017-10-03 16:16:19.302 #1   001bc50c600080d4 <log> 0:20:06.696 [ info] [        dlms] {   device}: Found register 1-0:53.7.0*255 ic 3 attrId 2 // L2 power factor
2017-10-03 16:16:19.302 #1   001bc50c600080d4 <log> 0:20:06.705 [ info] [        dlms] {   device}: Found register 1-0:73.7.0*255 ic 3 attrId 2 // L3 power factor
2017-10-03 16:16:19.302 #1   001bc50c600080d4 <log> 0:20:06.714 [ info] [        dlms] {   device}: Found register 1-0:1.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.302 #1   001bc50c600080d4 <log> 0:20:06.723 [ info] [        dlms] {   device}: Found register 1-0:2.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.345 #1   001bc50c600080d4 <log> 0:20:06.732 [ info] [        dlms] {   device}: Found register 1-0:21.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.345 #1   001bc50c600080d4 <log> 0:20:06.742 [ info] [        dlms] {   device}: Found register 1-0:22.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.345 #1   001bc50c600080d4 <log> 0:20:06.751 [ info] [        dlms] {   device}: Found register 1-0:41.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.345 #1   001bc50c600080d4 <log> 0:20:06.760 [ info] [        dlms] {   device}: Found register 1-0:42.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.345 #1   001bc50c600080d4 <log> 0:20:06.769 [ info] [        dlms] {   device}: Found register 1-0:61.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.388 #1   001bc50c600080d4 <log> 0:20:06.778 [ info] [        dlms] {   device}: Found register 1-0:62.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.388 #1   001bc50c600080d4 <log> 0:20:06.788 [ info] [        dlms] {   device}: Found register 1-0:3.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.388 #1   001bc50c600080d4 <log> 0:20:06.797 [ info] [        dlms] {   device}: Found register 1-0:4.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.388 #1   001bc50c600080d4 <log> 0:20:06.806 [ info] [        dlms] {   device}: Found register 1-0:23.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.388 #1   001bc50c600080d4 <log> 0:20:06.815 [ info] [        dlms] {   device}: Found register 1-0:24.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.432 #1   001bc50c600080d4 <log> 0:20:06.824 [ info] [        dlms] {   device}: Found register 1-0:43.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.432 #1   001bc50c600080d4 <log> 0:20:06.833 [ info] [        dlms] {   device}: Found register 1-0:44.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.432 #1   001bc50c600080d4 <log> 0:20:06.842 [ info] [        dlms] {   device}: Found register 1-0:63.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.432 #1   001bc50c600080d4 <log> 0:20:06.852 [ info] [        dlms] {   device}: Found register 1-0:64.7.0*255 ic 3 attrId 2
2017-10-03 16:16:19.475 #1   001bc50c600080d4 <log> 0:20:06.861 [ info] [        dlms] {   device}: Found register 1-0:1.6.0*255 ic 5 attrId 2
2017-10-03 16:16:19.475 #1   001bc50c600080d4 <log> 0:20:06.870 [ info] [        dlms] {   device}: Found register 1-0:1.6.1*255 ic 5 attrId 2
2017-10-03 16:16:19.475 #1   001bc50c600080d4 <log> 0:20:06.879 [ info] [        dlms] {   device}: Found register 1-0:1.6.2*255 ic 5 attrId 2
2017-10-03 16:16:19.475 #1   001bc50c600080d4 <log> 0:20:06.888 [ info] [        dlms] {   device}: Found register 1-0:1.6.3*255 ic 5 attrId 2
2017-10-03 16:16:19.475 #1   001bc50c600080d4 <log> 0:20:06.897 [ info] [        dlms] {   device}: Found register 1-0:1.6.4*255 ic 5 attrId 2
2017-10-03 16:16:19.519 #1   001bc50c600080d4 <log> 0:20:06.906 [ info] [        dlms] {   device}: Found register 1-0:2.6.0*255 ic 5 attrId 2
2017-10-03 16:16:19.519 #1   001bc50c600080d4 <log> 0:20:06.915 [ info] [        dlms] {   device}: Found register 1-0:2.6.1*255 ic 5 attrId 2
2017-10-03 16:16:19.519 #1   001bc50c600080d4 <log> 0:20:06.924 [ info] [        dlms] {   device}: Found register 1-0:2.6.2*255 ic 5 attrId 2
2017-10-03 16:16:19.519 #1   001bc50c600080d4 <log> 0:20:06.934 [ info] [        dlms] {   device}: Found register 1-0:2.6.3*255 ic 5 attrId 2
2017-10-03 16:16:19.519 #1   001bc50c600080d4 <log> 0:20:06.943 [ info] [        dlms] {   device}: Found register 1-0:2.6.4*255 ic 5 attrId 2
2017-10-03 16:16:19.562 #1   001bc50c600080d4 <log> 0:20:06.952 [ info] [        dlms] {   device}: Found register 1-0:1.8.0*255 ic 3 attrId 2
2017-10-03 16:16:19.562 #1   001bc50c600080d4 <log> 0:20:06.961 [ info] [        dlms] {   device}: Found register 1-0:1.8.1*255 ic 3 attrId 2
2017-10-03 16:16:19.562 #1   001bc50c600080d4 <log> 0:20:06.970 [ info] [        dlms] {   device}: Found register 1-0:1.8.2*255 ic 3 attrId 2
2017-10-03 16:16:19.562 #1   001bc50c600080d4 <log> 0:20:06.979 [ info] [        dlms] {   device}: Found register 1-0:1.8.3*255 ic 3 attrId 2
2017-10-03 16:16:19.562 #1   001bc50c600080d4 <log> 0:20:06.988 [ info] [        dlms] {   device}: Found register 1-0:1.8.4*255 ic 3 attrId 2
2017-10-03 16:16:19.605 #1   001bc50c600080d4 <log> 0:20:06.997 [ info] [        dlms] {   device}: Found register 1-0:2.8.0*255 ic 3 attrId 2
2017-10-03 16:16:19.605 #1   001bc50c600080d4 <log> 0:20:07.006 [ info] [        dlms] {   device}: Found register 1-0:2.8.1*255 ic 3 attrId 2
2017-10-03 16:16:19.605 #1   001bc50c600080d4 <log> 0:20:07.015 [ info] [        dlms] {   device}: Found register 1-0:2.8.2*255 ic 3 attrId 2
2017-10-03 16:16:19.605 #1   001bc50c600080d4 <log> 0:20:07.024 [ info] [        dlms] {   device}: Found register 1-0:2.8.3*255 ic 3 attrId 2
2017-10-03 16:16:19.605 #1   001bc50c600080d4 <log> 0:20:07.034 [ info] [        dlms] {   device}: Found register 1-0:2.8.4*255 ic 3 attrId 2
2017-10-03 16:16:19.648 #1   001bc50c600080d4 <log> 0:20:07.043 [ info] [        dlms] {   device}: Found register 1-0:1.2.0*255 ic 3 attrId 2
2017-10-03 16:16:19.648 #1   001bc50c600080d4 <log> 0:20:07.052 [ info] [        dlms] {   device}: Found register 1-0:1.2.1*255 ic 3 attrId 2
2017-10-03 16:16:19.648 #1   001bc50c600080d4 <log> 0:20:07.061 [ info] [        dlms] {   device}: Found register 1-0:1.2.2*255 ic 3 attrId 2
2017-10-03 16:16:19.648 #1   001bc50c600080d4 <log> 0:20:07.070 [ info] [        dlms] {   device}: Found register 1-0:1.2.3*255 ic 3 attrId 2
2017-10-03 16:16:19.692 #1   001bc50c600080d4 <log> 0:20:07.079 [ info] [        dlms] {   device}: Found register 1-0:1.2.4*255 ic 3 attrId 2
2017-10-03 16:16:19.692 #1   001bc50c600080d4 <log> 0:20:07.088 [ info] [        dlms] {   device}: Found register 1-0:2.2.0*255 ic 3 attrId 2
2017-10-03 16:16:19.692 #1   001bc50c600080d4 <log> 0:20:07.097 [ info] [        dlms] {   device}: Found register 1-0:2.2.1*255 ic 3 attrId 2
2017-10-03 16:16:19.692 #1   001bc50c600080d4 <log> 0:20:07.106 [ info] [        dlms] {   device}: Found register 1-0:2.2.2*255 ic 3 attrId 2
2017-10-03 16:16:19.692 #1   001bc50c600080d4 <log> 0:20:07.115 [ info] [        dlms] {   device}: Found register 1-0:2.2.3*255 ic 3 attrId 2
2017-10-03 16:16:19.735 #1   001bc50c600080d4 <log> 0:20:07.124 [ info] [        dlms] {   device}: Found register 1-0:2.2.4*255 ic 3 attrId 2
2017-10-03 16:16:19.735 #1   001bc50c600080d4 <log> 0:20:07.133 [ info] [        dlms] {   device}: Found register 1-0:3.6.0*255 ic 5 attrId 2
2017-10-03 16:16:19.735 #1   001bc50c600080d4 <log> 0:20:07.143 [ info] [        dlms] {   device}: Found register 1-0:3.6.1*255 ic 5 attrId 2
2017-10-03 16:16:19.735 #1   001bc50c600080d4 <log> 0:20:07.152 [ info] [        dlms] {   device}: Found register 1-0:3.6.2*255 ic 5 attrId 2
2017-10-03 16:16:19.735 #1   001bc50c600080d4 <log> 0:20:07.161 [ info] [        dlms] {   device}: Found register 1-0:3.6.3*255 ic 5 attrId 2
2017-10-03 16:16:19.779 #1   001bc50c600080d4 <log> 0:20:07.170 [ info] [        dlms] {   device}: Found register 1-0:3.6.4*255 ic 5 attrId 2
2017-10-03 16:16:19.779 #1   001bc50c600080d4 <log> 0:20:07.179 [ info] [        dlms] {   device}: Found register 1-0:4.6.0*255 ic 5 attrId 2
2017-10-03 16:16:19.779 #1   001bc50c600080d4 <log> 0:20:07.188 [ info] [        dlms] {   device}: Found register 1-0:4.6.1*255 ic 5 attrId 2
2017-10-03 16:16:19.779 #1   001bc50c600080d4 <log> 0:20:07.197 [ info] [        dlms] {   device}: Found register 1-0:4.6.2*255 ic 5 attrId 2
2017-10-03 16:16:19.779 #1   001bc50c600080d4 <log> 0:20:07.206 [ info] [        dlms] {   device}: Found register 1-0:4.6.3*255 ic 5 attrId 2
2017-10-03 16:16:19.822 #1   001bc50c600080d4 <log> 0:20:07.215 [ info] [        dlms] {   device}: Found register 1-0:4.6.4*255 ic 5 attrId 2
2017-10-03 16:16:19.822 #1   001bc50c600080d4 <log> 0:20:07.224 [ info] [        dlms] {   device}: Found register 1-0:3.8.0*255 ic 3 attrId 2
2017-10-03 16:16:19.822 #1   001bc50c600080d4 <log> 0:20:07.233 [ info] [        dlms] {   device}: Found register 1-0:3.8.1*255 ic 3 attrId 2
2017-10-03 16:16:19.822 #1   001bc50c600080d4 <log> 0:20:07.243 [ info] [        dlms] {   device}: Found register 1-0:3.8.2*255 ic 3 attrId 2
2017-10-03 16:16:19.865 #1   001bc50c600080d4 <log> 0:20:07.252 [ info] [        dlms] {   device}: Found register 1-0:3.8.3*255 ic 3 attrId 2
2017-10-03 16:16:19.865 #1   001bc50c600080d4 <log> 0:20:07.261 [ info] [        dlms] {   device}: Found register 1-0:3.8.4*255 ic 3 attrId 2
2017-10-03 16:16:19.865 #1   001bc50c600080d4 <log> 0:20:07.270 [ info] [        dlms] {   device}: Found register 1-0:4.8.0*255 ic 3 attrId 2
2017-10-03 16:16:19.865 #1   001bc50c600080d4 <log> 0:20:07.279 [ info] [        dlms] {   device}: Found register 1-0:4.8.1*255 ic 3 attrId 2
2017-10-03 16:16:19.865 #1   001bc50c600080d4 <log> 0:20:07.288 [ info] [        dlms] {   device}: Found register 1-0:4.8.2*255 ic 3 attrId 2
2017-10-03 16:16:19.909 #1   001bc50c600080d4 <log> 0:20:07.297 [ info] [        dlms] {   device}: Found register 1-0:4.8.3*255 ic 3 attrId 2
2017-10-03 16:16:19.909 #1   001bc50c600080d4 <log> 0:20:07.306 [ info] [        dlms] {   device}: Found register 1-0:4.8.4*255 ic 3 attrId 2
2017-10-03 16:16:19.909 #1   001bc50c600080d4 <log> 0:20:07.315 [ info] [        dlms] {   device}: Found register 1-0:3.2.0*255 ic 3 attrId 2
2017-10-03 16:16:19.909 #1   001bc50c600080d4 <log> 0:20:07.324 [ info] [        dlms] {   device}: Found register 1-0:3.2.1*255 ic 3 attrId 2
2017-10-03 16:16:19.909 #1   001bc50c600080d4 <log> 0:20:07.333 [ info] [        dlms] {   device}: Found register 1-0:3.2.2*255 ic 3 attrId 2
2017-10-03 16:16:19.952 #1   001bc50c600080d4 <log> 0:20:07.343 [ info] [        dlms] {   device}: Found register 1-0:3.2.3*255 ic 3 attrId 2
2017-10-03 16:16:19.952 #1   001bc50c600080d4 <log> 0:20:07.352 [ info] [        dlms] {   device}: Found register 1-0:3.2.4*255 ic 3 attrId 2
2017-10-03 16:16:19.952 #1   001bc50c600080d4 <log> 0:20:07.361 [ info] [        dlms] {   device}: Found register 1-0:4.2.0*255 ic 3 attrId 2
2017-10-03 16:16:19.952 #1   001bc50c600080d4 <log> 0:20:07.370 [ info] [        dlms] {   device}: Found register 1-0:4.2.1*255 ic 3 attrId 2
2017-10-03 16:16:19.952 #1   001bc50c600080d4 <log> 0:20:07.379 [ info] [        dlms] {   device}: Found register 1-0:4.2.2*255 ic 3 attrId 2
2017-10-03 16:16:20.005 #1   001bc50c600080d4 <log> 0:20:07.388 [ info] [        dlms] {   device}: Found register 1-0:4.2.3*255 ic 3 attrId 2
2017-10-03 16:16:20.005 #1   001bc50c600080d4 <log> 0:20:07.397 [ info] [        dlms] {   device}: Found register 1-0:4.2.3*255 ic 3 attrId 2
2017-10-03 16:16:20.005 #1   001bc50c600080d4 <log> 0:20:07.406 [ info] [        dlms] {   device}: Found register 0-0:1.0.0*255 ic 8 attrId 3
2017-10-03 16:16:20.005 #1   001bc50c600080d4 <log> 0:20:07.415 [ info] [        dlms] {   device}: Found 92 registers in IS Profile object

---------------------------------------------------------


dlmsParseProfileCaptureObjects()
dlmsGetIsProfileObject()
ProfileObject


s_isProfileObjects[j].instantObject.code
s_isProfileObjects[index].scalerIndex
s_isProfileObjects[j].attrId


-----------------------------------


MessageReadoutRequest:
request->type == ReadingReadoutPeriodicSample
s_isActiveIsProfile == true

processIsProfileResponse() gets called for response.

s_currentMsg->x.readoutRequest.request.type = ReadingReadoutPeriodicSample



dlmsGetParseFn(s_currentObj, s_readingState);
dlmsGetParseFn(const CosemData* object, int8_t attribute)





2017-10-13 11:25:10.531 #1   001bc50c6000bc21 <log> 0:03:13.502 [ info] [   meter/ytl] {   device}: Reading ready 91/91
2017-10-13 11:25:10.531 #1   001bc50c6000bc21 <log> 0:03:13.509 [ info] [   meter/ytl] {   device}: --- processIsProfileResponse (4) ---
2017-10-13 11:25:10.531 #1   001bc50c6000bc21 <log> 0:03:13.517 [ info] [   meter/ytl] {   device}: ---- Register 0:  ----
2017-10-13 11:25:10.531 #1   001bc50c6000bc21 <log> 0:03:13.524 [ info] [   meter/ytl] {   device}: ---- Register 1:  ----
2017-10-13 11:25:10.531 #1   001bc50c6000bc21 <log> 0:03:13.532 [ info] [   meter/ytl] {   device}: ---- Register 2: 0.000 *10^0 A ----
2017-10-13 11:25:10.574 #1   001bc50c6000bc21 <log> 0:03:13.540 [ info] [   meter/ytl] {   device}: ---- Register 3: 0.024 *10^0 A ----
2017-10-13 11:25:10.574 #1   001bc50c6000bc21 <log> 0:03:13.548 [ info] [   meter/ytl] {   device}: ---- Register 4: 0.000 *10^0 A ----
2017-10-13 11:25:10.574 #1   001bc50c6000bc21 <log> 0:03:13.557 [ info] [   meter/ytl] {   device}: ---- Register 5: 0.000 *10^0 V ----
2017-10-13 11:25:10.574 #1   001bc50c6000bc21 <log> 0:03:13.565 [ info] [   meter/ytl] {   device}: ---- Register 6: 0.006 *10^0 V ----
2017-10-13 11:25:10.574 #1   001bc50c6000bc21 <log> 0:03:13.574 [ info] [   meter/ytl] {   device}: ---- Register 7: 0.000 *10^0 V ----
2017-10-13 11:25:10.617 #1   001bc50c6000bc21 <log> 0:03:13.582 [ info] [   meter/ytl] {   device}: ---- Register 8: 0.000 *10^0 degree ----
2017-10-13 11:25:10.617 #1   001bc50c6000bc21 <log> 0:03:13.591 [ info] [   meter/ytl] {   device}: ---- Register 9: 0.000 *10^0 degree ----
2017-10-13 11:25:10.617 #1   001bc50c6000bc21 <log> 0:03:13.600 [ info] [   meter/ytl] {   device}: ---- Register 10: 0.000 *10^0 degree ----
2017-10-13 11:25:10.617 #1   001bc50c6000bc21 <log> 0:03:13.608 [ info] [   meter/ytl] {   device}: ---- Register 11: 0.000 *10^0  ----
2017-10-13 11:25:10.617 #1   001bc50c6000bc21 <log> 0:03:13.617 [ info] [   meter/ytl] {   device}: ---- Register 12: 0.000 *10^0  ----
2017-10-13 11:25:10.659 #1   001bc50c6000bc21 <log> 0:03:13.625 [ info] [   meter/ytl] {   device}: ---- Register 13: 0.006 *10^0  ----
2017-10-13 11:25:10.659 #1   001bc50c6000bc21 <log> 0:03:13.634 [ info] [   meter/ytl] {   device}: ---- Register 14: 0.000 *10^0  ----
2017-10-13 11:25:10.659 #1   001bc50c6000bc21 <log> 0:03:13.642 [ info] [   meter/ytl] {   device}: ---- Register 15: 1.000 *10^3 W ----
2017-10-13 11:25:10.660 #1   001bc50c6000bc21 <log> 0:03:13.650 [ info] [   meter/ytl] {   device}: ---- Register 16: 0.000 *10^3 W ----
2017-10-13 11:25:10.660 #1   001bc50c6000bc21 <log> 0:03:13.659 [ info] [   meter/ytl] {   device}: ---- Register 17: 0.000 *10^3 W ----
2017-10-13 11:25:10.702 #1   001bc50c6000bc21 <log> 0:03:13.667 [ info] [   meter/ytl] {   device}: ---- Register 18: 0.000 *10^3 W ----
2017-10-13 11:25:10.702 #1   001bc50c6000bc21 <log> 0:03:13.676 [ info] [   meter/ytl] {   device}: ---- Register 19: 0.000 *10^3 W ----
2017-10-13 11:25:10.702 #1   001bc50c6000bc21 <log> 0:03:13.684 [ info] [   meter/ytl] {   device}: ---- Register 20: 0.000 *10^3 W ----
2017-10-13 11:25:10.702 #1   001bc50c6000bc21 <log> 0:03:13.693 [ info] [   meter/ytl] {   device}: ---- Register 21: 0.005 *10^3 W ----
2017-10-13 11:25:10.702 #1   001bc50c6000bc21 <log> 0:03:13.701 [ info] [   meter/ytl] {   device}: ---- Register 22: 0.006 *10^3 W ----
2017-10-13 11:25:10.745 #1   001bc50c6000bc21 <log> 0:03:13.710 [ info] [   meter/ytl] {   device}: ---- Register 23: 0.000 *10^3 var ----
2017-10-13 11:25:10.745 #1   001bc50c6000bc21 <log> 0:03:13.718 [ info] [   meter/ytl] {   device}: ---- Register 24: 0.000 *10^3 var ----
2017-10-13 11:25:10.745 #1   001bc50c6000bc21 <log> 0:03:13.727 [ info] [   meter/ytl] {   device}: ---- Register 25: 0.000 *10^3 var ----
2017-10-13 11:25:10.745 #1   001bc50c6000bc21 <log> 0:03:13.736 [ info] [   meter/ytl] {   device}: ---- Register 26: 0.000 *10^3 var ----
2017-10-13 11:25:10.745 #1   001bc50c6000bc21 <log> 0:03:13.744 [ info] [   meter/ytl] {   device}: ---- Register 27: 0.000 *10^3 var ----
2017-10-13 11:25:10.788 #1   001bc50c6000bc21 <log> 0:03:13.753 [ info] [   meter/ytl] {   device}: ---- Register 28: 0.000 *10^3 var ----
2017-10-13 11:25:10.788 #1   001bc50c6000bc21 <log> 0:03:13.762 [ info] [   meter/ytl] {   device}: ---- Register 29: 0.000 *10^3 var ----
2017-10-13 11:25:10.788 #1   001bc50c6000bc21 <log> 0:03:13.770 [ info] [   meter/ytl] {   device}: ---- Register 30: 0.000 *10^3 var ----
2017-10-13 11:25:10.788 #1   001bc50c6000bc21 <log> 0:03:13.779 [ info] [   meter/ytl] {   device}: ---- Register 31: 0.000 *10^3 W ----
2017-10-13 11:25:10.788 #1   001bc50c6000bc21 <log> 0:03:13.787 [ info] [   meter/ytl] {   device}: ---- Register 32: 0.000 *10^3 W ----
2017-10-13 11:25:10.830 #1   001bc50c6000bc21 <log> 0:03:13.796 [ info] [   meter/ytl] {   device}: ---- Register 33: 0.000 *10^3 W ----
2017-10-13 11:25:10.830 #1   001bc50c6000bc21 <log> 0:03:13.804 [ info] [   meter/ytl] {   device}: ---- Register 34: 0.000 *10^3 W ----
2017-10-13 11:25:10.830 #1   001bc50c6000bc21 <log> 0:03:13.813 [ info] [   meter/ytl] {   device}: ---- Register 35: 0.000 *10^3 W ----
2017-10-13 11:25:10.830 #1   001bc50c6000bc21 <log> 0:03:13.821 [ info] [   meter/ytl] {   device}: ---- Register 36: 0.000 *10^3 W ----
2017-10-13 11:25:10.830 #1   001bc50c6000bc21 <log> 0:03:13.830 [ info] [   meter/ytl] {   device}: ---- Register 37: 0.000 *10^3 W ----
2017-10-13 11:25:10.873 #1   001bc50c6000bc21 <log> 0:03:13.838 [ info] [   meter/ytl] {   device}: ---- Register 38: 0.000 *10^3 W ----
2017-10-13 11:25:10.873 #1   001bc50c6000bc21 <log> 0:03:13.847 [ info] [   meter/ytl] {   device}: ---- Register 39: 0.000 *10^3 W ----
2017-10-13 11:25:10.873 #1   001bc50c6000bc21 <log> 0:03:13.855 [ info] [   meter/ytl] {   device}: ---- Register 40: 0.000 *10^3 W ----
2017-10-13 11:25:10.873 #1   001bc50c6000bc21 <log> 0:03:13.864 [ info] [   meter/ytl] {   device}: ---- Register 41: 1.000 *10^3 Wh ----
2017-10-13 11:25:10.873 #1   001bc50c6000bc21 <log> 0:03:13.872 [ info] [   meter/ytl] {   device}: ---- Register 42: 1.000 *10^3 Wh ----
2017-10-13 11:25:10.916 #1   001bc50c6000bc21 <log> 0:03:13.881 [ info] [   meter/ytl] {   device}: ---- Register 43: 1.000 *10^3 Wh ----
2017-10-13 11:25:10.916 #1   001bc50c6000bc21 <log> 0:03:13.889 [ info] [   meter/ytl] {   device}: ---- Register 44: 0.000 *10^3 Wh ----
2017-10-13 11:25:10.916 #1   001bc50c6000bc21 <log> 0:03:13.898 [ info] [   meter/ytl] {   device}: ---- Register 45: 0.000 *10^3 Wh ----
2017-10-13 11:25:10.916 #1   001bc50c6000bc21 <log> 0:03:13.907 [ info] [   meter/ytl] {   device}: ---- Register 46: 0.000 *10^3 Wh ----
2017-10-13 11:25:10.916 #1   001bc50c6000bc21 <log> 0:03:13.915 [ info] [   meter/ytl] {   device}: ---- Register 47: 0.000 *10^3 Wh ----
2017-10-13 11:25:10.958 #1   001bc50c6000bc21 <log> 0:03:13.924 [ info] [   meter/ytl] {   device}: ---- Register 48: 0.000 *10^3 Wh ----
2017-10-13 11:25:10.958 #1   001bc50c6000bc21 <log> 0:03:13.932 [ info] [   meter/ytl] {   device}: ---- Register 49: 0.000 *10^3 Wh ----
2017-10-13 11:25:10.958 #1   001bc50c6000bc21 <log> 0:03:13.941 [ info] [   meter/ytl] {   device}: ---- Register 50: 0.000 *10^3 Wh ----
2017-10-13 11:25:10.958 #1   001bc50c6000bc21 <log> 0:03:13.949 [ info] [   meter/ytl] {   device}: ---- Register 51: 2 *10^3 W ----
2017-10-13 11:25:10.958 #1   001bc50c6000bc21 <log> 0:03:13.957 [ info] [   meter/ytl] {   device}: ---- Register 52: 0.000 *10^3 W ----
2017-10-13 11:25:11.001 #1   001bc50c6000bc21 <log> 0:03:13.966 [ info] [   meter/ytl] {   device}: ---- Register 53: 0.000 *10^3 W ----
2017-10-13 11:25:11.001 #1   001bc50c6000bc21 <log> 0:03:13.974 [ info] [   meter/ytl] {   device}: ---- Register 54: 0.000 *10^3 W ----
2017-10-13 11:25:11.001 #1   001bc50c6000bc21 <log> 0:03:13.983 [ info] [   meter/ytl] {   device}: ---- Register 55: 247.589 *10^3 W ----
2017-10-13 11:25:11.001 #1   001bc50c6000bc21 <log> 0:03:13.992 [ info] [   meter/ytl] {   device}: ---- Register 56: 0.000 *10^3 W ----
2017-10-13 11:25:11.001 #1   001bc50c6000bc21 <log> 0:03:14.000 [ info] [   meter/ytl] {   device}: ---- Register 57: 0.000 *10^3 W ----
2017-10-13 11:25:11.044 #1   001bc50c6000bc21 <log> 0:03:14.009 [ info] [   meter/ytl] {   device}: ---- Register 58: 0.000 *10^3 W ----
2017-10-13 11:25:11.044 #1   001bc50c6000bc21 <log> 0:03:14.017 [ info] [   meter/ytl] {   device}: ---- Register 59: 0.000 *10^3 W ----
2017-10-13 11:25:11.044 #1   001bc50c6000bc21 <log> 0:03:14.025 [ info] [   meter/ytl] {   device}: ---- Register 60: 0.000 *10^3 W ----
2017-10-13 11:25:11.044 #1   001bc50c6000bc21 <log> 0:03:14.034 [ info] [   meter/ytl] {   device}: ---- Register 61: 0.000 *10^3 var ----
2017-10-13 11:25:11.044 #1   001bc50c6000bc21 <log> 0:03:14.043 [ info] [   meter/ytl] {   device}: ---- Register 62: 0.000 *10^3 var ----
2017-10-13 11:25:11.087 #1   001bc50c6000bc21 <log> 0:03:14.051 [ info] [   meter/ytl] {   device}: ---- Register 63: 0.000 *10^3 var ----
2017-10-13 11:25:11.087 #1   001bc50c6000bc21 <log> 0:03:14.060 [ info] [   meter/ytl] {   device}: ---- Register 64: 0.003 *10^3 var ----
2017-10-13 11:25:11.087 #1   001bc50c6000bc21 <log> 0:03:14.069 [ info] [   meter/ytl] {   device}: ---- Register 65: 0.000 *10^3 var ----
2017-10-13 11:25:11.087 #1   001bc50c6000bc21 <log> 0:03:14.077 [ info] [   meter/ytl] {   device}: ---- Register 66: 0.000 *10^3 var ----
2017-10-13 11:25:11.087 #1   001bc50c6000bc21 <log> 0:03:14.086 [ info] [   meter/ytl] {   device}: ---- Register 67: 0.000 *10^3 var ----
2017-10-13 11:25:11.129 #1   001bc50c6000bc21 <log> 0:03:14.094 [ info] [   meter/ytl] {   device}: ---- Register 68: 0.000 *10^3 var ----
2017-10-13 11:25:11.129 #1   001bc50c6000bc21 <log> 0:03:14.103 [ info] [   meter/ytl] {   device}: ---- Register 69: 0.000 *10^3 var ----
2017-10-13 11:25:11.129 #1   001bc50c6000bc21 <log> 0:03:14.112 [ info] [   meter/ytl] {   device}: ---- Register 70: 0.000 *10^3 var ----
2017-10-13 11:25:11.129 #1   001bc50c6000bc21 <log> 0:03:14.120 [ info] [   meter/ytl] {   device}: ---- Register 71: 0.001 *10^3 varh ----
2017-10-13 11:25:11.129 #1   001bc50c6000bc21 <log> 0:03:14.129 [ info] [   meter/ytl] {   device}: ---- Register 72: 0.000 *10^3 varh ----
2017-10-13 11:25:11.172 #1   001bc50c6000bc21 <log> 0:03:14.138 [ info] [   meter/ytl] {   device}: ---- Register 73: 0.000 *10^3 varh ----
2017-10-13 11:25:11.172 #1   001bc50c6000bc21 <log> 0:03:14.147 [ info] [   meter/ytl] {   device}: ---- Register 74: 0.000 *10^3 varh ----
2017-10-13 11:25:11.172 #1   001bc50c6000bc21 <log> 0:03:14.155 [ info] [   meter/ytl] {   device}: ---- Register 75: 0.000 *10^3 varh ----
2017-10-13 11:25:11.172 #1   001bc50c6000bc21 <log> 0:03:14.164 [ info] [   meter/ytl] {   device}: ---- Register 76: 0.000 *10^3 varh ----
2017-10-13 11:25:11.172 #1   001bc50c6000bc21 <log> 0:03:14.173 [ info] [   meter/ytl] {   device}: ---- Register 77: 0.000 *10^3 varh ----
2017-10-13 11:25:11.215 #1   001bc50c6000bc21 <log> 0:03:14.182 [ info] [   meter/ytl] {   device}: ---- Register 78: 0.000 *10^3 varh ----
2017-10-13 11:25:11.215 #1   001bc50c6000bc21 <log> 0:03:14.190 [ info] [   meter/ytl] {   device}: ---- Register 79: 0.000 *10^3 varh ----
2017-10-13 11:25:11.215 #1   001bc50c6000bc21 <log> 0:03:14.199 [ info] [   meter/ytl] {   device}: ---- Register 80: 0.000 *10^3 varh ----
2017-10-13 11:25:11.215 #1   001bc50c6000bc21 <log> 0:03:14.208 [ info] [   meter/ytl] {   device}: ---- Register 81: 0.000 *10^3 var ----
2017-10-13 11:25:11.215 #1   001bc50c6000bc21 <log> 0:03:14.216 [ info] [   meter/ytl] {   device}: ---- Register 82: 0.000 *10^3 var ----
2017-10-13 11:25:11.258 #1   001bc50c6000bc21 <log> 0:03:14.225 [ info] [   meter/ytl] {   device}: ---- Register 83: 0.000 *10^3 var ----
2017-10-13 11:25:11.258 #1   001bc50c6000bc21 <log> 0:03:14.234 [ info] [   meter/ytl] {   device}: ---- Register 84: 0.000 *10^3 var ----
2017-10-13 11:25:11.258 #1   001bc50c6000bc21 <log> 0:03:14.242 [ info] [   meter/ytl] {   device}: ---- Register 85: 0.000 *10^3 var ----
2017-10-13 11:25:11.258 #1   001bc50c6000bc21 <log> 0:03:14.251 [ info] [   meter/ytl] {   device}: ---- Register 86: 0.000 *10^3 var ----
2017-10-13 11:25:11.258 #1   001bc50c6000bc21 <log> 0:03:14.260 [ info] [   meter/ytl] {   device}: ---- Register 87: 0.000 *10^3 var ----
2017-10-13 11:25:11.294 #1   001bc50c6000bc21 <log> 0:03:14.268 [ info] [   meter/ytl] {   device}: ---- Register 88: 0.000 *10^3 var ----
2017-10-13 11:25:11.294 #1   001bc50c6000bc21 <log> 0:03:14.277 [ info] [   meter/ytl] {   device}: ---- Register 89: 0.000 *10^3 var ----
2017-10-13 11:25:11.294 #1   001bc50c6000bc21 <log> 0:03:14.286 [ info] [   meter/ytl] {   device}: ---- Register 90: 0.000 *10^3 var ----
2017-10-13 11:25:11.355 #1   001bc50c6000bc21 <log> 0:03:14.344 [ info] [        dlms] {   device}: Disconnect HDLC link





-------------------------------


load profile


sampleComplexProfiles()


request for load profile buffer.
0x01, 0x02, 0x04, 0x02, 0x04,
DLMS_TYPE_U_LONG, 0x00, 0x08, 0x09, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0xff,
DLMS_TYPE_INTEGER, 0x02,
DLMS_TYPE_U_LONG, 0x00, 0x00,
'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x',
'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x',
0x01, 0x00 // All columns to retrieve


<GetRequest>
  <GetRequestNormal>
    <InvokeIdAndPriority Value="131" />
    <AttributeDescriptor>
      <!--PROFILE_GENERIC-->
      <ClassId Value="7" />
      <!--1.0.99.1.1.255-->
      <InstanceId Value="0100630101FF" />
      <AttributeId Value="2" />
    </AttributeDescriptor>
    <AccessSelection>
      <AccessSelector Value="1" />
      <AccessParameters>
        <Structure Qty="4" >
          <Structure Qty="4" >
            <UInt16 Value="8" />
            <!--0.0.1.0.0.255-->
            <OctetString Value="0000010000FF" />
            <Int8 Value="2" />
            <UInt16 Value="0" />
          </Structure>
          <!--2016-11-28 10:00:00-->
          <OctetString Value="07E00B1CFF0A000000FFFFFF" />
          <!--2016-11-29 00:00:00-->
          <OctetString Value="07E00B1DFF00000000FFFFFF" />
          <Array Qty="0" >
          </Array>
        </Structure>
      </AccessParameters>
    </AccessSelection>
  </GetRequestNormal>
</GetRequest>

processComplexSampleResponse()



processComplexSampleResponse()
 -> profileSampleCreate()

bad frame:
7e a023 00020023 41 93 f736 818014050200b4060200b407040000000108040000000 115ca 7e

7e a013 41 00020023 30 92e4 e6e700 0e010600 3ef5 7e


7e a04b 00020023 41 32 1df8 e6e600
c001 81 00 070100630101ff0201010204020412000809060000010000ff0f0212000007d0010400021500ff80000007d0010400021800ff8000000100
00d3
7e


07d0010400021500ff80000007d0010400021800ff800000010000d37e


c001 81 00 0701005e4200ff0201010204020412000809060000010000ff0f0212000007d0010400021500ff80000007d0010400021800ff8000000100



pbEncodeDataProfileValues()
 pb_encode_string()


dlmsParseProfileScalerUnit()

/sm/[deviceId]/[action]->smResourceCallback()->getDiscoveryAction()->getDiscoveryCb()->sendDataProfileDiscovery()


src/device/addons/metering/readings.h:18:#define READING_REG_VALUE_SIZE               (  60 )


if bad deviceId, getDiscoveryCb is called with NULL response and logProfileDiscovery gets called
with a NULL ptr which it dereferences causing a hard-fault.

pbEncodeProfiles(): pbProfileConfig.registers.arg = (void*)currentProfile;  // BUG: was address-of currentProfile.


#define PB_BUFFER_MAX_SIZE 8192




-------------------------------

saveDataProfileSample() -> uint32_t seqNo = mqCreate(MqEntry_dataProfileSample_tag, MqDataProfileSample_fields, &dpSample);


----------------------------------


I1.0.71.7.0.255,I1.0.51.7.0.255,I1.0.94.66.0.255

"<ProfileResult>, this is a very long profile result, will t"

",07e10b07020e0c06ff800000*10^-86,07d0000000000000ff800000*10^-86,2*10^0 A,0.270*10^0 A,0.000*10^0 A,0.000*10^0 V,249.644*10^0 V,0.000*10^0 V,0.000*10^0 degree,70.852*10^0 degree,0.000*10^0 degree,0.000*10^0,0.324*10^0,0.274*10^0,1.000*10^0,1.000*10^3 W"
",07e10b07020f0615ff800000*10^-86,07d0000000000000ff800000*10^-86,2*10^0 A,0.257*10^0 A,0.000*10^0 A,0.000*10^0 V,247.273*10^0 V,0.000*10^0 V,0.000*10^0 degree,69.923*10^0 degree,0.000*10^0 degree,0.000*10^0,0.337*10^0,0.285*10^0,1.000*10^0,1.000*10^3 W,0.018*10^3 W,0.000*10^3 W,0.018*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 var,0.050*10^3 var,0.000*10^3 var,0.050*10^3 var,0.000*10^3 var,0.000*10^3 var,0.000*10^3 var,0.000*10^3 var,0.000*10^-86,0.895*10^-86,0.198*10^-86,0.052*10^-86,0.895*10^-86,0.019*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^3 Wh,7.308*10^3 Wh,1.781*10^3 Wh,1.753*10^3 Wh,2.005*10^3 Wh,1.766*10^3 Wh,0.000*10^3 Wh,0.000*10^3 Wh,0.000*10^3 Wh,0.000*10^3 Wh,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^-86,0.063*10^-86,0.061*10^-86,0.061*10^-86,0.062*10^-86,0.062*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^3 varh,20.371*10^3 varh,5.013*10^3 varh,5.107*10^3 varh,5.097*10^3 varh,5.152*10^3 varh,0.036*10^3 varh,0.009*10^3 varh,0.008*10^3 varh,0.008*10^3 varh,0.009*10^3 var,0.000*10^3 var,0.000*10^3 var"
[,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,0,0,0,0,0,0,0,0,0,278,1000,1000,18,0,18,0,0,0,0,0,52,0,52,0,0,0,0,0,895,0,0,0,0,0,0,0,0,0,0,1890,1865,2116,1868,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,0],


",07e10b0702111a31ff800000*10^-86,07d0000000000000ff800000*10^-86,2*10^0 A,0.278*10^0 A,0.000*10^0 A,0.000*10^0 V,250.481*10^0 V,0.000*10^0 V,0.000*10^0 degree,71.255*10^0 degree,0.000*10^0 degree,0.000*10^0,0.318*10^0,0.269*10^0,1.000*10^0,1.000*10^3 W,0.018*10^3 W,0.000*10^3 W,0.018*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 var,0.055*10^3 var,0.000*10^3 var,0.055*10^3 var,0.000*10^3 var,0.000*10^3 var,0.000*10^3 var,0.000*10^3 var,0.000*10^-86,0.895*10^-86,0.198*10^-86,0.052*10^-86,0.895*10^-86,0.019*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^3 Wh,7.345*10^3 Wh,1.781*10^3 Wh,1.791*10^3 Wh,2.005*10^3 Wh,1.766*10^3 Wh,0.000*10^3 Wh,0.000*10^3 Wh,0.000*10^3 Wh,0.000*10^3 Wh,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^3 W,0.000*10^-86,0.063*10^-86,0.061*10^-86,0.061*10^-86,0.062*10^-86,0.062*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^3 varh,20.479*10^3 varh,5.013*10^3 varh,5.216*10^3 varh,5.097*10^3 varh,5.152*10^3 varh,0.036*10^3 varh,0.009*10^3 varh,0.008*10^3 varh,0.008*10^3 varh,0.009*10^3 var,0.000*10^3 var,0.000*10^3 var"
",07d0020500061c0fff800000*10^-86,255*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,07d0011000063900ff800000*10^-86,0*10^-86,0.326*10^-86,249.136*10^-86,0.000*10^-86,0.000*10^-86,0.268*10^-86,0.000*10^-86,0.000*10^-86,8.030*10^-86,0.229*10^-86,0.239*10^-86,0.137*10^-86,0.002*10^-86,0.002*10^-86,0.275*10^-86,1.000*10^-86,1.000*10^-86,07d0011000063a00ff800000*10^-86,0*10^-86,0.327*10^-86,249.192*10^-86,0.000*10^-86,0.000*10^-86,0.267*10^-86,0.000*10^-86,0.000*10^-86,8.020*10^-86,0.229*10^-86,0.239*10^-86,0.136*10^-86,0.002*10^-86,0.002*10^-86,0.276*10^-86,1.000*10^-86,1.000*10^-86,07d0011000063b00ff800000*10^-86,0*10^-86,0.326*10^-86,249.449*10^-86,0.000*10^-86,0.000*10^-86,0.268*10^-86,0.000*10^-86,0.000*10^-86,8.130*10^-86,0.228*10^-86,0.238*10^-86,0.137*10^-86,0.002*10^-86,0.002*10^-86,0.275*10^-86,1.000*10^-86,1.000*10^-86,07d0011000070000ff800000*10^-86,0*10^-86,0.325*10^-86,249.449*10^-86,0.000*10^-86,0.000*10^-86,0.268*10^-86,0.000*10^-86,0.000*10^-86,8.158*10^-86,0.228*10^-86,0.237*10^-86,0.137*10^-86"

"[07d0020500061c0fff800000*10^-86,255*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86,0.000*10^-86],
 [07d0011000171d00ff800000*10^-86,0*10^-86,0.335*10^-86,247.602*10^-86,0.000*10^-86,0.000*10^-86,0.259*10^-86,0.000*10^-86,0.000*10^-86,7.956*10^-86,0.232*10^-86,0.240*10^-86,0.133*10^-86,0.002*10^-86,0.002*10^-86,0.283*10^-86,1.000*10^-86,1.000*10^-86],
 [07d0011000171e00ff800000*10^-86,0*10^-86,0.334*10^-86,247.579*10^-86,0.000*10^-86,0.000*10^-86,0.259*10^-86,0.000*10^-86,0.000*10^-86,8.036*10^-86,0.231*10^-86,0.240*10^-86,0.133*10^-86,0.002*10^-86,0.002*10^-86,0.283*10^-86,1.000*10^-86,1.000*10^-86],
 [07d0011000171f00ff800000*10^-86,0*10^-86,0.333*10^-86,247.857*10^-86,0.000*10^-86,0.000*10^-86,0.261*10^-86,0.000*10^-86,0.000*10^-86,8.090*10^-86,0.232*10^-86,0.240*10^-86,0.134*10^-86,0.002*10^-86,0.002*10^-86,0.281*10^-86,1.000*10^-86,1.000*10^-86],
 [07d0011000172000ff800000*10^-86,0*10^-86,0.333*10^-86,247.806*10^-86,0.000*10^-86,0.000*10^-86,0.261*10^-86,0.000*10^-86,0.000*10^-86,8.087*10^-86,0.232*10^-86,0.240*10^-86,0.134*10^-86,0.002*10^-86,0.002*10^-86,*10^-86,*10^-86,*10^-86], "




discoverNextProfile()
discoverProfiles()

#registers.append('L1.0.31.7.0.255')
#registers.append('I1.0.51.7.0.255')
#registers.append('I1.0.71.7.0.255')
registers.append('I1.0.94.66.0.255')
#registers.append('I1.0.99.1.1.255')


I1.0.99.1.1.255:-120
I1.0.94.66.0.255
I1.0.94.66.0.255,I1.0.99.1.1.255:-900
I1.0.98.1.0.255

I1.0.98.1.0.255:-9:9:18
I1.0.98.1.0.255:-9:4:10

I1.0.98.1.0.255:-9:0:1,I1.0.98.1.0.255:-9:1:2,I1.0.98.1.0.255:-9:2:3,I1.0.98.1.0.255:-9:3:4
I1.0.98.1.0.255:-9:0:1,I1.0.98.1.0.255:-9:1:2

I1.0.99.1.1.255:-7200,I1.0.94.66.0.255,I1.0.99.1.1.255:-3600

I1.0.98.1.0.255:-9:0:1,I1.0.98.1.0.255:-9:1:2
I1.0.98.1.0.255:-9:2:3,I1.0.98.1.0.255:-9:3:4

I1.0.98.1.0.255:-9:0:1, I1.0.98.1.0.255:-9:1:2, I1.0.98.1.0.255:-9:2:3, I1.0.98.1.0.255:-9:3:4



MessageReadoutRequest:
readingsCreateResponse()

LOG_DEBUG("--> %s:%d",__FILE__,__LINE__);


0000600A02FF is 1, 3?
0000600A02FF

2017-06-01T08:51:00.000-00:00 0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.2,0.0,0.0,0.2,0.2,0.4,0.0,0.0,0.4,0.4,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,117282.796,117531.601,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,246545.78,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,07e1051c00091611ff800000,07e1051f030e2600ff800000,0000000000000000ff800000,07e1051c10091711ff800000


I1.0.98.1.0.255:-9:9:18



--------------------------------------------------------------

P1.0.94.66.0.255    - IS
P1.0.99.1.0.255     - LS


I0.0.1.0.0.255
I1.0.0.1.2.255
I1.0.0.1.1.255
I1.0.31.7.0.255
I1.0.51.7.0.255
I1.0.71.7.0.255
I1.0.32.7.0.255
I1.0.52.7.0.255
I1.0.72.7.0.255
I1.0.81.7.4.255
I1.0.81.7.15.255
I1.0.81.7.26.255
I1.0.13.7.0.255
I1.0.33.7.0.255
I1.0.53.7.0.255
I1.0.73.7.0.255
I1.0.1.7.0.255
I1.0.2.7.0.255
I1.0.21.7.0.255
I1.0.22.7.0.255
I1.0.41.7.0.255
I1.0.42.7.0.255
I1.0.61.7.0.255
I1.0.62.7.0.255
I1.0.3.7.0.255
I1.0.4.7.0.255
I1.0.23.7.0.255
I1.0.24.7.0.255
I1.0.43.7.0.255
I1.0.44.7.0.255
I1.0.63.7.0.255
I1.0.64.7.0.255
I1.0.1.6.0.255
I1.0.1.6.1.255
I1.0.1.6.2.255
I1.0.1.6.3.255
I1.0.2.6.0.255
I1.0.2.6.1.255
I1.0.2.6.2.255
I1.0.2.6.3.255
I1.0.1.8.0.255
I1.0.1.8.1.255
I1.0.1.8.2.255
I1.0.1.8.3.255
I1.0.2.8.0.255
I1.0.2.8.1.255
I1.0.2.8.2.255
I1.0.2.8.3.255
I1.0.1.2.0.255
I1.0.1.2.1.255
I1.0.1.2.2.255
I1.0.1.2.3.255
I1.0.2.2.0.255
I1.0.2.2.1.255
I1.0.2.2.2.255
I1.0.2.2.3.255
I1.0.3.6.0.255
I1.0.3.6.1.255
I1.0.3.6.2.255
I1.0.3.6.3.255
I1.0.4.6.0.255
I1.0.4.6.1.255
I1.0.4.6.2.255
I1.0.4.6.3.255
I1.0.3.8.0.255
I1.0.3.8.1.255
I1.0.3.8.2.255
I1.0.3.8.3.255
I1.0.4.8.0.255
I1.0.4.8.1.255
I1.0.4.8.2.255
I1.0.4.8.3.255
I1.0.3.2.0.255
I1.0.3.2.1.255
I1.0.3.2.2.255
I1.0.3.2.3.255
I1.0.4.2.0.255
I1.0.4.2.1.255
I1.0.4.2.2.255
I1.0.4.2.3.255

-------------------------------------

Mitsu IS

"0.0.1.0.0.255"     : Time
"1.0.0.1.2.255"     : Time/date of billing reset
"1.0.0.1.1.255"     : Total number of billing reset
"1.0.11.7.0.255"    : Current: Inst. Value (A)
"1.0.31.7.0.255"    : L1 Current ; Inst. value;
"1.0.51.7.0.255"    : L2 Current ; Inst. value;
"1.0.71.7.0.255"    : L3 Current ; Inst. value;
"1.0.12.7.0.255"    : Voltage: Inst. Value (V)
"1.0.32.7.0.255"    : L1 Voltage; Inst. Value;
"1.0.52.7.0.255"    : L2 Voltage; Inst. Value;
"1.0.72.7.0.255"    : L3 Voltage; Inst. Value;
"1.0.81.7.4.255"    : Angle of I(L1) - U(L1)
"1.0.81.7.15.255"   : Angle of I(L2) - U(L2)
"1.0.81.7.26.255"   : Angle of I(L3) - U(L3)
"1.0.13.7.0.255"    : System power factor: Inst. value
"1.0.33.7.0.255"    : L1 Power factor; Current avg. 5  ?
"1.0.53.7.0.255"    : L2 Power factor; Current avg. 5  ?
"1.0.73.7.0.255"    : L3 Power factor; Current avg. 5  ?
"1.0.1.7.0.255"     : ΣLi Active power+ (QI+QIV); Inst. Value
"1.0.2.7.0.255"     : ΣLi Active power- (QII+QIII); Inst. Value
"1.0.21.7.0.255"    : L1 Active power+ (QI+QIV); Inst. Value
"1.0.22.7.0.255"    : L1 Active power- (QII+QIII); Inst. Value
"1.0.41.7.0.255"    : L2 Active power+ (QI+QIV); Inst. Value
"1.0.42.7.0.255"    : L2 Active power- (QII+QIII); Inst. Value
"1.0.61.7.0.255"    : L3 Active power+ (QI+QIV); Inst. Value
"1.0.62.7.0.255"    : L3 Active power- (QII+QIII); Inst. Value
"1.0.3.7.0.255"     : ΣLi Reactive power+ (QI+QII); Inst. Value
"1.0.4.7.0.255"     : ΣLi Reactive power- (QIII+QIV); Inst. Value
"1.0.23.7.0.255"    : L1 Reactive power+ (QI+QII); Inst. Value
"1.0.24.7.0.255"    : L1 Reactive power- (QIII+QIV); Inst. Value
"1.0.43.7.0.255"    : L2 Reactive power+ (QI+QII); Inst. Value
"1.0.44.7.0.255"    : L2 Reactive power- (QIII+QIV); Inst. Value
"1.0.63.7.0.255"    : L3 Reactive power+ (QI+QII); Inst. Value
"1.0.64.7.0.255"    : L3 Reactive power- (QIII+QIV); Inst. Value
"1.0.1.6.0.255"     : ΣLi Active power+ (QI+QIV); Max.; [Total, Rate 0]
"1.0.2.6.0.255"     : ΣLi Active power- (QII+QIII); Max.; Rate 0
"1.0.1.6.1.255"     : ΣLi Active power+ (QI+QIV); Max.; [Total, Rate 1]
"1.0.2.6.1.255"     : ΣLi Active power- (QII+QIII); Max.; Rate 1
"1.0.1.6.2.255"     : ΣLi Active power+ (QI+QIV); Max.; [Total, Rate 2]
"1.0.2.6.2.255"     : ΣLi Active power- (QII+QIII); Max.; Rate 2
"1.0.1.6.3.255"     : ΣLi Active power+ (QI+QIV); Max.; [Total, Rate 3]
"1.0.2.6.3.255"     : ΣLi Active power- (QII+QIII); Max.; Rate 3
"1.0.1.6.4.255"     : ΣLi Active power+ (QI+QIV); Max.; [Total, Rate 4]
"1.0.2.6.4.255"     : ΣLi Active power- (QII+QIII); Max.; Rate 4
"1.0.1.8.0.255"     : ΣLi Active power+ (QI+QIV); Time integral 1; Rate 0
"1.0.2.8.0.255"     : ΣLi Active power- (QII+QIII); Time integral 1; Rate 0
"1.0.1.8.1.255"     : ΣLi Active power+ (QI+QIV); Time integral 1; Rate 1
"1.0.2.8.1.255"     : ΣLi Active power- (QII+QIII); Time integral 1; Rate 1
"1.0.1.8.2.255"     : ΣLi Active power+ (QI+QIV); Time integral 1; Rate 2
"1.0.2.8.2.255"     : ΣLi Active power- (QII+QIII); Time integral 1; Rate 2
"1.0.1.8.3.255"     : ΣLi Active power+ (QI+QIV); Time integral 1; Rate 3
"1.0.2.8.3.255"     : ΣLi Active power- (QII+QIII); Time integral 1; Rate 3
"1.0.1.8.4.255"     : ΣLi Active power+ (QI+QIV); Time integral 1; Rate 4
"1.0.2.8.4.255"     : ΣLi Active power- (QII+QIII); Time integral 1; Rate 4
"1.0.1.2.0.255"     : ΣLi Active power+ (QI+QIV); Cum. max. 1; Rate 0
"1.0.2.2.0.255"     : ΣLi Active power- (QII+QIII); Cum. max. 1; Rate 0
"1.0.1.2.1.255"     : ΣLi Active power+ (QI+QIV); Cum. max. 1; Rate 1
"1.0.2.2.1.255"     : ΣLi Active power- (QII+QIII); Cum. max. 1; Rate 1
"1.0.1.2.2.255"     : ΣLi Active power+ (QI+QIV); Cum. max. 1; Rate 2
"1.0.2.2.2.255"     : ΣLi Active power- (QII+QIII); Cum. max. 1; Rate 2
"1.0.1.2.3.255"     : ΣLi Active power+ (QI+QIV); Cum. max. 1; Rate 3
"1.0.2.2.3.255"     : ΣLi Active power- (QII+QIII); Cum. max. 1; Rate 3
"1.0.1.2.4.255"     : ΣLi Active power+ (QI+QIV); Cum. max. 1; Rate 4
"1.0.2.2.4.255"     : ΣLi Active power- (QII+QIII); Cum. max. 1; Rate 4
"1.0.3.6.0.255"     : ΣLi Reactive power+ (QI+QIV); Max.; Rate 0
"1.0.4.6.0.255"     : ΣLi Reactive power- (QII+QIII); Max.; Rate 0
"1.0.3.6.1.255"     : ΣLi Reactive power+ (QI+QIV); Max.; Rate 1
"1.0.4.6.1.255"     : ΣLi Reactive power- (QII+QIII); Max.; Rate 1
"1.0.3.6.2.255"     : ΣLi Reactive power+ (QI+QIV); Max.; Rate 2
"1.0.4.6.2.255"     : ΣLi Reactive power- (QII+QIII); Max.; Rate 2
"1.0.3.6.3.255"     : ΣLi Reactive power+ (QI+QIV); Max.; Rate 3
"1.0.4.6.3.255"     : ΣLi Reactive power- (QII+QIII); Max.; Rate 3
"1.0.3.6.4.255"     : ΣLi Reactive power+ (QI+QIV); Max.; Rate 4
"1.0.4.6.4.255"     : ΣLi Reactive power- (QII+QIII); Max.; Rate 4
"1.0.3.8.0.255"     : ΣLi Reactive power+ (QI+QIV); Time integral 1; Rate 0
"1.0.4.8.0.255"     : ΣLi Reactive power- (QII+QIII); Time integral 1; Rate 0
"1.0.3.8.1.255"     : ΣLi Reactive power+ (QI+QIV); Time integral 1; Rate 1
"1.0.4.8.1.255"     : ΣLi Reactive power- (QII+QIII); Time integral 1; Rate 1
"1.0.3.8.2.255"     : ΣLi Reactive power+ (QI+QIV); Time integral 1; Rate 2
"1.0.4.8.2.255"     : ΣLi Reactive power- (QII+QIII); Time integral 1; Rate 2
"1.0.3.8.3.255"     : ΣLi Reactive power+ (QI+QIV); Time integral 1; Rate 3
"1.0.4.8.3.255"     : ΣLi Reactive power- (QII+QIII); Time integral 1; Rate 3
"1.0.3.8.4.255"     : ΣLi Reactive power+ (QI+QIV); Time integral 1; Rate 4
"1.0.4.8.4.255"     : ΣLi Reactive power- (QII+QIII); Time integral 1; Rate 4
"1.0.3.2.0.255"     : ΣLi Reactive power+ (QI+QIV); Cum. max. 1; Rate 0
"1.0.4.2.0.255"     : ΣLi Reactive power- (QII+QIII); Cum. max. 1; Rate 0
"1.0.3.2.1.255"     : ΣLi Reactive power+ (QI+QIV); Cum. max. 1; Rate 1
"1.0.4.2.1.255"     : ΣLi Reactive power- (QII+QIII); Cum. max. 1; Rate 1
"1.0.3.2.2.255"     : ΣLi Reactive power+ (QI+QIV); Cum. max. 1; Rate 2
"1.0.4.2.2.255"     : ΣLi Reactive power- (QII+QIII); Cum. max. 1; Rate 2
"1.0.3.2.3.255"     : ΣLi Reactive power+ (QI+QIV); Cum. max. 1; Rate 3
"1.0.4.2.3.255"     : ΣLi Reactive power- (QII+QIII); Cum. max. 1; Rate 3
"1.0.3.2.4.255"     : ΣLi Reactive power+ (QI+QIV); Cum. max. 1; Rate 4
"1.0.4.2.4.255"     : ΣLi Reactive power- (QII+QIII); Cum. max. 1; Rate 4


2017-11-28T11:35:13.000-00:00 00 0xff
2017-11-28T11:35:13.000-00:00 00 0xff
4
0
0
0
0
21.941
21.941
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

--------------------------------------------------


Mitsu LS:

"0.0.1.0.0.255","0.0.96.5.0.255","1.0.1.4.0.255","1.0.2.4.0.255","1.0.3.4.0.255","1.0.4.4.0.255","1.0.1.29.0.255","1.0.2.29.0.255","1.0.3.29.0.255","1.0.4.29.0.255","1.0.12.27.0.255","1.0.11.27.0.255","1.0.12.128.124.255","1.0.11.128.124.255","1.0.13.27.0.255","1.0.81.128.4.255"


2017-11-28T11:30:00.000-00:00 00 0xff
0
0
0
0
0
0
0
0
0
21971
0
0
0
0
0
2.659
0
0
0
0
0
0
0
0
0
0
0
0


------------------------------------------------

C:\Users\SteveTickle\AppData\Local\Programs\Python\Python36-32\Lib\site-packages\suds\sax

cp /usr/lib/python3/dist-packages/suds/client.py .
cp /usr/lib/python3/dist-packages/suds/sax/text.py .

--------------------------------------------------

node.boot

terminal.c:232 temrinalTask generates EVENT_CREATE(event, EVENT_NODE_BOOT);



----------------------------

SM API notes:
- Capabiliites info? event support, profile support, permissions
- How opinionated are we? e.g. can on-deman come from retrieved data? come with latency but simplifies our system.
- Are we intending to present a unified interface or an infinitely configurable interface? middle-ground?.
- Are we wedding ourselves to DLMS? should we be presenting a DLMS/OBIS interface? or simply IS/LS/BP, i.e. no OBISs.
- Should profileObisCode be necessary? should be hidden? use name instead? which is the identifier?
- "ic" interface class, attributeID, etc are a DLMS-ism that is only of importance when interrogating the meter, not for the user of the data.
- We should not really be exposing DLMS-isms to the outer API. We need to consider what portions of DLMS that we want to expose.
- "scaler" not "scalar" i.e. a value that represents the scale, not that it is a scalar value.
- MeterRegisterValue. I don't think we should be exposing the low-level interface to the end user API.
- Format of returned data is not described. Either refer to A-XDR doc or describe fully here.
- "ws" prefix. Does this have a real meaning? surely not "web service"?! that would be implied.
- API versioning? Should this be in the URL or negotiated on a client-by-client basis?
- Do we need a distinction between profiles and single values? or simply multi-valued results with a common request interface?
- Asynchronous events? no API is apparent for those yet other than polling (long-poll connection? / websockets?).
- Time its own smart-metering API, legal time shouldn't be part of the NMS.
- Should capabilities even be exposed to the API user? isn't the purpose to abstract them away?


-------------------------------------

3e  :   hw1:v104
2d  :   mitsubishi-insecure:v102.1
2e  :   mitsubishi-insecure:v102.1
2f  :   mitsubishi-insecure:v102.1
31  :   ytl-insecure:v101-310-gcd0cc63
34  :   ytl-insecure:v101-310-gcd0cc63
35  :   mitsubishi-insecure:v102.1
36  :   mitsubishi-insecure:v102.1


-------------------------------------------------


cygh/sdram.c:

int cygh_sdram_read(uint32_t offset, void *buf, size_t size)
int cygh_sdram_write(uint32_t offset, const void *buf, size_t size)

used by:
- firmware_updater
- store/file.c   FILERESULT FILE_write(file_t *file, const void *buf, size_t len)
- store/file.c   FILERESULT FILE_read(file_t *file, void *buf, size_t len, size_t *outlen)
- store/fs.c     FSRESULT FS_storage_read(fs_t *handle, uint32_t lba_offset, void * buffer)

used by:
- file_nanopb.c
- list.c
- fs_onefile.c
- fs.c
- stream_output_fs.c
- meter_command_protocol.c
- passthrough.c
- licensing.c
- gprs.c
- command_handler.c


- can we allocate dynamically or statically >64KB on the eCog?

-------------------------------------------

cyglib build instability:

git clean -xfd
./build

PASSED erase_with_filter_main_alt
Writing preferences until compaction happens.
Measuring time for unlimited sized preference store.
Write     0: took   0 milliseconds, read took   0 milliseconds
Write     1: took   0 milliseconds, read took   0 milliseconds
Write     2: took   0 milliseconds, read took   0 milliseconds
Write     3: took   0 milliseconds, read took   0 milliseconds
Write     4: took   0 milliseconds, read took   0 milliseconds
Write     5: took   0 milliseconds, read took   0 milliseconds
Write     6: took   0 milliseconds, read took   0 milliseconds
Write     7: took   0 milliseconds, read took   0 milliseconds
Write     8: took   0 milliseconds, read took   0 milliseconds
Write     9: took   0 milliseconds, read took   0 milliseconds
Write    10: took   0 milliseconds, read took   0 milliseconds
Write    11: took   0 milliseconds, read took   0 milliseconds
Write    12: took   0 milliseconds, read took   0 milliseconds
Write    13: took   0 milliseconds, read took   0 milliseconds
Write    14: took   0 milliseconds, read took   0 milliseconds
Write    15: took   0 milliseconds, read took   0 milliseconds
Write    16: took   1 milliseconds, read took   0 milliseconds
FAILED 448: compaction_timing:On max memory with unlimited tags, the last write must fail
PASSED read_chip_id
Test suite summary for: preferences
Tests run 22
Tests passed 21
Tests failed 1
Test suite details for: preferences
PASSED test_the_test
PASSED initialise
PASSED read_empty
PASSED size
PASSED read_from_main
PASSED read_from_alt
PASSED write_to_empty
PASSED write_new_value_for_tag
PASSED write_two_tags
PASSED write_two_tags_twice
PASSED compact
PASSED write_after_compact
PASSED compact_auto
PASSED write_and_compact_blank
PASSED erase_main
PASSED erase_alt
PASSED erase_main_alt
PASSED erase_with_filter_main
PASSED erase_with_filter_alt
PASSED erase_with_filter_main_alt
FAILED 448: compaction_timing:On max memory with unlimited tags, the last write must fail
PASSED read_chip_id
Tests run 22
Tests passed 21
Tests failed 1
make[1]: *** [run] Error 1
/project/cyghlib/tools/cygh_py_app.mak:57: recipe for target 'run' failed
make[1]: Leaving directory '/project/test/preferences'
Makefile:227: recipe for target 'stamp-test-cyghpy' failed
make: *** [stamp-test-cyghpy] Error 1

----------------------------------------------------------

hwicce build instability:

event_diag_log_id: 59 event_rec_log_id: 54 timestamp: 1083 time_since_boot_secs: 1083 module: METERCOMMS line: 481 severity: WARNING metercomms_datacol_disabled { }
event_diag_log_id: 60 event_rec_log_id: 55 timestamp: 1113 time_since_boot_secs: 1113 module: METERCOMMS line: 481 severity: WARNING metercomms_datacol_disabled { }
event_diag_log_id: 61 event_rec_log_id: 56 timestamp: 1144 time_since_boot_secs: 1144 module: METERCOMMS line: 481 severity: WARNING metercomms_datacol_disabled { }
event_diag_log_id: 62 timestamp: 1152 time_since_boot_secs: 1152 module: CABLE line: 187 severity: INFO cable_connection_attempt_while_connected { }
event_diag_log_id: 63 timestamp: 1155 time_since_boot_secs: 1155 ok
module: FS_ONEFILE line: 87 severity: INFO fs_onefile { commit_success { data: "dcu_config_runtime" } }
event_diag_log_id: 64 event_rec_log_id: 57 timestamp: 1155 time_since_boot_secs: 1155 module: METERCOMMS line: 491 severity: WARNING metercomms_datacol_enabled { }
event_diag_log_id: 65 timestamp: 1164 time_since_boot_secs: 1164 module: FS_ONEFILE line: 87 severity: INFO fs_onefile { commit_success { data: "dcu_config_runtime" } }
event_diag_log_id: 66 event_rec_log_id: 58 timestamp: 1164 time_since_boot_secs: 1164 module: METERCOMMS line: 180 severity: ERROR metercomms_success_command { uuid { uuid_bytes: "\310\277\177\302\036,K\023\221\372Z\362o\246}\227" } meter_cmd { metercmd_protocol_read_type_instantaneous_schedule { } } meter_uuid { uuid_bytes: "\227\266\316\027\221yJ2\253\214\0359f\322\000\004" } scheduled: true instantaneous_schedule_collection_config_secs: 1800 }


hwicce build instability:

PYTHONPATH='/usr/local/lib/cylec_scripts:/project/thirdparty/nanopb/generator:/usr/local/lib/cygh/cyghlib/CyGHPyDebug' python -u -c 'from ctypes import PyDLL; PyDLL("/project/dcuunittest/dcu/metercomms/instantaneous_schedule/CyGHPyDebug/_lib.so")'
PYTHONPATH='/usr/local/lib/cylec_scripts:/project/thirdparty/nanopb/generator:/usr/local/lib/cygh/cyghlib/CyGHPyDebug' python -u /usr/bin/nosetests -s -v
dcuunittest.dcu.metercomms.instantaneous_schedule.test.test_main ... Starting Suite config

Start and Reading Timing test.FAILED 152: IS_start_and_reading_timing_test:diff >= start_sec-5

End Timing test................................................................
PASSED IS_end_timing_test

Reset Timing test
PASSED IS_reset_timing_test
Test suite summary for: config
Tests run 3
Tests passed 2
Tests failed 1
Test suite details for: config
FAILED 152: IS_start_and_reading_timing_test:diff >= start_sec-5
PASSED IS_end_timing_test
PASSED IS_reset_timing_test
Tests run 3
Tests passed 2
Tests failed 1
FAIL

======================================================================
FAIL: dcuunittest.dcu.metercomms.instantaneous_schedule.test.test_main
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.7/dist-packages/nose/case.py", line 197, in runTest
    self.test(*self.arg)
  File "/project/dcuunittest/dcu/metercomms/instantaneous_schedule/test.py", line 11, in test_main
    eq_(lib.cygh_main(), 0) #@UndefinedVariable
AssertionError: 1 != 0

----------------------------------------------------------------------
Ran 1 test in 17.540s

FAILED (failures=1)
../../../common.mak:80: recipe for target 'test' failed
make[2]: *** [test] Error 1
make[2]: Leaving directory '/project/dcuunittest/dcu/metercomms/instantaneous_schedule'
Makefile:15: recipe for target 'dcu/metercomms/instantaneous_schedule-test' failed
make[1]: Leaving directory '/project/dcuunittest'
make[1]: *** [dcu/metercomms/instantaneous_schedule-test] Error 2
Makefile:69: recipe for target 'unittest' failed
make: *** [unittest] Error 2

------------------------------------------------------------------------

hwicce build instability:

grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
grps_uart: DEBUG: tcpip_open failed due to connections not being accepted
--------------------- >> end captured logging << ---------------------

----------------------------------------------------------------------
Ran 6 tests in 8.068s

FAILED (failures=1)

Exception in thread Thread-9 (most likely raised during interpreter shutdown):
Traceback (most recent call last):
  File "/usr/lib/python2.7/threading.py", line 801, in __bootstrap_inner
  File "/project/dcuunittest/dcutestutils/network_sim.py", line 545, in run
  File "/usr/lib/python2.7/Queue.py", line 177, in get
  File "/usr/lib/python2.7/threading.py", line 355, in wait
<type 'exceptions.TypeError'>: 'NoneType' object is not callable
config/chip/python/time.c:42: error: cygh_py_abort called
Exception in thread DCU Main Thread (most likely raised during interpreter shutdown):
Traceback (most recent call last):
  File "/usr/lib/python2.7/threading.py", line 801, in __bootstrap_inner
  File "/project/dcuunittest/dcutestutils/dcu.py", line 291, in run
  File "/usr/local/lib/cygh/cyghlib/CyGHPyDebug/cygh/time.py", line 76, in clock
  File "/usr/local/lib/cygh/cyghlib/CyGHPyDebug/cygh/time.py", line 125, in _now
<type 'exceptions.AttributeError'>: 'NoneType' object has no attribute 'time'
Makefile:67: recipe for target 'dcuapptest/licensing_test/licensing_test.py-apptest' failed
make: *** [dcuapptest/licensing_test/licensing_test.py-apptest] Error 1







----------------------------------------------------------------------
Ran 2 tests in 26.357s

OK
make: *** [dcuapptest/config_tests/test_disable_datacol.py-apptest] Segmentation fault (core dumped)
Makefile:67: recipe for target 'dcuapptest/config_tests/test_disable_datacol.py-apptest' failed

-----------------------------------------------

From meter:

main
 CYLEC_process
  CYLEC_PROTO_process
   CYLEC_PROTO_receive_frame
    CYLEC_MSG_receive_frame


METER_COMMAND_protocol_process_task


protocol_0010_process_received_data

protocol_load_unsigned8

protocol_internal.h

protocol_integration.h
PR_READ
protocol_store_signed32_be
protocol_store_unsigned32_le
protocol_store_unsigned16_be
protocol_store_unsigned16_le
protocol_store_unsigned8

protocol_buffer_copy
protocol_buffer_cmp

METER_COMMAND_protocol_callback() supplies bytes to cmp.



------------------------------------------------------------

test_protocol.c: read_buffer_line() READ_BUFFER_SIZE



---------------------------------------------------------

chesney cable SWD:

SWDIO   -
SWDCLK  -
SWO     -
nRESET  -
GND     -
VTRef   -


JTAG pins:

TCK     - AD0
TDI     - AD1
TDO     - AD2
TMS     - AD3
TRST    - AC0 ?
SRST    - AC1 ?



---------------------------------------------------------

bellatrix port:


make PROJECT_BASE=.. CYLEC_METER_PROTOCOL_BASE=../Dependencies/cylec_meter_protocol TOOLCHAIN_BASE=/usr/bin TOOLS=HostGCC clean all


bug:
if cygh_uart_initialise() fails, then CYLEC_PROTO_init short circuits initialisation of some data
and consequently it looks as if a message has falsely been received and the length of the non-existent
message is used in a memcpy, crashing hard.

-------------------------------------------------


b protocol_0010.c:2027 if _step==12




./test_protocol_dcuv2_linux
  readings/0010/1004/LSS_med.txt.rep_length = 88
.rep_length = 44
.rep_length = 44
.rep_length = 44
.rep_length = 44
.rep_length = 44
.rep_length = 44
.rep_length = 25
.rep_length = 65
.rep_length = 25
.rep_length = 65
.rep_length = 17
.rep_length = 9360
.pass


O.rep_length = 44
.rep_length = 44
.rep_length = 44
.rep_length = 44
.rep_length = 44
.rep_length = 44
.rep_length = 25
.rep_length = 65
.rep_length = 25
.rep_length = 65
.rep_length = 17
.rep_length = 8192

__assert_fail@plt





------------------------



(gdb) p *(FILE*)sourceFile
$3 = {
  _p = 0xbaef "7ea8894103b4f32e00270505000000000500000000050000005605000000c4020c090c07dd0c13ff0c0f19ff014a0011440500005d640500005d640500005d6405000009c30500000000050000000005000000560500000000050000000005000000c702"..., _r = 881, _w = 0,
  _flags = 3204, _file = 7, _bf = {
    _base = 0xba60 "0000056050000000005000000c0020c090c07dd0c13ff0c0e16ff014a00113b0500005d640500005d640500005d64050000000005000000000500b2c37e\n7ea00703415144817e\n7ea8894103b4f32e00270505000000000500000000050000005605000"..., _size = 1024},
  _lbfsize = 0, _cookie = 0xb5c0, _read = 0x800013a <__sread$ind>,
  _write = 0x8000140 <__swrite$ind>, _seek = 0x8000146 <__sseek$ind>,
  _close = 0x800014c <__sclose$ind>, _ub = {_base = 0x0, _size = 0}, _up = 0x0,
  _ur = 0, _ubuf = "\000\000", _nbuf = "", _lb = {_base = 0x0, _size = 0},
  _blksize = 1024, _offset = -32768, _data = 0x0, _lock = 0}
(gdb)



/build/bakery/toolchain-gnu-ecog1-trunk-111113-085438/linux/cyan-dists/gnu/newlib/libgloss/ecog1x/lseek.c:45

off_t
_DEFUN (_lseek, (fd,  offset, whence),
       int fd _AND
       off_t offset _AND
       int whence)
{
  int res_lo, res_hi;
  int buffer[6] = {fd, (int)(offset >> 16), (int)offset, (int)whence, (int)&res_hi, (int)&

  int r;
  off_t res;
  asm volatile ("simtrap # %0 %1 %2" :
                "=&Ral" (r) :
                "0" (SYSCALL_lseek), "Rah" (buffer) :
                "memory");

  res = ((long)res_hi & 0xffff) << 16 | ((long)res_lo & 0xffff);
  if (r < 0)
    {
      errno = -r;
      res = -1;
    }

  return (res);
}


The above code pieces the result back togther in the wrong form, so for example passing offset==141000 (0x226c8) should return this same value.
Instead this returns 0x26c80000 i.e. it gets res_lo and res_hi the wrong way around and res_hi gets zeroed, possibly using an incorrect register for res_lo.






Only need to walk back to beginning of line:

do
{
    fseek(sourceFile, -1, SEEK_CUR)
    c   = fgetc(sourceFile);

} while(c != '\n');



but:

METER_COMMAND_protocol_callback() needs 'index' from start of line.
rewind to beginning, then read 'index' bytes forward:

for(uint32_t i=0; i<index; i++)
{
    fgetc(sourceFile);
}





----------------------------------------------


ssh://stevetickle@gerrit.se.cyco.io:29418/ipa_prod

scp to:
prod@172.16.32.133:~/ipa_prod



---------------------------------------------


UGVCL gap analysis:

- Tariff server/agent.
- Large data streaming (COAP-blockwise), server/agent.
- Retrieving data from meter rather than relying on scheduled profile read.
- Change from OBIS->generic labels (If de-DLMS-ifying the API) server/agent.
- Normalisation of data types (If de-DLMS-ifying the API).
- Schema definitions (If de-DLMS-ifying the API) server/agent.
- Time sync mechanism. (+-10sec sync, etc) server/agent. Use Blue-book style?
- configuration of meter (definition) This is a significant amount of work if we are to abstract away the DLMS details for calendars/ToU tables/etc.
- different calendar support Gregorian,  season profile, week profile and day profile support
- configuration of meter implementation server/agent. (See COSEM billing model).
- tamper work on supported agents, driver work.
- Async API server changes (request ID & response mechanism?) server only.
- batch mechanism from API? are groups sufficient?
- alarm read == profile read. Alarm reset mechanism by sevrer when read?? server/agent work, mechanism does not exist yet.
- accounting model for configuration, e.g. emergency credit with thresholds and accounts?
- How much of DataNotification is supported. Graeme says agenet has support for push of tamper. extend to be generic? it assumes a single type of message being pushed.
- Are we still using prefixes I/L/P?? why??
- firmware upgrade, file distribution.
- max demand reset.
- do we clear/reset buffers after capture and push or do we push deduplication duties to user of API?


config:
- demand integration period (how many periods?, which registers?, reset? last-period value?)
- push setup?
- profile capture periods.
- single action schedule for billing dates.
- activity calendar for time zones
- real time clock, date and time.
- script table (probably not needed, due to it being full of pseudo-OBISs).
-

Events can capture any of the following (configured by utility):
- Date and time of event 0 0 1 0 0 255 8 (Clock)
- Event code 0 0 96 11 0 255 1 (Data)
- Current, IR 1 0 31 7 0 255 3 (Register)
- Current, IY 1 0 51 7 0 255 3 (Register)
- Current, IB 1 0 71 7 0 255 3 (Register)
- Voltage, VRN (3 Φ/4W) 1 0 32 7 0 255 3 (Register)
- Voltage, VYN (3 Φ/4W) 1 0 52 7 0 255 3 (Register)
- Voltage, VBN (3 Φ/4W) 1 0 72 7 0 255 3 (Register)
- Voltage, VRY (3 Φ/3W) 1 0 32 7 0 255 3 (Register)
- Voltage, VYB (3 Φ/3W) 1 0 52 7 0 255 3 (Register)
- Power factor, R-Phase 1 0 33 7 0 255 3 (Register)
- Power factor, Y-Phase 1 0 53 7 0 255 3 (Register)
- Power factor, B-Phase 1 0 73 7 0 255 3 (Register)
- Cumulative energy, kWh 1 0 1 8 0 255 3 (Register)

From xls:
- RTC-Date and Time
- Demand integration period
- Profile capture period
- Single-action schedule for billing dates
- Activity calander for time zones
- Load limit(kw)
- Enable/disable load limit function
- Image transfer
- Metering mode
- Payment mode
- Last token recharge amount
- Last token recharge time
- Total amount at last recharge
- Current balance amount
- Current balance time
- LLS secret
- HLS secret
- Global key change
- Image activation single action schedule
- ESWF
- MD reset
- Apparent calculation- lag only / lag+lead
- LCD Display- Auto Parameters
- LCD Display- Push Parameters



log reading:
- supply events (voltage, current, power) (Profile generic) (not supported yet).
- billing (not supported yet).
- transaction events (RTC, demand integration period, profile capture period, singls action schedule for billing dates, activity calendar for time zones) (not supported yet).
- control events (not supported yet).
- non rollover events (not supported yet).
- other events (not supported yet).
- tamper alarms/reset? (not supported yet).



Phase 1:
- Low level API.
- Exposes details of meters.
- Since this is a low-level API and we expose details, do we also expose that meters don't implement (e.g IS on the mitsu?)
- Essentially an API that is at the level of DLMS/COSEM.
- data format is raw A-XDR data.
- Mixes domains, i.e. not strictly SM. NM is mixed in.
- Its what we have already, quick to implement.
- Specific to electricity.
- Synchronous.
- Pipe API.


Phase 2:
- High level API.
- Exposes SM concepts, but *not* meter individual details.
- Separates domains into Smart Metering, Comms Network Management, Supply Network Management.
- Generic enough for gas, elec, water, etc.
- Asynchronous.
- Non-pipe API.



----------------------------------


Push to gerrit:

https://gerrit.se.cyco.io/Documentation/user-upload.html

git push ssh://stevetickle@gerrit.se.cyco.io:29418/ipa_prod HEAD:refs/for/master



-----------------------------------------------------------



- Watchdog
- Storage
- Time
- Schedule
- Monitor
- Log
- FS
- CNDFS
- UFFS
- CtrlPort
- AlertBits
- BootLoader
- Configuration
- ConfiguratonBackEnd
- Security
- OSAL (OS Abstraction Layer)
- UI
- UID
- UART
- SPI
- RTC

- Radio
- Radio CC1200/Simulator
- PowerDown
- PgmFLASH
- Panic
- MTD
- MTD/SPI
- Modem
- I2C
- RNG
- HiResTimer
- GPIO
- Ethernet
- DMA
- DigIO
- DeviceKeys
- CRC

- Data (Structures)
   - BinaryBuf
   - BinaryReader
   - BinaryWriter
   - BitVec
   - Encoder
   - FIFO
   - Heap
   - RingBuffer
   - PacketBuf
   - PktQ
   - StringList
   - StringPairList
   - Vector
- AsyncIO
- Management
   - activity
   - configuration
   - DataRate
   - Events
   - File
   - Fuzz
   - LogCOAP
   - Login
   - MOnitor
   - NetInfo
   - Ping
   - PreferredParent
   - ProdMode
   - Restart
   - Status
   -

------------------------------------

dtls.c:122
uint8_t s_fifoBuf[1400];

Magic number... also suspiciously similar to the point where we hit problems. (Maybe should be IP_MAX_PAYLOAD)

also:
#define IP_MAX_PAYLOAD 1240

#define IP_LOWPAN_MTU 1280



Comment in IPSec.c:

"If there are two valid SAs, it is possible that the wrong one is
picked. But this is a rare case and probably not worth handling. The
gateway would need to send more packets than the limit which
triggered the new key, and all of those packets must be lost somehow.
Assuming that the limit is high enough, the keep alive mechanism on
the mesh should have deemed the link dead way before this scenario
can happen."


- Current Ping module is a CoAP-level ping, going to Node only. We need an SM-level ping that is directed at the meter (i.e. wraps up a read of RTC).
- UFFS: intended for NAND, not NOR... do the IPAx boards have NAND??
- no calculations about wear-rate on the FLASH has been performed.


-------------------------------------------------------------------------------------

Genus test rig:

- Black hole GW.
- Need to be able to get power fail notifications transferred from node to gw in some recognisable and actionable format.
- Need to be able to get tamper alert notifications transferred from node to gw in some recognisable and actionable format.
- The Node will be expecting to be talking to a Genus meter in order to perform TX/RX on UART pins, do we monitor or simulate a meter?
- Need to be able to trigger and deactivate a (all?) tamper mechanism(s) and see correct notifications.
- Need to be able to put Node into 'test' mode where it writes the signal strength to the meter at 5Hz.
- Visibility of Comms is not a good indicator of power.... could just be repreated resets or bad data. Do we need a proper 'quality' rather than 'presence of comms' signal?
- UART TX/RX ability of Node&Meter to successfully go thru the login mechanism SNRM/AARQ and read the time would be a good indicator of comms.


--------------------------------------------------------------

Omnimesh build

docker run -v `pwd`:'/project'   -it panmesh/buildenv_panmesh bash

but the code also now exists in buildenv_omnimesh repo.

now:
docker run -v `pwd`:'/project'   -it omnimesh/buildenv_omnimesh bash


Run ctrlporthub priot to agent:
./build/host-ctrlporthub/bin/ctrlporthub -controllerport 4000 -serial /dev/ttyUSB0 -loglevel debug
./build/host-genus-insecure/bin/agent  -eui64 00-00-00-00-00-00-00-00 -meter /dev/ttyUSB0 -initrtc -ctrlhub 127.0.0.1 -ctrlhubport 4000 -loglevel debug -param device.dlms.lls_password=1A2B3C4D,device.dlms.authentication_key=756776636c656b616b67313836616263,device.dlms.encryption_key=756776636c656b616b67313836616263



to run with ctrlporthub:
./build/host-ctrlporthub/bin/ctrlporthub -listen 4242 -controllerport 4000  -loglevel debug
./build/host-genus-insecure/bin/agent  -eui64 00-00-00-00-00-00-00-00 -meter /dev/ttyUSB0 -initrtc -ctrlhub 127.0.0.1 -ctrlhubport 4242 -loglevel debug -param device.dlms.lls_password=1A2B3C4D,device.dlms.authentication_key=756776636c656b616b67313836616263,device.dlms.encryption_key=756776636c656b616b67313836616263


to request a DLMS object:
 ./tools/c4-tools/coap_request.py --device KT026802  --device-op GET 7 0.0.99.98.6.255 3

----------------------------

Omnimesh server install

apt-get install npm gradle

Update node to latest stable version:

sudo npm cache clean -f
sudo npm install -g n
sudo n stable


./cibuild.sh



--------------------------------

0.0.99.98.0.255/3
array
{
    struct
    {
        int { 8 },
        octet-string { b'0000010000ff' },
        int { 2 },
        int { 0 }
    },
    struct
    {
        int { 1 },
        octet-string { b'0000600b00ff' },
        int { 2 },
        int { 0 }
    },
    struct
    {
        int { 3 },
        octet-string { b'01001f0700ff' },
        int { 2 },
        int { 0 }
    },
    struct
    {
        int { 3 },
        octet-string { b'0100330700ff' },
        int { 2 },
        int { 0 }
    },
    struct
    {
        int { 3 },
        octet-string { b'0100470700ff' },
        int { 2 },
        int { 0 }
    },
    struct
    {
        int { 3 },
        octet-string { b'0100200700ff' },
        int { 2 },
        int { 0 }
    },
    struct
    {
        int { 3 },
        octet-string { b'0100340700ff' },
        int { 2 },
        int { 0 }
    },
    struct
    { int { 3 }, octet-string { b'0100480700ff' }, int { 2 }, int { 0 } }, struct { int { 3 }, octet-string { b'0100210700ff' }, int { 2 }, int { 0 } }, struct { int { 3 }, octet-string { b'0100350700ff' }, int { 2 }, int { 0 } }, struct { int { 3 }, octet-string { b'0100490700ff' }, int { 2 }, int { 0 } }, struct { int { 3 }, octet-string { b'0100010800ff' }, int { 2 }, int { 0 } }, struct { int { 3 }, octet-string { b'0100020800ff' }, int { 2 }, int { 0 } }, struct { int { 1 }, octet-string { b'00005e5b00ff' }, int { 2 }, int { 0 } }, struct { int { 1 }, octet-string { b'0000600f00ff' }, int { 2 }, int { 0 } } }

0.0.99.98.0.255/2
array
{
    struct
    {
         datetime-octet-string { 2017-06-20T15:06:01 dev 330 status: 0x0 }
         int { 1 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 228.3000030517578 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         int { 1 }
         int { 1 }
    }
    struct
    {
         datetime-octet-string { 2017-06-20T15:06:01 dev 330 status: 0x0 }
         int { 3 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 228.3000030517578 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         int { 2 }
         int { 2 }
    }
    struct
    {
         datetime-octet-string { 2017-06-23T18:04:21 dev 330 status: 0x0 }
         int { 5 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 230.10000610351562 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         int { 4 }
         int { 3 }
    }
    struct
    {
         datetime-octet-string { 2017-06-23T18:04:23 dev 330 status: 0x0 }
         int { 2 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 230.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         int { 4 }
         int { 4 }
    }
    struct
    {
         datetime-octet-string { 2018-01-30T16:54:28 dev 330 status: 0x0 }
         int { 1 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 248.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         int { 22 }
         int { 5 }
    }
    struct
    {
         datetime-octet-string { 2018-01-30T16:54:31 dev 330 status: 0x0 }
         int { 6 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 248.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         float { 0.0 }
         int { 22 }
         int { 6 }
    }
}



-----------------------------------

Others event log:

array {
	struct { datetime-octet-string { 2018-01-31T17:06:04 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 248.10000610351562 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 32 }, int { 55 } },
	struct { datetime-octet-string { 2018-01-31T17:35:53 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 247.8000030517578 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 32 }, int { 56 } },
	struct { datetime-octet-string { 2018-01-31T17:36:03 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 248.1999969482422 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 33 }, int { 57 } },
	struct { datetime-octet-string { 2018-01-31T17:46:17 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 247.6999969482422 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 33 }, int { 58 } },
	struct { datetime-octet-string { 2018-01-31T17:48:26 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 247.60000610351562 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 34 }, int { 59 } },
	struct { datetime-octet-string { 2018-01-31T18:22:46 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 247.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 34 }, int { 60 } },
	struct { datetime-octet-string { 2018-01-31T18:23:30 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 246.5 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 35 }, int { 61 } },
	struct { datetime-octet-string { 2018-01-31T18:27:01 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 245.89999389648438 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 35 }, int { 62 } },
	struct { datetime-octet-string { 2018-01-31T18:27:23 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 245.89999389648438 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 36 }, int { 63 } },
	struct { datetime-octet-string { 2018-01-31T18:28:20 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 247.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 36 }, int { 64 } },
	struct { datetime-octet-string { 2018-01-31T19:16:43 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 247.39999389648438 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 37 }, int { 65 } },
	struct { datetime-octet-string { 2018-01-31T19:21:54 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 247.89999389648438 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 37 }, int { 66 } },
	struct { datetime-octet-string { 2018-01-31T19:23:29 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 248.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 38 }, int { 67 } },
	struct { datetime-octet-string { 2018-01-31T19:36:33 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 247.39999389648438 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 38 }, int { 68 } },
	struct { datetime-octet-string { 2018-01-31T19:37:00 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 247.60000610351562 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 39 }, int { 69 } },
	struct { datetime-octet-string { 2018-01-31T20:33:23 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 247.39999389648438 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 39 }, int { 70 } },
	struct { datetime-octet-string { 2018-01-31T20:38:23 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 247.10000610351562 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 40 }, int { 71 } },
	struct { datetime-octet-string { 2018-02-01T03:28:59 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 251.8000030517578 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 40 }, int { 72 } },
	struct { datetime-octet-string { 2018-02-01T03:52:12 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 252.6999969482422 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 41 }, int { 73 } },
	struct { datetime-octet-string { 2018-02-01T11:02:33 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 248.3000030517578 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 41 }, int { 74 } },
	struct { datetime-octet-string { 2018-02-01T11:03:10 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 248.39999389648438 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 42 }, int { 75 } },
	struct { datetime-octet-string { 2018-02-01T11:04:08 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 248.3000030517578 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 42 }, int { 76 } },
	struct { datetime-octet-string { 2018-02-01T11:04:48 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 248.60000610351562 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 43 }, int { 77 } },
	struct { datetime-octet-string { 2018-02-01T11:05:00 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 248.5 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 43 }, int { 78 } },
	struct { datetime-octet-string { 2018-02-01T11:05:22 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 248.5 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 44 }, int { 79 } },
	struct { datetime-octet-string { 2018-02-01T16:10:04 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 246.60000610351562 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 44 }, int { 80 } },
	struct { datetime-octet-string { 2018-02-01T16:10:19 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 246.6999969482422 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 45 }, int { 81 } },
	struct { datetime-octet-string { 2018-02-01T16:17:14 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 246.60000610351562 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 45 }, int { 82 } },
	struct { datetime-octet-string { 2018-02-01T16:17:33 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 246.60000610351562 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 46 }, int { 83 } },
	struct { datetime-octet-string { 2018-02-01T16:18:31 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 246.3000030517578 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 46 }, int { 84 } },
	struct { datetime-octet-string { 2018-02-01T16:19:33 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 246.6999969482422 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 47 }, int { 85 } },
	struct { datetime-octet-string { 2018-02-01T16:22:11 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 246.5 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 47 }, int { 86 } },
	struct { datetime-octet-string { 2018-02-01T16:22:40 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 246.39999389648438 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 48 }, int { 87 } },
	struct { datetime-octet-string { 2018-02-01T16:27:12 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 246.39999389648438 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 48 }, int { 88 } },
	struct { datetime-octet-string { 2018-02-01T16:30:38 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 246.1999969482422 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 49 }, int { 89 } },
	struct { datetime-octet-string { 2018-02-01T16:31:49 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 246.39999389648438 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 49 }, int { 90 } },
	struct { datetime-octet-string { 2018-02-02T04:27:14 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 254.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 50 }, int { 91 } },
	struct { datetime-octet-string { 2018-02-02T04:28:28 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 253.3000030517578 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 50 }, int { 92 } },
	struct { datetime-octet-string { 2018-02-02T04:38:34 dev 330 status: 0x0 }, int { 209 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 249.3000030517578 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 51 }, int { 93 } },
	struct { datetime-octet-string { 2018-02-02T17:27:03 dev 330 status: 0x0 }, int { 210 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 247.6999969482422 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, float { 0.0 }, int { 51 }, int { 94 } } }



----------------------------------------

Standalone:
./build/host-genus-insecure/bin/agent  -eui64 00-00-00-00-00-00-00-00 -meter /dev/ttyUSB0 -initrtc -ctrlhub 127.0.0.1 -ctrlhubport 4242 -loglevel debug -param device.dlms.lls_password=1A2B3C4D,device.dlms.authentication_key=756776636c656b616b67313836616263,device.dlms.encryption_key=756776636c656b616b67313836616263

Connected to server:
./build/host-genus-insecure/bin/agent  -eui64 00-00-00-00-00-00-00-00 -meter /dev/ttyUSB0 -initrtc -ctrlhub 127.0.0.1 -ctrlhubport 4242 -loglevel debug -param device.dlms.lls_password=1A2B3C4D,device.dlms.authentication_key=756776636c656b616b67313836616263,device.dlms.encryption_key=756776636c656b616b67313836616263


----------------------------------------

Possible memory allocation issue:

--- a/src/device/communication/dlms/dlms.c
+++ b/src/device/communication/dlms/dlms.c
@@ -1325,7 +1325,7 @@ bool dlmsParseListOfProfileObjects(const uint8_t* pkt, size_t pktLen, MeterProfi
         profile->objects = MALLOCZ(numOfElements * sizeof(ProfileObject));
     } else {
         profile->objects = NULL;
-        return true;
+        return false;       // malloc failure, we should be PANICing here, we should not be in this situation in normal circumstances.
     }


-------------------------------------------

make pypb2 host-genus-insecure host-ctrlporthub




------------------------------------------------


//
// - Send time request to meter
// - Extract meter time from response
//
DISCOVERY_PROFILE_STEP_0,

//
// - Request capture objects (attr 3) from profile-generic objects.
// - Populate profile->objects[i].instantObject from response data for all objects in profile.
//
DISCOVERY_PROFILE_STEP_1,

//
// - Perform a selective-access read request for the profile.
// - Populate profile->objects[i].valueOffset/Len/Type from generic-profile buffer data.
//
DISCOVERY_PROFILE_STEP_2,

//
// - Request the capture-period from the profile-generic object.
// - Populates profile->capturePeriod from the value in the response.
//
DISCOVERY_PROFILE_STEP_3,

//
// - Send request for capture-objects of the profile-generic object.
// - populates profile->objects[index].scalerIndex from the capture-objects response data
// for those objects where scalers are supported.
//
DISCOVERY_PROFILE_STEP_4,

//
// - Request the profile-generic buffer data.
// - Populates profile->objects[i].scalerUnit from profile-generic buffer response data.
//
DISCOVERY_PROFILE_STEP_5,

//
// For all objects in profile:
// - request object buffer data.
// - parse response to populate ic/scaler info.
//
DISCOVERY_PROFILE_STEP_6,



- Reading the buffer data from an event-profile-generic object produces a nested-PDU... very odd
and it fails to parse.
- dlmsParseProfileScalerUnit() seems to be trying to extract scaler data from the buffer attribute
data from a profile-generic. This contains only value data, not scaler.


------------------------------------------------------------

nested message:

7ea0190341d86ef5e6e600c001810007
0000636200ff020091797e

7ea9094103bc9184e6e700c402810000
0000010082019c0106020f090c07e106
14ff0f0601ff014a0012000117000000
00170000000017000000001700000000
17000000001743644ccd170000000017
00000000170000000017000000001700
0000001200010600000001020f090c07
e10614ff0f0601ff014a001200031700
00000017000000001700000000170000
000017000000001743644ccd17000000
00170000000017000000001700000000
17000000001200020600000002020f09
0c07e10617ff120415ff014a00120005
17000000001700000000170000000017
4366199a170000000017000000001700
00000017000000001700000000170000
00001700000000123b427e

7ea0070341f14e247e

7ea0b44103bef41c0004060000000302
0f090c07e10617ff120417ff014a0012
00021700000000170000000017000000
00174366000017000000001700000000
17000000001700000000170000000017
00000000170000000012000406000000
04020f090c07e2011eff10361cff014a
00120001170000000017000000001700
00000017000000001700000000174378
00001700000000170000000017000000
00170000000017000000001200160600
00000514ee7e


7ea01303411adecce6e600c002810000
0001737f7e

7ea06a4103d0b6c0e6e700c402810100
00000200820052020f090c07e2011eff
10361fff014a00120006170000000017
00000000170000000017000000001700
00000017437800001700000000170000
00001700000000170000000017000000
001200160600000006ede97e








7ea9094103bc9184e6e700c4028100000000010082019c0106020f090c07e10614ff0f0601ff014a00120001170000000017000000001700000000170000000017000000001743644ccd170000000017000000001700000000170000000017000000001200010600000001020f090c07e10614ff0f0601ff014a00120003170000000017000000001700000000170000000017000000001743644ccd170000000017000000001700000000170000000017000000001200020600000002020f090c07e10617ff120415ff014a00120005170000000017000000001700000000174366199a1700000000170000000017000000001700000000170000000017000000001700000000123b427e

----------------------------------------



DataProfileSample* profileSampleCreate(const uint8_t* pkt, uint32_t pktLen)


----------------------------------------------


Steve Tickle [11:38 AM]
ctrlporthub -controllerport 4000 -serial /dev/ttyUSB0 -loglevel debug

./rpc_prodtest.py --setparam server.ip -v fd00::1
./rpc_prodtest.py --setparam prod.lowpan.eui64 -v 00-1B-C5-0C-60-00-7D-63
./rpc_prodtest.py --loadkey -s client-key -f ../00-1B-C5-0C-60-00-7D-63/node.key.der
./rpc_prodtest.py --loadkey -s client-cert -f ../00-1B-C5-0C-60-00-7D-63/node.crt.der
./rpc_prodtest.py --loadkey -s root-cert -f ../00-1B-C5-0C-60-00-7D-63/ca.crt.der
./rpc_prodtest.py --loadkey -s mac-key -f ../00-1B-C5-0C-60-00-7D-63/mac_key
./rpc_prodtest.py –finalize



-------------------------------------------------------------------

docker run -v /Data/Projects/terminalSwedish:/project -it  omnimesh/buildenv_omnimesh bash
make pypb2 host-genus-insecure host-ctrlporthub ipa1-bl-insecure
./build/host-ctrlporthub/bin/ctrlporthub -controllerport 4000 -listen 4242 -loglevel debug
./build/host-genus-insecure/bin/agent  -eui64 00-00-00-00-00-00-00-00 -meter /dev/ttyUSB0 -initrtc -ctrlhub 127.0.0.1 -ctrlhubport 4242 -loglevel debug -param device.dlms.lls_password=1A2B3C4D,device.dlms.authentication_key=756776636c656b616b67313836616263,device.dlms.encryption_key=756776636c656b616b67313836616263,device.dlms.encryption_key=756776636c656b616b67313836616263



----------------------------------------------------------

install npm (not from repo).
apt-get install gradle openjdk-8-jdk-headless mysql-server
git clone omnimesh
git submodule update for 3pp and interfaces repos
./cibuild.sh

mkdir /opt/connode
mkdir /opt/sma
cp server.tar.gz /opt/connode
cp server-ws.tar.gz /opt/connode
cp SmartMetering.tar.gz /opt/sma

tar zxvf all the above in place.

mysql -p -uroot -e "create user 'meshnet'@'localhost' identified by 'meshnet';"
mysql -p -uroot -e "create database sma;grant all on sma.* to 'meshnet'@'localhost';flush privileges;"
mysql -p -umeshnet -pmeshnet sma < /opt/sma/db/mysql-ddl.sql

mysql -p -uroot -e "create database smc;grant all on smc.* to 'meshnet'@'localhost';flush privileges;"
mysql -p -umeshnet -pmeshnet smc < /usr/local/connode/db/mysql-ddl.sql

sudo systemctl enable /usr/local/connode/etc/c4server.service
sudo systemctl enable /opt/sma/config/sma.service
sudo systemctl start sma
sudo systemctl start c4server

http://<server address>:8882/

logs in /opt/sma/logs/sma.log
and:
/usr/local/connode/logs

agent side:
in ipa.mk
change CONFIG_UPLINK=y
CONFIG_GATEWAY=y
 change CONFIG_UPLINK_TUN6 to CONFIG_UPLINK_LINUX_TUN

./build/host-genus-insecure/bin/agent  -eui64 00-00-00-00-00-00-00-00 -meter /dev/ttyUSB0 -initrtc -ctrlhub 127.0.0.1 -ctrlhubport 4242 -loglevel debug -param device.dlms.lls_password=1A2B3C4D,device.dlms.authentication_key=756776636c656b616b67313836616263,device.dlms.encryption_key=756776636c656b616b67313836616263,device.dlms.encryption_key=756776636c656b616b67313836616263,server.ip=::1


get root.crt,root.key,server.crt and cerver.key from:
https://confluence.se.cyco.io/display/ENG/How+to+launch+agent+using+meshsim.pl?focusedCommentId=49579179#


(https://confluence.se.cyco.io/display/ENG/Panmesh+Operations+Manual+-+NMS+Installation)


Generate server certs and keys:

#!/bin/bash
openssl req \
    -new \
    -nodes \
    -out server.csr \
    -newkey ec:tools/c4-tools/cert/ec/root.crt \
    -keyout server.key \
    -sha256 \
    -outform DER \
    -subj "/CN=C4 Server"

openssl x509 \
    -req \
    -in server.csr \
    -CA tools/c4-tools/cert/ec/root.crt \
    -CAkey tools/c4-tools/cert/ec/root.key \
    -set_serial 1 \
    -out server.crt \
    -sha256 \
    -days 365


on server go to server->pki, find "Server Security Pair: is ABSENT Add". click "Add".

Server security pair generation:
openssl genrsa -aes128 -passout pass:'1234' -out key.priv 2048
openssl rsa -aes128 -in key.priv -passin pass:'1234' -pubout > key.pub


on server, got to server->pki->create server DTLS




---------------------------------------------

Building of the omnimesh "buildenv":

git clone git@gitlab.cyco.io:SteveTickle/buildenv_omnimesh.git
cd buildenv_omnimesh
./build.sh


Building of Omnimesh server:

git clone ssh://stevetickle@gerrit.se.cyco.io:29418/omnimesh
cd omnimesh
git submodule init
git submodule update
docker run -v $PWD:/project -it  omnimesh/buildenv_omnimesh:latest ./cibuild.sh


Building of the Ommimesh server container:

cd buildenv_omnimesh
./build_omnimesh_server.sh ../omnimesh


Running of the Omnimesh server container:

./run_omnimesh_server


Now go to:
http://172.17.0.2/nms/dashboard

To get a shell on the running container:
docker exec -i -t dbe4d35ba242 bash




--------------------------------

service mysql stop
mkdir -p /var/run/mysqld
chown mysql /var/run/mysqld
mysqld_safe --skip-grant-tables --skip-syslog &
use mysql;
flush privileges;
ALTER USER 'root'@'localhost' IDENTIFIED BY '1234';

service mysql start

---------------------------------------


./build/host-genus-insecure/bin/agent  -eui64 00-00-00-00-00-00-00-01 -meter /dev/ttyUSB0 -initrtc -ctrlhub 127.0.0.1 -ctrlhubport 4242 -loglevel debug -param device.dlms.lls_password=1A2B3C4D,device.dlms.authentication_key=756776636c656b616b67313836616263,device.dlms.encryption_key=756776636c656b616b67313836616263,device.dlms.encryption_key=756776636c656b616b67313836616263,server.ip=fe80::42:25ff:fe6f:df4c

coap_request.py --ctrlporthub localhost:4000 --load-key client-key node.key.der
coap_request.py --ctrlporthub localhost:4000 --load-key client-cert node.crt.der
coap_request.py --ctrlporthub localhost:4000 --load-key root-cert ca.crt.der
coap_request.py --ctrlporthub localhost:4000 --rll-key mac-key mac_key


Crypto options:
   -rootcert file                      DER root certificate for authenticating coap server
   -cert file                          DER agent certificate
   -key file                           DER agent private key
   -mackey file                        MAC Layer key file. One line per key, first is preferred
                                       <index> <hexstring of key>
                                       Binary MAC layer AES-128 key (deprecated)

    -gateway




--------------------------------------------------------------

Running host-agent thru tun6d to localhost

Make sure your local machine has an ipv6 address:
"ip -6 add add fd00::1 dev eth0"
...or better, get an IPv6 address handed out via the DHCP6 server. Make sure you *don't* use ::1 (i.e loopback) as
that will get swallowed by the agent and not transmitted to the server.


sudo TUN6D_SECRET=whatsfordinner /usr/bin/tun6d --loglevel debug

./build/host-genus-insecure/bin/agent   -eui64 00-00-00-00-00-00-00-01  \
                                        -meter /dev/serial/by-id/usb-FTDI_FT232R_USB_UART_A6023SX7-if00-port0  \
                                        -initrtc  \
                                        -ctrlhub 127.0.0.1  \
                                        -ctrlhubport 4242  \
                                        -loglevel debug  \
                                        -param device.dlms.lls_password=1A2B3C4D  \
                                        -param device.dlms.authentication_key=756776636c656b616b67313836616263    \
                                        -param device.dlms.encryption_key=756776636c656b616b67313836616263    \
                                        -param device.dlms.encryption_key=756776636c656b616b67313836616263    \
                                        -param server.ip=fd00::1  \
                                        -param modem.tun6.ip=localhost \
                                        -param modem.tun6.secret=whatsfordinner   \
                                        -param modem.apn=4g.tele2.se  \
                                        -rootcert /Data/Temp/KeyTest/root.crt.der  \
                                        -cert /Data/Temp/KeyTest/node.crt.der  \
                                        -key /Data/Temp/KeyTest/node.key.der  \
                                        -mackey /Data/Temp/KeyTest/mac-keys.txt  \
                                        -gateway  \
                                        -statedir AgentState \
                                        -socket


-----------------------------------------------

(gdb) p msg
$1 = {has_deviceHash = true, deviceHash = {size = 16 '\020', bytes = ">\016u&BN\220R\341.\233#\303\304ů"}, has_deviceAlarmHash = false, deviceAlarmHash = {size = 0 '\000', bytes = '\000' <repeats 15 times>},
  has_globalProfileHash = true, globalProfileHash = {size = 16 '\020', bytes = "\354\305\071\363~V瀖\361N\274g\306\035\b"}}




NMS:
2018-03-02 11:22:16,992 TRACE [dtls-pool-4] [node=00-00-00-00-00-00-00-01] LocalCoapSession - ENTER receiveRequestMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, PUT /registration, CONFIRMABLE, 4803)
2018-03-02 11:22:16,992 TRACE [dtls-pool-4] [node=00-00-00-00-00-00-00-01] LocalCoapSession - ENTER handleConfirmableRequestMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, PUT /registration, CONFIRMABLE, 4803)
2018-03-02 11:22:16,995 TRACE [dtls-pool-4] [node=00-00-00-00-00-00-00-01] NodeRegistrationCoapResource - Node registration Node registration request attributes:nodeId:00-00-00-00-00-00-00-01, globalProfileHash: ecc539f37e56e78096f14ebc67c61d08, deviceHash: 3e0e7526424e9052e12e9b23c3c4c5af, nms address: http://127.0.0.1:8880/appserver/
2018-03-02 11:22:16,995 TRACE [dtls-pool-4] [node=00-00-00-00-00-00-00-01] LocalCoapSession - ENTER sendMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, ACKNOWLEDGEMENT, 4803)
2018-03-02 11:22:16,995 TRACE [dtls-pool-4] [node=00-00-00-00-00-00-00-01] LocalCoapSession - EXIT handleConfirmableRequestMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, PUT /registration, CONFIRMABLE, 4803)
2018-03-02 11:22:16,995 TRACE [dtls-pool-4] [node=00-00-00-00-00-00-00-01] LocalCoapSession - EXIT receiveRequestMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, PUT /registration, CONFIRMABLE, 4803)
2018-03-02 11:22:16,995 TRACE [dtls] DTLSConnection - DTLS packet 548d1e2 added to queue, address=/fd51:3c22:ee1f:0:200:0:0:1:5684, sessionId=SessionId(c54b440a1918032ba40177e174a4359871702d75c62a01557a1ea69f32568366), migrating=false

SMA:
2018-03-02 11:22:17.012 [http-nio-8880-exec-6] TRACE c.c.sma.rest.NmsController - Node registration request received with parameters for nodeId: 00-00-00-00-00-00-00-01
2018-03-02 11:22:17.017 [http-nio-8880-exec-6] DEBUG c.c.s.s.m.NodeRegistrationHandler - Node with node Id 00-00-00-00-00-00-00-01 already exists in DB
2018-03-02 11:22:17.049 [devDiscResp-00-00-00-00-00-00-00-01] WARN c.c.s.h.tasks.DeviceDiscoveryTask - Device discovery on node 00-00-00-00-00-00-00-01 failed. Status code received is 406. Message recevied is


-------------------------


 protoc: stdout: . stderr: /project/common/interface/src/main/proto: warning: directory does not exist.
  device_dataprofile.proto:10:5: "DATA_PROFILE" is already defined in file "device_mgmt.proto".
  device_dataprofile.proto:10:5: Note that enum values use C++ scoping rules, meaning that enum values are siblings of their type, not children of it.  Therefore, "DATA_PROFILE" must be unique within the global scope, not just within "ProfileFeature".

---------------------------------------

include directories in Makefile:

include_dirs       += src/device/drivers/dlms


-------------------------------


2018-03-05 16:45:04.653 #1   0000000000000001 <log> 0:06:06.898 [debug] [ tran_switch] {     coap}: UDP send from port 5684 to [fd00::1]:5684 of size 61: dtls session: 1
2018-03-05 16:45:04.653 #1   0000000000000001 <log> 0:06:06.899 [debug] [   coap/task] {     coap}: CoAP sessions: 0 in, 1 out
2018-03-05 16:45:04.654 #1   0000000000000001 <log> 0:06:06.899 [debug] [          ip] {     dtls}: Send IP on uplink, 98 B, type 17, ttl 32: fd51:3c22:ee1f:0:200::1 -> fd00::1
2018-03-05 16:45:04.654 #1   0000000000000001 <log> 0:06:06.899 [debug] [   ipv4/core] {uplink_tx}: eth_up: tx 127.0.0.1 -> 127.0.0.1 146B proto=17
2018-03-05 16:45:04.701 #1   0000000000000001 <log> 0:06:06.939 [debug] [   ipv4/core] {socketUplink}: eth_up: rx 127.0.0.1 -> 127.0.0.1 128B proto=17
2018-03-05 16:45:04.701 #1   0000000000000001 <log> 0:06:06.939 [debug] [    ipv4/udp] {socketUplink}: Got UDP 127.0.0.1:8050 -> 127.0.0.1:50412
2018-03-05 16:45:04.701 #1   0000000000000001 <log> 0:06:06.939 [debug] [ uplink-tun6] {socketUplink}: Got IPv6 packet on eth_up from 127.0.0.1:8050 120B
2018-03-05 16:45:04.701 #1   0000000000000001 <log> 0:06:06.939 [debug] [ tran_switch] {socketUplink}: UDP received from [fd00::1]:5684 to [fd51:3c22:ee1f:0:200::1]:5684 of size 72: dtls session: 1
2018-03-05 16:45:04.701 #1   0000000000000001 <log> 0:06:06.940 [debug] [ tran_switch] {     dtls}: DTLS session 1: payload from [fd00::1]:5684 to [fd51:3c22:ee1f:0:200::1]:5684 of size 43
2018-03-05 16:45:04.701 #1   0000000000000001 <log> 0:06:06.946 [debug] [   coap/task] {     coap}: session 10 (0be40f92): Received ack
2018-03-05 16:45:04.701 #1   0000000000000001 <log> 0:06:06.947 [ info] [   coap/task] {     coap}: session 10 (0be40f92): Response from [fd00::1]:5684: 5.03 (T=ACK, MID=0x5164): 32 B: No application server configured
2018-03-05 16:45:04.701 #1   0000000000000001 <log> 0:06:06.947 [ WARN] [meter/device] {     coap}: Unexpected response 163 from server,reschedule sending node registration
2018-03-05 16:45:04.701 #1   0000000000000001 <log> 0:06:06.947 [debug] [   coap/task] {     coap}: session 10 (0be40f92): Removing outgoing because of response
2018-03-05 16:45:04.701 #1   0000000000000001 <log> 0:06:06.947 [debug] [   coap/task] {     coap}: CoAP sessions: 0 in, 0 out
2018-03-05 16:45:04.905 #1   0000000000000001 <log> 0:06:07.149 [debug] [  meter/dlms] {   device}: Setup AA using HLS without ciphering
2018-03-05 16:45:04.905 #1   0000000000000001 <log> 0:06:07.149 [debug] [        dlms] {   device}: Setup AA with HLS
2018-03-05 16:45:04.956 #1   0000000000000001 <log> 0:06:07.200 [debug] [        hdlc] {     hdlc}: Connect HDLC link
2018-03-05 16:45:04.962 #1   0000000000000001 <log> 0:06:07.206 [debug] [        hdlc] {     hdlc}: tx: (1/3): 7ea0200361931b9f8180140502010006
2018-03-05 16:45:04.962 #1   0000000000000001 <log> 0:06:07.206 [debug] [        hdlc] {     hdlc}: tx: (2/3): 02010007040000000108040000000169
2018-03-05 16:45:04.962 #1   0000000000000001 <log> 0:06:07.206 [debug] [        hdlc] {     hdlc}: tx: (3/3): 6d7e
2018-03-05 16:45:05.042 #1   0000000000000001 <log> 0:06:07.286 [debug] [        hdlc] {     hdlc}: rx: (1/3): 7ea020610373059e8180140502010006
2018-03-05 16:45:05.042 #1   0000000000000001 <log> 0:06:07.286 [debug] [        hdlc] {     hdlc}: rx: (2/3): 02010007040000000108040000000169
2018-03-05 16:45:05.042 #1   0000000000000001 <log> 0:06:07.286 [debug] [        hdlc] {     hdlc}: rx: (3/3): 6d7e
2018-03-05 16:45:05.047 #1   0000000000000001 <log> 0:06:07.292 [debug] [        hdlc] {     hdlc}: tx: (1/5): 7ea04c0361105827e6e600603ea10906
2018-03-05 16:45:05.048 #1   0000000000000001 <log> 0:06:07.292 [debug] [        hdlc] {     hdlc}: tx: (2/5): 07608574050801018a0207808b076085
2018-03-05 16:45:05.048 #1   0000000000000001 <log> 0:06:07.292 [debug] [        hdlc] {     hdlc}: tx: (3/5): 7405080202ac12801030654537456363
2018-03-05 16:45:05.048 #1   0000000000000001 <log> 0:06:07.292 [debug] [        hdlc] {     hdlc}: tx: (4/5): 633938356635344342be10040e010000
2018-03-05 16:45:05.048 #1   0000000000000001 <log> 0:06:07.292 [debug] [        hdlc] {     hdlc}: tx: (5/5): 00065f1f0400001f1ffffff8547e
2018-03-05 16:45:05.266 #1   0000000000000001 <log> 0:06:07.511 [debug] [        hdlc] {     hdlc}: rx: (1/6): 7ea0586103300751e6e700614aa10906
2018-03-05 16:45:05.267 #1   0000000000000001 <log> 0:06:07.511 [debug] [        hdlc] {     hdlc}: rx: (2/6): 0760857405080101a203020100a305a1
2018-03-05 16:45:05.267 #1   0000000000000001 <log> 0:06:07.511 [debug] [        hdlc] {     hdlc}: rx: (3/6): 0302010e880207808907608574050802
2018-03-05 16:45:05.267 #1   0000000000000001 <log> 0:06:07.511 [debug] [        hdlc] {     hdlc}: rx: (4/6): 02aa12801047656e7573190000000061
2018-03-05 16:45:05.267 #1   0000000000000001 <log> 0:06:07.512 [debug] [        hdlc] {     hdlc}: rx: (5/6): 001815c346be10040e0800065f1f0400
2018-03-05 16:45:05.267 #1   0000000000000001 <log> 0:06:07.512 [debug] [        hdlc] {     hdlc}: rx: (6/6): 00181d01000007bdf57e
2018-03-05 16:45:05.268 #1   0000000000000001 <log> 0:06:07.512 [debug] [        dlms] {     dlms}: extracted server max pdu size is 256
2018-03-05 16:45:05.268 #1   0000000000000001 <log> 0:06:07.512 [debug] [        dlms] {     dlms}: Action 0-0:40.0.0*255 ic 15 methodId 1 actionLen: 18 B
2018-03-05 16:45:05.324 #1   0000000000000001 <log> 0:06:07.568 [debug] [        hdlc] {     hdlc}: tx: (1/3): 7ea02b0361328debe6e600c30181000f
2018-03-05 16:45:05.324 #1   0000000000000001 <log> 0:06:07.568 [debug] [        hdlc] {     hdlc}: tx: (2/3): 0000280000ff010109105c89ea5f7433
2018-03-05 16:45:05.324 #1   0000000000000001 <log> 0:06:07.568 [debug] [        hdlc] {     hdlc}: tx: (3/3): a6ba0fbecc91ea38bf96ef6a7e
2018-03-05 16:45:05.410 #1   0000000000000001 <log> 0:06:07.654 [debug] [        hdlc] {     hdlc}: rx: (1/2): 7ea011610352c7fee6e700c701c1010c
2018-03-05 16:45:05.410 #1   0000000000000001 <log> 0:06:07.655 [debug] [        hdlc] {     hdlc}: rx: (2/2): 48677e
2018-03-05 16:45:05.411 #1   0000000000000001 <log> 0:06:07.655 [ WARN] [        dlms] {     dlms}: Action Response result: hw fault
2018-03-05 16:45:05.412 #1   0000000000000001 <log> 0:06:07.655 [ WARN] [        dlms] {     dlms}: processXDlmsApdu(5 B): failed
2018-03-05 16:45:05.412 #1   0000000000000001 <log> 0:06:07.655 [ WARN] [  meter/dlms] {   device}: Broken response: check failed
2018-03-05 16:45:05.412 #1   0000000000000001 <log> 0:06:07.655 [ WARN] [meter/device] {   device}: Error from USC 0000006: comm: broken rsp
2018-03-05 16:45:05.412 #1   0000000000000001 <log> 0:06:07.655 [debug] [meter/device] {   device}: Ignoring alarm over rate limit
2018-03-05 16:45:05.412 #1   0000000000000001 <log> 0:06:07.655 [debug] [  meter/dlms] {   device}: Setup AA failed. Trying again with ciphering enabled
2018-03-05 16:45:05.412 #1   0000000000000001 <log> 0:06:07.655 [debug] [  meter/dlms] {   device}: Setup AA using HLS with ciphering
2018-03-05 16:45:05.412 #1   0000000000000001 <log> 0:06:07.656 [debug] [        dlms] {   device}: Setup AA with HLS
2018-03-05 16:45:05.467 #1   0000000000000001 <log> 0:06:07.712 [debug] [        hdlc] {     hdlc}: tx: (1/6): 7ea0580361543592e6e600604aa10906
2018-03-05 16:45:05.468 #1   0000000000000001 <log> 0:06:07.712 [debug] [        hdlc] {     hdlc}: tx: (2/6): 0760857405080103a60a04084d4d4d00
2018-03-05 16:45:05.469 #1   0000000000000001 <log> 0:06:07.713 [debug] [        hdlc] {     hdlc}: tx: (3/6): 00bc614e8a0207808b07608574050802
2018-03-05 16:45:05.469 #1   0000000000000001 <log> 0:06:07.713 [debug] [        hdlc] {     hdlc}: tx: (4/6): 02ac1280103065453745636363393835
2018-03-05 16:45:05.469 #1   0000000000000001 <log> 0:06:07.714 [debug] [        hdlc] {     hdlc}: tx: (5/6): 6635344342be10040e01000000065f1f
2018-03-05 16:45:05.469 #1   0000000000000001 <log> 0:06:07.714 [debug] [        hdlc] {     hdlc}: tx: (6/6): 0400001f1fffffa64c7e
2018-03-05 16:45:05.713 #1   0000000000000001 <log> 0:06:07.958 [debug] [        hdlc] {     hdlc}: rx: (1/8): 7ea0776103748d68e6e7006169a10906
2018-03-05 16:45:05.713 #1   0000000000000001 <log> 0:06:07.959 [debug] [        hdlc] {     hdlc}: rx: (2/8): 0760857405080103a203020101a305a1
2018-03-05 16:45:05.713 #1   0000000000000001 <log> 0:06:07.959 [debug] [        hdlc] {     hdlc}: rx: (3/8): 0302010e880207808907608574050802
2018-03-05 16:45:05.714 #1   0000000000000001 <log> 0:06:07.959 [debug] [        hdlc] {     hdlc}: rx: (4/8): 02aa12801047656e7573190000000061
2018-03-05 16:45:05.714 #1   0000000000000001 <log> 0:06:07.959 [debug] [        hdlc] {     hdlc}: rx: (5/8): 001815c346a40a0408474f4500000000
2018-03-05 16:45:05.714 #1   0000000000000001 <log> 0:06:07.959 [debug] [        hdlc] {     hdlc}: rx: (6/8): 06be230421281f3000000025eadcddb4
2018-03-05 16:45:05.714 #1   0000000000000001 <log> 0:06:07.959 [debug] [        hdlc] {     hdlc}: rx: (7/8): ff961527c0673409564861718a069e59
2018-03-05 16:45:05.714 #1   0000000000000001 <log> 0:06:07.960 [debug] [        hdlc] {     hdlc}: rx: (8/8): 8f082d6fe414ff307e
2018-03-05 16:45:05.715 #1   0000000000000001 <log> 0:06:07.960 [ WARN] [        dlms] {     dlms}: COSEM AA is rejected: authentication required
2018-03-05 16:45:05.715 #1   0000000000000001 <log> 0:06:07.960 [ WARN] [        dlms] {     dlms}: processAcseApdu(107 B): failed
2018-03-05 16:45:05.715 #1   0000000000000001 <log> 0:06:07.960 [ WARN] [  meter/dlms] {   device}: Broken response: check failed
2018-03-05 16:45:05.715 #1   0000000000000001 <log> 0:06:07.960 [ WARN] [meter/device] {   device}: Error from USC 0000006: comm: broken rsp
2018-03-05 16:45:05.715 #1   0000000000000001 <log> 0:06:07.960 [debug] [meter/device] {   device}: Ignoring alarm over rate limit
2018-03-05 16:45:05.766 #1   0000000000000001 <log> 0:06:08.010 [debug] [        dlms] {   device}: Disconnect HDLC link
2018-03-05 16:45:05.771 #1   0000000000000001 <log> 0:06:08.015 [debug] [        hdlc] {     hdlc}: tx: (1/1): 7ea00703615365817e
2018-03-05 16:45:05.793 #1   0000000000000001 <log> 0:06:08.037 [debug] [        hdlc] {     hdlc}: rx: (1/1): 7ea00761037377467e
2018-03-05 16:45:05.794 #1   0000000000000001 <log> 0:06:08.037 [debug] [        hdlc] {     hdlc}: HDLC link disconnected
2018-03-05 16:45:09.282 #1   0000000000000001 <log> 0:06:11.526 [debug] [ uplink-tun6] { schedule}: Scheduling keepalive in 20s



------------------------------------------


0:56:33:255 6/3/2018 to 5:56:33:255 6/3/2018

# No data
[Tue Mar  6 01:26:33 2018] [14:10:08.836] 1520295993 51008836 dlms  device  Profile Block load: From time: 2018-03-06 00:56:33
[Tue Mar  6 01:26:33 2018] [14:10:08.846] 1520295993 51008846 dlms  device  Profile Block load: To time: 2018-03-06 05:56:33
[Tue Mar  6 01:26:33 2018] [14:10:08.846] 1520295993 51008846 dlms  device  Get 1-0:99.1.0*255 ic 7 attr 2 selective access
[Tue Mar  6 01:26:33 2018] [14:10:08.979] 1520295993 51008979 hdlc  hdlc    tx: (1/5): 7ea04c0341327b06e6e600c001810007
[Tue Mar  6 01:26:33 2018] [14:10:08.979] 1520295993 51008979 hdlc  hdlc    tx: (2/5): 0100630100ff0201 0102040204120008
[Tue Mar  6 01:26:33 2018] [14:10:08.980] 1520295993 51008980 hdlc  hdlc    tx: (3/5): 09060000010000ff0f02120000090c07e20306ff003821fffeb600090c07e20306ff053821fffeb6000100bff57e
[Tue Mar  6 01:26:33 2018] [14:10:09.015] 1520295993 51009015 hdlc  hdlc    rx: (1/2): 7ea01c4103527376e6e700c402810100
[Tue Mar  6 01:26:33 2018] [14:10:09.015] 1520295993 51009015 hdlc  hdlc    rx: (2/2): 00000100820004018200004e3d7e
# Has data
#                                                                                          // DIDN'T CAPTURE FIRST LINE
[Tue Mar  6 01:26:34 2018] [14:10:09.611] 1520295994 51009611 hdlc  hdlc    tx: (2/5): 0100630100ff0201 0102040204120008
[Tue Mar  6 01:26:34 2018] [14:10:09.612] 1520295994 51009612 hdlc  hdlc    tx: (3/5): 09060000010000ff0f02120000 090c 07e20306 00 052d00 00 014a 00 090c 07e20306 ff 053822 fffeb600 0100 91da7e


0100630100ff0201010204020412000809060000010000ff0f02120000090c07e2030600052d0000014a00090c07e20306ff053822fffeb600010091da7e



-------------------------------------

possible exploit:

use time sync format packets to intentionally drift the clock on the meter using the time sync mechanism.
Broadcast the packets


timeServiceRegisterEpochTimeCallback()
timeServiceRegisterTzCallback()
updateMeterTime()

------------------------------------------

decode protobuf hex in file t:

xxd -r -p < t | protoc --decode_raw



------------------


mysql> set FOREIGN_KEY_CHECKS=0;




-------------------------------------------------

[Mon Mar 12 11:34:33 2018] [28:50:10.869] 1520850873 103810869 dlms device  Profile Block load: From time: 2018-03-12 11:04:33
[Mon Mar 12 11:34:33 2018] [28:50:10.879] 1520850873 103810879 dlms device  Profile Block load: To time: 2018-03-12 16:04:33
[Mon Mar 12 11:34:33 2018] [28:50:10.880] 1520850873 103810880 dlms device  Get 1-0:99.1.0*255 ic 7 attr 2 selective access
[Mon Mar 12 11:34:33 2018] [28:50:11.013] 1520850873 103811013 hdlc hdlc    tx: (1/5): 7ea04c0341327b06e6e600c001810007
[Mon Mar 12 11:34:33 2018] [28:50:11.013] 1520850873 103811013 hdlc hdlc    tx: (2/5): 0100630100ff02010102040204120008
[Mon Mar 12 11:34:33 2018] [28:50:11.014] 1520850873 103811014 hdlc hdlc    tx: (3/5): 09060000010000ff0f02120000090c07
[Mon Mar 12 11:34:33 2018] [28:50:11.014] 1520850873 103811014 hdlc hdlc    tx: (4/5): e2030cff0b0421ff014a00090c07e203
[Mon Mar 12 11:34:33 2018] [28:50:11.014] 1520850873 103811014 hdlc hdlc    tx: (5/5): 0cff100421ff014a000100fd6c7e
[Mon Mar 12 11:34:33 2018] [28:50:11.052] 1520850873 103811052 hdlc hdlc    rx: (1/2): 7ea01c4103527376e6e700c402810100
[Mon Mar 12 11:34:33 2018] [28:50:11.052] 1520850873 103811052 hdlc hdlc    rx: (2/2): 00000100820004018200004e3d7e



------------------------------------------

power cycle @ 21:11 (meter time)

SA read:

7ea04c0341dc0b08e6e600c001810007
0000636202ff02010102040204120008
09060000010000ff0f02120000090c07
e2030cff131128ff014a00090c07e203
0cff151128ff014a00010021027e
7ea01c4103fc073ae6e700c402810100
00000100820004018200004e3d7e


Full read:

7ea0190341dc4ab3e6e600c001810007
0000636202ff0200e7407e
7ea9094103fc95c6e6e700c402810100
000001008200f40182000a0203090c07
e10b06ff101300ff014a001200650600
0000010203090c07e10b06ff101700ff
014a0012006606000000020203090c07
e20217ff143500ff014a001200650600
0000030203090c07e20217ff143b00ff
014a0012006606000000040203090c07
e20217ff150200ff014a001200650600
0000050203090c07e20217ff150300ff
014a0012006606000000060203090c07
e2030cff123300ff014a001200650600
0000070203090c07e2030cff123400ff
014a0012006606000000080203090c07
e2030cff123900ff014a001200650600
0000090203090c07e2030cff123a00ff
014a001200660600f7867e


SA read:
7ea04c0341dc0b08e6e600c001810007
0000636202ff02010102040204120008
09060000010000ff0f02120000090c07
e2030cff142931ff014a00090c07e203
0cff162931ff014a000100628a7e
7ea01c4103fc073ae6e700c402810100
00000100820004018200004e3d7e





mysql -umeshnet -pmeshnet -N -B -e  "select HEX(registerValues) from sma.meter_sample where device_profile_id=2;" | xargs -I % sh -c "echo % | xxd -r -p | protoc --decode_raw " | grep "3: \".t" | cut -c4-100

import binascii
[binascii.hexlify(t[1:-1].decode('string_escape'))[4:] for t in open('t','rb').read().split()]


mysql -umeshnet -pmeshnet -N -B -e  "select HEX(registerValues) from sma.meter_sample where device_profile_id=2;" | xargs -I % sh -c "echo % | xxd -r -p | protoc --decode_raw " | grep "3: \".t" | cut -c4-100 | xargs -I + python -c "import binascii;print(binascii.hexlify(\"+\")[4:]) " | xargs -I @ python ~/Playground/DT_conv_cli.py @





------------------------------------------------------

7ea0190341dc4ab3e6e600c001810007
0000636202ff0200e7407e
 7ea9094103fc95c6e6e700c402810000
 00000100820184018200140203090c07
 e10b06ff101300ff014a001200650600
 0000010203090c07e10b06ff101700ff
 014a0012006606000000020203090c07
 e20217ff143500ff014a001200650600
 0000030203090c07e20217ff143b00ff
 014a0012006606000000040203090c07
 e20217ff150200ff014a001200650600
 0000050203090c07e20217ff150300ff
 014a0012006606000000060203090c07
 e2030cff123300ff014a001200650600
 0000070203090c07e2030cff123400ff
 014a0012006606000000080203090c07
 e2030cff123900ff014a001200650600
 0000090203090c07e2030cff123a00ff
 014a00120066060032a37e

7ea0070341f14e247e
 7ea09c4103fe7b3400000a0203090c07
 e2030cff161e00ff014a001200650600
 00000b0203090c07e2030cff161f00ff
 014a00120066060000000c0203090c07
 e2030cff162300ff014a001200650600
 00000d0203090c07e2030cff162400ff
 014a00120066060000000e0203090c07
 e2030cff162600ff014a001200650600
 00000f0203090c07e2030cff162700ff
 014a001200660600000010ddc17e
7ea01303411efa8ae6e600c002810000
0001737f7e
7ea0784103106dfce6e700c402810100
000002008200600203090c07e2030dff
0f2f00ff014a00120065060000001102
03090c07e2030dff0f3000ff014a0012
006606000000120203090c07e2030dff
100900ff014a00120065060000001302
03090c07e2030dff100a00ff014a0012
0066060000001473117e


<HDLC len="24" >
<TargetAddress Value="1" />
<SourceAddress Value="32" />
<!--I frame.-->
<FrameType Value="DC" />
<PDU>
<GetRequest>
  <GetRequestNormal>
    <InvokeIdAndPriority Value="129" />
    <AttributeDescriptor>
      <!--PROFILE_GENERIC-->
      <ClassId Value="7" />
      <!--0.0.99.98.2.255-->
      <InstanceId Value="0000636202FF" />
      <AttributeId Value="2" />
    </AttributeDescriptor>
  </GetRequestNormal>
</GetRequest>
</PDU>
</HDLC>
<HDLC len="264" >
<TargetAddress Value="32" />
<SourceAddress Value="1" />
<!--I frame.-->
<FrameType Value="FC" />
<NextFrame Value
</HDLC>
<HDLC len="9" >
<TargetAddress Value="1" />
<SourceAddress Value="32" />
<!--S frame.-->
<FrameType Value="F1" />
<Command Value="NextFrame" />
</HDLC>
<HDLC len="155" >
<TargetAddress Value="32" />
<SourceAddress Value="1" />
<!--I frame.-->
<FrameType Value="FE" />
<NextFrame Value="00000A0203090C07E2030CFF161E00FF014A00120065060000000B0203090C07E2030CFF161F00FF014A00120066060000000C0203090C07E2030CFF162300FF014A00120065060000000D0203090C07E2030CFF162400FF014A00120066060000000E0203090C07E2030CFF162600FF014A00120065060000000F0203090C07E2030CFF162700FF014A001200660600000010" />
</HDLC>
<HDLC len="18" >
<TargetAddress Value="1" />
<SourceAddress Value="32" />
<!--I frame.-->
<FrameType Value="1E" />
<PDU>
<GetRequest>
  <GetRequestForNextDataBlock>
    <InvokeIdAndPriority Value="129" />
    <BlockNumber Value="1" />
  </GetRequestForNextDataBlock>
</GetRequest>
</PDU>
</HDLC>
<HDLC len="119" >
<TargetAddress Value="32" />
<SourceAddress Value="1" />
<!--AARQ frame.-->
<FrameType Value="10" />
<PDU>
<GetResponse>
  <GetResponsewithDataBlock>
    <InvokeIdAndPriority Value="129" />
    <Result>
      <LastBlock Value="1" />
      <BlockNumber Value="2" />
      <Result>
        <RawData Value="0203090C07E2030DFF0F2F00FF014A0012006506000000110203090C07E2030DFF0F3000FF014A0012006606000000120203090C07E2030DFF100900FF014A0012006506000000130203090C07E2030DFF100A00FF014A001200660600000014" />
      </Result>
    </Result>
  </GetResponsewithDataBlock>
</GetResponse>
</PDU>
</HDLC>





C4

02 81 00000000 01 00 82 01 84
01 82 00 14
    02 03
     090C 07E10B06FF101300FF014A00 12 0065 06 00000001
    0203
     090C 07E10B06FF101700FF014A00 12 0066 06 00000002
    0203
     090C 07E20217FF143500FF014A00 12 0065 06 00000003
    0203
     090C 07E20217FF143B00FF014A00 12 0066 06 00000004
    0203
     090C 07E20217FF150200FF014A00 12 0065 06 00000005
    0203
     090C 07E20217FF150300FF014A00 12 0066 06 00000006
    0203
     090C 07E2030CFF123300FF014A00 12 0065 06 00000007
    0203
     090C 07E2030CFF123400FF014A00 12 0066 06 00000008
    0203
     090C 07E2030CFF123900FF014A00 12 0065 06 00000009
    0203
     090C 07E2030CFF123A00FF014A00 12 0066 06 0000000A
    0203
     090C 07E2030CFF161E00FF014A00 12 0065 06 0000000B
    0203
     090C 07E2030CFF161F00FF014A00 12 0066 06 0000000C
    0203
     090C 07E2030CFF162300FF014A00 12 0065 06 0000000D
    0203
     090C 07E2030CFF162400FF014A00 12 0066 06 0000000E
    0203
     090C 07E2030CFF162600FF014A00 12 0065 06 0000000F
    0203
     090C 07E2030CFF162700FF014A00 12 0066 06 00000010
    0203
     090C 07E2030DFF0F2F00FF014A00 12 0065 06 00000011
    0203
     090C 07E2030DFF0F3000FF014A00 12 0066 06 00000012
    0203
     090C 07E2030DFF100900FF014A00 12 0065 06 00000013
    0203
     090C 07E2030DFF100A00FF014A00 12 0066 06 00000014


   <Data>
     <Array length="20" offset="4">
     <ArrayElement index="0" offset="4">
       <Structure length="3" offset="5">
       <Field index="0" offset="6">
         <OctetString offset="7" datetime="16:19:0:255 6/11/2017">07e10b06ff101300ff014a00</OctetString>
       </Field>
       <Field index="1" offset="20">
         <Uint16 offset="21">0065</Uint16>
       </Field>
       <Field index="2" offset="23">
         <Uint32 offset="24">00000001</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="1" offset="28">
       <Structure length="3" offset="29">
       <Field index="0" offset="30">
         <OctetString offset="31" datetime="16:23:0:255 6/11/2017">07e10b06ff101700ff014a00</OctetString>
       </Field>
       <Field index="1" offset="44">
         <Uint16 offset="45">0066</Uint16>
       </Field>
       <Field index="2" offset="47">
         <Uint32 offset="48">00000002</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="2" offset="52">
       <Structure length="3" offset="53">
       <Field index="0" offset="54">
         <OctetString offset="55" datetime="20:53:0:255 23/2/2018">07e20217ff143500ff014a00</OctetString>
       </Field>
       <Field index="1" offset="68">
         <Uint16 offset="69">0065</Uint16>
       </Field>
       <Field index="2" offset="71">
         <Uint32 offset="72">00000003</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="3" offset="76">
       <Structure length="3" offset="77">
       <Field index="0" offset="78">
         <OctetString offset="79" datetime="20:59:0:255 23/2/2018">07e20217ff143b00ff014a00</OctetString>
       </Field>
       <Field index="1" offset="92">
         <Uint16 offset="93">0066</Uint16>
       </Field>
       <Field index="2" offset="95">
         <Uint32 offset="96">00000004</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="4" offset="100">
       <Structure length="3" offset="101">
       <Field index="0" offset="102">
         <OctetString offset="103" datetime="21:2:0:255 23/2/2018">07e20217ff150200ff014a00</OctetString>
       </Field>
       <Field index="1" offset="116">
         <Uint16 offset="117">0065</Uint16>
       </Field>
       <Field index="2" offset="119">
         <Uint32 offset="120">00000005</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="5" offset="124">
       <Structure length="3" offset="125">
       <Field index="0" offset="126">
         <OctetString offset="127" datetime="21:3:0:255 23/2/2018">07e20217ff150300ff014a00</OctetString>
       </Field>
       <Field index="1" offset="140">
         <Uint16 offset="141">0066</Uint16>
       </Field>
       <Field index="2" offset="143">
         <Uint32 offset="144">00000006</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="6" offset="148">
       <Structure length="3" offset="149">
       <Field index="0" offset="150">
         <OctetString offset="151" datetime="18:51:0:255 12/3/2018">07e2030cff123300ff014a00</OctetString>
       </Field>
       <Field index="1" offset="164">
         <Uint16 offset="165">0065</Uint16>
       </Field>
       <Field index="2" offset="167">
         <Uint32 offset="168">00000007</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="7" offset="172">
       <Structure length="3" offset="173">
       <Field index="0" offset="174">
         <OctetString offset="175" datetime="18:52:0:255 12/3/2018">07e2030cff123400ff014a00</OctetString>
       </Field>
       <Field index="1" offset="188">
         <Uint16 offset="189">0066</Uint16>
       </Field>
       <Field index="2" offset="191">
         <Uint32 offset="192">00000008</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="8" offset="196">
       <Structure length="3" offset="197">
       <Field index="0" offset="198">
         <OctetString offset="199" datetime="18:57:0:255 12/3/2018">07e2030cff123900ff014a00</OctetString>
       </Field>
       <Field index="1" offset="212">
         <Uint16 offset="213">0065</Uint16>
       </Field>
       <Field index="2" offset="215">
         <Uint32 offset="216">00000009</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="9" offset="220">
       <Structure length="3" offset="221">
       <Field index="0" offset="222">
         <OctetString offset="223" datetime="18:58:0:255 12/3/2018">07e2030cff123a00ff014a00</OctetString>
       </Field>
       <Field index="1" offset="236">
         <Uint16 offset="237">0066</Uint16>
       </Field>
       <Field index="2" offset="239">
         <Uint32 offset="240">0000000a</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="10" offset="244">
       <Structure length="3" offset="245">
       <Field index="0" offset="246">
         <OctetString offset="247" datetime="22:30:0:255 12/3/2018">07e2030cff161e00ff014a00</OctetString>
       </Field>
       <Field index="1" offset="260">
         <Uint16 offset="261">0065</Uint16>
       </Field>
       <Field index="2" offset="263">
         <Uint32 offset="264">0000000b</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="11" offset="268">
       <Structure length="3" offset="269">
       <Field index="0" offset="270">
         <OctetString offset="271" datetime="22:31:0:255 12/3/2018">07e2030cff161f00ff014a00</OctetString>
       </Field>
       <Field index="1" offset="284">
         <Uint16 offset="285">0066</Uint16>
       </Field>
       <Field index="2" offset="287">
         <Uint32 offset="288">0000000c</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="12" offset="292">
       <Structure length="3" offset="293">
       <Field index="0" offset="294">
         <OctetString offset="295" datetime="22:35:0:255 12/3/2018">07e2030cff162300ff014a00</OctetString>
       </Field>
       <Field index="1" offset="308">
         <Uint16 offset="309">0065</Uint16>
       </Field>
       <Field index="2" offset="311">
         <Uint32 offset="312">0000000d</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="13" offset="316">
       <Structure length="3" offset="317">
       <Field index="0" offset="318">
         <OctetString offset="319" datetime="22:36:0:255 12/3/2018">07e2030cff162400ff014a00</OctetString>
       </Field>
       <Field index="1" offset="332">
         <Uint16 offset="333">0066</Uint16>
       </Field>
       <Field index="2" offset="335">
         <Uint32 offset="336">0000000e</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="14" offset="340">
       <Structure length="3" offset="341">
       <Field index="0" offset="342">
         <OctetString offset="343" datetime="22:38:0:255 12/3/2018">07e2030cff162600ff014a00</OctetString>
       </Field>
       <Field index="1" offset="356">
         <Uint16 offset="357">0065</Uint16>
       </Field>
       <Field index="2" offset="359">
         <Uint32 offset="360">0000000f</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="15" offset="364">
       <Structure length="3" offset="365">
       <Field index="0" offset="366">
         <OctetString offset="367" datetime="22:39:0:255 12/3/2018">07e2030cff162700ff014a00</OctetString>
       </Field>
       <Field index="1" offset="380">
         <Uint16 offset="381">0066</Uint16>
       </Field>
       <Field index="2" offset="383">
         <Uint32 offset="384">00000010</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="16" offset="388">
       <Structure length="3" offset="389">
       <Field index="0" offset="390">
         <OctetString offset="391" datetime="15:47:0:255 13/3/2018">07e2030dff0f2f00ff014a00</OctetString>
       </Field>
       <Field index="1" offset="404">
         <Uint16 offset="405">0065</Uint16>
       </Field>
       <Field index="2" offset="407">
         <Uint32 offset="408">00000011</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="17" offset="412">
       <Structure length="3" offset="413">
       <Field index="0" offset="414">
         <OctetString offset="415" datetime="15:48:0:255 13/3/2018">07e2030dff0f3000ff014a00</OctetString>
       </Field>
       <Field index="1" offset="428">
         <Uint16 offset="429">0066</Uint16>
       </Field>
       <Field index="2" offset="431">
         <Uint32 offset="432">00000012</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="18" offset="436">
       <Structure length="3" offset="437">
       <Field index="0" offset="438">
         <OctetString offset="439" datetime="16:9:0:255 13/3/2018">07e2030dff100900ff014a00</OctetString>
       </Field>
       <Field index="1" offset="452">
         <Uint16 offset="453">0065</Uint16>
       </Field>
       <Field index="2" offset="455">
         <Uint32 offset="456">00000013</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     <ArrayElement index="19" offset="460">
       <Structure length="3" offset="461">
       <Field index="0" offset="462">
         <OctetString offset="463" datetime="16:10:0:255 13/3/2018">07e2030dff100a00ff014a00</OctetString>
       </Field>
       <Field index="1" offset="476">
         <Uint16 offset="477">0066</Uint16>
       </Field>
       <Field index="2" offset="479">
         <Uint32 offset="480">00000014</Float32>
       </Field>
       </Structure>
     </ArrayElement>
     </Array>
   </Data>



-----------------------------------------------------------------------

DCUb4:
Note that there is a lot of potential "simplification" work such as removal of the filesystem that may make
further tasks much easier rather than having to deal with the archaic implementations.

Platform:
- Booting issue (Linux,C,low-level).
- Install scripts split and drive from MTS (Python/sh).

Application (From AppDeRisk branch):
- DCUTool interaction (serial 'break' issue) (Python?).
- Break up Stubs.c (C, makefile)
- Complete stub functionality for UART (mostly working) (C, Linux, Node & debug-terminal interaction).
- Complete stub functionality for clock/timing (Nothing done) (C, Linux).
- Complete stub functionality for SDCard (mostly working).
- Complete stub functionality for SDRAM (mostly working).
- Complete stub functionality for GPRSModem (nothing done, integrate with Python ModemController).
- Complete stub functionality for TCPIP (implemented but untested) (C, Linux, TCP/IP, DCUTool/server interaction).
- Complete stub functionality for OTXU storage/behaviour (nothing) (C, Platform & Linux interaction).
- Complete stub functionality for preferences (mostly working) (C, file ops, reimplement?).
- Complete stub functionality for Entropy (C,Linux, /dev/urandom).
- Complete stub functionality for power monitoring & control (C,Linux, GPIO, MTS?).
- Complete stub functionality for RTC (C, Linux, hwclock).
- Complete stub functionality for hunter reset pin?
- Complete stub functionality for FLASH? maybe remove instead, part of OTXU image storage IIRC.
- Complete stub functionality for reset functionality.
- Complete stub functionality for Watchdog.
- Move Stubs back into cygh (build/makefile issues?).
- Removal of 'dcutime' (its just wrappers around time/gmtime/localtime).
- Removal of 'timezone' (its just wrappers around tzset).

Testing:
- Evaluation of content of Hwicce unit tests and usefullness to Bellatrix.
- DCUTool interaction for configuration and further mnaual&dev testing.
- Maintenance of the hwicce unit tests.
- Upgrade testsi OTXU (Do we have them already?).
- End-to-end/system tests.
- Work through all functionality of DCUTool and ensure its all working.
- Integration & testing with 1 node (existing setup).
- Testing with 2 nodes (new setup).
- Performance testing with 1 node.
- Performance testing with 2 nodes.
- Watchdog/power reset/recovery/robustness testing.
- testing of ethernet functionality.

New functionality:
- Two-Node mods ().
- Replacement of SharkSSL with... (WolfSSL?)

Design work (priority TBD):
- Two node mods (may make sense to do some simplification work prior to this).
- Removal of filesystem (store) code from DCU (simplification and removal of old fs code). Maybe use SqLite for atomic/rollback/robustness reasons.
- More appropriate preferences implementation (use config.xml directly?, simple k-v store? sqlite would be nice, well supported & tested? redis?).
- Removal of SDRAM emulation (unnecessary).
- Removal of SDCard emulation (unnecessary).
- Investigate process-model changes & low-power/non-super-loop options.
- Without resource restrictions (RAM), the stream system is over-complicated. Investigate simplification & replacement.
- Reimplementation of 'event' into Python.
- Reimplementation of 'config' into Python.
- Reimplementation of 'metercomms' into Python.
- Reimplementation of 'command' into Python.
- Reimplementation of decoders in Python (bigger job, different repo).



-------------------------------------------------------------------


NMS/C4server restarted while agent logged in results in:

2018-03-16 11:30:03,573 TRACE [dtls] DTLSConnection - DTLS packet 6bf0a78c added to queue, address=/fd51:3c22:ee1f:0:200:0:0:1:5684, sessionId=SessionId(d53278cdf99b7beb878f976675847bae5c6d54eea6d891fe2ea1f74d3a0d2f37), migrating=false
2018-03-16 11:30:03,573 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] DTLSConnection - DTLS packet 6bf0a78c being processed, address=/fd51:3c22:ee1f:0:200:0:0:1:5684, sessionId=SessionId(d53278cdf99b7beb878f976675847bae5c6d54eea6d891fe2ea1f74d3a0d2f37), migrating=false
2018-03-16 11:30:03,573 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] LocalCoapSession - ENTER receiveRequestMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, POST /mq, CONFIRMABLE, 3312)
2018-03-16 11:30:03,573 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] LocalCoapSession - ENTER handleConfirmableRequestMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, POST /mq, CONFIRMABLE, 3312)
2018-03-16 11:30:03,573 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] IncomingCoapExchange - Received request POST /mq from peer /fd51:3c22:ee1f:0:200:0:0:1:5684 with payload [0811124408bbd5aed505723c0a024e4112060000636202ff1a0e090c07e20310ff0b2000ff014a001a031200651a05060000002b22108230e77dc4ad7272dd023b3c9a11fe282800].
2018-03-16 11:30:03,573 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] MqCoapResource - Node 00-00-00-00-00-00-00-01 sent 1 messages starting with sequence number 17.
2018-03-16 11:30:03,573 DEBUG [dtls-pool-2] [node=00-00-00-00-00-00-00-01] MessageQueuePersister - Sending to queue com.connode.service.terminal.mq.MessagesFromNode message of type class com.connode.service.terminal.mq.MessagesFromNode.
2018-03-16 11:30:03,578 TRACE [dtls] DTLSConnection - DTLS packet 37bfa3d4 added to queue, address=/fd51:3c22:ee1f:0:200:0:0:1:5684, sessionId=SessionId(d53278cdf99b7beb878f976675847bae5c6d54eea6d891fe2ea1f74d3a0d2f37), migrating=false
2018-03-16 11:30:03,610 DEBUG [dtls-pool-2] [node=00-00-00-00-00-00-00-01] MessageQueuePersister - Successfuly delivered to queue com.connode.service.terminal.mq.MessagesFromNode message MessagesFromNode{dbNodeId=1, scheduledPush=false, startSequenceNumber=17, messages=[MessageWithPayloads{message=Message{resetCounter=0, sequenceNumber=17, status=PUSH, timestamp=Fri Mar 16 11:30:03 GMT 2018, timestampUnreliable=false}, payloads=[DataProfileSamplePayload{deviceId='NA', profile=[0, 0, 99, 98, 2, -1], profileHash=[-126, 48, -25, 125, -60, -83, 114, 114, -35, 2, 59, 60, -102, 17, -2, 40], sampleTime=Thu Jan 01 01:00:00 GMT 1970, message=Message{resetCounter=0, sequenceNumber=17, status=PUSH, timestamp=Fri Mar 16 11:30:03 GMT 2018, timestampUnreliable=false}, createTime=null}]}]}
2018-03-16 11:30:03,611 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] LocalCoapSession - ENTER sendResponseMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, 2.01 Created, ACKNOWLEDGEMENT, 3312) for request (/fd51:3c22:ee1f:0:200:0:0:1:5684, POST /mq, CONFIRMABLE, 3312)
2018-03-16 11:30:03,611 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] LocalCoapSession - ENTER sendMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, 2.01 Created, ACKNOWLEDGEMENT, 3312)
2018-03-16 11:30:03,611 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] LocalCoapSession - EXIT sendResponseMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, 2.01 Created, ACKNOWLEDGEMENT, 3312) for request (/fd51:3c22:ee1f:0:200:0:0:1:5684, POST /mq, CONFIRMABLE, 3312)
2018-03-16 11:30:03,611 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] LocalCoapSession - EXIT handleConfirmableRequestMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, POST /mq, CONFIRMABLE, 3312)
2018-03-16 11:30:03,611 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] LocalCoapSession - EXIT receiveRequestMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, POST /mq, CONFIRMABLE, 3312)
2018-03-16 11:30:03,611 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] DTLSConnection - DTLS packet 37bfa3d4 being processed, address=/fd51:3c22:ee1f:0:200:0:0:1:5684, sessionId=SessionId(d53278cdf99b7beb878f976675847bae5c6d54eea6d891fe2ea1f74d3a0d2f37), migrating=false
2018-03-16 11:30:03,611 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] LocalCoapSession - ENTER receiveRequestMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, POST /mq, CONFIRMABLE, 3313)
2018-03-16 11:30:03,611 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] LocalCoapSession - ENTER handleConfirmableRequestMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, POST /mq, CONFIRMABLE, 3313)
2018-03-16 11:30:03,611 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] IncomingCoapExchange - Received request POST /mq from peer /fd51:3c22:ee1f:0:200:0:0:1:5684 with payload [0812124408bbd5aed505723c0a024e4112060000636202ff1a0e090c07e20310ff0b2200ff014a001a031200661a05060000002c22108230e77dc4ad7272dd023b3c9a11fe282800].
2018-03-16 11:30:03,611 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] MqCoapResource - Node 00-00-00-00-00-00-00-01 sent 1 messages starting with sequence number 18.
2018-03-16 11:30:03,611 DEBUG [dtls-pool-2] [node=00-00-00-00-00-00-00-01] MessageQueuePersister - Sending to queue com.connode.service.terminal.mq.MessagesFromNode message of type class com.connode.service.terminal.mq.MessagesFromNode.
2018-03-16 11:30:03,621 DEBUG [ActiveMQ Session Task-29] [node=00-00-00-00-00-00-00-01] MessageQueuePersister - Received payload MessagesFromNode{dbNodeId=1, scheduledPush=false, startSequenceNumber=17, messages=[MessageWithPayloads{message=Message{resetCounter=0, sequenceNumber=17, status=PUSH, timestamp=Fri Mar 16 11:30:03 GMT 2018, timestampUnreliable=false}, payloads=[DataProfileSamplePayload{deviceId='NA', profile=[0, 0, 99, 98, 2, -1], profileHash=[-126, 48, -25, 125, -60, -83, 114, 114, -35, 2, 59, 60, -102, 17, -2, 40], sampleTime=Thu Jan 01 01:00:00 GMT 1970, message=Message{resetCounter=0, sequenceNumber=17, status=PUSH, timestamp=Fri Mar 16 11:30:03 GMT 2018, timestampUnreliable=false}, createTime=null}]}]} from ActiveMQ queue com.connode.service.terminal.mq.MessagesFromNode
2018-03-16 11:30:03,625 DEBUG [dtls-pool-2] [node=00-00-00-00-00-00-00-01] MessageQueuePersister - Successfuly delivered to queue com.connode.service.terminal.mq.MessagesFromNode message MessagesFromNode{dbNodeId=1, scheduledPush=false, startSequenceNumber=18, messages=[MessageWithPayloads{message=Message{resetCounter=0, sequenceNumber=18, status=PUSH, timestamp=Fri Mar 16 11:30:03 GMT 2018, timestampUnreliable=false}, payloads=[DataProfileSamplePayload{deviceId='NA', profile=[0, 0, 99, 98, 2, -1], profileHash=[-126, 48, -25, 125, -60, -83, 114, 114, -35, 2, 59, 60, -102, 17, -2, 40], sampleTime=Thu Jan 01 01:00:00 GMT 1970, message=Message{resetCounter=0, sequenceNumber=18, status=PUSH, timestamp=Fri Mar 16 11:30:03 GMT 2018, timestampUnreliable=false}, createTime=null}]}]}
2018-03-16 11:30:03,625 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] LocalCoapSession - ENTER sendResponseMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, 2.01 Created, ACKNOWLEDGEMENT, 3313) for request (/fd51:3c22:ee1f:0:200:0:0:1:5684, POST /mq, CONFIRMABLE, 3313)
2018-03-16 11:30:03,625 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] LocalCoapSession - ENTER sendMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, 2.01 Created, ACKNOWLEDGEMENT, 3313)
2018-03-16 11:30:03,626 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] LocalCoapSession - EXIT sendResponseMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, 2.01 Created, ACKNOWLEDGEMENT, 3313) for request (/fd51:3c22:ee1f:0:200:0:0:1:5684, POST /mq, CONFIRMABLE, 3313)
2018-03-16 11:30:03,626 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] LocalCoapSession - EXIT handleConfirmableRequestMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, POST /mq, CONFIRMABLE, 3313)
2018-03-16 11:30:03,626 TRACE [dtls-pool-2] [node=00-00-00-00-00-00-00-01] LocalCoapSession - EXIT receiveRequestMessage (/fd51:3c22:ee1f:0:200:0:0:1:5684, POST /mq, CONFIRMABLE, 3313)
2018-03-16 11:30:03,629 TRACE [ActiveMQ Session Task-29] [node=00-00-00-00-00-00-00-01] MqTracker - Ignoring message with sequence number 17, since it was already processed.
2018-03-16 11:30:03,629 WARN  [ActiveMQ Session Task-29] [node=00-00-00-00-00-00-00-01] ApplicationServiceMessagePusher - No smart metering application server available
2018-03-16 11:30:03,629 WARN  [ActiveMQ Session Task-29] [node=00-00-00-00-00-00-00-01] ApplicationServiceMessagePusher - No smart metering application server available
2018-03-16 11:30:03,629 TRACE [ActiveMQ Session Task-29] [node=00-00-00-00-00-00-00-01] MqTracker - Node 1 has MQ state MessageQueueState{node=00-00-00-00-00-00-00-01, resetCounter=0, startSequenceNumber=78009, lastReceivedSequenceNumber=81506, lastPullTime=null, pullInterval=null} after persisting 0 messages and 0 payloads.
2018-03-16 11:30:03,632 DEBUG [ActiveMQ Session Task-29] [node=00-00-00-00-00-00-00-01] MessageQueuePersister - Consumer accepted the message, acknowledging it for ActiveMQ
2018-03-16 11:30:03,651 DEBUG [ActiveMQ Session Task-29] [node=00-00-00-00-00-00-00-01] MessageQueuePersister - Received payload MessagesFromNode{dbNodeId=1, scheduledPush=false, startSequenceNumber=18, messages=[MessageWithPayloads{message=Message{resetCounter=0, sequenceNumber=18, status=PUSH, timestamp=Fri Mar 16 11:30:03 GMT 2018, timestampUnreliable=false}, payloads=[DataProfileSamplePayload{deviceId='NA', profile=[0, 0, 99, 98, 2, -1], profileHash=[-126, 48, -25, 125, -60, -83, 114, 114, -35, 2, 59, 60, -102, 17, -2, 40], sampleTime=Thu Jan 01 01:00:00 GMT 1970, message=Message{resetCounter=0, sequenceNumber=18, status=PUSH, timestamp=Fri Mar 16 11:30:03 GMT 2018, timestampUnreliable=false}, createTime=null}]}]} from ActiveMQ queue com.connode.service.terminal.mq.MessagesFromNode
2018-03-16 11:30:03,656 TRACE [ActiveMQ Session Task-29] [node=00-00-00-00-00-00-00-01] MqTracker - Ignoring message with sequence number 18, since it was already processed.
2018-03-16 11:30:03,656 WARN  [ActiveMQ Session Task-29] [node=00-00-00-00-00-00-00-01] ApplicationServiceMessagePusher - No smart metering application server available
2018-03-16 11:30:03,656 WARN  [ActiveMQ Session Task-29] [node=00-00-00-00-00-00-00-01] ApplicationServiceMessagePusher - No smart metering application server available
2018-03-16 11:30:03,656 TRACE [ActiveMQ Session Task-29] [node=00-00-00-00-00-00-00-01] MqTracker - Node 1 has MQ state MessageQueueState{node=00-00-00-00-00-00-00-01, resetCounter=0, startSequenceNumber=78009, lastReceivedSequenceNumber=81506, lastPullTime=null, pullInterval=null} after persisting 0 messages and 0 payloads.
2018-03-16 11:30:03,660 DEBUG [ActiveMQ Session Task-29] [node=00-00-00-00-00-00-00-01] MessageQueuePersister - Consumer accepted the message, acknowledging it for ActiveMQ
2018-03-16 11:30:05,976 TRACE [mq-gap-filler] MqTracker - ENTER checkOutNodeState
2018-03-16 11:30:05,977 TRACE [mq-gap-filler] MqTracker - EXIT checkOutNodeState dbNodeId=null



100,000 meters.
100 msgs per day

1 year = 365 * 100 = 36500/8 = 4.5KB per year per meter

after 1 year, 456MB on the one server....



---------------------------------------------


CND-7801: Scheduled event log collection

Add event log OBISs to the Genus-variant profile table.
This enables access to the logs via the existing profile-read mechanisms.

Change-Id: I4e74020ea5451e4d5a4fe0cac3ab8a47ec20ca35



------------------------------------------


util/nanopb/tariff_tou.proto
util/nanopb/meter_data.proto
util/nanopb/meter_cmd.proto
util/nanopb/meter.proto
util/nanopb/load_survey.proto
util/nanopb/load_curtailment.proto
util/nanopb/event_severity.proto
util/nanopb/event.proto
util/nanopb/configrun.proto
util/nanopb/config.proto
stack_extra_info.py
metercomms/metercomms.h
metercomms/metercomms.c
metercomms/meter_command_start.c
metercomms/meter_command_protocol.c
dcuunittest/dcutestutils/otxu.py
dcuunittest/dcutestutils/network_sim.py
dcuunittest/dcu_callbacks/metercomms/metercomms.c
dcuapptest/otxu_tests/test_otxu_operation.py
dcuapptest/meter_command_tests/meter_command_test.py
Makefile

cygh/Stubs.py
build.sh
Output/Makefile
EmbeddedPython.c
ChildBuild.sh



-----------------

Working:
./build/host-genus-insecure/bin/agent   -eui64 00-00-00-00-00-00-00-01  \
                                        -meter /dev/ttyUSB0  \
                                        -initrtc  \
                                        -ctrlhub 127.0.0.1  \
                                        -ctrlhubport 4242  \
                                        -loglevel debug  \
                                        -param device.dlms.lls_password=1A2B3C4D \
                                        -param device.dlms.hls_key=756776636c686c737567313836616263 \
                                        -param device.dlms.authentication_key=756776636c656b616b67313836616263 \
                                        -param device.dlms.encryption_key=756776636c656b616b67313836616263 \
                                        -param server.ip=fd00::1  \
                                        -param modem.tun6.ip=localhost \
                                        -param modem.tun6.secret=whatsfordinner   \
                                        -param modem.apn=4g.tele2.se  \
                                        -rootcert /Data/Temp/KeyTest/root.crt.der  \
                                        -cert /Data/Temp/KeyTest/node.crt.der  \
                                        -key /Data/Temp/KeyTest/node.key.der  \
                                        -mackey /Data/Temp/KeyTest/mac-keys.txt  \
                                        -gateway  \
                                        -statedir AgentState \
                                        -socket







Profile 0-0:99.98.1*255 (in dlmsParseProfileValue): Bad struct                      x
Profile 0-0:99.98.1*255: Discovery failed at step 2                                 x
Profile discovery for 0-0:99.98.2*255 PowerEventLog: step 1                         x
Get 0-0:99.98.2*255 ic 7 attr 3 normal access                                       x
tx: (1/2): 7ea0190341502efde6e600c001810007                                         x
tx: (2/2): 0000636202ff03003f597e                                                   x
rx: (1/6): 7ea050410334c0f1e6e700c402810100                                         x
rx: (2/6): 00000100820038010302041200080906                                         x
rx: (3/6): 0000010000ff0f021200000204120001                                         x
rx: (4/6): 09060000600b02ff0f02120000020412                                         x
rx: (5/6): 000109060000600f02ff0f0212000095                                         x
rx: (6/6): cd7e                                                                     x
Profile 0-0:99.98.2*255: Extracting 3 objects                                       xr
Profile 0-0:99.98.2*255: 1/3: 0-0:1.0.0*255 ic 8 attr 2                             x
Profile 0-0:99.98.2*255: 2/3: 0-0:96.11.2*255 ic 1 attr 2                           x
Profile 0-0:99.98.2*255: 3/3: 0-0:96.15.2*255 ic 1 attr 2                           x
Profile discovery for 0-0:99.98.2*255 PowerEventLog: step 2                         x
Selective read: by range                                                            x
Selective read: by range - the latest entry                                         x
Get 0-0:99.98.2*255 ic 7 attr 2 by range:                                           x
Profile PowerEventLog: From time: 2018-03-23 17:36:15                               x
Profile PowerEventLog: To time: 2018-03-23 17:50:55                                 x
tx: (1/5): 7ea04c0341727f44e6e600c001810007                                         x
tx: (2/5): 0000636202ff02010102040204120008                                         x
tx: (3/5): 09060000010000ff0f02120000090c07                                         x
tx: (4/5): e20317ff11240fffffc400090c07e203                                         x
tx: (5/5): 17ff113237ffffc40001004bae7e                                             x
rx: (1/2): 7ea01c4103565730e6e700c402810100                                         x
rx: (2/2): 00000100820004018200004e3d7e                                             x
Bad struct: Too short: 0 B                                                          x
Profile 0-0:99.98.2*255 (in dlmsParseProfileValue): Bad struct                      x
Profile 0-0:99.98.2*255: Discovery failed at step 2                                 x
Profile discovery for 0-0:99.98.3*255 TransactionEventLog: step 1                   x
Get 0-0:99.98.3*255 ic 7 attr 3 normal access                                       x
0: transmit DIO to ff02::1a (rank=128, version=240)                                 x
ICMPv6 multicast to ff02::1a, RPL control message (DIO), 80 B                       x
Send IP on lowpan, 84 B, type 58, ttl 32: fe80::200:0:0:1 -> ff02::1a               x
Tx 113 B at 20 dBm as #114 to fd-ff-ff-ff-ff-ff-ff-ff: Failed: Radio error          x


-----------------------------------------------------------

Refactoring notes for device-dlms:

Device-dlms: (currently ~4500 line file):

Functionality:
- Module/device lifecycle management (deviceStart, stop, etc)
- Association support.
- Authentication support (pluggable? mixed issue with dlms.c)
- Session support (e.g. setup&releaseHdlcConnection)
- In-RAM profile structure support (alloc,free,access,find,etc)
- Simple/single-record profile support
- Complex/multi-record profile support.
- Psuedo-profile support (instantaneous & name-plate).
- Scheduled profile reading.
- immediate reads support
- Alarm support.
- Selective-access support.
- IS15159-specific 'features' such as 7xevent-logs.
- On-demand profile
- On-demand register
- Discovery state-machine.
- Meter-time support, read/write/sync.
- driver/WAN facing message-handlers & pb encoding.
- meter-facing message handlers.
- Disconnector.
- Hash management.

Issues:
- Speed of discovery
- Discovery requires data in profile to complete successfully.
- Confusing naming issues (e.g. saveDpTs, processOnDemandProfileSamplesProcess, loadFrameCounter-look at what it does).
- global state.
- memory usage? *lots* of allocating/freeing. Worst-case analysis? fragmentation? failure-modes?
- Variant mechanism needs to take into account a customer variant of the same meter type.
- unit tests?
- Add support utilities for iterating over the profile list & profile->object list?
- Should be a more-defined/more-obvious lifecycle for each request/response chain.
- Lots of boilerplate code for processing responses.


dlms.c split possibilities (Currently ~4500 line file):
- Module lifecycle.
- HDLC facing handlers.
- Association and session and generic error support.
- Crypto support (multiple, pluggable?)
- Data notification.
- DLMS "stack" (i.e. core protocol handling, req/rsp handling).
- A-XDR encoder/decoder.
- Multi-block management.
- Date/time utilities.
- Profile parsing and utilities (unclear split of responsibilities between dlms/device-dlms).
- Hash computation.
- capture period utilities.
- Type parser (array,struct,scalers).
- FrameCounter, we have read/write/load. Load perform a read and write (misnamed). Possible race
condition with setting counterToWrite and reading from it (message received while writing, since
its performed on a schedule, possibly...).

Issues:
- Need to be a separate task? combine with HDLC and save stack space and complexity.
- If DLMS frame-counter fails to restore correctly, it is set to zero (FIXME).
- Framecounter being persisted to FLASH every message, lots of FLASH activity?
- Framecounter needs wraparound situation considered.
- unit tests?
- Add support utilities for iterating over DLMS array & struct?


Overall:
- Need for more of a proper stack layering, i.e app-level generic DLMS objects such as capture-period
and profile-generic utilities/methods separated from the lower-levels.
- separation need from core protocol behaviour (session mgmt, req/resp/error mgmt) and messgae encoding and
decoding (i.e. A-XDR stream-oriented methods).
- Control path through the code needs to be more obvious.
- State machine(s) need more structure.
- Too much global state.

Larger issues:
- Make more use of the queue and less use of large state machines, e.g. break up the discovery state machine to
individual parts that can be queued.
- retrieve data from the meter, not from FLASH, don't use the mq.
- make the mq a priority q.
- Remove state 0 (time read) of disco state machine and queue a time read instead.


----------------------------------------------------------------------


break condition:

steve@blackbox1:~$ stty -a -F /dev/ttyUSB0
speed 57600 baud; rows 0; columns 0; line = 0;
intr = ^C; quit = ^\; erase = ^?; kill = ^U; eof = ^D; eol = <undef>;
eol2 = <undef>; swtch = <undef>; start = ^Q; stop = ^S; susp = ^Z; rprnt = ^R;
werase = ^W; lnext = ^V; discard = ^O; min = 1; time = 0;
-parenb -parodd -cmspar cs8 hupcl -cstopb cread clocal -crtscts
-ignbrk -brkint -ignpar parmrk -inpck -istrip -inlcr -igncr -icrnl ixon -ixoff
-iuclc -ixany -imaxbel -iutf8
-opost -olcuc -ocrnl -onlcr -onocr -onlret -ofill -ofdel nl0 cr0 tab0 bs0 vt0 ff0
-isig -icanon -iexten -echo -echoe -echok -echonl -noflsh -xcase -tostop -echoprt
-echoctl -echoke -flusho -extproc


break -> 0xff 0x00 0x00 (iff parmrk is set).
break -> 0x00 (iff parmrk is *not* set).

stty -F /dev/serial/by-id/usb-FTDI_TTL232R-3V3_FT9SI5ZW-if00-port0 -parenb -parodd -cmspar cs8 hupcl -cstopb cread clocal -crtscts -ignbrk -brkint -ignpar parmrk -inpck -istrip -inlcr -igncr -icrnl ixon -ixoff -iuclc -ixany -imaxbel -iutf8 -isig -icanon -iexten -echo -echoe -echok -echonl -noflsh -xcase -tostop -echoprt


------------------------------------------------------


cable_has_connection_attempt
CABLE_rx_connection_request()

b command_link.c:236

command_link_current_state = SEND_HELLO_INDICATION

b COMMAND_LINK_tx_put

WAIT_HELLO_RESPONSE

cygh_uart_txchar_blocking

b command_link.c:361

FS_storage_read_fileheader returns FS_CORRUPT_FILE_HEADER while popping hello message for tx and
assert fails, causing byte out of diag port.

stream_output_pb_encode fails in stream_nanopb.c:37
b stream_nanopb.c:37 func=pb_enc_varint


b command_link.c:361
assert fails.... FS_FIFO_peek fails with FS_CORRUPT_FILE_HEADER
b fs.c:145

if (!UUID_equals(expected_fs_uuid, &fs_uuid)) fails.... fs isnt formatted, maybe use or create
a fs image.

dcu is unlicensed. licensing_state == LICENSING_STATE_UNLICENSED.

command_link.c:268: COMMAND_LINK_tx_put(&msg); not outputing hello.
COMMAND_LINK_tx_put() works ok.

command_link.c:357
FS_FIFO_pop() fails. rerr==FS_CORRUPT_FILE_HEADER

in state FS_OPEN_FILE_STATE_START_OFFSETo

FS_file_header_unpack fails because UUID_equals(expected_fs_uuid, &fs_uuid) fails.
fs.c:145

COMMAND_LINK_init calls FS_FIFO_new_sdram() for command_link_rx_fifo and command_link_tx_fifo.

file that fials is:
FS_FIFO_pop(&command_link_tx_fifo, &command_link_tx_read_file)


this reads zeros:
cygh_sdram_read (offset=2732544, buf=0x6786a0 <fs_gpt_work_block>, size=512) at ../cygh/Stubs.c:1119
cygh_sdram_write
b cygh_sdram_read if offset == 2732544
b cygh_sdram_write if offset == 2732544



--------------------------------------------------------

get node out of production mode:

./tools/c4-tools/coap_request.py --config prod.lowpan.eui64 00-1b-c5-0c-60-00-bc-21
./tools/c4-tools/coap_request.py --config prod.prodtime 1
./tools/c4-tools/coap_request.py --load-key client-key node.key.der
./tools/c4-tools/coap_request.py --load-key client-cert node.crt.der
./tools/c4-tools/coap_request.py --load-key root-cert ca.crt.der
./tools/c4-tools/coap_request.py --rll-key mac.key
--------------------------------------------------------


From DCU:

c2022f0a120a100e1dd35389e344879b3aecd3fb786d6c100118022001280435ff7f00003d0000000042004a005d01000000

echo -n "c2022f0a120a100e1dd35389e344879b3aecd3fb786d6c100118022001280435ff7f00003d0000000042004a005d01000000" | xxd -r -p | protoc --decode_raw
40 {
  1 {
    1: "\016\035\323S\211\343D\207\233:\354\323\373xml"
  }
  2: 1
  3: 2
  4: 1
  5: 4
  6: 0x00007fff
  7: 0x00000000
  8: ""
  9: ""
  11: 0x00000001
}

23c2022f0a120a100e1dd35389e344879b3aecd3fb786d6c100118022001280435ff7f

COBS encoded output:
23 C2 02 2F 0A 12 0A 10 0E 1D D3 53 89 E3 44 87 9B 3A EC D3 FB 78 6D 6C 10 01 18 02 20 01 28 04 35 FF 7F 01 02 3D 01 01 01 02 42 02 4A 03 5D 01 01 01 01 01 01 00
   c2 02 2f 0a 12 0a 10 0e 1d d3 53 89 e3 44 87 9b 3a ec d3 fb 78 6d 6c 10 01 18 02 20 01 28 04 35 ff 7f 00 00 3d 00 00 00 00 42 00 4a 00 5d 01 00 00 00
xx                                                                                                       xx xx    xx xx xx xx    xx    xx       xx xx xx xx xx xx


------------------------------------------------



Ok, we've seen a few problems that taken together may be pointing towards the SMA not updating its meter/node info when upgraded:
- We have seen an instance of an agent being upgraded yet the new firmware version not being seen on the UI.
- Event profiles that should not have been discovered (since the agent fails to discover profiles that are empty) appeared after an upgrade.
- After an upgrade from an agent that did not support on-demand profiles to one that does, we have seen that the "on-demand" flags were not visible.

I briefly chatted to Bojan about it and he mentioned that the SMA has a discovery re-trigger mechanism that works in two cases:
- The global hash changes (which should pick up f/w version changes).
- The SMA receives data for a profile that it did not previously have registered for the meter.

The logs I've got do not seem conclusive to me but I can imagine that if the SMA isn't rediscovering a meter after a hash change then that
mechanism could cause the above effects.

Any thoughts? From the node logs, I can see that the discovery process works fine and certainly in the case of the version being incorrect then
the agent has no mechanism for reporting an old version so its unlikely to be an agent-side problem in that case.



./build/host-ctrlporthub/bin/ctrlporthub -controllerport 4000 -listen 4242 -loglevel debug

./build/host-genus-insecure/bin/agent   -eui64 00-00-00-00-00-00-00-01  \
                                        -meter /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0  \
                                        -initrtc  \
                                        -ctrlhub 127.0.0.1  \
                                        -ctrlhubport 4242  \
                                        -loglevel debug  \
                                        -param device.dlms.lls_password=1A2B3C4D  \
                                        -param device.dlms.authentication_key=756776636c656b616b67313836616263    \
                                        -param device.dlms.encryption_key=756776636c656b616b67313836616263    \
                                        -param device.dlms.encryption_key=756776636c656b616b67313836616263    \
                                        -param server.ip=fd00::1  \
                                        -param modem.tun6.ip=localhost \
                                        -param modem.tun6.secret=whatsfordinner   \
                                        -param modem.apn=4g.tele2.se  \
                                        -rootcert /Data/Temp/KeyTest/root.crt.der  \
                                        -cert /Data/Temp/KeyTest/node.crt.der  \
                                        -key /Data/Temp/KeyTest/node.key.der  \
                                        -mackey /Data/Temp/KeyTest/mac-keys.txt  \
                                        -gateway  \
                                        -statedir AgentState \
                                        -socket



-----------------------------

1: "859def03282f6117dff596579b2bd873"
2 {
  1 {
    10: 0x30205453
    6: 48
    6: 48
    6: 53
  }
  2: "GENUS POWER INFRASTRUCTURES LTD"
  3: "Three phase a.c. static direct connected watt-hour smart"
  4: "GF6B7.325030"
  5: 1
  5: 2
  5: 3
  5: 4
  5: 5
  5: 6
  5: 7
  6: "genus_dlms"
}


---------------------------------------------------------


curl -s -X POST -H 'Content-Type: application/json' 'http://localhost:8880/ws/meterAlarms' --data '{"meterId":"UST 0000006",  "startId": "1", "count": "10"}' | python -m json.tool

curl -s -X POST -H 'Content-Type: application/json' 'http://localhost:8880/ws/meterAlarms' --data '{"meterId":"UST 0000006",  "startId": "600", "count": "1000"}' | python -m json.tool | grep alarmTime
-------------------------------------

docker run -v `pwd`:'/project'   -it omnimesh/buildenv_omnimesh  make pypb2 host-genus-insecure host-ctrlporthub ipa1-bl-insecure



------------------------------------------------

./build/host-genus-insecure/bin/agent   -eui64 00-00-00-00-00-00-00-01  \
                                        -meter /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0  \
                                        -initrtc  \
                                        -ctrlhub 127.0.0.1  \
                                        -ctrlhubport 4242  \
                                        -loglevel debug  \
                                        -param device.dlms.lls_password=1A2B3C4D  \
                                        -param device.dlms.authentication_key=756776636c656b616b67313836616263    \
                                        -param device.dlms.encryption_key=756776636c656b616b67313836616263    \
                                        -param server.ip=fd00::1  \
                                        -param modem.tun6.ip=localhost \
                                        -param modem.tun6.secret=whatsfordinner   \
                                        -param modem.apn=4g.tele2.se  \
                                        -rootcert ~/KeyTest/root.crt.der  \
                                        -cert ~/KeyTest/node.crt.der  \
                                        -key ~/KeyTest/node.key.der  \
                                        -mackey ~/KeyTest/mac-keys.txt  \
                                        -gateway  \
                                        -statedir AgentState \
                                        -socket



-------------------------------------

git show tags:

git show-ref --tags

10c3d49151a4402c0b4468e4c8823baab306d222 refs/tags/v106

tag v106
Tagger: Jonas Norling <jonas.norling@cyanconnode.com>
Date:   Tue Dec 12 12:18:42 2017 +0100

----------------------------------------------


grep "Node reg" /opt/sma/logs/sma.log  | cut -d' ' -f1,2

----------------------------------------------

$ sudo vim /etc/resolvconf/resolv.conf.d/base
Then put your nameserver list in like so:

nameserver 8.8.8.8
nameserver 8.8.4.4
Finally update resolvconf:

$ sudo resolvconf -u

Omnibox1:
sudo ip -6 add add fd19::1 dev eth0






------------------------------


cd buildenv_omnimesh
./build.sh
cd ../omnimesh
docker run -v `pwd`:'/project'   -it omnimesh/buildenv_omnimesh  ./cibuild.sh
cd ../buildenv_omnimesh
./build_omnimesh_server.sh ../omnimesh
./run_omnimesh_server


----------------------------------------------

Omnibox2:

When prompted for a password, use "steve" and "123456789"

NMS URL:
http://omnibox2/nms/dashboard

SMA URL:
http://omnibox2:8880

To run the agent, you may want three windows onto the Omniboxi as they all output text (that you may want to look at).
The commands to run are:
"sudo ./RunTun.sh"
"./RunCtrlPortHubForAgent.sh"
"./RunAgent.sh"

If you change the opto probe, you need to change the device name in RunAgent.sh
It currently is:
"/dev/serial/by-id/usb-FTDI_FT232R_USB_UART_A6023SX7-if00-port0"
Change it as appropriate.

to discover the opto-probe name, plug it in and do:
"ls /dev/serial/by-id/"


create a tarball of the new code, copy it to the omnibox with:
"scp LnT.tar steve@omnibox2:~/"

Log on to the OmniBox with:
"ssh steve@omnibox2"

Expand the tarball with:
"tar xvf LnT.tar"
"cd LnT"
"make host-lnt"

If you want to monitor the NMS:
"tail -f /usr/local/connode/logs/server.log"

If you want to monitor the SMA:
"tail -f /opt/sma/logs/sma.log"


----------------------------

IID: 02-1b-c5-0c-60-00-ea-11
G102032


2018-04-25 10:18:07,558 TRACE [http-63] ProxyController - method=GET, nodeId=00-1b-c5-0c-60-00-ea-11, coapUri=/sm/G102032/powerswitch
2018-04-25 10:18:07,559 TRACE [http-63] ProxyController - Node not found nodeId=00-1b-c5-0c-60-00-ea-11, coapUri=/sm/G102032/powerswitch
2018-04-25 10:18:07,559 TRACE [http-63] DeferredHttpCoapRequestContext - proxy response nodeId=00-1b-c5-0c-60-00-ea-11, coapUri=/sm/G102032/powerswitch, statusCode=502, payload=4e6f6465206e6f7420666f756e64


-------------------

sudo ./coap_request.py --server localhost:8080 --agent fd5f:fe8f:36c3:0:21b:c50c:6000:ea11 --config dtls.timeout.initial.s 55

--------------------------

Setting power control off:

lowpan.powercontrol 0

ssh tunnel to remote server then use tunnel to pass coap_request commands thru to meter.

ssh -f -L 9000:localhost:8080 stickle@omnireltest1.dev.cyanconnode.com sleep 172800
./tools/c4-tools/coap_request.py --server localhost:9000 --agent fd5f:fe8f:36c3:0:21b:c50c:6000:e9ef --config lowpan.powercontrol 0


------------------------------------------------

./sma-nms-service/src/main/java/com/cyanconnode/sma/service/mq/message/MessageServices.java
./sma-nms-service/src/test/java/com/cyanconnode/sma/service/mq/message/MessageServicesTest.java
./sma-common/src/main/java/com/cyanconnode/sma/common/sample/MeterSampleService.java
./sma-common/src/main/java/com/cyanconnode/sma/common/group/DeviceGroupService.java
./sma-common/src/main/java/com/cyanconnode/sma/common/profile/MeterProfileService.java
./sma-common/src/main/java/com/cyanconnode/sma/common/alarm/MeterAlarmService.java
./sma-common/src/test/java/com/cyanconnode/sma/common/group/DeviceGroupServiceTest.java
./sma-nms-httpproxy/src/main/java/com/cyanconnode/sma/httpproxy/HttpCoapProxyService.java
./sma-nms-httpproxy/src/main/java/com/cyanconnode/sma/httpproxy/DiscoveryServiceExecutor.java
./sma-nms-httpproxy/src/main/java/com/cyanconnode/sma/httpproxy/ondemand/OnDemandProfileService.java
./sma-nms-httpproxy/src/main/java/com/cyanconnode/sma/httpproxy/DeviceServices.java
./sma-nms-httpproxy/src/main/java/com/cyanconnode/sma/httpproxy/DiscoveryService.java
./sma-nms-httpproxy/src/test/java/com/cyanconnode/sma/httpproxy/ServiceDiscoveryTest.java
./sma-nms-httpproxy/src/test/java/com/cyanconnode/sma/httpproxy/OnDemandMeterSampleServiceTest.java
./sma-nms-httpproxy/src/test/java/com/cyanconnode/sma/httpproxy/PowerSwitchServiceTest.java


sma-nms-service/src/main/java/com/cyanconnode/sma/service/mq/message/PostProcessingTask.java:3:public interface PostProcessingTask extends Runnable {
sma-nms-httpproxy/src/main/java/com/cyanconnode/sma/httpproxy/DiscoveryServiceExecutor.java:24:        public Thread newThread(Runnable r) {
sma-nms-httpproxy/src/main/java/com/cyanconnode/sma/httpproxy/tasks/DiscoveryTask.java:31:        public Thread newThread(Runnable r) {
sma-nms-httpproxy/src/main/java/com/cyanconnode/sma/httpproxy/DiscoveryService.java:27:public class DiscoveryService implements Runnable{


-----------------------------------------

Checking that hash changes as a result of features & capture list change.

2018-04-30 12:21:39.210 [debug] [        meter/dlms] {      device}: !!! Feature change
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}: Starting dlsmComputeHash:
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}:  --- hash: : (1/1): 29b15f641ebdd079343dddc7c021b5dc
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}:  --- hash: : (1/1): 8c65bbb524c9df3da9cd9c8cf2ee21ca
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}:  --- hash: : (1/1): 1a9f2139482b968346ae87c661725604
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}:  --- hash: : (1/1): 438426051854215b2bccf0aae20475ca
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}:  --- hash: : (1/1): 90ae0f00d33bfe7cf16bfab3f2bad140
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}:  --- hash: : (1/1): 57ef5547afc35524c643f854e43ea922
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}:  --- hash: : (1/1): 9e77e7990818c88823b0c76aba21e5cf
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}:  --- hash: : (1/1): 4d597ae3bfd4df1bec0d2e19049f81f9
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}:  --- hash: : (1/1): bc2653c82345f196009f03c2f42dcc3a
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}:  --- hash: : (1/1): 0f7b43d0a0815a483311b5889ffad793
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}:  --- profilesHash: : (1/1): 62df13cd
2018-04-30 12:21:39.210 [debug] [        meter/dlms] {      device}: !!! Feature change
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}: Starting dlsmComputeHash:
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}:  --- hash: : (1/1): 1cc07dcea6f3ab84f53dcd4afac648b9
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}:  --- hash: : (1/1): 8c65bbb524c9df3da9cd9c8cf2ee21ca
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}:  --- hash: : (1/1): 1a9f2139482b968346ae87c661725604
2018-04-30 12:21:39.210 [debug] [              dlms] {      device}:  --- hash: : (1/1): 438426051854215b2bccf0aae20475ca
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 90ae0f00d33bfe7cf16bfab3f2bad140
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 57ef5547afc35524c643f854e43ea922
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 9e77e7990818c88823b0c76aba21e5cf
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 4d597ae3bfd4df1bec0d2e19049f81f9
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): bc2653c82345f196009f03c2f42dcc3a
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 0f7b43d0a0815a483311b5889ffad793
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- profilesHash: : (1/1): 37506577
2018-04-30 12:21:39.211 [debug] [        meter/dlms] {      device}: !!! objects change
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}: Starting dlsmComputeHash:
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 3f081f5de36c2388d80c3e096f90a417
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 8c65bbb524c9df3da9cd9c8cf2ee21ca
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 1a9f2139482b968346ae87c661725604
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 438426051854215b2bccf0aae20475ca
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 90ae0f00d33bfe7cf16bfab3f2bad140
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 57ef5547afc35524c643f854e43ea922
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 9e77e7990818c88823b0c76aba21e5cf
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 4d597ae3bfd4df1bec0d2e19049f81f9
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): bc2653c82345f196009f03c2f42dcc3a
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 0f7b43d0a0815a483311b5889ffad793
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- profilesHash: : (1/1): 09104aa7
2018-04-30 12:21:39.211 [debug] [        meter/dlms] {      device}: !!! original
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}: Starting dlsmComputeHash:
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 29b15f641ebdd079343dddc7c021b5dc
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 8c65bbb524c9df3da9cd9c8cf2ee21ca
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 1a9f2139482b968346ae87c661725604
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 438426051854215b2bccf0aae20475ca
2018-04-30 12:21:39.211 [debug] [              dlms] {      device}:  --- hash: : (1/1): 90ae0f00d33bfe7cf16bfab3f2bad140
2018-04-30 12:21:39.212 [debug] [              dlms] {      device}:  --- hash: : (1/1): 57ef5547afc35524c643f854e43ea922
2018-04-30 12:21:39.212 [debug] [              dlms] {      device}:  --- hash: : (1/1): 9e77e7990818c88823b0c76aba21e5cf
2018-04-30 12:21:39.212 [debug] [              dlms] {      device}:  --- hash: : (1/1): 4d597ae3bfd4df1bec0d2e19049f81f9
2018-04-30 12:21:39.212 [debug] [              dlms] {      device}:  --- hash: : (1/1): bc2653c82345f196009f03c2f42dcc3a
2018-04-30 12:21:39.212 [debug] [              dlms] {      device}:  --- hash: : (1/1): 0f7b43d0a0815a483311b5889ffad793
2018-04-30 12:21:39.212 [debug] [              dlms] {      device}:  --- profilesHash: : (1/1): 62df13cd
2018-04-30 12:21:39.212 [debug] [        meter/dlms] {      device}: deviceProfileHash is : (1/1): 62df13cdf8d9cfd9b953fee6d482cc3c


------------------------------------

Time set/update:

2018-04-30 13:49:00.841 [debug] [        meter/dlms] {      device}: ----> Forcing time set
2018-04-30 13:49:00.841 [ info] [        meter/dlms] {      device}: Setting time: 2018-04-30T13:49:00.000-01:00 0
2018-04-30 13:49:00.841 [debug] [              dlms] {      device}: Set 0-0:1.0.0*255 ic 8 attr 2 valueLen 14 B
2018-04-30 13:49:00.903 [debug] [              hdlc] {        hdlc}: tx: (1/3): 7ea027036154897ae6e600c101810008
2018-04-30 13:49:00.903 [debug] [              hdlc] {        hdlc}: tx: (2/3): 0000010000ff0200090c07e2041eff0d
2018-04-30 13:49:00.903 [debug] [              hdlc] {        hdlc}: tx: (3/3): 3100ffffc48019e87e
2018-04-30 13:49:01.065 [debug] [              hdlc] {        hdlc}: rx: (1/2): 7ea01061037448a6e6e700c501810036
2018-04-30 13:49:01.065 [debug] [              hdlc] {        hdlc}: rx: (2/2): cf7e
2018-04-30 13:49:01.065 [debug] [        meter/dlms] {      device}: ----> UpdateMeterClock
2018-04-30 13:49:01.065 [ info] [        meter/dlms] {      device}: Setting time offset: -60 minutes
2018-04-30 13:49:01.065 [debug] [              dlms] {      device}: Set 0-0:1.0.0*255 ic 8 attr 3 valueLen 3 B
2018-04-30 13:49:01.122 [debug] [              hdlc] {        hdlc}: tx: (1/2): 7ea01c0361767ef4e6e600c101810008
2018-04-30 13:49:01.122 [debug] [              hdlc] {        hdlc}: tx: (2/2): 0000010000ff030010ffc426977e
2018-04-30 13:49:01.176 [debug] [              hdlc] {        hdlc}: rx: (1/2): 7ea0106103965462e6e700c501810036
2018-04-30 13:49:01.177 [debug] [              hdlc] {        hdlc}: rx: (2/2): cf7e


2018-04-30 13:53:35.774 [debug] [        meter/dlms] {      device}: Either node or meter time is not known
2018-04-30 13:53:35.774 [debug] [        meter/dlms] {      device}: Clock drift is 3602 seconds
2018-04-30 13:53:35.774 [debug] [        meter/dlms] {      device}: ----> Forcing time set
2018-04-30 13:53:35.774 [ info] [        meter/dlms] {      device}: Setting time: 2018-04-30T14:53:35.000-01:00 0
2018-04-30 13:53:35.774 [debug] [              dlms] {      device}: Set 0-0:1.0.0*255 ic 8 attr 2 valueLen 14 B
2018-04-30 13:53:35.836 [debug] [              hdlc] {        hdlc}: tx: (1/3): 7ea027036154897ae6e600c101810008
2018-04-30 13:53:35.837 [debug] [              hdlc] {        hdlc}: tx: (2/3): 0000010000ff0200090c07e2041eff0e
2018-04-30 13:53:35.837 [debug] [              hdlc] {        hdlc}: tx: (3/3): 3523ffffc480862d7e
2018-04-30 13:53:35.996 [debug] [              hdlc] {        hdlc}: rx: (1/2): 7ea01061037448a6e6e700c501810036
2018-04-30 13:53:35.996 [debug] [              hdlc] {        hdlc}: rx: (2/2): cf7e
2018-04-30 13:53:35.996 [debug] [        meter/dlms] {      device}: ----> UpdateMeterClock
2018-04-30 13:53:35.996 [ info] [        meter/dlms] {      device}: Setting time offset: -60 minutes
2018-04-30 13:53:35.996 [debug] [              dlms] {      device}: Set 0-0:1.0.0*255 ic 8 attr 3 valueLen 3 B
2018-04-30 13:53:36.056 [debug] [              hdlc] {        hdlc}: tx: (1/2): 7ea01c0361767ef4e6e600c101810008
2018-04-30 13:53:36.056 [debug] [              hdlc] {        hdlc}: tx: (2/2): 0000010000ff030010ffc426977e
2018-04-30 13:53:36.125 [debug] [              hdlc] {        hdlc}: rx: (1/2): 7ea0106103965462e6e700c501810036
2018-04-30 13:53:36.125 [debug] [              hdlc] {        hdlc}: rx: (2/2): cf7e


2018-04-30 14:01:22.920 [debug] [        meter/dlms] {      device}: ----> Forcing time adjust
2018-04-30 14:01:22.920 [debug] [              dlms] {      device}: Action 0-0:1.0.0*255 ic 8 methodId 6 actionLen: 3 B
2018-04-30 14:01:22.976 [debug] [              hdlc] {        hdlc}: tx: (1/2): 7ea01c0361546ef6e6e600c301810008
2018-04-30 14:01:22.976 [debug] [              hdlc] {        hdlc}: tx: (2/2): 0000010000ff060110fff669ab7e
2018-04-30 14:01:23.046 [debug] [              hdlc] {        hdlc}: rx: (1/2): 7ea011610374f3bae6e700c701c10000
2018-04-30 14:01:23.046 [debug] [              hdlc] {        hdlc}: rx: (2/2): fcb47e
2018-04-30 14:01:23.046 [debug] [        meter/dlms] {      device}: ----> UpdateMeterClock
2018-04-30 14:01:23.047 [ info] [        meter/dlms] {      device}: Setting time offset: -60 minutes
2018-04-30 14:01:23.047 [debug] [              dlms] {      device}: Set 0-0:1.0.0*255 ic 8 attr 3 valueLen 3 B
2018-04-30 14:01:23.102 [debug] [              hdlc] {        hdlc}: tx: (1/2): 7ea01c0361767ef4e6e600c101810008
2018-04-30 14:01:23.102 [debug] [              hdlc] {        hdlc}: tx: (2/2): 0000010000ff030010ffc426977e
2018-04-30 14:01:23.158 [debug] [              hdlc] {        hdlc}: rx: (1/2): 7ea0106103965462e6e700c501810036
2018-04-30 14:01:23.158 [debug] [              hdlc] {        hdlc}: rx: (2/2): cf7e
2018-04-30 14:01:23.158 [debug] [        meter/dlms] {      device}: ----> UpdateMeterClock


2018-04-30 14:02:39.713 [debug] [        meter/dlms] {      device}: Clock drift is 3 seconds
2018-04-30 14:02:39.713 [debug] [        meter/dlms] {      device}: ----> Forcing time adjust
2018-04-30 14:02:39.713 [debug] [              dlms] {      device}: Action 0-0:1.0.0*255 ic 8 methodId 6 actionLen: 3 B
2018-04-30 14:02:39.770 [debug] [              hdlc] {        hdlc}: tx: (1/2): 7ea01c0361546ef6e6e600c301810008
2018-04-30 14:02:39.770 [debug] [              hdlc] {        hdlc}: tx: (2/2): 0000010000ff060110005acf3b7e
2018-04-30 14:02:39.841 [debug] [              hdlc] {        hdlc}: rx: (1/2): 7ea011610374f3bae6e700c701c10000
2018-04-30 14:02:39.841 [debug] [              hdlc] {        hdlc}: rx: (2/2): fcb47e
2018-04-30 14:02:39.841 [debug] [        meter/dlms] {      device}: ----> UpdateMeterClock
2018-04-30 14:02:39.841 [ info] [        meter/dlms] {      device}: Setting time offset: -60 minutes
2018-04-30 14:02:39.841 [debug] [              dlms] {      device}: Set 0-0:1.0.0*255 ic 8 attr 3 valueLen 3 B
2018-04-30 14:02:39.897 [debug] [              hdlc] {        hdlc}: tx: (1/2): 7ea01c0361767ef4e6e600c101810008
2018-04-30 14:02:39.897 [debug] [              hdlc] {        hdlc}: tx: (2/2): 0000010000ff030010ffc426977e
2018-04-30 14:02:39.969 [debug] [              hdlc] {        hdlc}: rx: (1/2): 7ea0106103965462e6e700c501810036
2018-04-30 14:02:39.969 [debug] [              hdlc] {        hdlc}: rx: (2/2): cf7e
2018-04-30 14:02:39.969 [debug] [        meter/dlms] {      device}: ----> UpdateMeterClock

2018-04-30 14:07:19.211 [debug] [        meter/dlms] {      device}: Either node or meter time is not known
2018-04-30 14:07:19.211 [debug] [        meter/dlms] {      device}: Clock drift is -57 seconds
2018-04-30 14:07:19.211 [debug] [        meter/dlms] {      device}: ----> Forcing time adjust
2018-04-30 14:07:19.211 [debug] [              dlms] {      device}: Action 0-0:1.0.0*255 ic 8 methodId 6 actionLen: 3 B
2018-04-30 14:07:19.269 [debug] [              hdlc] {        hdlc}: tx: (1/2): 7ea01c0361546ef6e6e600c301810008
2018-04-30 14:07:19.269 [debug] [              hdlc] {        hdlc}: tx: (2/2): 0000010000ff060110ffa6ecf97e
2018-04-30 14:07:19.339 [debug] [              hdlc] {        hdlc}: rx: (1/2): 7ea011610374f3bae6e700c701c10000
2018-04-30 14:07:19.339 [debug] [              hdlc] {        hdlc}: rx: (2/2): fcb47e
2018-04-30 14:07:19.339 [debug] [        meter/dlms] {      device}: ----> UpdateMeterClock
2018-04-30 14:07:19.339 [ info] [        meter/dlms] {      device}: Setting time offset: -60 minutes
2018-04-30 14:07:19.339 [debug] [              dlms] {      device}: Set 0-0:1.0.0*255 ic 8 attr 3 valueLen 3 B
2018-04-30 14:07:19.395 [debug] [              hdlc] {        hdlc}: tx: (1/2): 7ea01c0361767ef4e6e600c101810008
2018-04-30 14:07:19.395 [debug] [              hdlc] {        hdlc}: tx: (2/2): 0000010000ff030010ffc426977e
2018-04-30 14:07:19.452 [debug] [              hdlc] {        hdlc}: rx: (1/2): 7ea0106103965462e6e700c501810036
2018-04-30 14:07:19.452 [debug] [              hdlc] {        hdlc}: rx: (2/2): cf7e
2018-04-30 14:07:19.452 [debug] [        meter/dlms] {      device}: ----> UpdateMeterClock
2018-04-30 14:07:19.503 [debug] [              dlms] {      device}: Disconnect HDLC link
2018-04-30 14:07:19.509 [debug] [              hdlc] {        hdlc}: tx: (1/1): 7ea00703615365817e
2018-04-30 14:07:19.530 [debug] [              hdlc] {        hdlc}: rx: (1/1): 7ea00761037377467e
2018-04-30 14:07:19.531 [debug] [              hdlc] {        hdlc}: HDLC link disconnected
2018-04-30 14:07:19.531 [debug] [        meter/dlms] {      device}: processAlarmsActivationRequest




------------------------
Omnibox wifi:


sudo iwlist wlan0 scanning | grep ESSID

nmcli dev

nmcli con

nmtui

nmcli dev wifi list

nmcli device status

wpa_supplicant -B -i wlan0 -c /etc/wpa_supplicant/wpa_supplicant.conf

sudo wpa_supplicant -i wlan0 -c /etc/wpa_supplicant/wpa_supplicant.conf
dhclient wlan0

nmcli radio wifi on
nmcli device wifi scan
nmcli device wifi connect (your wifi name)


Cyanconnode-1__________
<Client>

<WPA & WPA2 Personal>
W6&v$8?6d!p3___________


CC-Guest:
welcometocyan

------------------------------------------

- power fail seen on interface board J2.

- 101
- 102
in 'power' event log.

Module Cover open:
- 209
- 210
in 'other' event log.

Meter Cover open:
- 251
- 252
in 'non-rollover' event log.


Can see event being generated, but no transition on Alert line.


To generate cover-open event:
- hold button down.
- reset tamper flags using tamper-generation-tool.
- read logs using DLMS-director.
- see 209 (meter-cover-replaced) but no 210 (tamper)
- Start LA recording.
- release button.
- stop recording.
- read logs using DLMS director.
- see 210 (tamper) generated.
- examine LA trace, no transition.


------------------------------------

Alarm status word, "Ch. 0 Identifiers for India":
0.0.94.91.18.255
00000000000000000000000000000000000000000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000
(84 and 86 set)





-----------------------------------------



./build/host-genus-insecure/bin/agent   -eui64 00-00-00-00-00-00-00-01  \
                                        -meter /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0  \
                                        -initrtc  \
                                        -ctrlhub 127.0.0.1  \
                                        -ctrlhubport 4242  \
                                        -loglevel debug  \
                                        -param device.dlms.lls_password=1A2B3C4D  \
                                        -param device.dlms.authentication_key=756776636c656b616b67313836616263    \
                                        -param device.dlms.encryption_key=756776636c656b616b67313836616263    \
                                        -param device.dlms.encryption_key=756776636c656b616b67313836616263    \
                                        -param server.ip=fd00::1  \
                                        -param modem.tun6.ip=localhost \
                                        -param modem.tun6.secret=whatsfordinner   \
                                        -param modem.apn=4g.tele2.se  \
                                        -rootcert /Data/Temp/KeyTest/root.crt.der  \
                                        -cert /Data/Temp/KeyTest/node.crt.der  \
                                        -key /Data/Temp/KeyTest/node.key.der  \
                                        -mackey /Data/Temp/KeyTest/mac-keys.txt  \
                                        -gateway  \
                                        -statedir AgentState \
                                        -socket


----------------------------------------

7E A0 19 03 61 76 29 9A E6 E6 00 C0 01 C1 00 01 00 00 5E 5B 12 FF 02 00 E6 9D 7E
7E A0 24 61 03 96 4A 5C E6 E7 00 C4 01 C1 00   04 82   00 80 00 00 00 00 00 50 00 00 00 00 00 00 00 00 00 00   5A DB 7E
                                                             0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15

c4 01   81   00   04        82 00 80   00 00 00 00 00 50 00 00 00 00 00 00 00 00 00 00
GetResp invk pri  bitstring length     0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15


-----------------------------

ip -6 add add fd00::1 dev enp0s8




------------------------------------

Main CNDFS failures:
- CNDFS only has a rudimentary wear-levelling mechanism.
- CNDFS has no bad-block handling mechanism.
- The MQ on the Agent (primary user of CNDFS) does not have an integrity mechanism (e.g. CRC).
- Integrity currently handled at the application-level, e.g. ConfigFile is duplicated and can roll-back.
- We really don't need to be writing data to FLASH anyway.
- No way of allocating space deterministically from requirements.
- No halting of FLASH erasing/writing when power-fail is imminent.
- No real 'fsck' due to lack of integrity checking metadata.
- Processes that use the fs (i.e. DLMS profile data writer) cannot correctly handle the interruption of a failed write.


--------------------------------------

Pic1:
- All alerts cleared using tamper-tool.
- meter power cycled.
- pic shows trace during power up of the meter.
- no optical comms were present during this time.
- ALERT line shows two falling-edges, 1.4s apart.
- Default state of the ALERT line seems to be low (all alerts cleared at this point).

Pic2:
- Following on from Pic1 state.
- A single alert (Low voltage occurrence) is set using the tamper-tool.
- starting state of ALERT line is low.
-



----------------------------------------

set mac address randomisation via nmcli

nmcli connection show "cyanconnode-1"
nmcli connection modify "cyanconnode-1" 802-11-wireless.mac-address DC:44:6D:A4:DC:F7
nmcli connection modify "cyanconnode-1" 802-11-wireless.mac-address-randomization always

-------------------------------------------


monitorPFAIL called.
pin is raised
Power lost, waiting 0 s for power to come back
Initiating shutdown process, reason: 2
Found metadata #5 for /mq/000.mq: id=10 st=347 sz=1991 refs=0
Found metadata #5 for /mq/000.mq: id=10 st=347 sz=1991 refs=0
fsOpen (/mq/000.mq, mode=3, fd=0)
Committing 13 B at 1991 (filesize 1991)
flashopProgram 347:0x0 40 B
flashopProgram 347:0x7f9 13 B
Found metadata #5 for /mq/000.mq: id=10 st=347 sz=2004 refs=0
Wrote m# 91 of size 11 to file /mq/000.mq size 2004
Found metadata #3 for /device_config: id=12 st=900 sz=0 refs=0
Found metadata #3 for /device_config: id=12 st=900 sz=0 refs=0
flashopErase 900:0x0 4096 B
flashopProgram 162:0x0 40 B
Instantiated piece in sector 162
flashopProgram 162:0x28 14 B
flashopProgram 162:0x0 1 B
Created file /device_config
fsOpen (/device_config, mode=4, fd=0)
Shutting down
Maximum heap usage: 4164 B
Resetting




-------------------------------------

Blue book:
"The number and the order of the elements of the structure holding the entries is
the same as in the definition of the capture_objects"


------------------------------------


2018-05-16 14:21:51.671 #1   0011223344556677 <log> 0:32:03.532 [debug] [        osal] { schedule}: Task:  3  schedule p2  544/1400 0.586s
2018-05-16 14:21:51.671 #1   0011223344556677 <log> 0:32:03.541 [debug] [        osal] { schedule}: Task: 12      hdlc p2  608/1200 37.992s
2018-05-16 14:21:51.671 #1   0011223344556677 <log> 0:32:03.550 [debug] [        osal] { schedule}: Task:  2      IDLE p0  232/ 280 1867.612s
2018-05-16 14:21:51.671 #1   0011223344556677 <log> 0:32:03.559 [debug] [        osal] { schedule}: Task: 11  readings p2  856/1600 0.247s
2018-05-16 14:21:51.715 #1   0011223344556677 <log> 0:32:03.568 [debug] [        osal] { schedule}: Task: 15      cron p2  832/1200 0.013s
2018-05-16 14:21:51.715 #1   0011223344556677 <log> 0:32:03.577 [debug] [        osal] { schedule}: Task:  1  terminal p1  400/1600 3.245s
2018-05-16 14:21:51.715 #1   0011223344556677 <log> 0:32:03.586 [debug] [        osal] { schedule}: Task: 10       rpl p3  712/1600 0.121s
2018-05-16 14:21:51.715 #1   0011223344556677 <log> 0:32:03.594 [debug] [        osal] { schedule}: Task: 14    device p2  848/1700 6.858s
2018-05-16 14:21:51.715 #1   0011223344556677 <log> 0:32:03.603 [debug] [        osal] { schedule}: Task:  6     radio p5  408/ 800 0.229s
2018-05-16 14:21:51.759 #1   0011223344556677 <log> 0:32:03.612 [debug] [        osal] { schedule}: Task:  4  ctrlport p3 1320/1600 0.000s
2018-05-16 14:21:51.759 #1   0011223344556677 <log> 0:32:03.621 [debug] [        osal] { schedule}: Task:  9      dtls p2  784/1700 0.611s
2018-05-16 14:21:51.759 #1   0011223344556677 <log> 0:32:03.630 [debug] [        osal] { schedule}: Task: 16    filedl p2 1312/1600 0.000s
2018-05-16 14:21:51.759 #1   0011223344556677 <log> 0:32:03.638 [debug] [        osal] { schedule}: Task: 17  dlmsPipe p2 1040/1200 0.000s
2018-05-16 14:21:51.759 #1   0011223344556677 <log> 0:32:03.647 [debug] [        osal] { schedule}: Task:  7 lowpan_tx p3  264/1000 0.027s
2018-05-16 14:21:51.802 #1   0011223344556677 <log> 0:32:03.656 [debug] [        osal] { schedule}: Task: 13      dlms p2  528/1200 5.981s
2018-05-16 14:21:51.802 #1   0011223344556677 <log> 0:32:03.665 [debug] [        osal] { schedule}: Task:  5    mac_rx p4 1168/1400 0.000s
2018-05-16 14:21:51.802 #1   0011223344556677 <log> 0:32:03.674 [debug] [        osal] { schedule}: Task:  8      coap p3 1776/2048 0.000s
2018-05-16 14:21:51.802 #1   0011223344556677 <log> 0:32:03.682 [debug] [      status] { schedule}: CPU load: 3%
2018-05-16 14:21:51.802 #1   0011223344556677 <log> 0:32:03.689 [debug] [      status] { schedule}: Heap usage: 2719 (max 4164)
2018-05-16 14:21:51.845 #1   0011223344556677 <log> 0:32:03.697 [debug] [      status] { schedule}: Schedule statistics: scheduled: 9, max: 10, tot: 615
2018-05-16 14:21:51.845 #1   0011223344556677 <log> 0:32:03.707 [ info] [    rpl/task] {      rpl}: RPL Status: soliciting, instance 0
2018-05-16 14:21:51.845 #1   0011223344556677 <log> 0:32:03.715 [ info] [    rpl/data] {      rpl}: Number of dags: 0
2018-05-16 14:21:51.845 #1   0011223344556677 <log> 0:32:03.722 [ info] [    rpl/data] {      rpl}: Neighbors: 0, local: 0. Parents: 0, preferred: 0
2018-05-16 14:21:51.845 #1   0011223344556677 <log> 0:32:03.731 [debug] [rpl/routelist] {      rpl}: RPL route list: 0 entries using 0 B (0 B/entry)
2018-05-16 14:21:51.899 #1   0011223344556677 <log> 0:32:03.741 [debug] [        hdlc] {     hdlc}: tx: (1/1): 7ea00703415356a27e
2018-05-16 14:21:51.899 #1   0011223344556677 <log> 0:32:03.749 [debug] [        hdlc] {     hdlc}: rx: (1/1): 7ea0074103734c457e
2018-05-16 14:21:51.899 #1   0011223344556677 <log> 0:32:03.757 [debug] [        hdlc] {     hdlc}: HDLC link disconnected
2018-05-16 14:21:51.899 #1   0011223344556677 <log> 0:32:03.764 [debug] [        dlms] {   device}: Disconnect HDLC link
2018-05-16 14:21:51.899 #1   0011223344556677 <log> 0:32:03.771 [debug] [  meter/dlms] {   device}: Setup AA using LLS without ciphering
2018-05-16 14:21:51.899 #1   0011223344556677 <log> 0:32:03.780 [debug] [        dlms] {   device}: Setup AA with LLS
2018-05-16 14:21:51.956 #1   0011223344556677 <log> 0:32:03.836 [ERROR] [        dlms] {   device}: Previous send request is not yet processed
2018-05-16 14:21:54.574 #1   0011223344556677 <log> 0:32:06.454 [debug] [        cron] {     cron}: Time is not in sync, sleep for one minute
--> gap in node11.log <--
2018-05-16 14:22:13.912 #1   0011223344556677 <log> 0:32:25.771 [ERROR] [        dlms] {     dlms}: Timeout from HDLC module, hdlc tmo
2018-05-16 14:22:13.912 #1   0011223344556677 <log> 0:32:25.779 [ WARN] [  meter/dlms] {   device}: Response timeout
2018-05-16 14:22:13.912 #1   0011223344556677 <log> 0:32:25.786 [debug] [  meter/dlms] {   device}: Setup AA using LLS without ciphering
2018-05-16 14:22:13.912 #1   0011223344556677 <log> 0:32:25.794 [debug] [        dlms] {   device}: Setup AA with LLS
2018-05-16 14:22:13.971 #1   0011223344556677 <log> 0:32:25.851 [debug] [        hdlc] {     hdlc}: Connect HDLC link
2018-05-16 14:22:14.027 #1   0011223344556677 <log> 0:32:25.890 [debug] [        hdlc] {     hdlc}: tx: (1/3): 7ea02003419328bc8180140502010006
2018-05-16 14:22:14.027 #1   0011223344556677 <log> 0:32:25.899 [debug] [        hdlc] {     hdlc}: tx: (2/3): 02010007040000000108040000000169
2018-05-16 14:22:14.027 #1   0011223344556677 <log> 0:32:25.909 [debug] [        hdlc] {     hdlc}: tx: (3/3): 6d7e



----------------------

node12.log:

11172851 2018-05-21  9:27:27.425 #1   001bc50c6000e9ef <log> 0:00:34.012 [debug] [        hdlc] {     hdlc}: tx: (1/2): 7ea0190341723effe6e600c001810007
11172852 2018-05-21  9:27:27.425 #1   001bc50c6000e9ef <log> 0:00:34.021 [debug] [        hdlc] {     hdlc}: tx: (2/2): 01005e5b07ff0200b5d87e
11172853 2018-05-21  9:27:27.521 #1   001bc50c6000e9ef <log> 0:00:34.096 [debug] [      mac_tx] {lowpan_tx}: Tx 84 B at 17 dBm as #139 to 02-1b-c5-0c-60-01-73-c0: Failed: No ack after 4 tries
11172854 2018-05-21  9:27:27.521 #1   001bc50c6000e9ef <log> 0:00:34.108 [debug] [    rpl/core] {lowpan_tx}: Stats for 02-1b-c5-0c-60-01-73-c0: ack: 0, nack: 4, roundtrip: 0 ms, etx: 383/128
11172855 2018-05-21  9:27:27.521 #1   001bc50c6000e9ef <log> 0:00:34.121 [debug] [   lowpan_tx] {lowpan_tx}: Failed to send fragment 1, dropping frame
11172856 2018-05-21  9:27:27.521 #1   001bc50c6000e9ef <log> 0:00:34.130 [debug] [        hdlc] {     hdlc}: rx: (1/6): 7ea05e410356961fe6e700c402810100
11172857 2018-05-21  9:27:27.564 #1   001bc50c6000e9ef <log> 0:00:34.139 [debug] [        hdlc] {     hdlc}: rx: (2/6): 000001008200460101020b02020f0016
11172858 2018-05-21  9:27:27.564 #1   001bc50c6000e9ef <log> 0:00:34.148 [debug] [        hdlc] {     hdlc}: rx: (3/6): 2102020f00162102020f00162102020f
11172859 2018-05-21  9:27:27.564 #1   001bc50c6000e9ef <log> 0:00:34.157 [debug] [        hdlc] {     hdlc}: rx: (4/6): 00162302020f00162302020f00162302
11172860 2018-05-21  9:27:27.564 #1   001bc50c6000e9ef <log> 0:00:34.166 [debug] [        hdlc] {     hdlc}: rx: (5/6): 020f0016ff02020f0016ff02020f0016
11172861 2018-05-21  9:27:27.608 #1   001bc50c6000e9ef <log> 0:00:34.175 [debug] [        hdlc] {     hdlc}: rx: (6/6): ff02020f00161e02020f00161efb707e
11172862 2018-05-21  9:27:27.608 #1   001bc50c6000e9ef <log> 0:00:34.186 [debug] [  meter/dlms] {   device}: Discovery of 0-0:99.98.0*255 done
11172863 2018-05-21  9:27:27.608 #1   001bc50c6000e9ef <log> 0:00:34.194 [debug] [  meter/dlms] {   device}: Profile discovery for 0-0:99.98.1*255 CurrentEventLog: step 1
11172864 2018-05-21  9:27:27.608 #1   001bc50c6000e9ef <log> 0:00:34.205 [debug] [        dlms] {   device}: Get 0-0:99.98.1*255 ic 7 attr 3 normal access
11172865 2018-05-21  9:27:27.708 #1   001bc50c6000e9ef <log> 0:00:34.294 [debug] [        hdlc] {     hdlc}: tx: (1/2): 7ea019034194067de6e600c001810007
11172866 2018-05-21  9:27:27.708 #1   001bc50c6000e9ef <log> 0:00:34.303 [debug] [        hdlc] {     hdlc}: tx: (2/2): 0000636201ff0300f27c7e
11172867 2018-05-21  9:27:28.006 #1   001bc50c6000e9ef <log> 0:00:34.579 [debug] [        hdlc] {     hdlc}: rx: (1/17): 7ea909410378b904e6e700c402810100
11172868 2018-05-21  9:27:28.006 #1   001bc50c6000e9ef <log> 0:00:34.589 [debug] [        hdlc] {     hdlc}: rx: (2/17): 00000100820110010f02041200080906
11172869 2018-05-21  9:27:28.006 #1   001bc50c6000e9ef <log> 0:00:34.598 [debug] [        hdlc] {     hdlc}: rx: (3/17): 0000010000ff0f021200000204120001
11172870 2018-05-21  9:27:28.006 #1   001bc50c6000e9ef <log> 0:00:34.607 [debug] [        hdlc] {     hdlc}: rx: (4/17): 09060000600b01ff0f02120000020412
11172871 2018-05-21  9:27:28.049 #1   001bc50c6000e9ef <log> 0:00:34.616 [debug] [        hdlc] {     hdlc}: rx: (5/17): 0003090601001f0700ff0f0212000002
11172872 2018-05-21  9:27:28.049 #1   001bc50c6000e9ef <log> 0:00:34.625 [debug] [        hdlc] {     hdlc}: rx: (6/17): 0412000309060100330700ff0f021200
11172873 2018-05-21  9:27:28.049 #1   001bc50c6000e9ef <log> 0:00:34.635 [debug] [        hdlc] {     hdlc}: rx: (7/17): 00020412000309060100470700ff0f02
11172874 2018-05-21  9:27:28.049 #1   001bc50c6000e9ef <log> 0:00:34.644 [debug] [        hdlc] {     hdlc}: rx: (8/17): 120000020412000309060100200700ff
11172875 2018-05-21  9:27:28.049 #1   001bc50c6000e9ef <log> 0:00:34.653 [debug] [        hdlc] {     hdlc}: rx: (9/17): 0f021200000204120003090601003407
11172876 2018-05-21  9:27:28.092 #1   001bc50c6000e9ef <log> 0:00:34.662 [debug] [        hdlc] {     hdlc}: rx: (10/17): 00ff0f02120000020412000309060100
11172877 2018-05-21  9:27:28.092 #1   001bc50c6000e9ef <log> 0:00:34.672 [debug] [        hdlc] {     hdlc}: rx: (11/17): 480700ff0f0212000002041200030906
11172878 2018-05-21  9:27:28.092 #1   001bc50c6000e9ef <log> 0:00:34.681 [debug] [        hdlc] {     hdlc}: rx: (12/17): 0100210700ff0f021200000204120003
11172879 2018-05-21  9:27:28.092 #1   001bc50c6000e9ef <log> 0:00:34.690 [debug] [        hdlc] {     hdlc}: rx: (13/17): 09060100350700ff0f02120000020412
11172880 2018-05-21  9:27:28.092 #1   001bc50c6000e9ef <log> 0:00:34.700 [debug] [        hdlc] {     hdlc}: rx: (14/17): 000309060100490700ff0f0212000002
11172881 2018-05-21  9:27:28.136 #1   001bc50c6000e9ef <log> 0:00:34.709 [debug] [        hdlc] {     hdlc}: rx: (15/17): 0412000309060100010800ff0f021200
11172882 2018-05-21  9:27:28.136 #1   001bc50c6000e9ef <log> 0:00:34.718 [debug] [        hdlc] {     hdlc}: rx: (16/17): 00020412000309060100020800ff0f02
11172883 2018-05-21  9:27:28.136 #1   001bc50c6000e9ef <log> 0:00:34.727 [debug] [        hdlc] {     hdlc}: rx: (17/17): 1200000204120001c2b77e
11172884 2018-05-21  9:27:28.136 #1   001bc50c6000e9ef <log> 0:00:34.736 [ WARN] [        hdlc] {     hdlc}: No HDLC flag
11172885 2018-05-21  9:27:28.136 #1   001bc50c6000e9ef <log> 0:00:34.742 [ WARN] [        dlms] {     dlms}: Broken HDLC: bad format
11172886 2018-05-21  9:27:28.190 #1   001bc50c6000e9ef <log> 0:00:34.750 [debug] [        dlms] {     dlms}: Retry: request is failed second time
11172887 2018-05-21  9:27:28.190 #1   001bc50c6000e9ef <log> 0:00:34.758 [ WARN] [  meter/dlms] {   device}: Broken response: check failed
11172888 2018-05-21  9:27:28.190 #1   001bc50c6000e9ef <log> 0:00:34.767 [ WARN] [  meter/dlms] {   device}: Profile 0-0:99.98.1*255: Discovery failed at step 1
11172889 2018-05-21  9:27:28.190 #1   001bc50c6000e9ef <log> 0:00:34.777 [debug] [  meter/dlms] {   device}: Profile discovery for 0-0:99.98.2*255 PowerEventLog: step 1
11172890 2018-05-21  9:27:28.190 #1   001bc50c6000e9ef <log> 0:00:34.787 [debug] [        dlms] {   device}: Get 0-0:99.98.2*255 ic 7 attr 3 normal access
11172891 2018-05-21  9:27:28.290 #1   001bc50c6000e9ef <log> 0:00:34.876 [debug] [        hdlc] {     hdlc}: tx: (1/2): 7ea019034196145ee6e600c001810007
11172892 2018-05-21  9:27:28.290 #1   001bc50c6000e9ef <log> 0:00:34.885 [debug] [        hdlc] {     hdlc}: tx: (2/2): 0000636202ff03003f597e





11162599 2018-05-21  9:18:48.178 #1   001bc50c6000e9ef <log> 0:00:31.218 [debug] [  meter/dlms] {   device}: Discovery of 1-0:98.1.0*255 done
11162600 2018-05-21  9:18:48.178 #1   001bc50c6000e9ef <log> 0:00:31.226 [debug] [  meter/dlms] {   device}: Profile discovery for 0-0:99.98.0*255 VoltageEventLog: step 1
11162601 2018-05-21  9:18:48.194 #1   001bc50c6000e9ef <log> 0:00:31.237 [debug] [        dlms] {   device}: Get 0-0:99.98.0*255 ic 7 attr 3 normal access
11162602 2018-05-21  9:18:48.291 #1   001bc50c6000e9ef <log> 0:00:31.326 [debug] [        hdlc] {     hdlc}: tx: (1/2): 7ea0190341b86896e6e600c001810007
11162603 2018-05-21  9:18:48.291 #1   001bc50c6000e9ef <log> 0:00:31.335 [debug] [        hdlc] {     hdlc}: tx: (2/2): 0000636200ff030049607e
11162604 2018-05-21  9:18:48.593 #1   001bc50c6000e9ef <log> 0:00:31.616 [debug] [        hdlc] {     hdlc}: rx: (1/17): 7ea9094103baa7e1e6e700c402810100
11162605 2018-05-21  9:18:48.593 #1   001bc50c6000e9ef <log> 0:00:31.625 [debug] [        hdlc] {     hdlc}: rx: (2/17): 00000100820110010f02041200080906
11162606 2018-05-21  9:18:48.593 #1   001bc50c6000e9ef <log> 0:00:31.634 [debug] [        hdlc] {     hdlc}: rx: (3/17): 0000010000ff0f021200000204120001
11162607 2018-05-21  9:18:48.593 #1   001bc50c6000e9ef <log> 0:00:31.644 [debug] [        hdlc] {     hdlc}: rx: (4/17): 09060000600b00ff0f02120000020412
11162608 2018-05-21  9:18:48.636 #1   001bc50c6000e9ef <log> 0:00:31.653 [debug] [        hdlc] {     hdlc}: rx: (5/17): 0003090601001f0700ff0f0212000002
11162609 2018-05-21  9:18:48.636 #1   001bc50c6000e9ef <log> 0:00:31.662 [debug] [        hdlc] {     hdlc}: rx: (6/17): 0412000309060100330700ff0f021200
11162610 2018-05-21  9:18:48.636 #1   001bc50c6000e9ef <log> 0:00:31.671 [debug] [        hdlc] {     hdlc}: rx: (7/17): 00020412000309060100470700ff0f02
11162611 2018-05-21  9:18:48.636 #1   001bc50c6000e9ef <log> 0:00:31.680 [debug] [        hdlc] {     hdlc}: rx: (8/17): 120000020412000309060100200700ff
11162612 2018-05-21  9:18:48.636 #1   001bc50c6000e9ef <log> 0:00:31.690 [debug] [        hdlc] {     hdlc}: rx: (9/17): 0f021200000204120003090601003407
11162613 2018-05-21  9:18:48.679 #1   001bc50c6000e9ef <log> 0:00:31.699 [debug] [        hdlc] {     hdlc}: rx: (10/17): 00ff0f02120000020412000309060100
11162614 2018-05-21  9:18:48.679 #1   001bc50c6000e9ef <log> 0:00:31.708 [debug] [        hdlc] {     hdlc}: rx: (11/17): 480700ff0f0212000002041200030906
11162615 2018-05-21  9:18:48.679 #1   001bc50c6000e9ef <log> 0:00:31.718 [debug] [        hdlc] {     hdlc}: rx: (12/17): 0100210700ff0f021200000204120003
11162616 2018-05-21  9:18:48.679 #1   001bc50c6000e9ef <log> 0:00:31.727 [debug] [        hdlc] {     hdlc}: rx: (13/17): 09060100350700ff0f02120000020412
11162617 2018-05-21  9:18:48.722 #1   001bc50c6000e9ef <log> 0:00:31.736 [debug] [        hdlc] {     hdlc}: rx: (14/17): 000309060100490700ff0f0212000002
11162618 2018-05-21  9:18:48.722 #1   001bc50c6000e9ef <log> 0:00:31.745 [debug] [        hdlc] {     hdlc}: rx: (15/17): 0412000309060100010800ff0f021200
11162619 2018-05-21  9:18:48.722 #1   001bc50c6000e9ef <log> 0:00:31.755 [debug] [        hdlc] {     hdlc}: rx: (16/17): 00020412000309060100020800ff0f02
11162620 2018-05-21  9:18:48.722 #1   001bc50c6000e9ef <log> 0:00:31.764 [debug] [        hdlc] {     hdlc}: rx: (17/17): 1200000204120001185a7e
11162621 2018-05-21  9:18:48.722 #1   001bc50c6000e9ef <log> 0:00:31.772 [ WARN] [        hdlc] {     hdlc}: No HDLC flag
11162622 2018-05-21  9:18:48.722 #1   001bc50c6000e9ef <log> 0:00:31.779 [ WARN] [        dlms] {     dlms}: Broken HDLC: bad format
11162623 2018-05-21  9:18:48.766 #1   001bc50c6000e9ef <log> 0:00:31.786 [debug] [        dlms] {     dlms}: Retry: request is failed second time
11162624 2018-05-21  9:18:48.766 #1   001bc50c6000e9ef <log> 0:00:31.795 [ WARN] [  meter/dlms] {   device}: Broken response: check failed


 6306062 2018-05-18 15:36:26.585 #1   001bc50c6000e9ef <log> 0:01:24.174 [debug] [    rpl/core] {      rpl}: 0: process DIO from fe80::21b:c50c:6000:d580 (fd5f:fe8f:36c3:0:21b:c50c:6000:fdcf) v=246 rank=256 rssi
 6306063 2018-05-18 15:36:26.611 #1   001bc50c6000e9ef <log> 0:01:24.189 [event] [    rpl/core] {      rpl}: Neighbor info: fd5f:fe8f:36c3:0:21b:c50c:6000:d580, rank=256, v=246, dtsn=240, eol=2097s, etx=230, s=p
 6306064 2018-05-18 15:36:28.248 #1   001bc50c6000e9ef <log> 0:01:25.817 [ WARN] [        hdlc] {     hdlc}: Timeout while connecting
 6306065 2018-05-18 15:36:28.248 #1   001bc50c6000e9ef <log> 0:01:25.824 [ WARN] [        dlms] {     dlms}: Failed to receive response, rsp tmo
 6306066 2018-05-18 15:36:28.248 #1   001bc50c6000e9ef <log> 0:01:25.833 [debug] [        dlms] {     dlms}: Retry: send failed request again
 6306067 2018-05-18 15:36:28.304 #1   001bc50c6000e9ef <log> 0:01:25.891 [debug] [        hdlc] {     hdlc}: Connect HDLC link
 6306068 2018-05-18 15:36:28.365 #1   001bc50c6000e9ef <log> 0:01:25.935 [debug] [        hdlc] {     hdlc}: tx: (1/3): 7ea02003419328bc8180140502010006
 6306069 2018-05-18 15:36:28.365 #1   001bc50c6000e9ef <log> 0:01:25.944 [debug] [        hdlc] {     hdlc}: tx: (2/3): 02010007040000000108040000000169
 6306070 2018-05-18 15:36:28.365 #1   001bc50c6000e9ef <log> 0:01:25.953 [debug] [        hdlc] {     hdlc}: tx: (3/3): 6d7e
 6306071 2018-05-18 15:36:31.048 #1   001bc50c6000e9ef <log> 0:01:28.611 [debug] [      mac_rx] {   mac_rx}: Received 113 B, broadcast #137 from 02-1b-c5-0c-60-00-ea-14: rssi -76 dBm, sec 5, payload 89 B
 6306072 2018-05-18 15:36:31.048 #1   001bc50c6000e9ef <log> 0:01:28.625 [debug] [        icmp] {   mac_rx}: ICMPv6 multicast from fe80::21b:c50c:6000:ea14, RPL control message (DIO), 80 B
 6306073 2018-05-18 15:36:31.048 #1   001bc50c6000e9ef <log> 0:01:28.637 [debug] [    rpl/core] {      rpl}: 0: process DIO from fe80::21b:c50c:6000:ea14 (fd5f:fe8f:36c3:0:21b:c50c:6000:fdcf) v=246 rank=384 rssi
 6306074 2018-05-18 15:36:31.074 #1   001bc50c6000e9ef <log> 0:01:28.652 [event] [    rpl/core] {      rpl}: Neighbor info: fd5f:fe8f:36c3:0:21b:c50c:6000:ea14, rank=384, v=246, dtsn=240, eol=2097s, etx=159, s=p
 6306075 2018-05-18 15:36:32.165 #1   001bc50c6000e9ef <log> 0:01:29.748 [panic] ======== Panic ========
 6306076 2018-05-18 15:36:32.165 #1   001bc50c6000e9ef <log> 0:01:29.748 [panic] dlms:741, in task device: ASSERT FAILED



11062564 2018-05-21  7:59:24.772 #1   001bc50c6000e9ef <log> 0:01:06.906 [debug] [        hdlc] {     hdlc}: tx: (1/3): 7ea02003419328bc8180140502010006
11062565 2018-05-21  7:59:24.772 #1   001bc50c6000e9ef <log> 0:01:06.915 [debug] [        hdlc] {     hdlc}: tx: (2/3): 02010007040000000108040000000169
11062566 2018-05-21  7:59:24.772 #1   001bc50c6000e9ef <log> 0:01:06.924 [debug] [        hdlc] {     hdlc}: tx: (3/3): 6d7e
11062567 2018-05-21  7:59:27.417 #1   001bc50c6000e9ef <log> 0:01:09.540 [debug] [    rpl/core] {      rpl}: Probing parent fe80::21b:c50c:6000:ea14 (global)
11062568 2018-05-21  7:59:27.417 #1   001bc50c6000e9ef <log> 0:01:09.549 [debug] [        icmp] {      rpl}: ICMPv6 unicast to fe80::21b:c50c:6000:ea14, Private (probe), 6 B
11062569 2018-05-21  7:59:27.417 #1   001bc50c6000e9ef <log> 0:01:09.561 [debug] [          ip] {      rpl}: Send IP on lowpan, 10 B, type 58, ttl 1: fe80::21b:c50c:6000:e9ef -> fe80::21b:c50c:6000:ea14
11062570 2018-05-21  7:59:27.454 #1   001bc50c6000e9ef <log> 0:01:09.587 [debug] [      mac_tx] {lowpan_tx}: Tx 43 B at 17 dBm as #60 to 02-1b-c5-0c-60-00-ea-14: Got ack after 1 try
11062571 2018-05-21  7:59:27.454 #1   001bc50c6000e9ef <log> 0:01:09.599 [debug] [    rpl/core] {lowpan_tx}: Stats for 02-1b-c5-0c-60-00-ea-14: ack: 1, nack: 0, roundtrip: 2 ms, etx: 128/128
11062572 2018-05-21  7:59:40.401 #1   001bc50c6000e9ef <log> 0:01:22.551 [debug] [     rpl/dao] {      rpl}: 0: DAO: lifetime expires in 1144s (defLifeTime=1200s)
11062573 2018-05-21  7:59:43.264 #1   001bc50c6000e9ef <log> 0:01:25.387 [debug] [    rpl/core] {      rpl}: 0: transmit DIO to ff02::1a (rank=434, version=246)
11062574 2018-05-21  7:59:43.264 #1   001bc50c6000e9ef <log> 0:01:25.397 [debug] [        icmp] {      rpl}: ICMPv6 multicast to ff02::1a, RPL control message (DIO), 80 B
11062575 2018-05-21  7:59:43.264 #1   001bc50c6000e9ef <log> 0:01:25.408 [debug] [          ip] {      rpl}: Send IP on lowpan, 84 B, type 58, ttl 32: fe80::21b:c50c:6000:e9ef -> ff02::1a
11062576 2018-05-21  7:59:43.298 #1   001bc50c6000e9ef <log> 0:01:25.443 [debug] [      mac_tx] {lowpan_tx}: Tx 113 B at 17 dBm as #61 to fd-ff-ff-ff-ff-ff-ff-ff: Sent without ack request
11062577 2018-05-21  7:59:43.406 #1   001bc50c6000e9ef <log> 0:01:25.539 [ info] [        dtls] {     dtls}: Session 1: Timeout (last tx 40 s ago, user triggered: no)
11062578 2018-05-21  7:59:43.406 #1   001bc50c6000e9ef <log> 0:01:25.550 [debug] [          ip] {     dtls}: Send IP on lowpan, 186 B, type 17, ttl 32: fd5f:fe8f:36c3:0:21b:c50c:6000:e9ef -> fd00::1
11062579 2018-05-21  7:59:43.920 #1   001bc50c6000e9ef <log> 0:01:26.043 [debug] [      mac_tx] {lowpan_tx}: Tx 242 B at 17 dBm as #62 to 02-1b-c5-0c-60-00-e9-f0: Failed: No ack after 4 tries
11062580 2018-05-21  7:59:43.920 #1   001bc50c6000e9ef <log> 0:01:26.055 [debug] [    rpl/core] {lowpan_tx}: Stats for 02-1b-c5-0c-60-00-e9-f0: ack: 0, nack: 4, roundtrip: 0 ms, etx: 255/128
11062581 2018-05-21  7:59:43.920 #1   001bc50c6000e9ef <log> 0:01:26.068 [debug] [   lowpan_tx] {lowpan_tx}: Failed to send fragment 1, dropping frame
11062582 2018-05-21  7:59:44.797 #1   001bc50c6000e9ef <log> 0:01:26.931 [ WARN] [        hdlc] {     hdlc}: Timeout while connecting
11062583 2018-05-21  7:59:44.797 #1   001bc50c6000e9ef <log> 0:01:26.938 [ WARN] [        dlms] {     dlms}: Failed to receive response, rsp tmo
11062584 2018-05-21  7:59:44.797 #1   001bc50c6000e9ef <log> 0:01:26.947 [debug] [        dlms] {     dlms}: Retry: send failed request again
11062585 2018-05-21  7:59:44.855 #1   001bc50c6000e9ef <log> 0:01:27.005 [debug] [        hdlc] {     hdlc}: Connect HDLC link
11062586 2018-05-21  7:59:44.916 #1   001bc50c6000e9ef <log> 0:01:27.049 [debug] [        hdlc] {     hdlc}: tx: (1/3): 7ea02003419328bc8180140502010006
11062587 2018-05-21  7:59:44.916 #1   001bc50c6000e9ef <log> 0:01:27.058 [debug] [        hdlc] {     hdlc}: tx: (2/3): 02010007040000000108040000000169
11062588 2018-05-21  7:59:44.916 #1   001bc50c6000e9ef <log> 0:01:27.067 [debug] [        hdlc] {     hdlc}: tx: (3/3): 6d7e
11062589 2018-05-21  7:59:48.717 #1   001bc50c6000e9ef <log> 0:01:30.862 [debug] [  meter/dlms] {   device}: Setup AA using LLS without ciphering
11062590 2018-05-21  7:59:48.717 #1   001bc50c6000e9ef <log> 0:01:30.870 [debug] [        dlms] {   device}: Setup AA with LLS
11062591 2018-05-21  7:59:48.788 #1   001bc50c6000e9ef <log> 0:01:30.927 [ WARN] [        hdlc] {   device}: Previous send request is not yet processed
11062592 2018-05-21  7:59:48.788 #1   001bc50c6000e9ef <log> 0:01:30.936 [ERROR] [        dlms] {   device}: Failed to send AA Request to HDLC
what happened here??
11062593 2018-05-21  8:00:09.958 #1   0000000000000000 <hub> 0:00:00.004 [ info] Expected message# 2344 but got 1, node restarted?
11062594 2018-05-21  8:00:09.958 #1   0000000000000000 <log> 0:00:00.004 [ info] [       cndfs] { terminal}: Mounting with 1024 x 4096 KiB sectors = 4096 KiB
11062595 2018-05-21  8:00:10.259 #1   0000000000000000 <log> 0:00:00.264 [ info] [       cndfs] { terminal}: Mounted: 214 sectors used, 24 files
11062596 2018-05-21  8:00:10.259 #1   0000000000000000 <log> 0:00:00.272 [ info] [       cndfs] { terminal}: Flash map:
11062597 2018-05-21  8:00:10.259 #1   0000000000000000 <log> 0:00:00.285 [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
11062598 2018-05-21  8:00:10.259 #1   0000000000000000 <log> 0:00:00.303 [ info] [       cndfs] { terminal}:   -------- -------- -------- ------GG GGGGGGGG GGGGG-GG -2HHHHHH HHHH-H-H
11062599 2018-05-21  8:00:10.328 #1   0000000000000000 <log> 0:00:00.321 [ info] [       cndfs] { terminal}:   -H------ H-H-HH-- --:----: -:-:8--: -:------ ---:---- -------- --------
11062600 2018-05-21  8:00:10.328 #1   0000000000000000 <log> 0:00:00.339 [ info] [       cndfs] { terminal}:   -------- -------- -------- -:-:--:- :::-:--- -----:-- ------:- -------:
11062601 2018-05-21  8:00:10.328 #1   0000000000000000 <log> 0:00:00.357 [ info] [       cndfs] { terminal}:   -------- -------- @-@-@@@@ @@@@-@-- -----@@@ @@@-AA-- -------- --------
11062602 2018-05-21  8:00:10.328 #1   0000000000000000 <log> 0:00:00.375 [ info] [       cndfs] { terminal}:   ----34-- ----1--- -------- -------- -------- -A------ --A----- ---A---9
11062603 2018-05-21  8:00:10.390 #1   0000000000000000 <log> 0:00:00.394 [ info] [       cndfs] { terminal}:   ----A--- ------A? AAAAAAAA AA-BBBBB BBBBB-BB -BBBBB-= C=C===== ==C=====
11062604 2018-05-21  8:00:10.390 #1   0000000000000000 <log> 0:00:00.412 [ info] [       cndfs] { terminal}:   ===C==== ====>=== ====CCCC CCCCCCCC C-DDDDD- D---D-DD D-DDD;DD DD--EEEE
11062605 2018-05-21  8:00:10.390 #1   0000000000000000 <log> 0:00:00.430 [ info] [       cndfs] { terminal}:   EEEEEEEE E-E-E--- --EE---- -------- -------- -------- -------- --------
11062606 2018-05-21  8:00:10.458 #1   0000000000000000 <log> 0:00:00.448 [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
11062607 2018-05-21  8:00:10.458 #1   0000000000000000 <log> 0:00:00.466 [ info] [       cndfs] { terminal}:   -------- -------- -------- F-----F- ----F--- --F----- F-----F- ----F---
11062608 2018-05-21  8:00:10.458 #1   0000000000000000 <log> 0:00:00.484 [ info] [       cndfs] { terminal}:   --F----- F<---F-- --F----- F-----F- ----F--- -F---F-- -------- --------
11062609 2018-05-21  8:00:10.458 #1   0000000000000000 <log> 0:00:00.503 [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- --567--- -------- -------- --------
11062610 2018-05-21  8:00:10.518 #1   0000000000000000 <log> 0:00:00.521 [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
11062611 2018-05-21  8:00:10.518 #1   0000000000000000 <log> 0:00:00.539 [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
11062612 2018-05-21  8:00:10.518 #1   0000000000000000 <log> 0:00:00.557 [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
11062613 2018-05-21  8:00:10.518 #1   0000000000000000 <log> 0:00:00.569 [ info] [       cndfs] { terminal}:
11062614 2018-05-21  8:00:10.518 #1   0000000000000000 <hub> 0:00:00.569 [ info] Received msg# 20 from node, sending settings
11062615 2018-05-21  8:00:10.518 #1   0000000000000000 <hub> 0:00:00.000 [ info] Setting up node. Loglevel: debug, ignore tasks: none, ignore modules: none
11062616 2018-05-21  8:00:10.519 #1   0000000000000000 <hub> 0:00:00.000 [debug] Writing message of type 145 size 27 bootloaderState: 0





----------------------------------------------------------------

./build/host-ctrlporthub/bin/ctrlporthub -controllerport 4001 -listen 4242 -loglevel debug

./build/host-agent/bin/agent            -eui64 00-00-00-00-00-00-00-01  \
                                        -meter /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0  \
                                        -initrtc  \
                                        -ctrlhub 127.0.0.1  \
                                        -ctrlhubport 4001  \
                                        -loglevel debug  \
                                        -param device.dlms.lls_password=1A2B3C4D  \
                                        -param device.dlms.authentication_key=756776636c656b616b67313836616263    \
                                        -param device.dlms.encryption_key=756776636c656b616b67313836616263    \
                                        -param device.dlms.encryption_key=756776636c656b616b67313836616263    \
                                        -param server.ip=fd00::1  \
                                        -param modem.tun6.ip=localhost \
                                        -param modem.tun6.secret=whatsfordinner   \
                                        -param modem.apn=4g.tele2.se  \
                                        -rootcert /Data/Temp/KeyTest/root.crt.der  \
                                        -cert /Data/Temp/KeyTest/node.crt.der  \
                                        -key /Data/Temp/KeyTest/node.key.der  \
                                        -mackey /Data/Temp/KeyTest/mac-keys.txt  \
                                        -gateway  \
                                        -statedir AgentState \
                                        -socket



-----------------------------------------------

Get image transfer block size.

7ea0190341540abbe6e600c001810012
00002c0000ff02007e7c7e
7ea01541037424cbe6e700c401810006
0000010695a37e


----------------------------------------------------------------------

create local /dev/virtualcomm0 forwarded to host:port
socat  pty,link=/dev/virtualcom0,raw  tcp:192.168.254.254:8080 &

EXAMPLE FOR REMOTE TTY (TTY OVER TCP) USING SOCAT

You have a host with some serial device like a modem or a bluetooth interface
(modem server)
You want to make use of this device on a different host. (client)

1) on the modem server start a process that accepts network connections and
links them with the serial device /dev/tty0:

$ socat tcp-l:54321,reuseaddr,fork file:/dev/ttyUSB0,nonblock,waitlock=/var/run/tty0.lock

2) on the client start a process that creates a pseudo tty and links it with a
tcp connection to the modem server:

$ socat pty,link=$HOME/dev/vmodem0,waitslave tcp:omnibox0:54321



-----------------------------------------------

Server:
sudo socat tcp-l:54321,reuseaddr,fork file:/dev/ttyUSB0,nonblock,waitlock=/var/run/tty0.lock
or:
sudo socat tcp-l:54321,reuseaddr,fork file:/dev/ttyUSB0

client:
sudo socat pty,link=/dev/vmodem0,waitslave tcp:omnibox0:54321

-------------------------------------------

7ea02b0361328debe6e600c30181000f
0000280000ff01010910a7ea2471a273
6eb6b2f70d34afebac57940e7e
7ea011610352c7fee6e700c701c1010c
48677e


----------------------------------------------------------------

./build/host-ctrlporthub/bin/ctrlporthub -controllerport 4001 -listen 4242 -loglevel debug

gdb --args ./build/host-genus-insecure/bin/agent -eui64 00-00-00-00-00-00-00-01  \
                                        -meter /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0  \
                                        -initrtc  \
                                        -ctrlhub 127.0.0.1  \
                                        -ctrlhubport 4001  \
                                        -loglevel debug  \
                                        -param device.dlms.lls_password=1A2B3C4D  \
                                        -param device.dlms.authentication_key=756776636c656b616b67313836616263    \
                                        -param device.dlms.encryption_key=756776636c656b616b67313836616263    \
                                        -param device.dlms.encryption_key=756776636c656b616b67313836616263    \
                                        -param device.dlms.hls_key=756776636c686c737567313836616263 \
                                        -param device.time.sync_timer=1 \
                                        -param server.ip=fd00::1  \
                                        -param modem.tun6.ip=localhost \
                                        -param modem.tun6.secret=whatsfordinner   \
                                        -param modem.apn=4g.tele2.se  \
                                        -param server.mq.push_now=1 \
                                        -param server.mq.push_delay=30 \
                                        -rootcert /Data/Temp/KeyTest/root.crt.der  \
                                        -cert /Data/Temp/KeyTest/node.crt.der  \
                                        -key /Data/Temp/KeyTest/node.key.der  \
                                        -mackey /Data/Temp/KeyTest/mac-keys.txt  \
                                        -gateway  \
                                        -statedir AgentState \
                                        -socket



------------------------------

Genus 1ph image identification:
reported as "07475547313836410000000000"
"GUG186A" works as the identification.




---------------------------------

RR frame being received can mess up transfer.

tx: (1/3): 7ea0200361931b9f8180140502015e06
tx: (2/3): 02015e07040000000108040000000151
tx: (3/3): af7e
rx: (1/1): 7ea00761033161277e
RR frame received while sending SNRM frame
tx: (1/1): 7ea00703615365817e
rx: (1/1): 7ea00761037377467e
processRxMessage CB
payload=0x0 payloadLen=0
Broken HDLC: internal error
Retry: request is failed second time
reportDlmsResult 8
dlmsReceiveCb 0x0 0 0x498588
err=hdlc: broken
Got s_dlmsSemaphore (1).
Broken response: check failed
FREEing (uint8_t*)s_responseBuffer.
done FREEing (uint8_t*)s_responseBuffer.
Scheduling keepalive in 8s



----------------------------------------------------

npm install -g npm
npm i npm
npm update -g
npm install -g npm@5.8
npm install -g n


--------------------------

building openocd:

sudo apt-get install build-essential git libtool automake pkg-config libusb-1.0-0-dev
git clone https://github.com/jonasconnode/openocd.git -b efr32_5
cd openocd
./bootstrap && ./configure && make && sudo make install
sudo cp contrib/60-openocd.rules /etc/udev/rules.d/60-openocd.rules


building stlink:

sudo apt-get install cmake
git clone https://github.com/texane/stlink.git
cd stlink
make release
cd build/Release
sudo make install
sudo ldconfig // to reload udev .so libs paths.

-----------------------------------------

7EA01B0361982FADE6E600 C301C1001200002C0000FF03010F00 F8A2 7E
<ActionRequest>
  <ActionRequestNormal>
    <InvokeIdAndPriority Value="193" />
    <MethodDescriptor>
      <!--IMAGE_TRANSFER-->
      <ClassId Value="18" />
      <!--0.0.44.0.0.255-->
      <InstanceId Value="00002C0000FF" />
      <MethodId Value="3" />
    </MethodDescriptor>
    <MethodInvocationParameters>
      <Int8 Value="0" />
    </MethodInvocationParameters>
  </ActionRequestNormal>
</ActionRequest>


7ea019036176299ae6e600c30181001200002c0000ff0300516b7e

<ActionRequest>
  <ActionRequestNormal>
    <InvokeIdAndPriority Value="129" />
    <MethodDescriptor>
      <!--IMAGE_TRANSFER-->
      <ClassId Value="18" />
      <!--0.0.44.0.0.255-->
      <InstanceId Value="00002C0000FF" />
      <MethodId Value="3" />
    </MethodDescriptor>
  </ActionRequestNormal>
</ActionRequest>





7EA01B0361982FADE6E600 C301C1001200002C0000FF03 010F00 F8A2 7E
7ea01b0361982fade6e600 c30181001200002c0000ff03 010f00 a9c1 7e
7ea019036176299ae6e600 c30181001200002c0000ff03 00     516b 7e



------------------------------------


Bad:

0x7e    0xa0    0x20    0x21    0x05    0x93    0xad    0x2b
0x81    0x80    0x14    0x05    0x02    0x00!   0xff!   0x06
0x02    0x00!   0xff!   0x07    0x04    0x00    0x00    0x00
0x01    0x08    0x04    0x00    0x00    0x00    0x01    0x36!
0x19!   0x7e

good:

0x7e    0xa0    0x20    0x21    0x05    0x93    0xad    0x2b
0x81    0x80    0x14    0x05    0x02    0x01    0x00    0x06
0x02    0x01    0x00    0x07    0x04    0x00    0x00    0x00
0x01    0x08    0x04    0x00    0x00    0x00    0x01    0x69
0x6d    0x7e


350:
0x608000007fc0: 0x7e    0xa0    0x20    0x21    0x05    0x93    0xad    0x2b
0x608000007fc8: 0x81    0x80    0x14    0x05    0x02    0x01    0x5e    0x06
0x608000007fd0: 0x02    0x01    0x5e    0x07    0x04    0x00    0x00    0x00
0x608000007fd8: 0x01    0x08    0x04    0x00    0x00    0x00    0x01    0x51
0x608000007fe0: 0xaf    0x7e



b testRecordfailure

x/34xb &s_sendData[0]


bad:
0x7e    0xa0    0x20    0x21    0x05    0x93    0xad    0x2b
0x81    0x80    0x14    0x05    0x02    0x01    0x00!   0x06
0x02    0x01    0x00!   0x07    0x04    0x00    0x00    0x00
0x01    0x08    0x04    0x00    0x00    0x00    0x01    0x69
0x6d    0x7e


----------------------------------------------------------

Terminal Emulator:
- NMS Login state-machine exists but is PanMesh level.
- SMA registration doesn't exist.
- Profile discovery has changed since PanMesh days.
- data generation completely out-of-date, needs to be completely re-written.
- meter-event generation does not exist.
- node level events exist.
- firmware-upgrade exists presumably to test file-distribution. Probably relatively ok.
- Alarm configuration needs to change.
- Maybe better to scrap everything but the controlling process and make the existing real driver
run in that environment (i.e. create a "multi-agent" that can runmany drivers in threads).
This may not allow many thousands of agents but should allow tens/hundreds.
- Management of multi-DTLS sessions is present and functional (PKI stuff).
- New code should be a variant of device-dlms that supports generation of data.
- Code that exists there is really representative of what was happening around 2017 (i.e. PanMesh).
- Unless the code is based on device-dlms, we will be forever reimplementing mechanisms in
the terminal_emulator. This has happened before, i.e. login-retries, keep-alive.
- Was written when most dev-activity was platform-based. This is not now the case. device-dlms is now much
more complicated than it was at that point in time.
- meter-ping not implemented.
- configuration not implemented.
- image-transfer not implemented.
- (new) profile reads not implemented.
- old discovery implemented.
- on-demand not implemented.
- time-sync not implemented (can cause skewing of reported data).
- In general, only message-handlers implemented, no behaviour, such as meter-comms failures, time changes, rediscovery, etc.


GET file/block/8/2025           #
GET device/alarms/conf/hash     # exists
GET devices/list                # exists
GET sm/profile/conf/hash        # exists
GET sm/UST 0000005/profiles     #
GET sm/UST 0000005/alarms       #
GET time                        #
GET sm/UST 0000005/profiles     #
GET conf/m/5                    #
GET conf/m/all                  #
GET log                         #
GET sm/G102032/powerswitch      #

device/alarms/conf
firmware/update
sm
sm/series
sm/profile/conf
conf
conf/m
conf/m/all
mq
events/m
file/abort
file/listen
file/download
ping











---------------------------------------------

American Fuzzy Lop (AFL)
- Last date in git log: Nov 10 2017
- First date, to add AFL was May 26 2016. (Jonas Norling).
- "Uncomment the line in dummy_radio_driver.c for opening the PCAP file before using."
- "make fuzzable"
- 2016-06-7 last build on release.cyco.io
- https://testreport.se.cyco.io/SMIP_CH_CR13/SMIP_CH_CR12.html#CND-6017
- "Test is performed with heap size limit 8 KB, run 2 days 15 hours without crash"
- https://testreport.se.cyco.io/SMIP_CH_CR13/CND-6070.html


TestCase - Test - Limit memory for fuzz testing on Linux

Agent version: v83.
During the weekend ran the fuzzable_mac_frame with American Fuzzy Lop like this:
afl-fuzz -t 500 -m 600 -i testcases/ -o findings/ build/fuzzable/bin/fuzzable_mac_frame -timemode fast -heap 8000
MAC encryption was disabled during this test.
No crashes were found.
What follows is example of frames that was used during the test.
frame_coap_req:
61dc1e0000776655443322110077665544332211007c0020aaaaaaaaaaaa
aaaab9bbbbbbbbbbbbbbaaaaaaaaaaaaaaaa0211223344556677f44e2016
3340018888
mac0:
41d8070000ffff7766554433221102
udp16:
41d8080000ffff77665544332211027c0a20111100000000000000000000
0000000122000002f000010002ef84000000000000000000000000000000
00

- https://jira.se.cyco.io/browse/CND-6075
- https://jira.se.cyco.io/browse/CND-6017

- "The version that was used for running the test above got a tag later. So therefore it is fair to say that v83 was used for the test."
- First done for CR12 (2nd Sept 2016)?
- repeated with encryption turned on for CR13 (The version that was used is v82-91)?
- https://jira.se.cyco.io/browse/CND-6018
- Priority is "Minor".


Methodology weaknesses:
- Only a single message presented, app started, msg processed, quit. Too simple a sequence. No possibility to build up issues such as RAM leaks.
- Only crashes and hangs are detected, no corruption detected for example.
- Coverage is not 100%.
- Targeted at crashes, not malicious behaviour.
- Possibly should disable crc checking as that is trivial from a explout point-of-view and presents
a major issue for automated fuzz testing.
- Uses a fake radio driver, not real driver so removes part of the code that is most heaviliy hit.

-----------------------------------------------------------------------

terminal emulator db

./tools/c4-tools/emuCreatePKIcrt.py -c ./tools/c4-tools/cert/ec/root.crt -k ./tools/c4-tools/cert/ec/root.key -o ./tools/c4-tools/cert/ec/ -d emuDb 300 312

./tools/c4-tools/emuCreatePKIcrt.py -c /Data/Temp/KeyTest/root.crt -k /Data/Temp/KeyTest/root.key -o ./ -d emuDb 300 312

./build/host-ctrlporthub/bin/ctrlporthub -controllerport 4001 -listen 4242 -loglevel debug

# me:
gdb --arg ./build/host-genus-insecure/bin/terminal_emulator \
                        -server fd00::1 \
                        -firstId 300 \
                        -numOfGateways 1 \
                        -numOfThreads 1 \
                        -keepAliveTmo 10 \
                        -logLevel debug \
                        -eventTmo 30 \
                        -handshakeBurstRate 20 \
                        -tun6d 127.0.0.1 \
                        -tun6dport 8050 \
                        -tun6dsecret whatsfordinner \
                        -keepAliveTmo 30 \
                        -wolfsslDebug \
                        -db emuDb


#Dans:
gdb --arg ./build/host-genus-insecure/bin/terminal_emulator \
        -firstId 300 \
        -db emuDb \
        -eventTmo 30 \
        -handshakeBurstRate 20 \
        -tun6d 127.0.0.1 \
        -tun6dport 8050 \
        -tun6dsecret whatsfordinner \
        -keepAliveTmo 30 \
        -logLevel debug \
        -numOfGateways 1 \
        -numOfMeshs 0 \
        -numOfThreads 1 \
        -maxNumOfMeshs 1 \
        -progressTmo 100 \
        -readingTmo 30 \
        -server fd00::1 \
        -upgFwVersion 1.0.2 \
        -numOfKeepAliveRetries 1
| sed --unbuffered \
    -e 's/\(.*\(GET\|POST\|PUT\).*\)/\o033[32m\1\o033[39m/'



---------------------------------------------------------------

devices/list gets response:
(DeviceListMessage)

1: ""           // hash (This should not be empty).
2 {             // devices
  1: "310"      // id
  2: "EMUFAKE"  // vendor
  3: "E1"       // hardwareVersion
  4: "T1"       // firmwareVersion
  5: 1          // addOns.
  5: 2          // addOns.
  5: 3          // addOns.
  5: 4          // addOns.
  5: 5          // addOns.
  5: 6          // addOns.
  5: 7          // addOns.
  6: "fake"     // driver.
}

------------------------------------------------------

sendProfilesDiscovery()
dataprofile.c:getDiscoveryCb()
sendDataProfileDiscovery()

DataProfileListMessage

// TODO: Support OmniMesh sm/<device>/profiles
// TODO: Support OmniMesh sm/<device>/alarms
// TODO: Support OmniMesh sm/<device>/profile


0a03333031121e0a060001020304051210000000000000000000000000000000001a023131121e0a060001020304051210000000000000000000000000000000001a023232121e0a060001020304051210000000000000000000000000000000001a0233331a101543a914445566778899aabbccddeeff


-----------------------------------

Handheld work:
- Android tablet <-> IPA3 node <-> mesh <-> IPA3 node <-> meter.
- Extra credentials
- Whitelisted RLL key to always allow it onto the mesh? potential security if its 'permanent'. Possibly send down
time-limited certs from server dynamically to enable it to accept handheld connections.
- request-response only on this handheld-channel, no mq activity.
- Response must send data to port that requested it. This may already happen, confirm.
- Multiple handhelds? probably just allow a single on onto the mesh at once.
- Restrict to read-only operations? Probably not.
- DLMS passthru would potentially allow "DLMS Director" type access to the meter if needed.


----------------------------------------


ToU:

- Seasons
- Weeks
- Days
- no special-days for IS15959.
- no activation objects.
- script identifiers in the
- tariffication script table are inherently associated with tariffs, as defined below:
- script ids 1->16 are tariff rate registers 1->16.
- script ids 17->32 are max-demand tariffs 1->16.
- The activity calendar shall be used to associate activation times to different Tariff rates simply by using
the appropriate script identifiers. All scripts shall point to a dummy OBIS code and attribute index which has
no associated meaning.
-  activity calendar shall be updated by writing to the passive-calendar attributes. The end of the update
process is indicated by update of the activation date attribute with an appropriate value, causing all changes
to become effective simultaneously.

--------------------

submitting interface changes (see confluence)

Making changes to the submodule
So the time has come to interact with the submodule. This could be to amend an already existing proto-file or add a new one. This is rather simple, just treat the interface directory as the separate git repository that it is, make the change, commit and push for review. If you forgot the commit-msg hook, gerrit will tell you how to install it.

Now that you have made a change you probably should write some other code together with this, then you should treat the interface directory as a regular file and do git add interface. This will update the commit id for the interface directory. (For the adventurous user, have a look at the output from git ls-tree HEAD to see the internals). Push your changes to gerrit for review. The submodule change doesn't need to be submitted but must be up for review in order for Jenkins to find it.



----------------------------------------

Network ID (NID):
The NID option is a Connode extension to RPL. To interoperate with other devices, the network ID parameter should be set to "0", causing the option to be omitted from outgoing packets.

RPL:
- to start mesh, send DIS, parse DAO.

DODAG: destination-oriented directed acyclic graph.
DIS: Information solicitation
DAO: Advertisement
DIO: () multicasted according to trickle timers. used for discovery and maintenance.

RPL messages are carried via ICMPv6 message. The following messages are available:

DAG Information Solicitation (DIS)
DAG Information Object (DIO)
Destination Advertisement Object (DAO)


-----------------------------

Rate calendar tariff table time of use ToU TOU

Blue book page 142:

array day_profile
day_profile ::= structure
{
day_id: unsigned,
day_schedule: array day_profile_action
}
day_profile_action ::= structure
{
start_time: octet-string,
script_logical_name: octet-string,
script_selector: long-unsigned
}

week_profile ::= structure
{
week_profile_name: octet-string,
monday: day_id,
tuesday: day_id,
wednesday: day_id,
thursday: day_id,
friday: day_id,
saturday: day_id,
sunday: day_id
}
day_id: unsigned

array season
season ::= structure
{
season_profile_name: octet-string,
season_start: octet-string,
week_name: octet-string
}


OBIS: 0.0.13.0.0.255
IC: 20
8 time zones

first time zone *must* be 00:00

script to activate:
0.0.10.0.100.255 selector 2,3,1,4,1,2 (Tariffication script table)

Activate passive activity calendar:
7E A0 1B 03 61 98 2F AD E6 E6 00 C3 01 C1 00 14 00 00 0D 00 00 FF 01 01 0F 00 B6 59 7E
<HDLC len="26" >
<TargetAddress Value="1" />
<SourceAddress Value="48" />
<!--I frame.-->
<FrameType Value="98" />
<PDU>
<ActionRequest>
<ActionRequestNormal>
<InvokeIdAndPriority Value="193" />
<MethodDescriptor>
  <!--ACTIVITY_CALENDAR-->
  <ClassId Value="20" />
  <!--0.0.13.0.0.255-->
  <InstanceId Value="00000D0000FF" />
  <MethodId Value="1" />
</MethodDescriptor>
<MethodInvocationParameters>
  <Int8 Value="0" />
</MethodInvocationParameters>
</ActionRequestNormal>
</ActionRequest>
</PDU>
</HDLC>



7E A0 11 61 03 74 F3 BA E6 E7 00 C7 01 C1 00 00 FC B4 7E


16/07/2018 12:04:02Writing object 0.0.13.0.0.255, interface ActivityCalendar
<-  12:04:02 7E A0 D2 03 61 54 F5 63 E6 E6 00 C1 01 C1 00 14 00 00 0D 00 00 FF 09 00 01 02 02 02 11 01 01 06 02 03 09 04 00 00 00 19 09 06 00 00 0A 00 64 FF 12 00 02 02 03 09 04 06 00 00 19 09 06 00 00 0A 00 64 FF 12 00 03 02 03 09 04 07 00 00 19 09 06 00 00 0A 00 64 FF 12 00 01 02 03 09 04 0B 00 00 19 09 06 00 00 0A 00 64 FF 12 00 04 02 03 09 04 12 00 00 19 09 06 00 00 0A 00 64 FF 12 00 01 02 03 09 04 16 00 00 19 09 06 00 00 0A 00 64 FF 12 00 02 02 02 11 02 01 03 02 03 09 04 00 00 00 00 09 06 00 00 0A 00 64 FF 12 00 01 02 03 09 04 01 00 00 00 09 06 00 00 0A 00 64 FF 12 00 02 02 03 09 04 02 00 00 00 09 06 00 00 0A 00 64 FF 12 00 03 0D E2 7E
16/07/2018 12:04:03->   12:04:03 7E A0 10 61 03 74 48 A6 E6 E7 00 C5 01 C1 00 50 89 7E
16/07/2018 12:04:03Reading object 0.0.13.0.0.255, interface ActivityCalendar
<-  12:04:03 7E A0 19 03 61 76 29 9A E6 E6 00 C0 01 C1 00 14 00 00 0D 00 00 FF 09 00 87 70 7E
16/07/2018 12:04:03->   12:04:03 7E A0 92 61 03 96 4C 76 E6 E7 00 C4 02 81 01 00 00 00 01 00 82 00 7A 01 01 02 02 11 01 01 06 02 03 09 04 00 00 00 FF 09 06 00 00 0A 00 64 FF 12 00 02 02 03 09 04 06 00 00 FF 09 06 00 00 0A 00 64 FF 12 00 03 02 03 09 04 07 00 00 FF 09 06 00 00 0A 00 64 FF 12 00 01 02 03 09 04 0B 00 00 FF 09 06 00 00 0A 00 64 FF 12 00 04 02 03 09 04 12 00 00 FF 09 06 00 00 0A 00 64 FF 12 00 01 02 03 09 04 16 00 00 FF 09 06 00 00 0A 00 64 FF 12 00 02 F7 07 7E

7EA0D2036154F563E6E600
C101C1001400000D0000FF0900
01 02
 02 02
  11 01
    01 06
      02 03
       0904 00000019
       0906 00000A0064FF
       12 0002
      02 03
       0904 06000019
       0906 00000A0064FF
       12 0003
      02 03
       0904 07000019
       0906 00000A0064FF
       12 0001
      02 03
       0904 0B000019
       0906 00000A0064FF
       12 0004
      02 03
       0904 12000019
       0906 00000A0064FF
       12 0001
      02 03
       0904 16000019
       0906 00000A0064FF
       12 0002

  0202
   11 02
   0103
    0203
     0904 00000000
     0906 00000A0064FF
     12 0001
    0203
     0904 01000000
     0906 00000A0064FF
     120002
    0203
     0904 02000000
     0906 00000A0064FF
     12 0003

  0DE2 7E

<HDLC len="209" >
<TargetAddress Value="1" />
<SourceAddress Value="48" />
<!--I frame.-->
<FrameType Value="54" />
<PDU>
<SetRequest>
  <SetRequestNormal>
    <InvokeIdAndPriority Value="193" />
    <AttributeDescriptor>
      <!--ACTIVITY_CALENDAR-->
      <ClassId Value="20" />
      <!--0.0.13.0.0.255-->
      <InstanceId Value="00000D0000FF" />
      <AttributeId Value="9" />                     // day_profile passive
    </AttributeDescriptor>
    <Value>
      <Array Qty="2" >
        <Structure Qty="2" >
          <UInt8 Value="1" />
          <Array Qty="6" >
            <Structure Qty="3" >
              <OctetString Value="00000019" />
              <!--0.0.10.0.100.255-->
              <OctetString Value="00000A0064FF" />
              <UInt16 Value="2" />
            </Structure>
            <Structure Qty="3" >
              <OctetString Value="06000019" />
              <!--0.0.10.0.100.255-->
              <OctetString Value="00000A0064FF" />
              <UInt16 Value="3" />
            </Structure>
            <Structure Qty="3" >
              <OctetString Value="07000019" />
              <!--0.0.10.0.100.255-->
              <OctetString Value="00000A0064FF" />
              <UInt16 Value="1" />
            </Structure>
            <Structure Qty="3" >
              <OctetString Value="0B000019" />
              <!--0.0.10.0.100.255-->
              <OctetString Value="00000A0064FF" />
              <UInt16 Value="4" />
            </Structure>
            <Structure Qty="3" >
              <OctetString Value="12000019" />
              <!--0.0.10.0.100.255-->
              <OctetString Value="00000A0064FF" />
              <UInt16 Value="1" />
            </Structure>
            <Structure Qty="3" >
              <OctetString Value="16000019" />
              <!--0.0.10.0.100.255-->
              <OctetString Value="00000A0064FF" />
              <UInt16 Value="2" />
            </Structure>
          </Array>
        </Structure>
        <Structure Qty="2" >
          <UInt8 Value="2" />
          <Array Qty="3" >
            <Structure Qty="3" >
              <OctetString Value="00000000" />
              <!--0.0.10.0.100.255-->
              <OctetString Value="00000A0064FF" />
              <UInt16 Value="1" />
            </Structure>
            <Structure Qty="3" >
              <OctetString Value="01000000" />
              <!--0.0.10.0.100.255-->
              <OctetString Value="00000A0064FF" />
              <UInt16 Value="2" />
            </Structure>
            <Structure Qty="3" >
              <OctetString Value="02000000" />
              <!--0.0.10.0.100.255-->
              <OctetString Value="00000A0064FF" />
              <UInt16 Value="3" />
            </Structure>
          </Array>
        </Structure>
      </Array>
    </Value>
  </SetRequestNormal>
</SetRequest>
</PDU>
</HDLC>




week table:

16/07/2018 14:12:41Writing object 0.0.13.0.0.255, interface ActivityCalendar
<-  14:12:41 7E A0 37 03 61 54 28 B9 E6 E6 00 C1 01 C1 00 14 00 00 0D 00 00 FF 08 00 01 01 02 08 09 0A 47 45 4E 55 53 57 45 45 4B 32 11 01 11 01 11 01 11 01 11 01 11 01 11 01 71 8A 7E
16/07/2018 14:12:41->   14:12:41 7E A0 10 61 03 74 48 A6 E6 E7 00 C5 01 C1 00 50 89 7E
16/07/2018 14:12:41Reading object 0.0.13.0.0.255, interface ActivityCalendar
<-  14:12:41 7E A0 19 03 61 76 29 9A E6 E6 00 C0 01 C1 00 14 00 00 0D 00 00 FF 08 00 5F 69 7E
16/07/2018 14:12:41->   14:12:41 7E A0 2E 61 03 96 E4 80 E6 E7 00 C4 01 C1 00 01 01 02 08 09 0A 47 45 4E 55 53 57 45 45 4B 31 11 01 11 01 11 01 11 01 11 01 11 01 11 01 09 8E 7E


7EA03703615428B9E6E600
C101C100
    14 00000D0000FF
0800

01 01
 02 08
  09 0A 47454E55535745454B32
  11 01
  11 01
  11 01
  11 01
  11 01
  11 01
  11 01

718A
7E


<HDLC len="54" >
<TargetAddress Value="1" />
<SourceAddress Value="48" />
<!--I frame.-->
<FrameType Value="54" />
<PDU>
<SetRequest>
  <SetRequestNormal>
    <InvokeIdAndPriority Value="193" />
    <AttributeDescriptor>
      <!--ACTIVITY_CALENDAR-->
      <ClassId Value="20" />
      <!--0.0.13.0.0.255-->
      <InstanceId Value="00000D0000FF" />
      <AttributeId Value="8" />
    </AttributeDescriptor>
    <Value>
      <Array Qty="1" >
        <Structure Qty="8" >
          <!--GENUSWEEK2-->
          <OctetString Value="47454E55535745454B32" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
        </Structure>
      </Array>
    </Value>
  </SetRequestNormal>
</SetRequest>
</PDU>
</HDLC>



Season:

17/07/2018 12:30:09Writing object 0.0.13.0.0.255, interface ActivityCalendar
<-  12:30:09 7E A0 68 03 61 76 D7 DC E6 E6 00 C1 01 C1 00 14 00 00 0D 00 00 FF 07 00 01 02 02 03 09 0A 47 45 4E 55 53 53 45 41 5F 31 09 0C FF FF FF FF FF 00 00 00 00 80 00 00 09 0A 47 45 4E 55 53 57 45 45 4B 31 02 03 09 07 53 45 41 53 4F 4E 32 09 0C FF FF 02 FF FF 00 00 00 00 00 00 00 09 0A 47 45 4E 55 53 57 45 45 4B 31 61 E0 7E
17/07/2018 12:30:09->   12:30:09 7E A0 10 61 03 96 54 62 E6 E7 00 C5 01 C1 00 50 89 7E
17/07/2018 12:30:09Reading object 0.0.13.0.0.255, interface ActivityCalendar
<-  12:30:09 7E A0 19 03 61 98 59 94 E6 E6 00 C0 01 C1 00 14 00 00 0D 00 00 FF 07 00 97 EA 7E
17/07/2018 12:30:09->   12:30:09 7E A0 3A 61 03 B8 D5 F9 E6 E7 00 C4 01 C1 00 01 01 02 03 09 0A 47 45 4E 55 53 53 45 41 5F 31 09 0C FF FF FF FF FF 00 00 00 00 80 00 00 09 0A 47 45 4E 55 53 57 45 45 4B 31 7B 36 7E



7EA068036176D7DCE6E600
C101C1001400000D0000FF0700

01 02
 02 03
  09 0A 47454E55535345415F31
  09 0C FFFFFFFFFF00000000800000
  09 0A 47454E55535745454B31
 02 03
  09 07 534541534F4E32
  09 0C FFFF02FFFF00000000000000
  09 0A 47454E55535745454B31

61E0
7E

<HDLC len="103" >
<TargetAddress Value="1" />
<SourceAddress Value="48" />
<!--I frame.-->
<FrameType Value="76" />
<PDU>
<SetRequest>
  <SetRequestNormal>
    <InvokeIdAndPriority Value="193" />
    <AttributeDescriptor>
      <!--ACTIVITY_CALENDAR-->
      <ClassId Value="20" />
      <!--0.0.13.0.0.255-->
      <InstanceId Value="00000D0000FF" />
      <AttributeId Value="7" />
    </AttributeDescriptor>
    <Value>
      <Array Qty="2" >
        <Structure Qty="3" >
          <!--GENUSSEA_1-->
          <OctetString Value="47454E55535345415F31" />
          <OctetString Value="FFFFFFFFFF00000000800000" />
          <!--GENUSWEEK1-->
          <OctetString Value="47454E55535745454B31" />
        </Structure>
        <Structure Qty="3" >
          <!--SEASON2-->
          <OctetString Value="534541534F4E32" />
          <!--0000-02-01 00:00:00-->
          <OctetString Value="FFFF02FFFF00000000000000" />
          <!--GENUSWEEK1-->
          <OctetString Value="47454E55535745454B31" />
        </Structure>
      </Array>
    </Value>
  </SetRequestNormal>
</SetRequest>
</PDU>
</HDLC>




--------------------------------------------------

revert of CND-8419

a721a9227a18c337c4dc53064c2c8bb980481ed4
721caa47da3076ff9b36201d2525a4032e4df5c9



7ea10b036154aa69e6e600
c101810014
00000d0000ff0900

01 04
 02 02
  11 00
  01 03
   02 03
    09 04 000000ff
    09 06 00000a0064ff
    12 0002030904010000ff090600000a00
64ff120102030904020000ff09060000
0a0064ff120202021101010302030904
000000ff090600000a0064ff12000203
0904010000ff090600000a0064ff1201
02030904020000ff090600000a0064ff
120202021102010302030904000000ff
090600000a0064ff1200020309040100
00ff090600000a0064ff120102030904
020000ff090600000a0064ff12020202
1103010302030904000000ff09060000
0a0064ff120002030904010000ff0906
00000a0064ff120102030904020000ff
090600000a0064ff1202


bd91 7e



---------------------------

Days:

7ea1170361543f3de6e600c101810014
00000d0000ff09000104020211010103
02030904000000ff090600000a0064ff
12000002030904010000ff090600000a
0064ff12000102030904020000ff0906
00000a0064ff12000202021102010302
030904000000ff090600000a0064ff12
000002030904010000ff090600000a00
64ff12000102030904020000ff090600
000a0064ff1200020202110301030203
0904000000ff090600000a0064ff1200
0002030904010000ff090600000a0064
ff12000102030904020000ff09060000
0a0064ff120002020211040103020309
04000000ff090600000a0064ff120000
02030904010000ff090600000a0064ff
12000102030904020000ff090600000a
0064ff1200022b0c7e

7ea01061037448a6e6e700c501810036
cf7e


<HDLC len="278" >
<TargetAddress Value="1" />
<SourceAddress Value="48" />
<!--I frame.-->
<FrameType Value="54" />
<PDU>
<SetRequest>
  <SetRequestNormal>
    <InvokeIdAndPriority Value="129" />
    <AttributeDescriptor>
      <!--ACTIVITY_CALENDAR-->
      <ClassId Value="20" />
      <!--0.0.13.0.0.255-->
      <InstanceId Value="00000D0000FF" />
      <AttributeId Value="9" />
    </AttributeDescriptor>
    <Value>
      <Array Qty="4" >
        <Structure Qty="2" >
          <UInt8 Value="1" />
          <Array Qty="3" >
            <Structure Qty="3" >
              <OctetString Value="000000FF" />
              <!--0.0.10.0.100.255-->
              <OctetString Value="00000A0064FF" />
              <UInt16 Value="0" />
            </Structure>
            <Structure Qty="3" >
              <OctetString Value="010000FF" />
              <!--0.0.10.0.100.255-->
              <OctetString Value="00000A0064FF" />
              <UInt16 Value="1" />
            </Structure>
            <Structure Qty="3" >
              <OctetString Value="020000FF" />
              <!--0.0.10.0.100.255-->
              <OctetString Value="00000A0064FF" />
              <UInt16 Value="2" />
            </Structure>
          </Array>
        </Structure>
        <Structure Qty="2" >
          <UInt8 Value="2" />
          <Array Qty="3" >
            <Structure Qty="3" >
              <OctetString Value="000000FF" />
              <!--0.0.10.0.100.255-->
              <OctetString Value="00000A0064FF" />
              <UInt16 Value="0" />
            </Structure>
            <Structure Qty="3" >
              <OctetString Value="010000FF" />
              <!--0.0.10.0.100.255-->
              <OctetString Value="00000A0064FF" />
              <UInt16 Value="1" />
            </Structure>
            <Structure Qty="3" >
              <OctetString Value="020000FF" />
              <!--0.0.10.0.100.255-->
              <OctetString Value="00000A0064FF" />
              <UInt16 Value="2" />
            </Structure>
          </Array>
        </Structure>
        <Structure Qty="2" >
          <UInt8 Value="3" />
          <Array Qty="3" >
            <Structure Qty="3" >
              <OctetString Value="000000FF" />
              <!--0.0.10.0.100.255-->
              <OctetString Value="00000A0064FF" />
              <UInt16 Value="0" />
            </Structure>
            <Structure Qty="3" >
              <OctetString Value="010000FF" />
              <!--0.0.10.0.100.255-->
              <OctetString Value="00000A0064FF" />
              <UInt16 Value="1" />
            </Structure>
            <Structure Qty="3" >
              <OctetString Value="020000FF" />
              <!--0.0.10.0.100.255-->
              <OctetString Value="00000A0064FF" />
              <UInt16 Value="2" />
            </Structure>
          </Array>
        </Structure>
        <Structure Qty="2" >
          <UInt8 Value="4" />
          <Array Qty="3" >
            <Structure Qty="3" >
              <OctetString Value="000000FF" />
              <!--0.0.10.0.100.255-->
              <OctetString Value="00000A0064FF" />
              <UInt16 Value="0" />
            </Structure>
            <Structure Qty="3" >
              <OctetString Value="010000FF" />
              <!--0.0.10.0.100.255-->
              <OctetString Value="00000A0064FF" />
              <UInt16 Value="1" />
            </Structure>
            <Structure Qty="3" >
              <OctetString Value="020000FF" />
              <!--0.0.10.0.100.255-->
              <OctetString Value="00000A0064FF" />
              <UInt16 Value="2" />
            </Structure>
          </Array>
        </Structure>
      </Array>
    </Value>
  </SetRequestNormal>
</SetRequest>
</PDU>
</HDLC>


<HDLC len="15" >
<TargetAddress Value="48" />
<SourceAddress Value="1" />
<!--I frame.-->
<FrameType Value="74" />
<PDU>
<SetResponse>
  <SetResponseNormal>
    <InvokeIdAndPriority Value="129" />
    <Result Value="Success" />
  </SetResponseNormal>
</SetResponse>
</PDU>
</HDLC>



Weeks:

7ea0d9036176f0a1e6e600c101810014
00000d0000ff0800010a020809010011
01110111011101110111011101020809
01011101110111011101110111011101
02080901021101110111011101110111
01110102080901031101110111011101
11011101110102080901041101110111
01110111011101110102080901051101
11011101110111011101110102080901
06110111011101110111011101110102
08090107110111011101110111011101
11010208090108110111011101110111
01110111010208090109110111011101
1101110111011101519e7e

7ea0106103965462e6e700c501810036
cf7e

<HDLC len="216" >
<TargetAddress Value="1" />
<SourceAddress Value="48" />
<!--I frame.-->
<FrameType Value="76" />
<PDU>
<SetRequest>
  <SetRequestNormal>
    <InvokeIdAndPriority Value="129" />
    <AttributeDescriptor>
      <!--ACTIVITY_CALENDAR-->
      <ClassId Value="20" />
      <!--0.0.13.0.0.255-->
      <InstanceId Value="00000D0000FF" />
      <AttributeId Value="8" />
    </AttributeDescriptor>
    <Value>
      <Array Qty="10" >
        <Structure Qty="8" >
          <OctetString Value="00" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
        </Structure>
        <Structure Qty="8" >
          <OctetString Value="01" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
        </Structure>
        <Structure Qty="8" >
          <OctetString Value="02" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
        </Structure>
        <Structure Qty="8" >
          <OctetString Value="03" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
        </Structure>
        <Structure Qty="8" >
          <OctetString Value="04" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
        </Structure>
        <Structure Qty="8" >
          <OctetString Value="05" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
        </Structure>
        <Structure Qty="8" >
          <OctetString Value="06" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
        </Structure>
        <Structure Qty="8" >
          <OctetString Value="07" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
        </Structure>
        <Structure Qty="8" >
          <OctetString Value="08" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
        </Structure>
        <Structure Qty="8" >
          <OctetString Value="09" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
          <UInt8 Value="1" />
        </Structure>
      </Array>
    </Value>
  </SetRequestNormal>
</SetRequest>
</PDU>
</HDLC>


<HDLC len="15" >
<TargetAddress Value="48" />
<SourceAddress Value="1" />
<!--I frame.-->
<FrameType Value="96" />
<PDU>
<SetResponse>
  <SetResponseNormal>
    <InvokeIdAndPriority Value="129" />
    <Result Value="Success" />
  </SetResponseNormal>
</SetResponse>
</PDU>
</HDLC>




Seasons:
7ea0250361989f4fe6e600c101810014
00000d0000ff07000101020309010001
0c0901010efa7e

7ea0106103b828aae6e700c501810036
cf7e

<HDLC len="36" >
<TargetAddress Value="1" />
<SourceAddress Value="48" />
<!--I frame.-->
<FrameType Value="98" />
<PDU>
<SetRequest>
  <SetRequestNormal>
    <InvokeIdAndPriority Value="129" />
    <AttributeDescriptor>
      <!--ACTIVITY_CALENDAR-->
      <ClassId Value="20" />
      <!--0.0.13.0.0.255-->
      <InstanceId Value="00000D0000FF" />
      <AttributeId Value="7" />
    </AttributeDescriptor>
    <Value>
      <Array Qty="1" >
        <Structure Qty="3" >
          <OctetString Value="00" />
          <Array Qty="12" >
            <OctetString Value="01" />
          </Array>
        </Structure>
      </Array>
    </Value>
  </SetRequestNormal>
</SetRequest>
</PDU>
</HDLC>


<HDLC len="15" >
<TargetAddress Value="48" />
<SourceAddress Value="1" />
<!--I frame.-->
<FrameType Value="B8" />
<PDU>
<SetResponse>
  <SetResponseNormal>
    <InvokeIdAndPriority Value="129" />
    <Result Value="Success" />
  </SetResponseNormal>
</SetResponse>
</PDU>
</HDLC>



activate:

7ea01b0361ba3fafe6e600c301810014
00000d0000ff01010f00e73a7e

7ea0116103da87f6e6e700c701c10000
fcb47e

<HDLC len="26" >
<TargetAddress Value="1" />
<SourceAddress Value="48" />
<!--I frame.-->
<FrameType Value="BA" />
<PDU>
<ActionRequest>
  <ActionRequestNormal>
    <InvokeIdAndPriority Value="129" />
    <MethodDescriptor>
      <!--ACTIVITY_CALENDAR-->
      <ClassId Value="20" />
      <!--0.0.13.0.0.255-->
      <InstanceId Value="00000D0000FF" />
      <MethodId Value="1" />
    </MethodDescriptor>
    <MethodInvocationParameters>
      <Int8 Value="0" />
    </MethodInvocationParameters>
  </ActionRequestNormal>
</ActionRequest>
</PDU>
</HDLC>


<HDLC len="16" >
<TargetAddress Value="48" />
<SourceAddress Value="1" />
<!--I frame.-->
<FrameType Value="DA" />
<PDU>
<ActionResponse>
  <ActionResponseNormal>
    <InvokeIdAndPriority Value="193" />
    <Result Value="Success" />
  </ActionResponseNormal>
</ActionResponse>
</PDU>
</HDLC>

-------------------------------


17/07/2018 14:44:59Writing object 0.0.13.0.0.255, interface ActivityCalendar
<-  14:44:59 7E A0 43 03 61 54 81 91 E6 E6 00 C1 01 C1 00 14 00 00 0D 00 00 FF 07 00 01 01 02 03 09 0A 47 45 4E 55 53 53 45 41 5F 32 09 0C FF FF FF FF FF 00 00 00 00 00 00 00 09 0A 47 45 4E 55 53 57 45 45 4B 31 25 8F 7E
17/07/2018 14:44:59->   14:44:59 7E A0 10 61 03 74 48 A6 E6 E7 00 C5 01 C1 00 50 89 7E
17/07/2018 14:44:59Reading object 0.0.13.0.0.255, interface ActivityCalendar
<-  14:44:59 7E A0 19 03 61 76 29 9A E6 E6 00 C0 01 C1 00 14 00 00 0D 00 00 FF 07 00 97 EA 7E
17/07/2018 14:45:00->   14:45:00 7E A0 3A 61 03 96 A9 31 E6 E7 00 C4 01 C1 00 01 01 02 03 09 0A 47 45 4E 55 53 53 45 41 5F 31 09 0C FF FF FF FF FF 00 00 00 00 80 00 00 09 0A 47 45 4E 55 53 57 45 45 4B 31 7B 36 7E
17/07/2018 14:45:00Writing object 0.0.13.0.0.255, interface ActivityCalendar
<-  14:45:00 7E A0 37 03 61 98 48 B5 E6 E6 00 C1 01 C1 00 14 00 00 0D 00 00 FF 08 00 01 01 02 08 09 0A 47 45 4E 55 53 57 45 45 4B 32 11 01 11 01 11 01 11 01 11 01 11 01 11 01 71 8A 7E
17/07/2018 14:45:00->   14:45:00 7E A0 10 61 03 B8 28 AA E6 E7 00 C5 01 C1 00 50 89 7E
17/07/2018 14:45:00Reading object 0.0.13.0.0.255, interface ActivityCalendar
<-  14:45:00 7E A0 19 03 61 BA 49 96 E6 E6 00 C0 01 C1 00 14 00 00 0D 00 00 FF 08 00 5F 69 7E
17/07/2018 14:45:00->   14:45:00 7E A0 2E 61 03 DA 8C 08 E6 E7 00 C4 01 C1 00 01 01 02 08 09 0A 47 45 4E 55 53 57 45 45 4B 31 11 01 11 01 11 01 11 01 11 01 11 01 11 01 09 8E 7E
17/07/2018 14:45:00Writing object 0.0.13.0.0.255, interface ActivityCalendar
<-  14:45:00 7E A0 93 03 61 DC B9 61 E6 E6 00 C1 01 C1 00 14 00 00 0D 00 00 FF 09 00 01 01 02 02 11 01 01 06 02 03 09 04 00 00 00 19 09 06 00 00 0A 00 64 FF 12 00 02 02 03 09 04 06 01 00 00 09 06 00 00 0A 00 64 FF 12 00 03 02 03 09 04 07 00 00 19 09 06 00 00 0A 00 64 FF 12 00 01 02 03 09 04 0B 00 00 19 09 06 00 00 0A 00 64 FF 12 00 04 02 03 09 04 12 00 00 19 09 06 00 00 0A 00 64 FF 12 00 01 02 03 09 04 16 00 00 19 09 06 00 00 0A 00 64 FF 12 00 02 0F BD 7E
17/07/2018 14:45:00->   14:45:00 7E A0 10 61 03 FC 08 AE E6 E7 00 C5 01 C1 00 50 89 7E
17/07/2018 14:45:00Reading object 0.0.13.0.0.255, interface ActivityCalendar
<-  14:45:00 7E A0 19 03 61 FE 69 92 E6 E6 00 C0 01 C1 00 14 00 00 0D 00 00 FF 09 00 87 70 7E
17/07/2018 14:45:00->   14:45:00 7E A0 92 61 03 1E 0C 7E E6 E7 00 C4 02 81 01 00 00 00 01 00 82 00 7A 01 01 02 02 11 01 01 06 02 03 09 04 00 00 00 FF 09 06 00 00 0A 00 64 FF 12 00 02 02 03 09 04 06 01 00 FF 09 06 00 00 0A 00 64 FF 12 00 03 02 03 09 04 07 00 00 FF 09 06 00 00 0A 00 64 FF 12 00 01 02 03 09 04 0B 00 00 FF 09 06 00 00 0A 00 64 FF 12 00 04 02 03 09 04 12 00 00 FF 09 06 00 00 0A 00 64 FF 12 00 01 02 03 09 04 16 00 00 FF 09 06 00 00 0A 00 64 FF 12 00 02 5F BC 7E



17/07/2018 14:46:12Read object type ActivityCalendar index: 2
<-  14:46:12 7E A0 19 03 61 54 39 98 E6 E6 00 C0 01 C1 00 14 00 00 0D 00 00 FF 02 00 2F 94 7E
17/07/2018 14:46:12->   14:46:12 7E A0 18 61 03 74 90 43 E6 E7 00 C4 01 C1 00 09 06 50 41 53 49 56 45 7F 79 7E
17/07/2018 14:46:12Read object type ActivityCalendar index: 3
<-  14:46:12 7E A0 19 03 61 76 29 9A E6 E6 00 C0 01 C1 00 14 00 00 0D 00 00 FF 03 00 F7 8D 7E
17/07/2018 14:46:12->   14:46:12 7E A0 3A 61 03 96 A9 31 E6 E7 00 C4 01 C1 00 01 01 02 03 09 0A 47 45 4E 55 53 53 45 41 5F 31 09 0C FF FF FF FF FF 00 00 00 00 80 00 00 09 0A 47 45 4E 55 53 57 45 45 4B 31 7B 36 7E
17/07/2018 14:46:12Read object type ActivityCalendar index: 4
<-  14:46:12 7E A0 19 03 61 98 59 94 E6 E6 00 C0 01 C1 00 14 00 00 0D 00 00 FF 04 00 FF C0 7E
17/07/2018 14:46:12->   14:46:12 7E A0 2E 61 03 B8 98 48 E6 E7 00 C4 01 C1 00 01 01 02 08 09 0A 47 45 4E 55 53 57 45 45 4B 31 11 01 11 01 11 01 11 01 11 01 11 01 11 01 09 8E 7E
17/07/2018 14:46:12Read object type ActivityCalendar index: 5
<-  14:46:12 7E A0 19 03 61 BA 49 96 E6 E6 00 C0 01 C1 00 14 00 00 0D 00 00 FF 05 00 27 D9 7E
17/07/2018 14:46:12->   14:46:12 7E A0 92 61 03 DA 24 FE E6 E7 00 C4 02 81 01 00 00 00 01 00 82 00 7A 01 01 02 02 11 01 01 06 02 03 09 04 00 00 00 FF 09 06 00 00 0A 00 64 FF 12 00 02 02 03 09 04 06 00 00 FF 09 06 00 00 0A 00 64 FF 12 00 03 02 03 09 04 07 00 00 FF 09 06 00 00 0A 00 64 FF 12 00 01 02 03 09 04 0B 00 00 FF 09 06 00 00 0A 00 64 FF 12 00 04 02 03 09 04 12 00 00 FF 09 06 00 00 0A 00 64 FF 12 00 01 02 03 09 04 16 00 00 FF 09 06 00 00 0A 00 64 FF 12 00 02 F7 07 7E
17/07/2018 14:46:12Read object type ActivityCalendar index: 6
<-  14:46:12 7E A0 19 03 61 DC 79 90 E6 E6 00 C0 01 C1 00 14 00 00 0D 00 00 FF 06 00 4F F3 7E
17/07/2018 14:46:12->   14:46:12 7E A0 17 61 03 FC 29 F9 E6 E7 00 C4 01 C1 00 09 05 47 45 4E 55 53 63 8C 7E
17/07/2018 14:46:12Read object type ActivityCalendar index: 7
<-  14:46:12 7E A0 19 03 61 FE 69 92 E6 E6 00 C0 01 C1 00 14 00 00 0D 00 00 FF 07 00 97 EA 7E
17/07/2018 14:46:12->   14:46:12 7E A0 3A 61 03 1E E9 39 E6 E7 00 C4 01 C1 00 01 01 02 03 09 0A 47 45 4E 55 53 53 45 41 5F 31 09 0C FF FF FF FF FF 00 00 00 00 80 00 00 09 0A 47 45 4E 55 53 57 45 45 4B 31 7B 36 7E
17/07/2018 14:46:12Read object type ActivityCalendar index: 8
<-  14:46:12 7E A0 19 03 61 10 19 9C E6 E6 00 C0 01 C1 00 14 00 00 0D 00 00 FF 08 00 5F 69 7E
17/07/2018 14:46:13->   14:46:13 7E A0 2E 61 03 30 D8 40 E6 E7 00 C4 01 C1 00 01 01 02 08 09 0A 47 45 4E 55 53 57 45 45 4B 31 11 01 11 01 11 01 11 01 11 01 11 01 11 01 09 8E 7E
17/07/2018 14:46:13Read object type ActivityCalendar index: 9
<-  14:46:13 7E A0 19 03 61 32 09 9E E6 E6 00 C0 01 C1 00 14 00 00 0D 00 00 FF 09 00 87 70 7E
17/07/2018 14:46:13->   14:46:13 7E A0 92 61 03 52 64 F6 E6 E7 00 C4 02 81 01 00 00 00 01 00 82 00 7A 01 01 02 02 11 01 01 06 02 03 09 04 00 00 00 FF 09 06 00 00 0A 00 64 FF 12 00 02 02 03 09 04 06 01 00 FF 09 06 00 00 0A 00 64 FF 12 00 03 02 03 09 04 07 00 00 FF 09 06 00 00 0A 00 64 FF 12 00 01 02 03 09 04 0B 00 00 FF 09 06 00 00 0A 00 64 FF 12 00 04 02 03 09 04 12 00 00 FF 09 06 00 00 0A 00 64 FF 12 00 01 02 03 09 04 16 00 00 FF 09 06 00 00 0A 00 64 FF 12 00 02 5F BC 7E
17/07/2018 14:46:13Read object type ActivityCalendar index: 10
<-  14:46:13 7E A0 19 03 61 54 39 98 E6 E6 00 C0 01 C1 00 14 00 00 0D 00 00 FF 0A 00 EF 5A 7E
17/07/2018 14:46:13->   14:46:13 7E A0 1E 61 03 74 0A 08 E6 E7 00 C4 01 C1 00 09 0C FF FF FF FF FF FF FF FF FF 01 4A 00 45 D3 7E
17/07/2018 14:48:13Send Keep Alive
<-  14:48:13 7E A0 19 03 61 76 29 9A E6 E6 00 C0 01 C1 00 0F 00 00 28 00 00 FF 01 00 F9 79 7E
17/07/2018 14:48:20Data send failed. Try to resend 1/3
17/07/2018 14:48:27Data send failed. Try to resend 2/3
17/07/2018 14:48:34Failed to receive reply from the device in given time.
17/07/2018 14:48:34Disconnect request
<-  14:48:34 7E A0 07 03 61 53 65 81 7E
17/07/2018 14:48:34->   14:48:34 7E A0 07 61 03 1F 1D EF 7E




adding a 2nd day:

18/07/2018 11:19:02Writing object 0.0.13.0.0.255, interface ActivityCalendar
<-  11:19:02 7E A0 AC 03 61 76 E2 95 E6 E6 00 C1 01 C1 00 14 00 00 0D 00 00 FF 09 00 01 02 02 02 11 01 01 06 02 03 09 04 00 00 00 19 09 06 00 00 0A 00 64 FF 12 00 02 02 03 09 04 06 00 00 19 09 06 00 00 0A 00 64 FF 12 00 03 02 03 09 04 07 00 00 19 09 06 00 00 0A 00 64 FF 12 00 01 02 03 09 04 0B 00 00 19 09 06 00 00 0A 00 64 FF 12 00 04 02 03 09 04 12 00 00 19 09 06 00 00 0A 00 64 FF 12 00 01 02 03 09 04 16 00 00 19 09 06 00 00 0A 00 64 FF 12 00 02 02 02 11 02 01 01 02 03 09 04 00 00 00 00 09 06 00 00 0A 00 64 FF 12 00 02 AC 46 7E
18/07/2018 11:19:02->   11:19:02 7E A0 10 61 03 96 54 62 E6 E7 00 C5 01 C1 00 50 89 7E
18/07/2018 11:19:02Reading object 0.0.13.0.0.255, interface ActivityCalendar
<-  11:19:02 7E A0 19 03 61 98 59 94 E6 E6 00 C0 01 C1 00 14 00 00 0D 00 00 FF 09 00 87 70 7E
18/07/2018 11:19:03->   11:19:03 7E A0 AB 61 03 B8 A1 0B E6 E7 00 C4 02 81 01 00 00 00 01 00 82 00 93 01 02 02 02 11 01 01 06 02 03 09 04 00 00 00 FF 09 06 00 00 0A 00 64 FF 12 00 02 02 03 09 04 06 00 00 FF 09 06 00 00 0A 00 64 FF 12 00 03 02 03 09 04 07 00 00 FF 09 06 00 00 0A 00 64 FF 12 00 01 02 03 09 04 0B 00 00 FF 09 06 00 00 0A 00 64 FF 12 00 04 02 03 09 04 12 00 00 FF 09 06 00 00 0A 00 64 FF 12 00 01 02 03 09 04 16 00 00 FF 09 06 00 00 0A 00 64 FF 12 00 02 02 02 11 02 01 01 02 03 09 04 00 00 00 FF 09 06 00 00 0A 00 64 FF 12 00 02 CD 45 7E


7EA0AC036176E295E6E600C101C1001400000D0000FF090001020202110101060203090400000019090600000A0064FF
1200020203090406000019090600000A0064FF1200030203090407000019090600000A0064FF120001020309040B0000
19090600000A0064FF1200040203090412000019090600000A0064FF1200010203090416000019090600000A0064FF12
00020202110201010203090400000000090600000A0064FF120002AC467E

<HDLC len="171" >
<TargetAddress Value="1" />
<SourceAddress Value="48" />
<!--I frame.-->
<FrameType Value="76" />
<PDU>
<SetRequest>
  <SetRequestNormal>
    <InvokeIdAndPriority Value="193" />
    <AttributeDescriptor>
      <!--ACTIVITY_CALENDAR-->
      <ClassId Value="20" />
      <!--0.0.13.0.0.255-->
      <InstanceId Value="00000D0000FF" />
      <AttributeId Value="9" />
    </AttributeDescriptor>
    <Value>
      <Array Qty="2" >
        <Structure Qty="2" >
          <UInt8 Value="1" />
          <Array Qty="6" >
            <Structure Qty="3" >
              <OctetString Value="00000019" />
              <!--0.0.10.0.100.255-->
              <OctetString Value="00000A0064FF" />
              <UInt16 Value="2" />
            </Structure>
            <Structure Qty="3" >
              <OctetString Value="06000019" />
              <!--0.0.10.0.100.255-->
              <OctetString Value="00000A0064FF" />
              <UInt16 Value="3" />
            </Structure>
            <Structure Qty="3" >
              <OctetString Value="07000019" />
              <!--0.0.10.0.100.255-->
              <OctetString Value="00000A0064FF" />
              <UInt16 Value="1" />
            </Structure>
            <Structure Qty="3" >
              <OctetString Value="0B000019" />
              <!--0.0.10.0.100.255-->
              <OctetString Value="00000A0064FF" />
              <UInt16 Value="4" />
            </Structure>
            <Structure Qty="3" >
              <OctetString Value="12000019" />
              <!--0.0.10.0.100.255-->
              <OctetString Value="00000A0064FF" />
              <UInt16 Value="1" />
            </Structure>
            <Structure Qty="3" >
              <OctetString Value="16000019" />
              <!--0.0.10.0.100.255-->
              <OctetString Value="00000A0064FF" />
              <UInt16 Value="2" />
            </Structure>
          </Array>
        </Structure>
        <Structure Qty="2" >
          <UInt8 Value="2" />
          <Array Qty="1" >
            <Structure Qty="3" >
              <OctetString Value="00000000" />
              <!--0.0.10.0.100.255-->
              <OctetString Value="00000A0064FF" />
              <UInt16 Value="2" />
            </Structure>
          </Array>
        </Structure>
      </Array>
    </Value>
  </SetRequestNormal>
</SetRequest>
</PDU>
</HDLC>




-------------------------------------------

gerrit revert merge:

https://www.entropywins.wtf/blog/2013/07/01/resolving-a-merge-conflict-on-gerrit/


git pull origin master
git review -d 12345
git rebase master
“fix conflicts”
git add *
git rebase –continue
git review

git apt install git-review
git remote add gerrit ssh://stevetickle@gerrit.se.cyco.io:29418/terminal



-----------------------------------------

{
    "jobName" : "CalendarJob",
    "meterGroup" : "StevesGroup",
    "jobType" : "METER_COMMAND_SET",
    "jobConfiguration" : {
        "name" : "updCalendar",
        "commands" : [{
            "type" : "TARIFF_CALENDAR",
            "activationTime": "2018-07-10T18:35:00+0530",
            "seasons": [
                {
                    "start": {
                        "dayOfMonth": 1,
                        "month": 1
                    },
                    "week": 0
                },
                {
                    "start": {
                        "dayOfMonth": 1,
                        "month": 7
                    },
                    "week": 1
                }
            ],
            "weeks": [
                {
                    "days": [ 0, 0, 0, 0, 0, 2, 2 ]
                },
                {
                    "days": [ 1, 1, 1, 1, 1, 2, 2 ]
                }
            ],
            "days": [
                {
                    "schedule": [
                        {
                            "time": "00:00",
                            "zone": 1
                        },
                        {
                            "time": "09:00",
                            "zone": 2
                        },
                        {
                            "time": "15:00",
                            "zone": 3
                        }
                    ]
                }
            ]
        }]
    }
}


----------------------------------------------------


curl -X POST --header 'Content-Type: application/json' --header 'Accept: */*' -d '{ \
     "jobName" : "StevesJob", \
     "meterGroup" : "StevesGroup", \
     "jobType" : "METER_COMMAND_SET", \
     "jobConfiguration" : { \
         "name" : "updCapturePeriod", \
         "commands" : [{ \
             "type" : "TARIFF_CALENDAR", \
             "activationTime": "2018-07-10T18:35:00+0530", \
             "seasons": [ \
                 { \
                     "start": { \
                         "dayOfMonth": 1, \
                         "month": 1 \
                     }, \
                     "week": 0 \
                 }, \
                 { \
                     "start": { \
                         "dayOfMonth": 1, \
                         "month": 7 \
                     }, \
                     "week": 1 \
                 } \
             ], \
             "weeks": [ \
                 { \
                     "days": [ 0, 0, 0, 0, 0, 2, 2 ] \
                 }, \
                 { \
                     "days": [ 1, 1, 1, 1, 1, 2, 2 ] \
                 } \
             ], \
             "days": [ \
                 { \
                     "schedule": [ \
                         { \
                             "time": "00:00", \
                             "zone": 1 \
                         }, \
                         { \
                             "time": "09:00", \
                             "zone": 2 \
                         },                       \
                         { \
                             "time": "15:00", \
                             "zone": 3 \
                         } \
                     ] \
                 } \
             ] \
         }]       \
     } \
 }' 'http://localhost:8880/ws/meterJob'
--------------------------------------------

create group:

{
    "meterGroupName" : "StevesGroup",
    "meterGroupType" : "STATIC",
    "meters" : [
       "G102031"
    ]
}



--------------------------------

manage meter job:

{
  "instruction": "startNow"
}



----------------------------------------

bitmask for sequence number in db:

select id,create_time,start_seq_no,last_received_seq_no,char_length(receive_bit_set) from message_queue_state;

reset sequence numbers:
update message_queue_state set last_received_seq_no=1,start_seq_no=2;



------------------------------------

AFL fuzz testing:

AFL attempts to fuzz test the code based on an initial set of inputs and an 'instrumentation-guided' pattern generation
process.
The codebase is instrumented to allow AFL to gain knowledge of where the branches exist and how much code has been
exercised. This knowledge allows it to quickly identify patterns that are causing different parts of the codebase
to be exercised.

(from http://lcamtuf.coredump.cx/afl/status_screen.txt)

Sections:
 Process timing
  self explanatory.
 cycle progress
  How far along in the current cycle
  current status
 stage progress
  Provides an insight into the mechanisms that AFL is using to generate test patterns.
 fuzzing strategy yields
  Shows statistics about the success of the various strategies that AFL employs in finding paths through the code.
 path geometry:
  The 'levels' gives you an idea about the value that we have obtained from the instrumentation-guided pattern generation.
  'pending' is how many inputs we have still got to processr, 'favoured' inputs are ones that AFL wants to get too earlier.
  The 'stability' is a measure of how deterministic the code has been, i.e. does it behave the same way given the same input?
 findings in depth
  Details regarding the optimisation of the pattern-generation based on path coverage. AFL attempts to find routes
  through the codebase that exercise the most codet, this gives insight into how successfull it is being at that job.
 map coverage
  An estimate (based on instrumenting branches) of how much code has been exercised so far in the codebase. Note that
  it will be difficult (extremely long test-times) to obtain a very high value here.
 overall results




------------------------------------------------

20/07/2018 15:51:12Writing object 0.0.13.0.0.255, interface ActivityCalendar
<-  15:51:12 7E A0 34 03 61 10 C5 98 E6 E6 00 C1 01 C1 00 14 00 00 0D 00 00 FF 09 00 01 01 02 02 11 01 01 01 02 03 09 04 00 00 00 00 09 06 00 00 0A 00 64 FF 12 00 01 D8 D9 7E
20/07/2018 15:51:12->   15:51:12 7E A0 10 61 03 30 68 A2 E6 E7 00 C5 01 C1 00 50 89 7E
20/07/2018 15:51:12Reading object 0.0.13.0.0.255, interface ActivityCalendar
<-  15:51:12 7E A0 19 03 61 32 09 9E E6 E6 00 C0 01 C1 00 14 00 00 0D 00 00 FF 09 00 87 70 7E
20/07/2018 15:51:12->   15:51:12 7E A0 33 61 03 52 E2 48 E6 E7 00 C4 02 81 01 00 00 00 01 00 82 00 1B 01 01 02 02 11 01 01 01 02 03 09 04 00 00 00 FF 09 06 00 00 0A 00 64 FF 12 00 01 C8 16 7E



7EA034036110C598E6E600C101C1001400000D0000FF
090001010202110101010203090400000000090600000A0064FF120001D8D97E

<HDLC len="51" >
<TargetAddress Value="1" />
<SourceAddress Value="48" />
<!--AARQ frame.-->
<FrameType Value="10" />
<PDU>
<SetRequest>
  <SetRequestNormal>
    <InvokeIdAndPriority Value="193" />
    <AttributeDescriptor>
      <!--ACTIVITY_CALENDAR-->
      <ClassId Value="20" />
      <!--0.0.13.0.0.255-->
      <InstanceId Value="00000D0000FF" />
      <AttributeId Value="9" />
    </AttributeDescriptor>
    <Value>
      <Array Qty="1" >
        <Structure Qty="2" >
          <UInt8 Value="1" />
          <Array Qty="1" >
            <Structure Qty="3" >
              <OctetString Value="00000000" />
              <!--0.0.10.0.100.255-->
              <OctetString Value="00000A0064FF" />
              <UInt16 Value="1" />
            </Structure>
          </Array>
        </Structure>
      </Array>
    </Value>
  </SetRequestNormal>
</SetRequest>
</PDU>
</HDLC>




7E A0 10 61 03 30 68 A2 E6 E7 00 C5 01 C1 00 50 89 7E


--------------------------------------------------------------------

https://confluence.se.cyco.io/display/ENG/%5BTestReport%5D+Radio+throughput+tests

Actual throughput of application data (inside UDP and DTLS and CoAP) should be approximately as in the theoretical model: 1.3 KiB/s

roughly ~20 packets/second.


--------------------------------------------------

2018-07-23 18:28:10.150 [debug] [              hdlc] {        hdlc}: HDLC link disconnected
2018-07-23 18:28:10.150 [debug] [        meter/dlms] {      device}: Setup AA using HLS without ciphering, without fw upgrade
2018-07-23 18:28:10.150 [debug] [              dlms] {      device}: Setup AA with HLS
2018-07-23 18:28:10.202 [debug] [              hdlc] {        hdlc}: Connect HDLC link
2018-07-23 18:28:10.207 [debug] [              hdlc] {        hdlc}: tx: (1/3): 7ea0200361931b9f8180140502020006
2018-07-23 18:28:10.208 [debug] [              hdlc] {        hdlc}: tx: (2/3): 0202000704000000010804000000016f
2018-07-23 18:28:10.208 [debug] [              hdlc] {        hdlc}: tx: (3/3): ef7e
2018-07-23 18:28:10.293 [debug] [              hdlc] {        hdlc}: rx: (1/3): 7ea020610373059e8180140502020006
2018-07-23 18:28:10.293 [debug] [              hdlc] {        hdlc}: rx: (2/3): 0202000704000000010804000000016f
2018-07-23 18:28:10.293 [debug] [              hdlc] {        hdlc}: rx: (3/3): ef7e
2018-07-23 18:28:10.299 [debug] [              hdlc] {        hdlc}: tx: (1/5): 7ea04c0361105827e6e600603ea10906
2018-07-23 18:28:10.299 [debug] [              hdlc] {        hdlc}: tx: (2/5): 07608574050801018a0207808b076085
2018-07-23 18:28:10.299 [debug] [              hdlc] {        hdlc}: tx: (3/5): 7405080202ac12801030654537456363
2018-07-23 18:28:10.299 [debug] [              hdlc] {        hdlc}: tx: (4/5): 633938356635344342be10040e010000
2018-07-23 18:28:10.299 [debug] [              hdlc] {        hdlc}: tx: (5/5): 00065f1f0400001f1ffffff8547e
2018-07-23 18:28:10.485 [debug] [              hdlc] {        hdlc}: rx: (1/6): 7ea0586103300751e6e700614aa10906
2018-07-23 18:28:10.485 [debug] [              hdlc] {        hdlc}: rx: (2/6): 0760857405080101a203020100a305a1
2018-07-23 18:28:10.485 [debug] [              hdlc] {        hdlc}: rx: (3/6): 0302010e880207808907608574050802
2018-07-23 18:28:10.485 [debug] [              hdlc] {        hdlc}: rx: (4/6): 02aa12801047656e757309000000005f
2018-07-23 18:28:10.485 [debug] [              hdlc] {        hdlc}: rx: (5/6): 860828c38cbe10040e0800065f1f0400
2018-07-23 18:28:10.485 [debug] [              hdlc] {        hdlc}: rx: (6/6): 00181d020000071ac97e
2018-07-23 18:28:10.485 [debug] [              dlms] {        dlms}: extracted server max pdu size is 512
2018-07-23 18:28:10.485 [debug] [              dlms] {        dlms}: Action 0-0:40.0.0*255 ic 15 methodId 1 actionLen: 18 B
2018-07-23 18:28:10.542 [debug] [              hdlc] {        hdlc}: tx: (1/3): 7ea02b0361328debe6e600c30181000f
2018-07-23 18:28:10.542 [debug] [              hdlc] {        hdlc}: tx: (2/3): 0000280000ff01010910622fe6353a03
2018-07-23 18:28:10.542 [debug] [              hdlc] {        hdlc}: tx: (3/3): 0d108533c88b7c6e11ec80737e
2018-07-23 18:28:10.644 [debug] [              hdlc] {        hdlc}: rx: (1/3): 7ea02461035262dce6e700c701c10001
2018-07-23 18:28:10.644 [debug] [              hdlc] {        hdlc}: rx: (2/3): 00091042988aa97db5d10cad9ec17583
2018-07-23 18:28:10.644 [debug] [              hdlc] {        hdlc}: rx: (3/3): e4338a121c7e
2018-07-23 18:28:10.645 [debug] [              dlms] {        dlms}: COSEM AA with HLS setup is accepted
2018-07-23 18:28:10.645 [debug] [meter/configuration] {      device}: RateCalendar check ok, configuring it...
2018-07-23 18:28:10.645 [debug] [      config/calnd] {      device}: Set RateCalendar request (state 2).
2018-07-23 18:28:10.645 [debug] [      config/calnd] {      device}: *** Send day table ***
2018-07-23 18:28:10.645 [debug] [      config/calnd] {      device}: day 0, switch point 0, tariff (1)
2018-07-23 18:28:10.645 [debug] [      config/calnd] {      device}: day 0, switch point 1, tariff (2)
2018-07-23 18:28:10.645 [debug] [      config/calnd] {      device}: day 0, switch point 2, tariff (3)
2018-07-23 18:28:10.645 [debug] [      config/calnd] {      device}: day 1, switch point 0, tariff (1)
2018-07-23 18:28:10.645 [debug] [      config/calnd] {      device}: day 1, switch point 1, tariff (2)
2018-07-23 18:28:10.645 [debug] [      config/calnd] {      device}: day 1, switch point 2, tariff (3)
2018-07-23 18:28:10.645 [debug] [              dlms] {      device}: Set 0-0:13.0.0*255 ic 20 attr 9 valueLen 128 B
2018-07-23 18:28:10.702 [debug] [              hdlc] {        hdlc}: tx: (1/10): 7ea09903615457b5e6e600c101810014
2018-07-23 18:28:10.702 [debug] [              hdlc] {        hdlc}: tx: (2/10): 00000d0000ff09000102020211000103
2018-07-23 18:28:10.702 [debug] [              hdlc] {        hdlc}: tx: (3/10): 0203090400000019090600000a0064ff
2018-07-23 18:28:10.702 [debug] [              hdlc] {        hdlc}: tx: (4/10): 1200010203090409000019090600000a
2018-07-23 18:28:10.702 [debug] [              hdlc] {        hdlc}: tx: (5/10): 0064ff120002020309040f0000190906
2018-07-23 18:28:10.702 [debug] [              hdlc] {        hdlc}: tx: (6/10): 00000a0064ff12000302021101010302
2018-07-23 18:28:10.702 [debug] [              hdlc] {        hdlc}: tx: (7/10): 03090400000019090600000a0064ff12
2018-07-23 18:28:10.702 [debug] [              hdlc] {        hdlc}: tx: (8/10): 00010203090409000019090600000a00
2018-07-23 18:28:10.702 [debug] [              hdlc] {        hdlc}: tx: (9/10): 64ff120002020309040f000019090600
2018-07-23 18:28:10.702 [debug] [              hdlc] {        hdlc}: tx: (10/10): 000a0064ff12000361927e
2018-07-23 18:28:10.916 [debug] [              hdlc] {        hdlc}: rx: (1/2): 7ea01061037448a6e6e700c501810036
2018-07-23 18:28:10.916 [debug] [              hdlc] {        hdlc}: rx: (2/2): cf7e
2018-07-23 18:28:10.916 [debug] [      config/calnd] {      device}: Set RateCalendar request (state 3).
2018-07-23 18:28:10.916 [debug] [      config/calnd] {      device}: *** Send week table ***
2018-07-23 18:28:10.916 [debug] [              dlms] {      device}: Set 0-0:13.0.0*255 ic 20 attr 8 valueLen 21 B
2018-07-23 18:28:10.972 [debug] [              hdlc] {        hdlc}: tx: (1/3): 7ea02e036176fa81e6e600c101810014
2018-07-23 18:28:10.972 [debug] [              hdlc] {        hdlc}: tx: (2/3): 00000d0000ff08000101020809010011
2018-07-23 18:28:10.972 [debug] [              hdlc] {        hdlc}: tx: (3/3): 01110111011101110111011101bb427e
2018-07-23 18:28:11.059 [debug] [              hdlc] {        hdlc}: rx: (1/2): 7ea0106103965462e6e700c501810036
2018-07-23 18:28:11.059 [debug] [              hdlc] {        hdlc}: rx: (2/2): cf7e
2018-07-23 18:28:11.060 [debug] [      config/calnd] {      device}: Set RateCalendar request (state 4).
2018-07-23 18:28:11.060 [debug] [      config/calnd] {      device}: *** Send season table ***
2018-07-23 18:28:11.060 [debug] [              dlms] {      device}: Set 0-0:13.0.0*255 ic 20 attr 7 valueLen 12 B
2018-07-23 18:28:11.117 [debug] [              hdlc] {        hdlc}: tx: (1/3): 7ea0250361989f4fe6e600c101810014
2018-07-23 18:28:11.117 [debug] [              hdlc] {        hdlc}: tx: (2/3): 00000d0000ff07000101020309000001
2018-07-23 18:28:11.117 [debug] [              hdlc] {        hdlc}: tx: (3/3): 0c09010052747e
2018-07-23 18:28:11.187 [debug] [              hdlc] {        hdlc}: rx: (1/2): 7ea0106103b828aae6e700c501810036
2018-07-23 18:28:11.187 [debug] [              hdlc] {        hdlc}: rx: (2/2): cf7e
2018-07-23 18:28:11.188 [debug] [      config/calnd] {      device}: Set RateCalendar request (state 5).
2018-07-23 18:28:11.188 [debug] [              dlms] {      device}: Action 0-0:13.0.0*255 ic 20 methodId 1 actionLen: 2 B
2018-07-23 18:28:11.244 [debug] [              hdlc] {        hdlc}: tx: (1/2): 7ea01b0361ba3fafe6e600c301810014
2018-07-23 18:28:11.245 [debug] [              hdlc] {        hdlc}: tx: (2/2): 00000d0000ff01010f00e73a7e
2018-07-23 18:28:11.890 [debug] [              hdlc] {        hdlc}: rx: (1/2): 7ea0116103da87f6e6e700c701c10000
2018-07-23 18:28:11.890 [debug] [              hdlc] {        hdlc}: rx: (2/2): fcb47e
2018-07-23 18:28:11.890 [debug] [      config/calnd] {      device}: Set RateCalendar request (state 1).
2018-07-23 18:28:11.890 [debug] [      config/calnd] {      device}: *** CleanUp  ***
2018-07-23 18:28:11.942 [debug] [              dlms] {      device}: Disconnect HDLC link
2018-07-23 18:28:11.947 [debug] [              hdlc] {        hdlc}: tx: (1/1): 7ea00703615365817e
2018-07-23 18:28:11.985 [debug] [              hdlc] {        hdlc}: rx: (1/1): 7ea00761037377467e
2018-07-23 18:28:11.986 [debug] [              hdlc] {        hdlc}: HDLC link disconnected
2018-07-23 18:28:11.986 [debug] [       meterConfig] {      device}: MeterConfiguration result: failure

--------------------------------------------


{
    "jobName" : "CalendarJob61",
    "meterGroup" : "StevesGroup",
    "jobType" : "METER_COMMAND_SET",
    "jobConfiguration" : {
        "name" : "updCalendar",
        "commands" : [{
            "type" : "TARIFF_CALENDAR",
            "activationTime": "2018-07-10T18:35:00+0530",
            "seasons": [
                {
                    "start": {
                        "dayOfMonth": 1,
                        "month": 1
                    },
                    "week": 0
                }
            ],
            "weeks": [
                {
                    "days": [ 1, 1, 1, 1, 1, 1, 1 ]
                }
            ],
            "days": [
                {
                    "schedule": [
                        {
                            "time": "00:00",
                            "zone": 1
                        },
                        {
                            "time": "09:00",
                            "zone": 2
                        },
                        {
                            "time": "15:00",
                            "zone": 3
                        }
                    ]
                },
                {
                    "schedule": [
                        {
                            "time": "00:00",
                            "zone": 1
                        },
                        {
                            "time": "09:00",
                            "zone": 2
                        },
                        {
                            "time": "15:00",
                            "zone": 3
                        }
                    ]
                }
            ]
        }]
    }
}

{
  "instruction": "startNow"
}


---------------------------------------------

billing period reset

curl -v -X POST http://localhost:8882/ws/meterJob -H 'Cache-Control: no-cache' -H 'Content-Type: application/json' -d '{"jobName":"bp1","meterGroup":"StevesGroup","jobType":"METER_COMMAND_SET","jobConfiguration":{"name":"bp1","scheduledTime":"2018-07-20T14:57:00.000","timeoutTime":"2018-07-20T14:59:00.000","commands":[{"type":"BILLING_PERIOD","activationTime":"2018-07-20T15:02:00+0530","date":{"dayOfMonth":15}}]}}'


curl -X POST --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{ "instruction": "startNow" } ' 'http://localhost:8880/ws/manageMeterJob/bp1'



-------------------------------------------------

radio_rail.c::transmitframe()
CCA still needs to work, so can't mute receiver during that time.

Reimplement CCA/LBT for RAIL:
- Currently uses one API call (RAIL_TxStart) to transmit the packet and perform the LBT.
- We need to split into two (Listen, wait for LBT period, transmit if rx level below threshold).
- May be able to use CC1200 implementation.


---------------------------

26/07/2018 14:58:35Method object 0.0.13.0.0.255, interface ActivityCalendar
<-  14:58:35 7E A0 1B 03 61 BA 3F AF E6 E6 00 C3 01 C1 00 14 00 00 0D 00 00 FF 01 01 0F 00 B6 59 7E
26/07/2018 14:58:35->   14:58:35 7E A0 11 61 03 DA 87 F6 E6 E7 00 C7 01 C1 00 00 FC B4 7E


-------------------------------------------------------------

activationTime write:

7EA0270361769978E6E600C101C1001400000D0000FF0A00090C07E2071A04162B10FFFFC4806D377E


-------------------------------------------------------------------

learning points.
Points to improve on:
- reduce reliance on a single test setup (omnireltest), ideally locally server-containers with local meter?
- Leave omnireltest for final manual testing
- use ethernet from gateway, not cellular, more deterministic.
- devs need to be able to run same setup locally to preempt failures.
- need easier way to upgrade/downgrade individual subsystems (containers again).
- need negative testing.
- need to debug omnireltest network, not performing well.
- need to redo omnireltest setup. we lost the keys/certs and now cant add new nodes or upgrade easily other than via OTA.


--------------------------------------------------------

Codebase improvements:

- weak linking for variant default code to avoid having to create defaults for all other variants.
- standard state machine structure throughout.
- removal of ADDON mechanism. dynamic addon mechanism not needed. all code will always be statically linked.
- driver interface should not be overloaded for application-specific code (i.e. metering).
- removal of "ifdef LNT" for more generic, non-specific code.
- naming e.g. activateSampleComplexProfiles().... actually the periodicProfileSampling().
- removal of complex/simple concept.
- removal of Panmesh support.
- Too many callbacks! can't follow code!

-------------------------------------------------------

Genus meter problems:
- Max-demand reset. Works ok, one-for-all, not individually controllable.
- calendar issues. Limited but seemingly functional. Need to check activation-time.
- Meter-upgrade 'image-identifier' is should be identifier of new image, not running image.



--------------------------------------------------------------

# Use socat to forward
# IPv4 TCP on port 4059 on this machine to
# IPv6 UDP on the agent node with the IPv6 address 2001:9b0:192:1005:4000::1
# running the dlmspipe on port 4059.
socat -ls -v -v -v tcp-listen:4059,reuseaddr,fork 'udp6:[2001:9b0:192:1005:4000::1]:4059'





--------------------------------------------

Fuzz tests with Aaron:
- unstructured ping
- "Big UDP" failure test.
- 10 hrs fuzz-mac test with DEBUG level info.


--------------------------------------------------

ARMLMD_LICENSE_FILE=8224@172.16.32.179

need a ~/.flexlmrc containing:
ARMLMD_LICENSE_FILE=8224@flexlm.se.cyco.io
or 8224@10.0.8.17 (if you run into IPv6 routing issues)

build SMIP & scimitar:

- make smip smip_ctrlporthub
- git clone ssh://stevetickle@gerrit.se.cyco.io:29418/scimitar_ch
- git checkout origin/connode_fixups
- #then copy over the header file:
- rsync -av --delete --exclude Makefile src/connode/ scimitar_ch/CommsHubFramework/3rdParty/Connode/c4_bin-smip_lg/include/connode/
- make -j2 -C scimitar_ch/CommsHubFramework TARGET=telit_apz OSTYPE=cygwin ARMLMD_LICENSE_FILE= ARMROOT= C4LIB=../../build/smip_ctrlporthub/release/libc4.a
- # to enable debug:
- change "C4_logSetLevel(cnd_LogLevelInfo);" to "C4_logSetLevel(cnd_LogLevelDebug);" in C4_task.c
- make -j2 -C scimitar_ch/CommsHubFramework TARGET=telit_apz OSTYPE=cygwin ARMLMD_LICENSE_FILE= ARMROOT= C4LIB=../../build/smip_ctrlporthub/release/libc4.a


binary in:
scimitar_ch/CommsHubFramework/bin/target/telit_apz/m2mapz.bin



====================================

provisioning IPA3b:

./tools/gdb/flash-ipa3.sh a.elf b.elf
./tools/c4-tools/coap_request.py --ctrlporthub localhost:4000 --load-key client-key 00-1B-C5-0C-60-03-B3-6C/node.key.der
./tools/c4-tools/coap_request.py --ctrlporthub localhost:4000 --load-key client-cert 00-1B-C5-0C-60-03-B3-6C/node.crt.der
./tools/c4-tools/coap_request.py --ctrlporthub localhost:4000 --load-key root-cert 00-1B-C5-0C-60-03-B3-6C/ca.crt.der
./tools/c4-tools/coap_request.py --ctrlporthub localhost:4000 --rll-key 00-1B-C5-0C-60-03-B3-6C/mac_keys.txt
Done.

./tools/gdb/flash-ipa3.sh a.elf b.elf
./tools/c4-tools/coap_request.py --ctrlporthub localhost:4000 --load-key client-key 00-1B-C5-0C-60-03-B3-6D/node.key.der
./tools/c4-tools/coap_request.py --ctrlporthub localhost:4000 --load-key client-cert 00-1B-C5-0C-60-03-B3-6D/node.crt.der
./tools/c4-tools/coap_request.py --ctrlporthub localhost:4000 --load-key root-cert 00-1B-C5-0C-60-03-B3-6D/ca.crt.der
./tools/c4-tools/coap_request.py --ctrlporthub localhost:4000 --rll-key 00-1B-C5-0C-60-03-B3-6D/mac_keys.txt
Done.

./tools/gdb/flash-ipa3.sh a.elf b.elf
./tools/c4-tools/coap_request.py --ctrlporthub localhost:4000 --load-key client-key 00-1B-C5-0C-60-03-B3-6E/node.key.der
./tools/c4-tools/coap_request.py --ctrlporthub localhost:4000 --load-key client-cert 00-1B-C5-0C-60-03-B3-6E/node.crt.der
./tools/c4-tools/coap_request.py --ctrlporthub localhost:4000 --load-key root-cert 00-1B-C5-0C-60-03-B3-6E/ca.crt.der
./tools/c4-tools/coap_request.py --ctrlporthub localhost:4000 --rll-key 00-1B-C5-0C-60-03-B3-6E/mac_keys.txt
Done.

./tools/gdb/flash-ipa3.sh a.elf b.elf
./tools/c4-tools/coap_request.py --ctrlporthub localhost:4000 --load-key client-key 00-1B-C5-0C-60-03-B3-6F/node.key.der
./tools/c4-tools/coap_request.py --ctrlporthub localhost:4000 --load-key client-cert 00-1B-C5-0C-60-03-B3-6F/node.crt.der
./tools/c4-tools/coap_request.py --ctrlporthub localhost:4000 --load-key root-cert 00-1B-C5-0C-60-03-B3-6F/ca.crt.der
./tools/c4-tools/coap_request.py --ctrlporthub localhost:4000 --rll-key 00-1B-C5-0C-60-03-B3-6F/mac_keys.txt
Done.

./tools/gdb/flash-ipa3.sh a.elf b.elf
./tools/c4-tools/coap_request.py --ctrlporthub localhost:4000 --load-key client-key 00-1B-C5-0C-60-03-B3-70/node.key.der
./tools/c4-tools/coap_request.py --ctrlporthub localhost:4000 --load-key client-cert 00-1B-C5-0C-60-03-B3-70/node.crt.der
./tools/c4-tools/coap_request.py --ctrlporthub localhost:4000 --load-key root-cert 00-1B-C5-0C-60-03-B3-70/ca.crt.der
./tools/c4-tools/coap_request.py --ctrlporthub localhost:4000 --rll-key 00-1B-C5-0C-60-03-B3-70/mac_keys.txt
Done.

00-1B-C5-0C-60-03-B3-6C/config
00-1B-C5-0C-60-03-B3-6C/mac_keys.txt
00-1B-C5-0C-60-03-B3-6C/node.crt.der
00-1B-C5-0C-60-03-B3-6C/mac_key
00-1B-C5-0C-60-03-B3-6C/ca.crt.der
00-1B-C5-0C-60-03-B3-6C/node.key.der

-------------------------------------------------------------------------

protoc decode.

echo '0a036d616312110a0a6b65794368616e67656410011a010312110a0a756e6b6e6f776e4b657910021a0101' | xxd -p -r | protoc -I /home/aarons/terminal/interface/proto --decode=EventsMetadataModuleMessage /home/aarons/terminal/interface/proto/events.proto

-------------------------------------------------

Profile TransactionEventLog: Start time: 2018-08-12 05:39:01
Profile TransactionEventLog: Stop time: 2018-08-12 05:40:46

Profile TransactionEventLog: Start time: 2018-08-11 05:40:46
Profile TransactionEventLog: Stop time: 2018-08-12 05:39:59

Profile TransactionEventLog: Start time: 2018-08-12 05:39:01
Profile TransactionEventLog: Stop time: 2018-08-12 05:40:46


------------------------------------

RAM usage, memory usage.

CONFIG_MEMORY_TRACK_FILE
CONFIG_MEMSTATS
MEMSTATS_NUM_TASKS=1024

then use coap_request to get stats per task.

--memstats-info       Get information about memstats
--memstats-log        Request to log memstats info
--memstats TYPE       Request memstats for global, task or file


------------------------------------------------------


Run server:

sudo ip -6 add add fd00::1 dev enp0s8


Run agent:

./build/host-ctrlporthub/bin/ctrlporthub -controllerport 4000 -listen 4242 -loglevel debug

gdb --args ./build/host-genus-insecure/bin/agent -eui64 00-00-00-00-00-00-00-01  \
                                        -meter /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0  \
                                        -initrtc  \
                                        -ctrlhub 127.0.0.1  \
                                        -ctrlhubport 4242  \
                                        -loglevel debug  \
                                        -param device.dlms.lls_password=1A2B3C4D  \
                                        -param device.dlms.authentication_key=756776636c656b616b67313836616263    \
                                        -param device.dlms.encryption_key=756776636c656b616b67313836616263    \
                                        -param device.dlms.encryption_key=756776636c656b616b67313836616263    \
                                        -param device.dlms.hls_key=756776636c686c737567313836616263 \
                                        -param device.time.sync_timer=1 \
                                        -param server.ip=2a03:a000:5:192:5dc0:2bda:b0bc:59c9  \
                                        -param modem.tun6.ip=localhost \
                                        -param modem.tun6.secret=whatsfordinner   \
                                        -param modem.apn=4g.tele2.se  \
                                        -param server.mq.push_now=1 \
                                        -param server.mq.push_delay=30 \
                                        -rootcert /Data/Temp/KeyTest/root.crt.der  \
                                        -cert /Data/Temp/KeyTest/node.crt.der  \
                                        -key /Data/Temp/KeyTest/node.key.der  \
                                        -mackey /Data/Temp/KeyTest/mac-keys.txt  \
                                        -gateway  \
                                        -statedir AgentState \
                                        -socket

gdb --args ./build/host-genus-insecure/bin/agent -eui64 00-00-00-00-00-00-00-02  \
                                        -meter /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0  \
                                        -initrtc  \
                                        -ctrlhub 127.0.0.1  \
                                        -ctrlhubport 4242  \
                                        -loglevel debug  \
                                        -param device.dlms.lls_password=1A2B3C4D  \
                                        -param device.dlms.authentication_key=756776636c656b616b67313836616263    \
                                        -param device.dlms.encryption_key=756776636c656b616b67313836616263    \
                                        -param device.dlms.encryption_key=756776636c656b616b67313836616263    \
                                        -param device.dlms.hls_key=756776636c686c737567313836616263 \
                                        -param device.time.sync_timer=1 \
                                        -param server.ip=2a03:a000:5:192:5dc0:2bda:b0bc:59c9  \
                                        -param modem.tun6.ip=localhost \
                                        -param modem.tun6.secret=whatsfordinner   \
                                        -param modem.apn=4g.tele2.se  \
                                        -param server.mq.push_now=1 \
                                        -param server.mq.push_delay=30 \
                                        -rootcert /Data/Temp/KeyTest2/root.crt.der  \
                                        -cert /Data/Temp/KeyTest2/node.crt.der  \
                                        -key /Data/Temp/KeyTest2/node.key.der  \
                                        -mackey /Data/Temp/KeyTest2/mac-keys.txt  \
                                        -gateway  \
                                        -statedir AgentState \
                                        -socket


gdb --args ./build/host-genus-insecure/bin/agent \
 -eui64 00-00-00-00-00-00-00-02  \
 -meter /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0  \
 -initrtc  \
 -ctrlhubport 4242  \
 -loglevel debug  \
 -param device.dlms.lls_password=1A2B3C4D  \
 -param device.dlms.authentication_key=756776636c656b616b67313836616263    \
 -param device.dlms.encryption_key=756776636c656b616b67313836616263    \
 -param device.dlms.encryption_key=756776636c656b616b67313836616263    \
 -param device.dlms.hls_key=756776636c686c737567313836616263 \
 -param device.time.sync_timer=1 \
 -param server.ip=fd00::1  \
 -param modem.tun6.ip=127.0.0.1 \
 -param modem.tun6.secret=whatsfordinner \
 -param modem.apn=127.0.0.1  \
 -param server.mq.push_now=1 \
 -param server.mq.push_delay=30 \
 -rootcert /Data/Temp/KeyTest/root.crt.der  \
 -cert /Data/Temp/KeyTest/node.crt.der  \
 -key /Data/Temp/KeyTest/node.key.der  \
 -mackey /Data/Temp/KeyTest/mac-keys.txt  \
 -gateway  \
 -statedir AgentState \
 -ctrlhub 127.0.0.1 \
 -socket



----------------------------------------


client:
socat -ddd -x tcp:meterpi1:55006 pty,link=${HOME}/dev/S2,rawer

------------------------------------------

force ipv4

apt-get -o Acquire::ForceIPv4=true update

---------------------------------------------

Crash:

- Immediately prior to the crash, storeConfig() is running, causing a pb_encode of a dp_config into a file.
flashopProgram 564:0x32 1 B
flashopProgram 564:0x33 2 B
flashopProgram 564:0x35 1 B
 flashopProgram 564:0x36 1 B
 flashopProgram 564:0x37 11 B       - deviceId?
 flashopProgram 564:0x42 1 B
 flashopProgram 564:0x43 1 B
 flashopProgram 564:0x44 1 B
 flashopProgram 564:0x45 1 B
 flashopProgram 564:0x46 6 B        - OBIS?
 flashopProgram 564:0x4c 1 B
 flashopProgram 564:0x4d 5 B
 flashopProgram 564:0x52 1 B
 flashopProgram 564:0x53 1 B
 flashopProgram 564:0x54 1 B
 flashopProgram 564:0x55 1 B
 flashopProgram 564:0x56 6 B        - OBIS?
 flashopProgram 564:0x5c 1 B
 flashopProgram 564:0x5d 1 B
 flashopProgram 564:0x5e 12 B       - timestamp?
 flashopProgram 564:0x6a 1 B
 flashopProgram 564:0x6b 1 B
 flashopProgram 564:0x6c 1 B
 flashopProgram 564:0x6d 1 B
 flashopProgram 564:0x6e 6 B        - OBIS?
 flashopProgram 564:0x74 1 B
 flashopProgram 564:0x75 1 B
 flashopProgram 564:0x76 12 B       - timestamp?
 flashopProgram 564:0x82 1 B
 flashopProgram 564:0x83 1 B
 flashopProgram 564:0x84 1 B
 flashopProgram 564:0x85 1 B
 flashopProgram 564:0x86 6 B        - OBIS?
flashopProgram 564:0x8c 1 B
flashopProgram 564:0x8d 1 B
flashopProgram 564:0x8e 12 B        - timestamp?
flashopProgram 564:0x9a 1 B
flashopProgram 564:0x9b 1 B
flashopProgram 564:0x9c 1 B
flashopProgram 564:0x9d 1 B
flashopProgram 564:0x9e 6 B         - OBIS?
- always seems to write 114 or 110 bytes prior to the crash.

- One case of no interference by filedl activity, all others are interfered.

- Also we have a file download occurring with regular filedlWriteFileBlock() being called, sometimes
immediately prior to the storeConfig call. This call seems to be blocked on a file operation while the
storeConfig completes.

- nanopb is thread-safe, call into fsWrite is also mutexed.

--------------------------------------------------

meter config should possibly have a capabilities set of flags.


-------------------------------------------

radio packet test:
./tools/c4-tools/coap_request.py --ctrlporthub :4001 --radio-send --radio-test-count 10 --radio-test-size 32

-------------------------------------------

CoAP blockwise issue (JJ found issue)

coap_task.c


-------------------------------------

radio PER test (packet error rate):
./tools/c4-tools/coap_request.py --radio-test-id 7 --radio-send --radio-test-iid 02-1b-c5-0c-60-00-bc-2e --radio-test-power 54


--------------------------------------

c4tools
https://jenkins.se.cyco.io/job/Terminal_release/lastSuccessfulBuild/artifact/build/tools/release/


-------------------------------------------

mesh ping

./tools/c4-tools/coap_request.py --ctrlporthub :4001 --radio-send --radio-test-count 10 --radio-test-size 32 --radio-test-iid 02-1b-c5-0c-60-00-bc-2e

--------------------------------------


Version generation:

./tools/buildsys/scripts/get_git_version.sh
GIT_VERSION := $(shell $(BUILDSYS_ROOT)/scripts/get_git_version.sh)


--------------------------------------------------

Jason Webb [2:21 PM]
to verify certs:
1. convert der to pem: openssl x509 -in <path/to/crt.der> -inform der -outform pem <path/to/.pem>
2. convert both root.crt and node.crt to separate .pem
3. verify node to root cert: openssl verify -CAfile root.pem node.pem



-------------------------------------

+++ b/src/device/drivers/dlms/device-dlms.c
@@ -4585,6 +4585,14 @@ static void deviceStart(void)
     registerParamsRestrictCheckCB(dlmsVariantParamIsRestrictedCb);
     macReceiveSetRSSICallback(dlmsVariantUpdateRSSIFromSource);

+#if 1
+    {
+        IPadr adr = {.x = {0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x01} };
+        macSetRSSISourceAddress(&adr, false);
+    }
+
+#endif
+
     OS_taskCreateStatic(deviceTask, "device",
               s_deviceStack, ARRAY_SIZE(s_deviceStack),
               NULL, DEFAULT_PRIORITY, &s_deviceTask);


--------------------------------------------------------------

HDLC/DLMS stack improvements
- Priority queue for device-dlms.
- Give hdlc.c a proper queue rather than s_responseBuffer and s_sendPayload.
- Make HDLC delimit packets correctly.

-----------------------------

tx: (1/1): 7e
tx: (1/1): a02003419328bc
fcs=470f fcs2=470f

(gdb) p segmentLen
$3 = 23
(gdb) x/23bx payloadSegment
0x7fffd8000a70: 0x81    0x80    0x14    0x05    0x02    0x01    0x5e    0x06
0x7fffd8000a78: 0x02    0x01    0x5e    0x07    0x04    0x00    0x00    0x00
0x7fffd8000a80: 0x01    0x08    0x04    0x00    0x00    0x00    0x01
(gdb) p/x fcs
$4 = 0x470f
(gdb)

(gdb) p/x fcs
$5 = 0x956e


--------------------------------------------------


bad 2nd:
7e
a041
03
41
10
e48f
e6e600
6036a1090607608574050801018a0207
808b0760857405080201ac0a80083141
324233433444be10040e01000000065f
1f0400001f1fffff
dd04
7e



good 2nd msg:

7e
a044
03
41
10
b3e1
e6e600
6036a109060760857405080101
8a0207808b0760857405080201ac0a80
083141324233433444be10040e010000
00065f1f0400001f1fffff
dd04
7e


good 1stmessage:
tx: (1/1): 7e
tx: (1/1): a020 03 41 93 28bc
tx: (1/2): 8180140502015e0602015e0704000000
tx: (2/2): 01080400000001
fcs=51af
tx: (1/1): 51
tx: (1/1): af
tx: (1/1): 7e


--------------------------------


==1192==ERROR: AddressSanitizer: heap-use-after-free on address 0x606000023fe0 at pc 0x7ffff6ee1720 bp 0x7ffff3afeab0 sp 0x7ffff3afe258
READ of size 15 at 0x606000023fe0 thread T1
    #0 0x7ffff6ee171f in memcmp (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x7771f)
    #1 0x402fcd in linkSetup src/device/communication/hdlc/test-linux/test_hdlc.c:85
    #2 0x404572 in testLinkConnect src/device/communication/hdlc/test-linux/test_hdlc.c:377
    #3 0x5b17f9 in runTestCase src/base/test-linux/test/tester.c:509
    #4 0x5b2043 in runTestSuite src/base/test-linux/test/tester.c:612
    #5 0x5b28ec in runTestContext src/base/test-linux/test/tester.c:717
    #6 0x5b36a1 in runAllTests src/base/test-linux/test/tester.c:1006
    #7 0x408c65 in testTask src/device/communication/hdlc/test-linux/test_hdlc.c:1043
    #8 0x51e2f5 in taskWrapper src/platform/osal/osal-freertos/osal_freertos.c:89
    #9 0x51cf1e in prvWaitForStart src/platform/freertos/freertos_port-linux/freertos_port/port.c:135
    #10 0x7ffff6c546b9 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x76b9)
    #11 0x7ffff698a41c in clone (/lib/x86_64-linux-gnu/libc.so.6+0x10741c)



-----------------------------------

AddressSanitiser:

gdb breakpoint:

b __asan_report_error


------------------------------------------

Get configuration:

./omnisma-demo.py --sma_ws http://localhost:8880/ws -m G102030 --config-get data/get-all-active.json

------------------------------------------------

Crypto alg used:

DTLS -
// turn on EC support
wolfSSL_CTX_UseSupportedCurve(s_ctx, WOLFSSL_ECC_SECP256R1); (SECP256R1 curve as is the suggested SSL default)
// turn on trusted_ca_keys extension support
wolfSSL_CTX_UseTrustedCaKeys(s_ctx);

// limit the list of supported suites
wolfSSL_CTX_set_cipher_list(s_ctx, TLS_CIPHER_SUITE);

wolfSSL_CTX_load_verify_buffer(ctx, buffer, keyLen, SSL_FILETYPE_ASN1);

// CSR creation.
wc_Sha256Hash

The generic CSR format is defined in RFC2986 and is also known as PKCS #10.
The public key part of the CSR is defined in RFC5480, updating RFC3279 that
together with RFC5754/5758 describes the ECDSAwSHA256 signature used.


MAC security -
macSecurityEncryptFrame()
// Encode nonce as per IEEE 802.15.4 section 7.3.2

// We don't implement MIC only modes. wolfSSL's CCM can't do this,
// because it always encrypts the MIC. And it's somewhat pointless: the
// overhead for encryption is small (0 bytes, but additional AES rounds)


/// AES-128 key in bytes
#define KEY_SIZE 16
#define nonceSize 13
wc_AesCcmEncrypt(&s_aesTx, out, in, payloadSize, nonce, nonceSize, authTag, authTagSize, mhr, mhrSize);




file distribution -

filedlDecryptAndCheckMd5()

mode = EncryptionAes128Ctr.
aesSetKey(aes, key, keylen, iv, AES_ENCRYPTION);
aesCtrEncrypt(aes, cleartextbuffer, (const uint8_t*)buffer, readlen);
md5Update(md5, cleartextbuffer, readlen); (integrity check).

fw image encryption:

parseFirmwareHeader()
AES
SHA signature.



--------------------------------------

HMP

got: "{6050302} 2 3 5 6"
should be: "Wpower lost"

traceDumper() has a:
LOG(info->logLevel, "%u+%u %s:%d %s {%s} %s %d %d",
        entry->time, entry->time - info->timeOfFirst,
        strFileTitle(entry->file), entry->line, entry->func,
        entry->task, entry->str != NULL ? entry->str : "",
        entry->n1, entry->n2);

which contains the key format: "{%s} %s %d %d".

--------------------------------------------------------

macTx() packet from { .x = { 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 } } to
{ .x = { 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02 } } works correctly and is acked.

packet is dropped as being invalid due to no content tho... as expected.

s_customRouting()

transportRegisterUdpReceiveCB(udpRxCb);


coapCreateSession();

coap_task::processReceivedUdpPacket()

coapTaskReceive();

communicationLayerStart() registers listener for UDP packets on CoAP port.

mqcoap.c:
const CoapSendRequestParams params = {
        CoapMethodPost, "mq", coapCB, (void*)(long)encodeData.end,
        CoapContentTypeExperimentalProtobuf,
        bbGet(bb), streamOut.bytes_written
};

rc = coapSendRequest(&params, NULL);

/**
 * Request Reference time from the server
 */
static ResultCode requestReferenceTime(void)
{
    uint32_t uptime = timeGetUptimeMsec();

    const CoapSendRequestParams params = {
            CoapMethodGet, "time",
            requestReferenceTimeCb, (void *)(intptr_t)uptime,
            .maxAttempts = 1
    };

    return coapSendRequest(&params, NULL);
}

requestReferenceTimeCb

----------------------------------------------------------------

0xfe, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   ,0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02

./tools/c4-tools/coap_request.py --hh-get fe800000000000000200000000000002 time

./tools/c4-tools/coap_request.py --hh-discover resetList=true


fe800000000000000200000000000001


------------------------


processSendResponseMsg

coapGetSessionById



--------------------------------------------------------

OpenOCD:


- tar zxvf openocd_JN.tgz
- cd openocd.JN
- sudo apt-get install libtool-bin automake cmake gdb-arm-none-eabi libusb-1.0-0-dev
- ./bootstrap
- ./configure
- make


ST-link
- git clone https://github.com/texane/stlink
- cd stlink
- make
- cd Build/Release
- sudo make install
- sudo ldconfig


--------------------------------------------------

WolfSSL version 3.13.0
(WolfSSL 3.14.0 upgrade was reverted as it broke our patch).

List of algorithms:
- (DTLS 1.2) ECDHE-ECDSA-AES128-CCM-8
- AES-128-CCM




---------------------------------

building SMIP / smip

- sudo git clean -xfd
- Don't use docker buildenv, 'make smip' only.

ubuntu@ubuntu-VirtualBox:/Data/Projects/terminal$ ag wc_ /home/ubuntu/libc4_symbols_nodebug
4567:0000058d t wc_AesDecrypt
4568:00000055 t wc_AesEncrypt
4569:00000a2b t wc_AesSetKeyLocal
4570:00002eef t wc_BuildEccKeyDer
4571:000015a7 t wc_ecc_alloc_rs
4572:0000105b t wc_ecc_cmp_param
4573:00002a5d t _wc_ecc_curve_free
4574:0000006f t wc_ecc_curve_load
4575:00000001 t wc_ecc_curve_load_item
4576:0000254f t wc_ecc_export_raw
4577:000015d1 t wc_ecc_free_rs
4578:00002b6d t wc_ecc_gen_k
4579:00002849 t wc_ecc_import_raw_private
4580:00001387 t wc_ecc_make_pub_ex
4581:00002be1 t wc_ecc_reset
4582:00002ac5 t wc_ecc_shared_secret_gen_sync
4583:000004c1 t wc_RNG_HealthTestLocal


--------------------------------------------------

- taskc4_rndCB is exposed in our code as hwrngGetSeed(). It is used as a seed for our
internal random number generator. This RNG is used for general use and timing-related operations
such as for desynchronising messages, etc.
Also used by wolfssl via the CUSTOM_RAND_GENERATE macro during build for key generation, etc.








- Our 3pp/wolfssl/wolfssl_config.h has the following:
#define CUSTOM_RAND_GENERATE hwrngGetSeed

- 3pp/wolfssl/src/wolfcrypt/src/random.ci:626 uses CUSTOM_RAND_GENERATE in the following way:
ret = CUSTOM_RAND_GENERATE_BLOCK(output, sz);
which will be effectively
ret = hwrngGetSeed(output, sz);

- The prototype for hwrngGetSeed seems to be:
uint32_t hwrngGetSeed(void)
(src/platform/drivers/hwrng/hwrng-smip.c)

- Oooops.... We've a) failed to fill our buffer with random data. b) returned a random value as
the resultCode. c) the random data will be explicitly zeroed with the preceding XMEMSET which
is the worst possible key...
We should be (in the SMIP case) calling the 's_rndCB' directly as it has the same prototype.

- The above code is in wc_RNG_GenerateBlock() which is used for key/csr generatin for crypto
storage & DTLS sessions, IPSEC, etc.

Its ok... CUSTOM_RAND_GENERATE_BLOCK != CUSTOM_RAND_GENERATE

----------------------------------------------

wc_RNG_GenerateBlock results in many transactions to the vaultic RNG as a result of our misuse of
the provided RNG API. We're repeatedly calling a block-wise API to generate 32-bit values then
filling up a buffer using those 32-bit values.
Since the VaultIC device is an external device, it results in bus transactions for every 32-bit
value. This in itself will be slow, but will also be contending for access with other tasks (C4
and CH sides).


SendClientHello():
ret = wc_RNG_GenerateBlock(ssl->rng, output + idx, RAN_LEN);

Ultimately results in 8 consecutive calls to CRYPTOIF_Random for blocks of 32-bits each.

Each call will peform "ch_osal_mutex_lock(cryptoif_Lock, C_CH_OSAL_MUTEX_INFINITE, CH_OSAL_MUTEX_RECURSIVE)"

DIAGNOSTICS_Task is trying to get access to the crypto mutex and times out causing the reset.
DIAGNOSTICS_Task uses CRYPTO for:
- diagnostics_calculateHash()
- CRYPTOIF_RunTest().



-----------------------------------------------

supervisor_CreateTaskList()

supervisor_addTask(index, taskTfwName, TFW_Construct, 20, TASKID_TFWEnum);

supervisor_addTask(index, taskDiagName, DIAGNOSTICS_Construct, 12, TASKID_DiagnosticEnum);

supervisor_addTask(index, taskTestBenchName, TESTBENCH_Construct, 11, TASKID_TestBenchEnum);
supervisor_addTask(index, taskTestBenchGPFName, TBGPF_Construct, 11, TASKID_TestBenchGpfEnum);
supervisor_addTask(index, FwDownloadName, FWDOWNLOAD_Construct, 11, TASKID_FwDownloadEnum);
supervisor_addTask(index, taskCHFName, CHF_Construct, 11, TASKID_ChfEnum);
supervisor_addTask(index, taskHanMgrName, HANMGR_Construct, 11, TASKID_HanManagerEnum);
supervisor_addTask(index, taskDeviceName, DEVICE_Construct, 11, TASKID_DeviceEnum);
supervisor_addTask(index, taskGPFName, GPF_Construct, 11, TASKID_GpfEnum);
supervisor_addTask(index, taskHanInterface, HANInterface_Construct, 11, TASKID_HanInterfaceEnum);
supervisor_addTask(index, FwDownloadName, FWDOWNLOAD_Construct, 11, TASKID_FwDownloadEnum);

supervisor_addTask(index, taskSocketMgrName, SOCKETMGR_Construct, 10, TASKID_SocketMgrEnum);
supervisor_addTask(index, taskTimeName, TIME_Construct, 10, TASKID_TimeTaskEnum);
supervisor_addTask(index, taskC4Name, TASKC4_Construct, 10, TASKID_C4TerminalEnum);
supervisor_addTask(index, taskWanMgrName, WANMGR_Construct, 10, TASKID_WanManagerEnum);
supervisor_addTask(index, taskPPPName, PPP_Construct, 10, TASKID_PppMgrEnum);
supervisor_addTask(index, "C4TestTask", TASKC4TEST_Construct, 10, TASKID_Dummy_15Enum);
supervisor_addTask(index, taskTunnel, TUNNEL_Construct, 10, TASKID_TunnelEnum);

supervisor_addTask(index, taskPowerName, POWER_Construct, 9, TASKID_PowerEnum);
supervisor_addTask(index, taskEzspMgrName, EZSP_Construct, 9, TASKID_EzspManagerEnum);






---------------------------------------

/Data/Temp/8a-73-84-53-00-00-09-7c.log.20180914190003
[c:mac_rx          ]CH_osal_lock.c,1039:Task 'c:mac_rx' failed to lock 'c:termina', held by 'c:coap'
[c:coap            ]CH_osal_lock.c,1039:Task 'c:coap' failed to lock 'c:termina', held by 'c:mac_rx'
[c:schedule        ]CH_osal_lock.c,1039:Task 'c:schedule' failed to lock 'c:termina', held by 'c:mac_rx'
[c:rpl             ]CH_osal_lock.c,1039:Task 'c:rpl' failed to lock 'c:termina', held by 'c:coap'


--------------------------------------------------------------
to get the above, with the named/bookkeeping task names, use:
ch_osal_mutex_init_name()
ch_osal_mutex_init()    <---- OS_mutexCreate()
ch_osal_mutex_lock()    <--- OS_mutexTake()
ch_osal_mutex_unlock() <--- OS_mutexGive()

ch_osal_lock_cs_init()
ch_osal_lock_cs_lock()
ch_osal_lock_cs_unlock()

These don't set the task name:
ch_osal_lock_count_init()   <--- OS_semaphoreCreate()
ch_osal_lock_count_take()
ch_osal_lock_count_give()
ch_osal_lock_binary_init()  <--- OS_semaphoreCreateBinary()
ch_osal_lock_binary_unlock()
ch_osal_lock_mslock_init()  <--- OS_semaphoreCreateBinaryHiRes()
O

watchdog:
wdtFeed()


-----------------------------------------------------

uploading to SMIP CH:

./upload_smip.py -r /Data/Projects/terminal/scimitar_ch/CommsHubFramework/bin/target/telit_apz/m2mapz.bin -p /dev/serial/by-id/usb-Telit_6_CDC-ACM_004678058002915-if08
./upload_smip.py -p /dev/serial/by-id/usb-Telit_6_CDC-ACM_004678058002915-if08 --reboot

./tools/c4-tools/readport.py




-----------------------------------------

- KDF: ecHKDF_SHA256 (Not changed from WolfSSL default)


DER_KEY_SIZE=
wc_ecc_make_key
ecc_key type


- we use the WolfCrypt set of sources, not the OpenSSL set, headers should be taken from "\wolfssl". This
hopefully will mean that you can indeed just use the compiled library.

WolfSSL cipher suite: "ECDHE-ECDSA-AES128-CCM-8" using 128 and 256 bit keys.

- Block ciphers; only AES128.
- Block cipher modes; CCM only.
- Digital signatures; ECDSA-P256-SHA256.
- Key Derivation Functions; SHA256 (WolfSSL deafult).
- Key Management; Toshiba supplied CH API.
- Message Authentication; SHA256 (DTLS)
- Random Number Generation; Toshiba supplied CH API (using VaultIC RNG?)
- Secure Hashing; 256 bit SHA2 (SHA-256)
- Component Testing; No application-specific KDFs.





-----------------------------------------------------


aes_wolfssl.h:

// CCM mode
#define aesCcmSetKey wc_AesCcmSetKey        // ipsec, mac_security (RLL)
#define aesCcmEncrypt wc_AesCcmEncrypt      // ipsec, mac_security (RLL)
#define aesCcmDecrypt wc_AesCcmDecrypt      // ipsec, mac_security (RLL)

// CTR mode
#define aesSetKey wc_AesSetKey              // filedl encryption, fs_crypto
#define aesCtrEncrypt wc_AesCtrEncrypt      // filedl_storage.

// AES
#define aesEncryptBlock wc_AesEncryptDirect // dlms, "Secure Sprint-350 meter"
#define aesDecryptBlock wc_AesDecryptDirect // dlms

// GCM mode
#define aesGcmSetKey wc_AesGcmSetKey        // dlms.
#define aesGcmEncrypt wc_AesGcmEncrypt      // dlms.
#define aesGcmDecrypt wc_AesGcmDecrypt      // dlms.

// GMAC
#define GmacSetKey wc_GmacSetKey        // dlms.
#define GmacUpdate wc_GmacUpdate        // dlms.

https://www.wolfssl.com/docs/wolfssl-manual/ch4/




TLS_AUTHENTICATION "ECDHE-ECDSA"
TLS_ENCRYPTION "AES128-CCM-8".

This is combined via (another) macro into the "real" WolfSSL ciper-suite option:
wolfSSL_CTX_set_cipher_list("ECDHE-ECDSA-AES128-CCM-8");

TLS cipher suite: "ECDHE-ECDSA-AES128-CCM-8"


RFC-5758 3.2:
"ecdsa-with-SHA256 OBJECT IDENTIFIER ::= { iso(1) member-body(2)
        us(840) ansi-X9-62(10045) signatures(4) ecdsa-with-SHA2(3) 2 }"

above indicates ecdsa-with-SHA256 in encodeSignatureAlgorithm



-----------------------------------------------------------------------------------

./tools/gdb/flash-ipa3.sh a.elf b.elf
./tools/c4-tools/coap_request.py --ctrlporthub localhost:4000 --load-key client-key /Data/Temp/KeysAndCertsOmnireltest/00-1B-C5-0C-60-00-01-83/node.key.der
./tools/c4-tools/coap_request.py --ctrlporthub localhost:4000 --load-key client-cert /Data/Temp/KeysAndCertsOmnireltest/00-1B-C5-0C-60-00-01-83/node.crt.der
./tools/c4-tools/coap_request.py --ctrlporthub localhost:4000 --load-key root-cert /Data/Temp/KeysAndCertsOmnireltest/00-1B-C5-0C-60-00-01-83/ca.crt.der
./tools/c4-tools/coap_request.py --ctrlporthub localhost:4000 --rll-key /Data/Temp/KeysAndCertsOmnireltest/00-1B-C5-0C-60-00-01-83/mac_keys.txt
./tools/c4-tools/coap_request.py --ctrlporthub localhost:4000 --config prod.lowpan.eui64 00-1B-C5-0C-60-00-01-83

./tools/c4-tools/coap_request.py --ctrlporthub localhost:4000 --load-key client-key /Data/Temp/KeysAndCertsOmnireltest/00-1B-C5-0C-60-00-01-84/node.key.der
./tools/c4-tools/coap_request.py --ctrlporthub localhost:4000 --load-key client-cert /Data/Temp/KeysAndCertsOmnireltest/00-1B-C5-0C-60-00-01-84/node.crt.der
./tools/c4-tools/coap_request.py --ctrlporthub localhost:4000 --load-key root-cert /Data/Temp/KeysAndCertsOmnireltest/00-1B-C5-0C-60-00-01-84/ca.crt.der
./tools/c4-tools/coap_request.py --ctrlporthub localhost:4000 --rll-key /Data/Temp/KeysAndCertsOmnireltest/00-1B-C5-0C-60-00-01-84/mac_keys.txt
./tools/c4-tools/coap_request.py --ctrlporthub localhost:4000 --config prod.lowpan.eui64 00-1B-C5-0C-60-00-01-84

/Data/Temp/KeysAndCertsOmnireltest/00-1B-C5-0C-60-00-01-83/

----------------------------------------------------

Get meter time:

./tools/c4-tools/coap_request.py --device G102030  --device-op GET 8 0.0.1.0.0.255 2

--------------------------------------------------------------

New profile call stack:

Thread 16 "device" hit Breakpoint 1, mqCreateAtTime (type=type@entry=14, fields=0x4b9ba0 <MqDataProfileSample_fields>,
    msg=msg@entry=0x7fffdf7fddc0, time=1539015362, timeUncertain=true) at src/management/messagequeue/mq.c:15
15  {
(gdb) where
#0  mqCreateAtTime (type=type@entry=14, fields=0x4b9ba0 <MqDataProfileSample_fields>, msg=msg@entry=0x7fffdf7fddc0, time=1539015362,
    timeUncertain=true) at src/management/messagequeue/mq.c:15
#1  0x0000000000434ed3 in mqCreate (type=type@entry=14, fields=<optimised out>, msg=msg@entry=0x7fffdf7fddc0)
    at src/management/messagequeue/mq.c:64
#2  0x00000000004407ee in saveDataProfileSample (sample=0x7fffd8001220) at src/device/addons/dataprofile/dataprofile.c:557
#3  0x000000000044e441 in processComplexSampleByEntry (dataLen=<optimised out>, data=0x7fffd4000924 "\t\f\a\342\003\005\377\n\023")
    at src/device/drivers/dlms/device-dlms.c:3220
#4  processComplexSampleResponse (dataLen=<optimised out>, data=<optimised out>) at src/device/drivers/dlms/device-dlms.c:3344
#5  processDlmsPayload () at src/device/drivers/dlms/device-dlms.c:4088
#6  deviceTask (arg=<optimised out>) at src/device/drivers/dlms/device-dlms.c:4185
#7  0x000000000046b4f5 in taskWrapper (arg=0x6ed940 <s_deviceTask>) at src/platform/osal/osal-posix/osal_posix.c:134
#8  0x00007ffff79b96ba in start_thread (arg=0x7fffdf7fe700) at pthread_create.c:333
#9  0x00007ffff76ef41d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109



----------------------------------------------------------

v98 (SMIP release).

commit 040d212621b050c399436dbee4f7fad6ee284f09
Merge: 894f17a 06609ef
Author: Jonas Norling <jonas.norling@cyanconnode.com>
Date:   Fri Jun 2 14:41:56 2017 +0200

    Merge "Set tag version in smip.dox"



-------------------------------------------------------

static bool generateNewKeyAndCsr(void)
{
    bool ret = false;
    wc_InitRng(&s_ctx->rng);
    wc_ecc_init(&s_ctx->keystruct);

    // The next step can take some 15 seconds and if unlucky that might trigger
    // the wd. Feed it before to ensure there is plenty of time to make the key.
    wdtFeed();

    if (wc_ecc_make_key(&s_ctx->rng, 32, &s_ctx->keystruct)) {
        goto out;
    }

    // As the previous step can take some time the watchdog will kick in before
    // the CSR creation is done. The next step also takes some 15-17 seconds
    // thus the whole time will exceed the typical ~30s watchdog.
    wdtFeed();

    s_ctx->csrLen = csrCreate(s_ctx->csr, &s_ctx->keystruct, &s_ctx->rng);
    if (!s_ctx->csrLen) {
        goto out;
    }
    csrEncodePrivateKey(s_ctx->key, &s_ctx->keystruct);

    ret = true;
out:
    wc_FreeRng(&s_ctx->rng);
    wc_ecc_free(&s_ctx->keystruct);

    return ret;
}


size_t encodeSignatureAlgorithm(uint8_t *der)
{
    size_t i = 0;

    /* signatureAlgorithm  */
    der[i++] = ASN1_SEQUENCE | ASN1_CONSTRUCTED;
    der[i++] = 10; /* Length */

    /*  algorithm */
    der[i++] = ASN1_OBJECT_IDENTIFIER;
    der[i++] = 8; /* Length */
    /* From RFC 5480, Appendix A. Also in RFC5754 3.3 and RFC5758 3.2.
     * ecdsa-with-SHA256 OBJECT IDENTIFIER ::= { iso(1) member-body(2)
     *   us(840) ansi-X9-62(10045) signatures(4) ecdsa-with-SHA2(3) 2 }
     */
    der[i++] = 1 * 40 + 2; /* Encode 1 and 2 */
    der[i++] = 0x80 | 840 / 128; /* Encode 840 */
    der[i++] = 840 % 128;
    der[i++] = 0x80 | 10045 / 128; /* Encode 10045 */
    der[i++] = 10045 % 128;
    der[i++] = 4;
    der[i++] = 3;
    der[i++] = 2;

    /* From RFC5758 section 3.2
     *    When the ecdsa-with-SHA224, ecdsa-with-SHA256, ecdsa-with-SHA384, or
     *    ecdsa-with-SHA512 algorithm identifier appears in the algorithm field
     *    as an AlgorithmIdentifier, the encoding MUST omit the parameters
     *    field.  That is, the AlgorithmIdentifier SHALL be a SEQUENCE of one
     *    component, the OID ecdsa-with-SHA224, ecdsa-with-SHA256, ecdsa-with-
     *    SHA384, or ecdsa-with-SHA512.
     * So skip parameters.
     */

    return i;
}


static size_t encodeCertificationRequestInfo(uint8_t *der, ecc_key *key)
{
    size_t i = 0;

    /* certificationRequestInfo */
    der[i++] = ASN1_SEQUENCE | ASN1_CONSTRUCTED;
    der[i++] = 98; /* Length */

    /*  version */
    der[i++] = ASN1_INTEGER;
    der[i++] = 1; /* Length */
    der[i++] = 0; /* v1, i.e. number 0 */

    /*  subject */
    der[i++] = ASN1_SEQUENCE | ASN1_CONSTRUCTED;
    der[i++] = 0; /* Length */

    /*  subjectPKInfo */
    der[i++] = ASN1_SEQUENCE | ASN1_CONSTRUCTED;
    der[i++] = 89; /* Length */

    /*   AlgorithmIdentifier */
    der[i++] = ASN1_SEQUENCE | ASN1_CONSTRUCTED;
    der[i++] = 19; /* Length */

    /*    algorithm */
    der[i++] = ASN1_OBJECT_IDENTIFIER;
    der[i++] = 7; /* Length */

    /* From RFC 5480, section 2.1.1
     * id-ecPublicKey OBJECT IDENTIFIER ::= {
     *   iso(1) member-body(2) us(840) ansi-X9-62(10045) keyType(2) 1 }
     */
    der[i++] = 1 * 40 + 2; /* Encode 1 and 2 */
    der[i++] = 0x80 | 840 / 128; /* Encode 840 */
    der[i++] = 840 % 128;
    der[i++] = 0x80 | 10045 / 128; /* Encode 10045 */
    der[i++] = 10045 % 128;
    der[i++] = 2;
    der[i++] = 1;

    /*    parameters (ECParameters) */
    i += encodeSecp256r1(der + i);

    /*    subjectPublicKey */
    i += encodePubKey(der + i, key);

    /*  attributes */
    der[i++] = ASN1_CONTEXT_SPECIFIC | ASN1_CONSTRUCTED | 0; /* tag 0 */
    der[i++] = 0; /* Length */

    ASSERT(i == 98 + 2);

    return i;
}



size_t csrCreate(uint8_t *der, ecc_key *key, WC_RNG *rng)
{
    size_t i = 0;

    /* Encode CertificationRequest */
    der[i++] = ASN1_SEQUENCE | ASN1_CONSTRUCTED;
    der[i++] = 0x80 | 0x01; /* Long form, one octet for length */
    der[i++] = 0; /* Length of CertificationRequest, To be filled in later */

    i += encodeCertificationRequestInfo(der + i, key);

    i += encodeSignatureAlgorithm(der + i);

    /*  signature */
    der[i++] = ASN1_BIT_STRING;
    der[i++] = 0; /* Length, to be filled in later */
    der[i++] = 0; /* Number of unused bits, when not multiple of 8 bits */

    uint8_t digest[SHA256_DIGEST_SIZE];
    /* Calculate the hash of certificationRequestInfo, length is header + body
     * of sequence create in encodeCertificationRequestInfo().
     */
    if (wc_Sha256Hash(der + 3, 2 + 98, digest)) {
        return 0;
    }

    // Sign the hash
    word32 signLen = DER_CSR_SIZE - i;
    if (wc_ecc_sign_hash((byte *)digest, sizeof(digest), der + i, &signLen,
                rng, key)) {
        return 0;
    }

    der[i - 2] = 1 + signLen; /* Encode length, include byte for unused bits */
    i += signLen;

    /* Set the length of CertificationRequest */
    der[2] = i - 3;

    ASSERT(i <= DER_CSR_SIZE);

    return i;
}


Key exchange in DTLS (Diffie-Helman):
TLSX_KeyShare_ProcessDh()
performs wc_DhAgree() to derive secret from private key and peers public key.



-----------------------------------------------------------



11/10/2018 14:34:41Invalid DLMS frame.

RX:
7E A8 89 03 61 7E 8E A2 6F 60 78 FE C4 C3 9E 44 45 EF 45 D0 5F BF D3 FD A3 BE BC 50 C7 E0 7F 7F BE 22 66 66 4B 5F BC 06 D3 D1 62 BA EA 18 79 57 95 71 03 D9 5B 10 F0 73 75 68 F7 AE F5 51 E2 60 30 26 70 3B EE 9D 72 F9 C1 83 BA AF 56 B1 23 E2 D5 55 61 79 D7 9E A0 EA 7C A6 27 AE 0E 3B 59 80 A5 89 58 2D 39 11 BF B6 67 81 9A B4 69 CF 89 0D D9 12 3C 9E 11 14 5E 08 EB D2 6C 27 16 46 03 7F 9D DF 99 AE 64 6E B7 35 B5 34 7E 7E A0 07 61 03 11 63 06 7E

14:34:41
<HDLC len="88" >
<TargetAddress Value="1" />
<SourceAddress Value="30" />
<FrameType Value="70" />
<NextFrame Value="AEA26F788E50DF8FC5E427FC2683325EE00F76B7D9790AA682697770B8A16EDE7203C233B69C8B0F76AB4E7F960D57451649CDC53C6ADD96EDA8AF8B3832407FD6499F48D264C64F99B7E1932784D23FD8E60A57143C3C23031CBA7564FB19DAEB726FD745E20C54BA2F10CCE0A4A83E68620A96711523EE8CA5FB5C0ACF1BC7" />
</HDLC>

14:34:41
<HDLC len="94" >
<TargetAddress Value="30" />
<SourceAddress Value="1" />
<FrameType Value="31" />
<Command Value="NextFrame" />
</HDLC>

14:34:41
<HDLC len="7E" >
<TargetAddress Value="1" />
<SourceAddress Value="30" />
<FrameType Value="72" />
<NextFrame Value="0551D22074E9E40C94A8D61002ECF8883AD82FAD716D6552EE69E4827080E6260F729FD7F8CAAF3D902F41E8151F1DD17375C12D2450448242B7FB7227C036E754520E36C45355E64882BECFF2BFACC2D2BDEB5D0CDD1FD5893D36D8F877B1C54F4B7FABE75A1E20D42F47C6F7405705CAA4357EC439" />
</HDLC>



11/10/2018 14:37:24Invalid DLMS frame.

RX:
7E A0 6B 03 61 10 2A FF E6 E6 00 60 5D A1 09 06 07 60 85 74 05 08 01 03 A6 0A 04 08 4C 54 43 4C 49 45 4E 54 8E 02 07 80 8B 07 60 85 74 05 08 02 02 AC 12 80 10 2D 1E 08 3D 47 1B 19 07 12 26 2D 6C 45 50 45 11 BE 23 04 21 21 1F 30 00 00 00 D2 D6 D1 F4 7C 91 8F F4 BD F1 65 A0 DD 14 E4 4E 2A 85 9C 19 A9 90 2D 65 7E 5F 03 FE 85 7E 7E A0 77 61 03 30 AD 6C E6 E7 00 61 69 A1 09 06 07 60 85 74 05 08 01 03 A2 03 02 01 00 A3 05 A1 03 02 01 0E A4 0A 04 08 4C 4E 54 30 31 31 38 30 88 02 07 80 89 07 60 85 74 05 08 02 02 AA 12 80 10 61 62 63 64 65 66 67 68 69 6A 6B 6C 6D 6E 6F 70 BE 23 04 21 28 1F 30 00 00 00 CD BB 68 67 B9 78 1D B5 50 AE B1 63 A5 44 74 4B 15 46 AB 4D F4 45 F5 F4 42 92 41 21 BB 7E

14:37:24
<HDLC len="3D" >
<TargetAddress Value="1" />
<SourceAddress Value="30" />
<FrameType Value="32" />
<PDU>
<glo_ActionRequest Value="30000000D32243FDF579485250F23F997F2D42868055FEDF53A30024112DC5815C3775E65F5360F12CBEB74657F3D0AF" />
</PDU>
</HDLC>

14:37:24
<HDLC len="3D" >
<TargetAddress Value="1" />
<SourceAddress Value="30" />
<FrameType Value="32" />
<PDU>
<glo_ActionRequest Value="30000000D32243FDF579485250F23F997F2D42868055FEDF53A30024112DC5815C3775E65F5360F12CBEB74657F3D0AF" />
</PDU>
</HDLC>

14:37:24
<HDLC len="36" >
<TargetAddress Value="30" />
<SourceAddress Value="1" />
<FrameType Value="52" />
<PDU>
<glo_ActionResponse Value="30000000CE47CDEBA5CC85E5F1F0D21C35AB429A290502DDB4EAFF218E6CCB50E9FBF136FE146505F0" />
</PDU>
</HDLC>
14:37:44 Send Keep Alive
TX:  7E A0 2C 03 61 54 9C BA E6 E6 00 C8 1E 30 00 00 00 D4 43 6A C7 EF 1E 55 70 19 57 89 CD 28 C9 E1 09 50 8A 31 E2 0A DF 80 0F 13 70 63 F1 7E
14:37:44
RX:  7E A0 2C 03 61 54 9C BA E6 E6 00 C8 1E 30 00 00 00 D4 43 6A C7 EF 1E 55 70 19 57 89 CD 28 C9 E1 09 50 8A 31 E2 0A DF 80 0F 13 70 63 F1 7E 7E A0 2B 61 03 74 AF 2A E6 E7 00 CC 1D 30 00 00 00 CF A3 BB 18 05 BE 19 3F B5 9D 70 C7 9E FD 79 40 6E 42 B8 AE A2 0F B5 89 B7 39 2A 7E
14:37:45 Writing object 0.0.13.0.0.255, interface ActivityCalendar
TX:  7E A8 89 03 61 76 C6 2E E6 E6 00 C9 82 01 EF 30 00 00 00 D5 37 02 F3 11 BA BF 3E 5A 9D 55 19 08 41 00 AD A5 D6 B8 BA FE 3E 8D 6A 52 04 D1 9F E9 83 76 20 24 BE 2F 17 FD 3A FA DA AF AE 8C 8A 3D DD 85 B5 36 CC 8D BD E8 34 35 3F A3 7B 0E 3A 14 D0 FB B6 38 4A 28 EF 9E A6 B3 F7 59 77 52 64 C9 A5 2A 60 D7 22 99 52 3E D1 5B EA D5 91 AE 7E 34 37 EB 20 B5 AB 44 65 BE B0 D6 DD CB 34 EB 43 55 EE F4 E3 1F 3B 57 24 39 98 A6 7E
14:37:46
RX:  7E A8 89 03 61 76 C6 2E E6 E6 00 C9 82 01 EF 38 00 00 00 D5 37 02 F3 11 BA BF 3E 5A 9D 55 19 08 41 00 AD A5 D6 B8 BA FE 3E 8D 6A 52 04 D1 9F E9 83 76 20 24 BE 2F 17 FD 3A FA DA AF AE 8C 8A 3D DD 85 B5 36 CC 8D BD E8 34 35 3F A3 7B 0E 3A 14 D0 FB B6 38 4A 28 EF 9E A6 B3 F7 59 77 52 64 C9 A5 2A 60 D7 22 99 52 3E D1 5B EA D5 91 AE 7E 34 37 EB 20 B5 AB 44 65 BE B0 D6 DD CB 34 EB 43 55 EE F4 E3 1F 3B 57 24 39 98 A6 7E 7E A0 07 61 03 91 6B 82 7E
14:37:46 Writing object 0.0.13.0.0.255, interface ActivityCalendar
TX:  7E A8 89 03 61 78 B8 C7 49 ED D2 4A E3 CB AE 87 B6 D0 C6 F5 A3 46 FC CC 08 71 DD F1 D9 DF 8E 61 60 70 3B 03 22 88 1E AF 90 82 7A EC 40 2F DF 87 3F 7E EA FE FF B6 04 4A FB 79 29 E7 DE A4 B0 99 27 35 AE 24 E5 C6 5A D0 F7 6F A2 B6 51 B4 52 B5 65 50 9F 95 3E D5 E9 B4 BE 62 6B DC 9A AB 8D E1 FF 00 EF FD C8 33 33 15 E5 93 C2 59 56 F6 35 13 99 54 E3 21 80 A4 1B 9E E7 74 61 5E AB C5 1B 67 AD E6 6F B0 E3 28 FE 07 E8 8D 7E
14:37:51 Data send failed. Try to resend 1/3 7E A8 89 03 61 78 B8 C7 49 ED D2 4A E3 CB AE 87 B6 D0 C6 F5 A3 46 FC CC 08 71 DD F1 D9 DF 8E 61 60 70 3B 03 22 88 1E AF 90 82 7A EC 42 2F DF 87 3F 7E EA FE FF B6 04 4A FB 79 29 E7 DE A4 B0 99 27 35 AE 24 E5 C6 5A D0 F7 6F A2 B6 51 B4 52 B5 65 50 9F 95 3E D5 E9 B4 BE 72 6B DC 9A AB 8D E1 FF 00 EF FD C8 33 33 15 E5 32 B8 56 95 5F D3 A2 33 55 BC 48 60 D2 23 76 74 61 5E AB C5 1B 67 AD E6 6F B0 E3 28 FE 07 E8 8D 7E 7E A0 07 61 03 B1 69 A3 7E
14:37:56 Data send failed. Try to resend 2/3 7E A8 89 03 61 78 B8 C7 49 ED D2 4A E3 CB AE 87 B6 D0 C6 F5 A3 46 FC CC 08 71 DD F1 D9 DF 8E 61 60 70 3B 03 22 88 1E AF 90 82 7A EC 42 2F DF 87 3F 7E EA FE FF B6 04 4A FB 79 29 E7 DE A4 B0 99 27 35 AE 24 E5 C6 5A D0 F7 6F A2 B6 51 B4 52 B5 65 50 9F 95 3E D5 E9 B4 BE 72 6B DC 9A AB 8D E1 FF 00 EF FD C8 33 33 15 E5 32 B8 56 95 5F D3 A2 33 55 BC 48 60 D2 23 76 74 61 5E AB C5 1B 67 AD E6 6F B0 E3 28 FE 07 E8 8D 7E 7E A0 07 61 03 B1 69 A3 7E 7E A8 A9 03 61 78 B8 C7 49 ED D2 4A E3 CB AE 87 B6 D0 C6 F5 A3 46 FC CC 08 71 DD F1 D9 DF 8E 61 70 70 3B 03 22 89 1E AF D0 82 7A EC 40 2F DF 87 3F 7E EA FE FF B6 04 4A FB 79 29 E7 DE A4 B0 99 27 35 AE 24 E5 C6 5A D4 F7 6F A2 B6 51 B4 52 B5 65 50 9F 95 3E D5 E9 B4 BE 62 6B DC 9A AB 8D E1 FF 00 EF FD C8 33 33 15 E5 93 C2 59 56 F6 35 13 99 54 E3 21 80 A4 1B 9E EF 74 61 5E AB C5 1B 67 AD E6 6F B0 E3 28 FE 07 E8 8D 7E 7E A0 07 61 03 B1 69 A3 7E
14:37:56
RX:  7E A8 89 03 61 78 B8 C7 49 ED D2 4A E3 CB AE 87 B6 D0 C6 F5 A3 46 FC CC 08 71 DD F1 D9 DF 8E 61 60 70 3B 03 22 88 1E AF 90 82 7A EC 42 2F DF 87 3F 7E EA FE FF B6 04 4A FB 79 29 E7 DE A4 B0 99 27 35 AE 24 E5 C6 5A D0 F7 6F A2 B6 51 B4 52 B5 65 50 9F 95 3E D5 E9 B4 BE 72 6B DC 9A AB 8D E1 FF 00 EF FD C8 33 33 15 E5 32 B8 56 95 5F D3 A2 33 55 BC 48 60 D2 23 76 74 61 5E AB C5 1B 67 AD E6 6F B0 E3 28 FE 07 E8 8D 7E 7E A0 07 61 03 B1 69 A3 7E 7E A8 A9 03 61 78 B8 C7 49 ED D2 4A E3 CB AE 87 B6 D0 C6 F5 A3 46 FC CC 08 71 DD F1 D9 DF 8E 61 70 70 3B 03 22 89 1E AF D0 82 7A EC 40 2F DF 87 3F 7E EA FE FF B6 04 4A FB 79 29 E7 DE A4 B0 99 27 35 AE 24 E5 C6 5A D4 F7 6F A2 B6 51 B4 52 B5 65 50 9F 95 3E D5 E9 B4 BE 62 6B DC 9A AB 8D E1 FF 00 EF FD C8 33 33 15 E5 93 C2 59 56 F6 35 13 99 54 E3 21 80 A4 1B 9E EF 74 61 5E AB C5 1B 67 AD E6 6F B0 E3 28 FE 07 E8 8D 7E 7E A0 07 61 03 B1 69 A3 7E 7E A8 89 03 61 78 B8 C7 49 ED D2 4A E3 CB AE 87 B6 D0 C6 F5 A3 46 FC CC 08 71 DD F1 D9 DF 8E 61 60 70 3B 03 22 88 1E AF 90 82 7A EC 40 2F DF 87 3F 7E
14:37:56 Writing object 0.0.13.0.0.255, interface ActivityCalendar
TX:  7E A8 89 03 61 7A AA E4 9D 97 B2 0C B3 75 D2 A6 D4 6C EC 5D 82 8B 81 27 34 1B AB FA 81 72 57 DD 11 0D 7C 14 BD 56 0A 33 1C 48 D4 6D 76 8E 8C 65 69 46 23 9E EB 92 24 30 E2 8F 61 CB B8 0E 12 85 8B A7 94 45 3B F4 14 61 98 A1 DE AB E7 4A 31 E8 92 7C 32 84 EA B3 BF 0B 76 E9 D4 5C 6B EA 2A 6C A7 52 9B 6A 15 12 39 6E A0 3E 6C E8 FF 87 A1 22 38 02 4F 5C 68 2B A0 CA 3A 9E A7 C7 60 50 C4 24 7B BB 26 9F DD E6 83 AE D7 F5 7E
14:38:01 Data send failed. Try to resend
14:38:01

14:38:01 Writing object 0.0.13.0.0.255, interface ActivityCalendar
TX:  7E A0 7F 03 61 7C 0D E7 DD 5F F0 85 B2 DD 88 97 18 8F 99 97 38 97 D6 38 BD F6 14 D8 37 88 86 BA 86 FD F6 1C C4 38 35 21 E3 78 EA 07 11 62 B0 80 09 68 9F 16 C5 92 45 9B 78 AD 0F 47 BA 8F F3 67 EC 40 47 F4 C5 64 21 3C AF DE 73 26 5F 83 C9 F2 48 22 2C E8 37 54 66 A2 B1 D3 F4 9D 1B F8 14 B6 C0 0B 36 F4 EF 47 AD 3F F9 FC 7B E4 5F 79 48 BB 82 D4 2E 3A 0E 4A A2 5E 3F 54 AB 40 64 72 0E C9 7E




----------------------------------------------------------------------

connect & read:

14:41:28 Read object type ActivityCalendar index: 2
TX:  7E A0 2C 03 61 54 9C BA E6 E6 00 C8 1E 30 00 00 00 D8 61 7B B5 58 83 30 37 70 E9 E3 ED E2 5F 2F 93 68 8E 9B 0D 7E 75 77 A8 5D 98 49 5F 7E
14:41:28
RX:  7E A0 2C 03 61 54 9C BA E6 E6 00 C8 1E 30 00 00 00 D8 61 7B B5 58 83 30 37 70 E9 E3 ED E2 5F 2F 93 68 8E 9B 0D 7E 75 77 A8 5D 98 49 5F 7E 7E A0 2D 61 03 74 35 61 E6 E7 00 CC 1F 30 00 00 00 D3 CD 5D F6 A0 6D 7E FC FD 11 85 F1 21 7D 83 6D F2 ED CC 40 5E B7 59 3C C5 5F A9 92 E9 7E
14:41:28 Read object type ActivityCalendar index: 3
TX:  7E A0 2C 03 61 76 8C B8 E6 E6 00 C8 1E 30 00 00 00 D9 42 15 C6 08 F9 26 8D 2B F0 FC 11 DA 2E AD 36 B2 C3 37 F0 C0 65 A6 81 48 2D BE A5 7E
14:41:28
RX:  7E A0 2C 03 61 76 8C B8 E6 E6 00 C8 1E 30 00 00 00 D9 42 15 C6 08 F9 26 8D 2B F0 FC 11 DA 2E AD 36 B2 C3 37 F0 C0 6D A6 81 48 2D BE A5 7E 7E A0 3B 61 03 96 12 2D E6 E7 00 CC 2D 30 00 00 00 D4 89 64 99 03 4B DD 6E 68 44 21 99 17 B9 4E 8E 1A DE C2 C0 80 23 B6 11 40 F0 92 72 61 7A 42 B2 3F A4 D1 CD 65 FC C4 CD 13 97 BF 7E
14:41:28 Read object type ActivityCalendar index: 4
TX:  7E A0 2C 03 61 98 FC B6 E6 E6 00 C8 1E 30 00 00 00 DA ED 4F 56 87 B5 BD 66 EA ED 53 F0 1C BD 0D 7C 9E 36 B4 91 09 CF 41 4F 81 20 4E AC 7E
14:41:29
RX:  7E A0 2C 03 61 98 FC B6 E6 E6 00 C8 1E 30 00 00 00 DA ED 4F 56 87 B5 BD 66 EA ED 53 F0 1C BD 0D 7C 9E 36 B4 91 09 CF 41 4F 81 20 4E AC 7E 7E A0 38 61 03 B8 A3 C0 E6 E7 00 CC 2A 30 00 00 00 D5 8F 37 22 10 8A 0A 20 15 86 48 62 07 80 F8 CF A5 01 A1 B0 99 92 40 34 21 F2 F3 2D 78 2F 0B 23 89 FD 1F F4 6E B5 24 4E 7E
14:41:29 Read object type ActivityCalendar index: 5
TX:  7E A0 2C 03 61 BA EC B4 E6 E6 00 C8 1E 30 00 00 00 DB 36 76 8A 27 9C AC 92 42 7C 75 99 F5 1B E5 C9 64 F8 7C 87 7F 3A 6A 28 C3 BE B9 D4 7E
14:41:29
RX:  7E A0 2C 03 61 BA EC B4 E6 E6 00 C8 1E 30 00 00 00 DB 36 76 8A 27 9C AC 92 42 7C 75 99 F5 1B E5 C9 64 F8 7C 87 7F 3A 6A 28 C3 BE B9 D4 7E 7E A8 89 61 03 DA B0 A7 E6 E7 00 CC 81 B5 30 00 00 00 D6 A6 9C 29 41 A2 8D B9 99 4D C5 D6 D0 5D C5 09 32 1E D6 9B 69 ED 64 BA 63 2C 0D 4C 0A 97 D2 56 34 84 6F E4 07 9F 06 1B A8 99 F0 3C 81 57 DC BC 0E 28 FF C6 74 86 EA 2A 11 3A 7D 36 7B 85 80 A8 4C EB 4A 15 DA 8C 5A 47 11 18 7A C7 25 B3 6B 00 24 B2 42 DF E6 1E 35 A5 93 71 0F 0C DD D5 6A 18 FE B0 C6 41 E8 5B 6A B0 EC 0C 10 9A 45 A8 2E 57 CF 4F 55 09 A2 9A A4 11 7E
14:41:29
TX:  7E A0 07 03 61 D1 7F 26 7E
14:41:29
RX:  7E A0 07 03 61 D1 7F 26 7E 7E A0 44 61 03 DC F0 28 FC 2E 7B AE 01 93 BE FD A3 C3 E5 7D 08 04 2A F8 54 CC 6A C5 11 3E 1C 56 B4 69 6E 65 EB 40 9E 1E C0 94 3D 8B DC B3 28 B2 80 17 82 74 01 9B 15 BA B2 62 ED 79 97 EB 23 CD C1 0F CC 92 4D 7E
14:41:29 Read object type ActivityCalendar index: 6
TX:  7E A0 2C 03 61 FC DE 93 E6 E6 00 C8 1E 30 00 00 00 DC 82 A6 AB 43 2B 65 71 97 BF F7 0A 88 7C EB B4 17 11 E8 50 CB F7 73 A0 B9 4B 9B 9D 7E
14:41:29
RX:  7E A0 2C 03 61 FC DE 93 E6 E6 00 C8 1E 31 00 00 00 DC 82 A6 AB 43 2B 65 71 97 BF F7 0A 88 7C EB B4 17 11 E8 50 CB F7 73 A0 B9 4B 9B 9D 7E 7E A0 2D 61 03 FE 67 4A E6 E7 00 CC 1F 30 00 00 00 D7 E4 6E 3A 92 BA B7 FA 9F 2E 49 59 48 F9 7D C3 95 4D 98 CA F3 F5 F9 1B CC DF 83 6F 32 7E
14:41:29 Read object type ActivityCalendar index: 7
TX:  7E A0 2C 03 61 1E C2 57 E6 E6 00 C8 1E 30 00 00 00 DD 33 FC 5C 44 DD 95 4A 1D B5 2F D6 DE DB F2 47 21 0F 64 10 8C 2F 0B 6C AD C2 D5 D7 7E
14:41:29
RX:  7E A0 2C 03 61 1E C2 57 E6 E6 00 C8 1E 30 00 00 00 DD 33 FC 5C 44 DD 95 4A 1D B5 2F D6 DE DB F2 47 21 0F 64 10 8C 2F 0B 6C AD C2 D5 D7 7E 7E A0 7D 61 03 10 01 91 E6 E7 00 CC 6F 30 00 00 00 D8 2F 22 DC 2F 51 35 11 13 45 E3 9B 4E 84 73 93 40 24 EC 25 33 5A 93 69 52 C1 20 FF EF 84 24 27 F4 CC 59 81 A9 73 06 A5 FF 6C B9 34 BF D5 95 FD B0 3A 0E 14 6E 33 A7 81 08 B5 56 83 71 30 D6 19 D2 99 31 BE 33 2C CD 24 61 FD A6 F2 D8 0C CE 43 93 F7 92 CF 27 55 7D 79 2D B7 40 1C 2B CD 01 B7 FA 22 72 64 ED F5 7D 8A C1 64 2A 17 79 7E
14:41:29 Read object type ActivityCalendar index: 8
TX:  7E A0 2C 03 61 30 BE 9F E6 E6 00 C8 1E 30 00 00 00 DE 59 2E B1 06 9E 7C E1 77 75 96 4A E7 B6 D8 01 55 A8 B7 4C B9 EF 43 E4 09 07 DB FE 7E
14:41:30
RX:  7E A0 2C 03 61 30 BE 9F E6 E6 00 C8 1E 30 00 00 00 DE 59 2E B1 06 9E 7C E1 77 75 96 4A E7 B6 D8 01 55 A8 B7 4C B9 EF 43 E4 09 07 DB FE 7E 7E A0 71 61 03 32 25 04 E6 E7 00 CC 63 30 00 00 00 D9 DB A3 88 80 ED 4C CE 8B 46 B3 A2 D6 2E 93 34 73 6E 7E EA A9 BC FD 9A 61 20 9D 00 EC 8C CB E9 A8 45 73 D1 79 49 4C E8 E7 5C D4 BB 7B 1B 21 D7 C7 E6 DD 29 93 38 41 62 06 7A F3 A3 50 22 40 C2 45 5F BC 0D EF 69 22 77 4F D8 E1 6D FC 85 8D DA FE F4 AB C9 C9 A1 2C 87 E4 5C 76 37 EC C3 3D 72 8F 7E
14:41:30 Read object type ActivityCalendar index: 9
TX:  7E A0 2C 03 61 52 AA DF E6 E6 00 C8 1E 30 00 00 00 DF 15 8B 9F FF E1 CB 16 50 C1 58 A0 07 83 1B 6E 7E 23 93 9A 78 E2 A2 68 7F A3 F3 42 7E
14:41:30
RX:  7E A0 2C 03 61 52 AA DF E6 E6 00 C8 1E 30 00 00 00 DF 15 8B 9F FF E1 CB 16 50 C1 58 A0 07 83 1B 6E 7E 23 93 9A 78 E2 A2 68 7F A3 F3 42 7E 7E A8 89 61 03 54 C6 CA E6 E7 00 CC 82 01 5B 30 00 00 00 DA E4 65 1E DC E9 D4 7A A6 4F 7C A0 BF 61 18 47 C2 49 C1 8F 65 35 0E A0 8E E2 E4 A7 C8 2E DE 3A C2 0D 82 30 B2 3A 47 86 28 73 75 9A 2D 92 DF 1D CC 7B 5D F0 70 B9 4E 47 84 40 7A C9 CF EA AB DD B5 88 72 A1 EF BD 17 B7 47 5E 9E 58 74 0C 53 E2 F9 85 01 5F AB 33 E9 E3 3C 9C D8 AB 28 8C 45 20 C8 DE 99 4F A0 6B F4 0C 02 F6 E4 A4 32 16 47 09 ED 61 DE 1C E0 6F 5A 7E
14:41:30
TX:  7E A0 07 03 61 71 75 83 7E
14:41:30
RX:  7E A0 07 03 61 71 75 83 7E 7E A8 89 61 03 56 D4 E9 7F EE 01 30 8D 53 4B AF 9E BD 1E AF E4 66 42 B1 DC 19 6D 26 11 97 F4 5C 0A 98 95 38 38 27 4E 42 28 2B 10 5F AB 70 D6 CA CB 0C 73 8D 7B 39 0D 2C CE 12 B6 1A 30 81 71 1D A2 BA 67 3D DB AA 4F A4 78 99 76 06 C5 CE E0 05 F1 6E 0C 73 B8 0F 8D C6 38 BB B2 EB 5D 80 EA 3E 0F C4 53 5A C4 C6 5A B9 91 A9 53 F3 78 83 37 CA D9 FE 47 C4 99 DC 95 CC 6D 03 FE F8 4D 7D 25 59 FE 2F 43 D7 1F DA 80 D4 65 A0 7E
14:41:30
TX:  7E A0 07 03 61 91 7B 64 7E
14:41:30
RX:  7E B0 07 03 61 91 7B 64 7E 7E A0 6B 61 03 58 76 D7 1E 3D F6 01 01 20 6C 05 D9 B8 A3 0F C1 C5 1B 99 7E 5D 7F 50 1C 4A 91 14 BC EF 84 DB F2 D0 D6 F0 7F 15 C2 2C 4E 2C 12 ED 8E FF A1 63 8F DF 7D C0 AF 06 6A FB 47 94 A1 7D F4 1C 8A 6D E5 7C B9 7D F7 F5 D8 82 94 F6 EA F7 34 92 80 74 53 9D 7B 0C 7F 8E 45 F9 E2 4C B2 D4 E4 FC 2E 2A 2F 07 11 71 E6 1D EC B1 7E
14:41:30
TX:  7E A0 26 03 61 B4 3C 81 E6 E6 00 C8 18 30 00 00 00 E0 02 5A 8D D4 01 22 70 44 4B B2 4D DC 61 F7 B2 62 64 5A FC 6C 00 7E
14:41:30
RX:  7E A0 26 03 61 B4 3C 81 E6 E6 00 C8 18 30 00 00 00 E0 02 5A 8D D4 21 22 70 44 4B B2 4D DC 61 F7 B2 62 64 5A FC 6C 00 7E 7E A8 89 61 03 7A BA 02 E6 E7 00 CC 82 01 59 30 00 00 00 DB B4 A0 5B 17 0F 23 58 08 C8 2C 76 DB 07 2E DE 41 7E 7B 33 44 D0 97 B5 B9 CD 55 55 4A 5D AA 3F 94 F9 94 8B 50 21 87 F5 23 29 51 33 DA 36 D0 05 11 F0 9F A0 06 AF 2A 40 E0 D1 52 C4 B9 8E 72 37 5B AA 44 31 44 70 D2 E8 D5 C6 87 3A C5 D1 69 BD 2A A9 16 25 D1 E2 6E D7 07 26 25 2B 66 E4 E7 85 55 96 41 D6 A1 37 10 82 48 14 F8 67 28 F3 57 67 19 F6 37 4E BC 32 BF 7E
14:41:30
TX:  7E A0 07 03 61 D1 7F 26 7E
14:41:31
RX:  7E A0 07 03 61 D1 7F 26 7E 7E A8 89 61 03 7C 8C 67 C4 4D 5E B1 DB D4 5A B3 D5 6E ED 17 D7 DF C2 E4 BB 8D 27 7A 1C 28 4F AA 8F E8 9C 18 91 21 C0 AF ED 1F 50 E2 F0 64 EC 75 CE 4B 02 6D C3 E7 E7 56 3D A4 58 2F 92 EB C0 35 DE 04 63 55 F3 6A C4 E7 6D A4 77 25 2E 14 AF 8B 59 7E 4E 4C 0A A3 B4 37 9B 41 7D 6C 49 2F DF 24 FF 28 D2 19 FE 0A CC 38 D6 14 7A 9F 2E 8F 90 37 4F A8 81 B4 33 92 6E 87 26 93 78 AE AD 68 84 B3 8E 23 A5 01 4F A5 4A C1 CB D0 7E
14:41:31
TX:  7E A0 07 03 61 F1 7D 07 7E
14:41:31
RX:  7E A0 07 23 61 F1 7D 07 7E 7E A0 69 61 03 7E 34 AA 7A C2 69 EB CC 1F 9C 3B 9C 4C 98 0E 80 A1 D5 1E 7E 44 88 80 9A CF 10 BF 4B 26 96 93 28 75 BE 55 FE 72 8E 37 84 0E 76 AF 5B 7E 60 2A DD 9F 0A 58 3E 9E 02 39 2B AB BC C2 FA 34 9D D5 5A 4A 73 03 9C C7 28 73 6E 6C DA 67 56 B4 6B B0 6D ED F0 50 53 73 47 52 B7 C0 1D BA FD A4 16 91 7A 1D CC 14 58 81 7E
14:41:31
TX:  7E A0 26 03 61 16 24 07 E6 E6 00 C8 18 30 00 00 00 E1 AD C7 83 B8 C9 D7 01 B1 B2 2C 53 9B AB A6 C7 CB F0 B7 D0 D0 93 7E
14:41:31
RX:  7E A0 26 03 61 16 24 07 E6 E6 00 C8 18 30 00 00 00 E1 AD C7 83 B8 C9 D7 01 B1 B2 2C 53 9B AB A6 C7 CB F0 B7 D0 D0 93 7E 7E A8 89 61 03 90 EE 4A E6 E7 00 CC 82 01 59 30 00 00 00 DC 74 5D 5B AD BF E6 18 ED 0D 0C 78 7E 92 B0 10 2B F4 7B 73 5E FD DC E3 04 17 B2 43 41 81 8F BD 71 F2 29 88 39 3B 3B 8F A6 B8 25 7C 19 CC BB 9B 6A 3C BA F9 AF 95 89 A1 44 B0 53 6E 4D 25 72 3B 0B 82 91 73 C1 6A A1 75 0D CC A4 2E FC A3 74 B5 50 91 09 A7 A6 8E 87 92 11 31 C8 1C D3 84 8C 4C 93 54 AA 2E 13 31 DF 39 0F 97 BE 11 CA 0E 89 10 05 21 79 75 E9 40 07 7E
14:41:31
TX:  7E A0 07 03 61 31 71 C1 7E
14:41:31
RX:  7E A0 07 03 61 31 71 C1 7E 7E A8 89 61 03 92 FC 69 43 9B 20 B9 3D 1F 84 F9 69 8A B7 E6 98 74 85 91 1F C1 06 64 E0 0A A3 05 54 49 66 08 2E 3A 24 E4 E7 56 76 1B 21 1B 8B DA 50 E6 2C 6D D1 F3 9F C5 58 09 CF 51 A0 EC D3 60 EF 28 83 2D A5 64 5D 3C 5D 8A 95 FA 9C 7B 49 68 73 68 1A 62 B5 8A 19 AC 00 DE E7 27 74 00 AA 88 26 DA 63 C7 CB E3 00 CB 44 E9 9F CC F3 55 71 9C 02 2C 81 77 88 8D E2 52 36 37 A8 B9 F1 27 86 88 4F 70 A1 07 88 28 94 8E DC DA 7E
14:41:31
TX:  7E A0 07 03 61 51 77 A2 7E
14:41:31
RX:  7E A0 07 03 E1 51 77 A2 7E 7E A0 69 61 03 94 60 E2 6B 97 A4 96 C1 41 B2 7D 4C F3 51 58 24 8B 58 94 A3 10 21 1F E3 CF 18 FD C7 F4 D5 6F F4 1E 23 8A 88 6B 4B 91 F0 D6 18 E2 C3 43 BC 49 BA 7F AF 95 BB A2 4C A9 31 2B 50 08 06 E0 76 A3 AE C5 38 87 BB 0B 99 98 B3 FA 42 94 77 D2 24 2B BE D6 4E 01 A6 16 33 B3 05 12 9A 2B 42 11 46 C5 7A BD 3C 20 61 E9 7E
14:41:31 Read object type ActivityCalendar index: 10
TX:  7E A0 2C 03 61 78 F2 51 E6 E6 00 C8 1E 30 00 00 00 E2 1C A1 9C 69 FF B8 09 DC 30 D7 0F A8 9B E2 52 B8 8B 2C 4D 27 79 36 DE 2D F2 E1 99 7E
14:41:31
RX:  7E A0 2C 03 61 78 F2 51 E6 E6 00 C8 1E 30 00 00 00 E2 1C A1 9C 69 FF B8 09 DC 30 D7 0F A8 9B E2 52 B8 8B 2C 4D 27 79 36 DE 2D F2 E1 99 7E 7E A0 31 61 03 B6 BE D0 E6 E7 00 CC 23 30 00 00 00 DD 2A B6 1A E7 FA 8E 77 E1 25 32 5B CC 3B D4 E0 1E C9 8C D7 0F 35 74 2B 68 E5 2E C8 2F 50 7E 8D CB 7E


------------------------------------------------------------------

gcc-4.9-arm-linux-gnueabihf-base

dpkg --add-architecture armhf


--------------------------------------

disable watchdog wdog

#include "em_wdog.h"
WDOG_Enable( DEFAULT_WDOG );

src/platform/drivers/watchdog/watchdog-efr32.c


---------------------------------------------

IPA3b 500mW issues:

- RAIL_PaCtuneSet()/RAIL_SetPaCTune() "Sets the PA capacitor tune value for transmit and receive."
- RAIL_CalValues_t. ImageRejection (IR) and temperature.

The EFR32 has two supported calibrations. There is the Image Rejection (IR)
calibration and a temperature dependent calibration. The IR calibration is
something that can be computed once and stored off or computed each time at
startup. It is PHY specific and provides sensitivity improvements so we
highly recommend using it. The IR calibration should only be run when the
radio is IDLE.

The temperature dependent calibrations are used to recalibrate the synth if
the temperature crosses 0C or the temperature delta since the last
calibration exceeds 70C while sitting in receive. RAIL will run VCO
calibration automatically upon entering receive state so the application can
omit this calibration if the stack will re-enter receive with enough
frequency to not hit this temperature delta.  If the application does not
calibrate for temperature, it's possible to miss receive packets due to
drift in the carrier frequency.



------------------------------------------------

nc -6ul 4100

nc -6u 2a03:a000:5:192:a0d5:1380:93b:8f63 4100

-----------------------------------------

omnibox8:
wlan0     Link encap:Ethernet  HWaddr dc:44:6d:a4:dc:f6
          inet addr:172.16.32.159  Bcast:172.16.32.255  Mask:255.255.255.0
          inet6 addr: fe80::de44:6dff:fea4:dcf6/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:1141 errors:0 dropped:0 overruns:0 frame:0
          TX packets:319 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:191150 (191.1 KB)  TX bytes:38062 (38.0 KB)


random MAC address on armbian ubuntu
https://www.paulfurley.com/randomize-your-wifi-mac-address-on-ubuntu-1604-xenial/


Oomni@omnibox3:~$ ifconfig
eth0      Link encap:Ethernet  HWaddr 1a:08:25:71:10:9a
          inet addr:172.16.32.17  Bcast:172.16.32.255  Mask:255.255.255.0
          inet6 addr: fe80::1808:25ff:fe71:109a/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:1971934 errors:0 dropped:0 overruns:0 frame:0
          TX packets:755624 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:470237340 (470.2 MB)  TX bytes:244620767 (244.6 MB)
          Interrupt:114


omni@omnibox8:~$ ifconfig
eth0      Link encap:Ethernet  HWaddr e2:8d:96:31:c8:93
          inet addr:172.16.32.86  Bcast:172.16.32.255  Mask:255.255.255.0
          inet6 addr: fe80::e08d:96ff:fe31:c893/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:566 errors:0 dropped:0 overruns:0 frame:0
          TX packets:204 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:68262 (68.2 KB)  TX bytes:22233 (22.2 KB)
          Interrupt:114






------------------------------------------------------------------------


socat /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0,raw,echo=0,crnl /dev/serial/by-id/usb-FTDI_TTL232R_FT94TOL6-if00-port0,raw,echo=0,crnl

(gdb) info reg
r0             0x15 21
r1             0x0  0
r2             0x4f 79
r3             0xdeadc0de   -559038242
r4             0x2000abb0   536914864
r5             0x0  0
r6             0x3  3
r7             0x82 130
r8             0x2000ae40   536915520
r9             0x0  0
r10            0x4  4
r11            0x20000000   536870912
r12            0x0  0
sp             0x2001ffc0   0x2001ffc0
lr             0x205fb  132603
pc             0x20604  0x20604 <HardFault_Handler+164>
xPSR           0x21000003   553648131
fpscr          0x0  0
msp            0x2001ffc0   0x2001ffc0
psp            0x2000abb0   0x2000abb0 <s_hdlcStack+1080>
primask        0x0  0
basepri        0x0  0
faultmask      0x0  0
control        0x0  0
(gdb) where
#0  HardFault_Handler () at src/hw/efr32/crash.c:129
#1  <signal handler called>
#2  0xf3198310 in ?? ()
#3  0xcd66f370 in ?? ()
Backtrace stopped: previous frame identical to this frame (corrupt stack?)
(gdb)


(gdb) where
#0  0x0002057e in HardFault_Handler () at src/hw/efr32/crash.c:150
#1  <signal handler called>
#2  0xf3198310 in ?? ()
#3  0xcd66f370 in ?? ()
Backtrace stopped: previous frame identical to this frame (corrupt stack?)
(gdb) stepi
0x00038db8 in processHdlcUAFrame (header=0x2000abe8 <s_hdlcStack+1136>) at src/device/communication/hdlc/hdlc.c:1049
1049        sendFrame(s_sendPayload->payload, s_sendPayload->len, s_sendPayload->type);
(gdb) where
#0  0x00038db8 in processHdlcUAFrame (header=0x2000abe8 <s_hdlcStack+1136>) at src/device/communication/hdlc/hdlc.c:1049
#1  processHdlcMacFrame (header=0x2000abe8 <s_hdlcStack+1136>) at src/device/communication/hdlc/hdlc.c:1102
#2  parseMac (bb=0x200114d8) at src/device/communication/hdlc/hdlc.c:1273
#3  processRxMessage () at src/device/communication/hdlc/hdlc.c:1294
#4  hdlcReaderTask (arg=<optimized out>) at src/device/communication/hdlc/hdlc.c:1357
#5  0x000592d0 in pvTaskIncrementMutexHeldCount () at build/3pp/freertos/FreeRTOS/Source/tasks.c:4251
Backtrace stopped: previous frame identical to this frame (corrupt stack?)
(gdb)


-------------------------------------------


uplink.gracetime = 900 (15 mins). before conman will take down the uplink.
rpl.dag_switch.time = 7200 (2hrs)

rplGoToGatewayMode() called from startGateway()
rplGoToMeshMode() called from startMesg()

If a neighbour has a better rank than me for > rpl.dag_switch.time then a DAG switch will
be triggered (rplMRHOFSelectParent).

A node will not join a mesh where its rank would be bad (RPL_MAX_ACCEPTABLE_RANK).

With OF0 alg:
rplOFZeroSelectParent()
Nodes can also be "pushed away" from joining a DAG due to the number of nodes on that potential
mesh. rpl.netsize_penalty penalises the gw rank based on (numberOfDownroutes/10)*rpl.netsize_penalty

// There is a better parent than our preferred parent. Moving up
// in a DAG like this is allowed. Moving down is allowed only to
// lowestAdvertisedRank + MaxRankIncrease.

with MRHOF alg (default):
https://tools.ietf.org/html/rfc6719
rpl.br.mrhof.min_rank_increase = true
rpl.br.mrhof.max_rank_increase = true
rpl.mrhof.pp_hysteresis = 75 [% of MinHopRankIncrease]
rpl.dag_switch.hysteresis = 150
RPL_MRHOF_ACCEPTABLE_PARENT_THRESHOLD_PCT = 25%   (acceptable parent threshold)

// If a parent that is substantially better is found, use that as preferred parent

RPL_MRHOF_ETX_VALID_THRESHOLD = 3 (have to have >3 valid ETX samples for a node
when computing its rank otherwise it gets an infinitely-bad-rank).

Trickle timers also affect the timing of any network change (RFC 6550).

----------------------------------------

omnibox9: 2a03:a000:5:192:85ad:e4e:1239:1b
omnibox8: 2a03:a000:5:192:85ad:e4e:1239:1a
kalkitech1: 2a03:a000:5:192:85ad:e4e:1239:19

node: 021bc50c6001a1dd
2a03:a000:5:192:021b:c50c:6001:a1dd

---------------------------------------------------------

fd28:914c:1da9:1:21b:c50c:6001:b635

fd28:914c:1da9:1: 21b:c50c:6001:b635

/usr/bin/tun6d --loglevel debug --prefix fd01::/48 --source 2401:8800:a50:1::2 --timeout 300 --port 8050 --keepalive 10 -r /root/tun6d_persist 2>&1 | perl -pe 'use POSIX strftime; print strftime "[%Y-%m-%d %H:%M:%S] ", localtime'
/usr/bin/tun6d --loglevel debug --prefix 2a03:a000:0005:0192/64 --source 2401:8800:a50:1::2 --timeout 300 --port 8050 --keepalive 10 -r /root/tun6d_persist

local is 2a03:a000:5:192:7b20: 213d:4468:dd9d
prefix is 2a03:a000:0005:0192

/etc/init/tun6d.conf

sudo route -A inet6 add 2a03::200/48 gw 2a03:a000:5:192:8d82:51be:6a91:7259

tcpdump -i tun6d0 ip6

# do this:
sudo route -6 add 2a03:a000:5:192:85ad:e4e:1239:1a eth0
sudo route -6 add 2a03:a000:5:192:85ad:e4e:1239:1b eth0
sudo route -6 add 2a03:a000:5:192:85ad:e4e:1239:19 eth0
sudo route -6 add 2402:3a80:1700:90:e996:6cf3:c770:b08a eth0
ip6tables -t nat -A POSTROUTING -o eth0 -s fd28:914c:1da9:0:200::/64 -j MASQUERADE
ip -6 add add fd00::1 dev eth0

genus-tt1 setup


------------------------------------------

genus-tt1:
- modify /etc/init/tun6d.conf to add "loglevel debug" and "prefix 2a03:a000::/48"
- "sysctl -w net.ipv6.conf.all.forwarding=1" or edit /etc/sysctl.conf to make permanent
- "systemctl restart tun6d"

gdb --args ./build/host-genus-insecure/bin/agent -eui64 00-00-00-00-00-00-00-01  \
 -meter /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0  \
 -initrtc  \
 -ctrlhub 127.0.0.1  \
 -ctrlhubport 4242  \
 -loglevel debug  \
 -param device.dlms.lls_password=1A2B3C4D  \
 -param device.dlms.authentication_key=756776636c656b616b67313836616263    \
 -param device.dlms.encryption_key=756776636c656b616b67313836616263    \
 -param device.dlms.encryption_key=756776636c656b616b67313836616263    \
 -param device.dlms.hls_key=756776636c686c737567313836616263 \
 -param device.time.sync_timer=1 \
 -param server.ip=fd00::1  \
 -param server.port=5684 \
 -param modem.tun6.ip=genus-tt1.dev.cyanconnode.com \
 -param modem.tun6.secret=Genus-MM   \
 -param modem.apn=4g.tele2.se  \
 -param server.mq.push_now=1 \
 -param server.mq.push_delay=30 \
 -param device.capabilities.dlmspipe.push=1 \
 -param device.dlms.pipe_enabled=1 \
 -rootcert /Data/Temp/KeyTest/root.crt.der  \
 -cert /Data/Temp/KeyTest/node.crt.der  \
 -key /Data/Temp/KeyTest/node.key.der  \
 -mackey /Data/Temp/KeyTest/mac-keys.txt  \
 -gateway  \
 -statedir AgentState \
 -socket



------------------------------------------------

git remove commit

"git rebase -p --onto SHA^ SHA" where SHA is the hash of the commit to remove.


----------------------------------------------------

openocd repo

http://openocd.zylin.com/#/q/status:open


---------------------------------------------

udp ipv6 forward:

socat -ddd UDP6-RECVFROM:4059,fork UDP6-SENDTO:[fd28:914c:1da9:1:21b:c50c:6001:b635]:4059

----------------------------------------------------

forward udp6 packets from omnibox8 -> host-agent on my machine.
sudo ip6tables -t nat -A PREROUTING -s 2a03:a000:5:192:85ad:e4e:1239:1a -p udp -j DNAT --to-destination fd28:914c:1da9:0:200::1 --dport 4059



------------------------------------------------

./build/host-ctrlporthub/bin/ctrlporthub -controllerport 4000 -listen 4242 -loglevel debug

gdb --args ./build/host-genus-insecure/bin/agent -eui64 00-00-00-00-00-00-00-01  \
 -meter /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0  \
 -initrtc  \
 -ctrlhub 127.0.0.1  \
 -ctrlhubport 4242  \
 -loglevel debug  \
 -param device.dlms.lls_password=1A2B3C4D  \
 -param device.dlms.authentication_key=756776636c656b616b67313836616263    \
 -param device.dlms.encryption_key=756776636c656b616b67313836616263    \
 -param device.dlms.encryption_key=756776636c656b616b67313836616263    \
 -param device.dlms.hls_key=756776636c686c737567313836616263 \
 -param device.time.sync_timer=1 \
 -param server.ip=fd00::1  \
 -param server.port=5684 \
 -param modem.tun6.ip=127.0.0.1 \
 -param modem.tun6.secret=whatsfordinner   \
 -param modem.apn=4g.tele2.se  \
 -param server.mq.push_now=1 \
 -param server.mq.push_delay=30 \
 -param device.capabilities.dlmspipe.push=1 \
 -param device.dlms.pipe_enabled=1 \
 -rootcert /Data/Temp/KeyTest/root.crt.der  \
 -cert /Data/Temp/KeyTest/node.crt.der  \
 -key /Data/Temp/KeyTest/node.key.der  \
 -mackey /Data/Temp/KeyTest/mac-keys.txt  \
 -gateway  \
 -statedir AgentState \
 -socket


gdb --args ./build/host-genus-insecure/bin/agent -eui64 00-00-00-00-00-00-00-01  \
 -meter /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0  \
 -initrtc  \
 -ctrlhub 127.0.0.1  \
 -ctrlhubport 4242  \
 -loglevel debug  \
 -param device.dlms.lls_password=1A2B3C4D  \
 -param device.dlms.authentication_key=756776636c656b616b67313836616263    \
 -param device.dlms.encryption_key=756776636c656b616b67313836616263    \
 -param device.dlms.encryption_key=756776636c656b616b67313836616263    \
 -param device.dlms.hls_key=756776636c686c737567313836616263 \
 -param device.time.sync_timer=1 \
 -param server.ip=fd00::1  \
 -param server.port=5684 \
 -param modem.tun6.ip=127.0.0.1 \
 -param modem.tun6.secret=whatsfordinner   \
 -param modem.apn=4g.tele2.se  \
 -param server.mq.push_now=1 \
 -param server.mq.push_delay=30 \
 -param device.capabilities.dlmspipe.push=0 \
 -param device.dlms.pipe_enabled=0 \
 -rootcert /Data/Temp/KeyTest/root.crt.der  \
 -cert /Data/Temp/KeyTest/node.crt.der  \
 -key /Data/Temp/KeyTest/node.key.der  \
 -mackey /Data/Temp/KeyTest/mac-keys.txt  \
 -gateway  \
 -statedir AgentState \
 -socket

------------------------------

2018-11-08 14:22:38.434 [debug] [        meter/dlms] {      device}: 3671) ** processDlmsPayload (0) **
2018-11-08 14:22:38.434 [debug] [              dlms] {      device}: 716 ) Get 0-0:1.0.0*255 ic 8 attr 2 normal access
2018-11-08 14:22:38.484 [ERROR] [              dlms] {      device}: 2191) Previous send request is not yet processed
2018-11-08 14:22:38.484 [debug] [        meter/dlms] {      device}: 3942)  -- waiting on s_dlmsSemaphore for 14000ms --
2018-11-08 14:22:38.508 [debug] [        meter/dlms] {    schedule}: 354 ) Request to retrieve time from meter
2018-11-08 14:22:38.508 [ERROR] [        meter/dlms] {    schedule}: 327 ) Queue full, dropping msg
2018-11-08 14:22:38.517 [debug] [              hdlc] {        hdlc}: 1337) ** giveCause = 3, 1 **
2018-11-08 14:22:38.517 [debug] [              hdlc] {        hdlc}: 0   ) rx: (1/3): 7ea0204103733e9d8180140502015e06
2018-11-08 14:22:38.517 [debug] [              hdlc] {        hdlc}: 0   ) rx: (2/3): 02015e07040000000108040000000151
2018-11-08 14:22:38.517 [debug] [              hdlc] {        hdlc}: 0   ) rx: (3/3): af7e
2018-11-08 14:22:38.517 [debug] [              hdlc] {        hdlc}: 0   ) tx: (1/1): 7e
2018-11-08 14:22:38.517 [debug] [              hdlc] {        hdlc}: 0   ) tx: (1/1): a044
2018-11-08 14:22:38.518 [debug] [              hdlc] {        hdlc}: 0   ) tx: (1/1): 03
2018-11-08 14:22:38.519 [debug] [              hdlc] {        hdlc}: 0   ) tx: (1/1): 41
2018-11-08 14:22:38.519 [debug] [              hdlc] {        hdlc}: 0   ) tx: (1/1): 10
2018-11-08 14:22:38.519 [debug] [              hdlc] {        hdlc}: 0   ) tx: (1/1): b3e1
2018-11-08 14:22:38.520 [debug] [              hdlc] {        hdlc}: 0   ) tx: (1/1): e6e600
2018-11-08 14:22:38.521 [debug] [              hdlc] {        hdlc}: 0   ) tx: (1/4): 6036a1090607608574050801018a0207
2018-11-08 14:22:38.521 [debug] [              hdlc] {        hdlc}: 0   ) tx: (2/4): 808b0760857405080201ac0a80083141
2018-11-08 14:22:38.521 [debug] [              hdlc] {        hdlc}: 0   ) tx: (3/4): 324233433444be10040e01000000065f
2018-11-08 14:22:38.521 [debug] [              hdlc] {        hdlc}: 0   ) tx: (4/4): 1f0400001f1fffff
2018-11-08 14:22:38.522 [debug] [              hdlc] {        hdlc}: 0   ) tx: (1/1): dd04
2018-11-08 14:22:38.523 [debug] [              hdlc] {        hdlc}: 0   ) tx: (1/1): 7e
2018-11-08 14:22:38.523 [debug] [              hdlc] {        hdlc}: 1335) ** Waiting for HDLC event (10000ms) **
2018-11-08 14:22:38.611 [debug] [        meter/dlms] {    schedule}: 354 ) Request to retrieve time from meter
2018-11-08 14:22:38.611 [ERROR] [        meter/dlms] {    schedule}: 327 ) Queue full, dropping msg
2018-11-08 14:22:38.661 [debug] [              hdlc] {        hdlc}: 1337) ** giveCause = 3, 1 **
2018-11-08 14:22:38.661 [debug] [              hdlc] {        hdlc}: 0   ) rx: (1/4): 7ea0374103302179e6e7006129a10906
2018-11-08 14:22:38.661 [debug] [              hdlc] {        hdlc}: 0   ) rx: (2/4): 0760857405080101a203020100a305a1
2018-11-08 14:22:38.661 [debug] [              hdlc] {        hdlc}: 0   ) rx: (3/4): 03020100be10040e0800065f1f040000
2018-11-08 14:22:38.661 [debug] [              hdlc] {        hdlc}: 0   ) rx: (4/4): 1014015e000789337e
2018-11-08 14:22:38.662 [debug] [              dlms] {        dlms}: 4307) COSEM AA with LLS setup is accepted
2018-11-08 14:22:38.662 [debug] [              dlms] {        dlms}: 3981) extracted server max pdu size is 350
2018-11-08 14:22:38.662 [debug] [              dlms] {        dlms}: 2521) DLMS result is 0 bytes with code 0
2018-11-08 14:22:38.662 [debug] [        meter/dlms] {        dlms}: 512 ) dlmsReceiveCb called with s_rxRes=0
2018-11-08 14:22:38.662 [debug] [              hdlc] {        hdlc}: 1335) ** Waiting for HDLC event (10000ms) **
2018-11-08 14:22:38.662 [debug] [        meter/dlms] {      device}: 3671) ** processDlmsPayload (0) **

Thread 16 "device" received signal SIGSEGV, Segmentation fault.
[Switching to Thread 0x7fffecaf1700 (LWP 28828)]
__memcmp_sse4_1 () at ../sysdeps/x86_64/multiarch/memcmp-sse4.S:949
949 ../sysdeps/x86_64/multiarch/memcmp-sse4.S: No such file or directory.
(gdb) where
#0  __memcmp_sse4_1 () at ../sysdeps/x86_64/multiarch/memcmp-sse4.S:949
#1  0x00007ffff6ee174f in memcmp () from /usr/lib/x86_64-linux-gnu/libasan.so.2
#2  0x0000000000513f82 in dlmsGetDateTime (payload=0x0, payloadLen=0, dateTime=0x7fffecaf0d00) at src/device/communication/dlms/dlms.c:2004
#3  0x000000000050702a in handleMeterTime (data=0x0, dataLen=0, meterTime=0x8f18c0 <s_meterTime>) at src/device/drivers/dlms-common/device-dlms-common.c:30
#4  0x00000000004e89d4 in processDlmsPayload () at src/device/drivers/dlms/device-dlms.c:3820
#5  0x00000000004e8df2 in deviceTask (arg=0x0) at src/device/drivers/dlms/device-dlms.c:3950
#6  0x0000000000546759 in taskWrapper (arg=0x8f1060 <s_deviceTask>) at src/platform/osal/osal-posix/osal_posix.c:134
#7  0x00007ffff6c546ba in start_thread (arg=0x7fffecaf1700) at pthread_create.c:333
#8  0x00007ffff698a41d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109
(gdb)

- dlmsGetDateTime() payload is NULL.
- handleMeterTime() data is NULL, dataLen is 0.

- s_responseBuffer is NULL in processDlmsPayload()
- s_responseLength is 0 in processDlmsPayload()

therefore:

dlmsReceiveCb() must have received a NULL payload.


----------------------------------------------

show tags with dates.

git log --oneline --decorate --tags --no-walk

order by date:
git for-each-ref --sort=taggerdate --format '%(refname) %(taggerdate)' refs/tags


----------------------------------

coap tools

apt install python3-pip libjansson4
pip3 install serial
pip3 install protobuf

rm -rf CoAPTools
mkdir CoAPTools
cd CoAPTools
tar zxvf ~/Downloads/CoAPTools.tgz
--------------------------------------------

JVVNL creds:

lls pw: 50 00 53 53 57 52 44 32
auth key: 75 67 76 63 6c 65 6b 61 6b 67 31 38 36 61 62 63
hls key: 48 00 53 50 41 53 53 57 4f 52 44 30 30 30 30 32

48 00 53 50 41 53 53 57 4F 52 44 30 30 30 30 32

------------------------------------------------------------

JVVNL:

gdb --args ./build/host-genus-insecure/bin/agent \
 -eui64 00-00-00-00-00-00-00-01   \
 -meter /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0   \
 -initrtc   \
 -ctrlhub 127.0.0.1   \
 -ctrlhubport 4242   \
 -loglevel debug   \
 -param device.dlms.lls_password=5000535357524432   \
 -param device.dlms.authentication_key=776636c656b616b67313836616263     \
 -param device.dlms.encryption_key=756776636c656b616b67313836616263     \
 -param device.dlms.hls_key=5C680D0F30312B4C6179212835201D45  \
 -param device.time.sync_timer=1  \
 -param server.ip=fd00::1   \
 -param server.port=5684  \
 -param modem.tun6.ip=127.0.0.1  \
 -param modem.tun6.secret=whatsfordinner    \
 -param modem.apn=4g.tele2.se   \
 -param server.mq.push_now=1  \
 -param server.mq.push_delay=30  \
 -param device.capabilities.dlmspipe.push=0  \
 -param device.dlms.pipe_enabled=1  \
 -rootcert /Data/Temp/KeyTest/root.crt.der   \
 -cert /Data/Temp/KeyTest/node.crt.der   \
 -key /Data/Temp/KeyTest/node.key.der   \
 -mackey /Data/Temp/KeyTest/mac-keys.txt   \
 -gateway   \
 -statedir /Data/Temp/AgentState  \
 -socket

-----------------------------------

ESWF:
const CosemData alarmFilter = {
    1, { 0x00, 0x00, 0x5e, 0x5b, 0x1a, 0xFF }, ATTR_ID_2
};

00010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
00011000000100000000000000000000000000000000000000010000000000000000000000000000011111110000000000000000000000000000100000000000



---------------------------------------------

A description of the process follows, there are a few interacting aspects in the above questions:

A node must first establish itself on the mesh in order to gain access to the gateway and ultimately to the server as the mesh provides the IP network infrastructure to enable communication with the server.
The node can exist on and communicate on the IP network without being logged into the server itself.
The sever-login is dependent on DTLS credentials, so for example the node can appear on the network (and be ICMP pingable) without having an active DTLS session if (for example) the credentials are incorrect.
Presuming that a node has valid credentials and has logged in, it may drop off the network for many reasons such as cellular or power issues.
The DTLS connection (from the servers point-of-view) will timeout after approximately one hour (for a node, and 24h for a gateway). No communications with a node for this amount of time will cause the server to consider it offline. At this point, the server will log an event that the node has 'logged out', but this is generated internally by the server,
From the nodes point-of-view, the DTLS connection with the server have a 'heartbeat' that will cause packets to be sent to the server at least once every hour (by default, but configurable). if no response if heard from the server after that time then the node will retry a few times and if the failure persists, will attempt a new (DTLS level) login. The number and frequency of these retries will also add delays.

Additionally, (and in parallel with) the above mechanism, if a gateway loses its uplink (cellular connection) then the mesh to which the node is attached will be reconfigured and the nodes will attempt to find a neighbouring mesh network.
There are various conditions that must be met before a node will 'hop' onto another mesh in an attempt to find another route to the server, for example; before a gateway considers its uplink to be down, a period of 15 minutes must pass before it will take action. This is to prevent too many uplink-drop events from occurring. For a node on the gateways mesh to hop, it must have had a neighbouring mesh with the correct credentials that has had a stronger link for a period of greater than 2 hours.

This process is quite complex and very dynamic, but although in a demo situation the timeouts seem to be quite long, they're appropriately sized for a field deployment. We attempt to avoid 'churn' of the mesh networks as much as possible in the presence of unreliable communication mediums such as meshes and cellular networks.
For a full diagnosis, it is essential to consider not only the node, but the other nodes and traffic both on its current mesh and its neighbouring mesh(es) in addition to the cellular network conditions.

For the final question regarding the login-events, we never explicitly 'logout', the node will attempt to keep the DTLS communication open with the server indefinitely. What you should see instead is the node being marked as 'offline'.

A lot of these timeouts are configurable, but caution must be applied before changing them as they may negatively affect the network.


--------------------------------------


stickle@genus-tt1:~$ ping6 fd28:914c:1da9:2:021b:c50c:6001:a1dd

openvpn interface:
tun0      Link encap:UNSPEC  HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00
          inet addr:10.8.0.1  P-t-P:10.8.0.1  Mask:255.255.255.0
          inet6 addr: 2001:db8:ee00:abcd::1/64 Scope:Global
          UP POINTOPOINT RUNNING NOARP MULTICAST  MTU:1500  Metric:1
          RX packets:197 errors:0 dropped:0 overruns:0 frame:0
          TX packets:155 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:100
          RX bytes:16270 (16.2 KB)  TX bytes:26554 (26.5 KB)
----------------------------

tun6d conf
/etc/init/tun6d.conf

vi /etc/init/tun6d.conf

netsh interface ipv6 add route 2002::/60 "Ethernet 3"
route -6 print

netsh interface ipv6 add route 2002::/60 interface="Ethernet 3" nexthop=2a03:a000:5:192:45a4:8ecf:7053:cf41

-------------------------------------

tun6d on omnibox:
$ mkdir -p /dev/net
$ mknod /dev/net/tun c 10 200

modem.tun6.ip 172.16.32.62
modem.tun6.secret whatsfordinner

172.16.32.62
2a03:a000:5:192:85ad:e4e:1239:1a

udp6 ipv6 packet send.

listen:
nc -6kluvw 0 -p 4059

send:
echo "hello" | socat - udp6:[2a03:b0c0:1:d0::10b:c001]:4059

------------------------------------

./udpproxy.py 2a05:d014:8af:4c00:1f91:9695:0643:71e6 fd28:914c:1da9:0:021b:c50c:6003:b375
./udpproxy.py 2a05:d014:8af:4c00:80d3:59d4:8420:f985 fd28:914c:1da9:0:021b:c50c:6003:b375
./udpproxy.py 2a05:d014:8af:4c00:c41d:cd18:9d70:96d8 fd28:914c:1da9:0:021b:c50c:6003:b375
./udpproxy.py 2a05:d014:8af:4c00:691f:5c19:7782:6861 fd28:914c:1da9:0:021b:c50c:6003:b375


--------------------------------------------------


git log --since "MAY 16 2017" --until "JUNE 2 2017" --pretty=format:"%h %an %ad"

refs/tags/v97 Tue May 16 13:16:59 2017 +0200
refs/tags/v98 Fri Jun 2 14:51:14 2017 +0200



---------------------------------------------

BackOffice VPN :

sudo openvpn --config ~/.vpn/SteveTickle.ovpn

BackOffice VPN:
SteveTickle
garment seize optimism allow
b67bc45987c51f40f43606839cfd757b


Ansible:

ansible-playbook  -i inventory/inventory  -e "target=localhost" playbooks/omnimesh.yml



-----------------------------------------------
gdb --args ./build/host-lnt-insecure/bin/agent
 -eui64 00-00-00-00-00-00-00-01
 -meter /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0
 -initrtc
 -ctrlhub 127.0.0.1
 -ctrlhubport 4242
 -loglevel debug
 -param device.dlms.lls_password=lnt1
 -param device.dlms.authentication_key=31323334353637383930313233343536
 -param device.dlms.encryption_key=31323334353637383930313233343536
 -param device.dlms.hls_key=30303030303030303031303335383230
 -param device.time.sync_timer=1
 -param server.ip=fd00::1
 -param modem.tun6.ip=127.0.0.1
 -param modem.tun6.port=8050
 -param modem.tun6.secret=password
 -param modem.apn=4g.tele2.se
 -param server.mq.push_now=1
 -param server.mq.push_delay=30
 -rootcert /Data/Temp/KeyTest/root.crt.der
 -cert /Data/Temp/KeyTest/node.crt.der
 -key /Data/Temp/KeyTest/node.key.der
 -mackey /Data/Temp/KeyTest/mac-keys.txt
 -gateway
 -socket


gdb --args ./build/host-lnt-insecure/bin/agent -eui64 00-00-00-00-00-00-00-01 \
 -meter /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0 \
 -initrtc \
 -ctrlhub 127.0.0.1 \
 -ctrlhubport 4242 \
 -loglevel debug \
 -param device.dlms.lls_password=lnt1 \
 -param device.dlms.authentication_key=31323334353637383930313233343536 \
 -param device.dlms.encryption_key=31323334353637383930313233343536 \
 -param device.dlms.hls_key=30303030303030303031303335383230 \
 -param device.time.sync_timer=1 \
 -param server.ip=2a03:a000:192:35:a72f:f760:55bd:9cf \
 -param server.port=5684 \
 -param modem.tun6.ip=127.0.0.1 \
 -param modem.tun6.secret=whatsfordinner \
 -param modem.apn=4g.tele2.se \
 -param server.mq.push_now=1 \
 -param server.mq.push_delay=30 \
 -param device.capabilities.dlmspipe.push=0 \
 -param device.dlms.pipe_enabled=0 \
 -rootcert /Data/Temp/KeyTest/root.crt.der \
 -cert /Data/Temp/KeyTest/node.crt.der \
 -key /Data/Temp/KeyTest/node.key.der \
 -mackey /Data/Temp/KeyTest/mac-keys.txt \
 -gateway \
 -statedir AgentState \
 -socket

--------------------------------------------------

EVENT_FIRMWAREUPDATE_RESTART
coap response to the 'update' msg CoapResponsePreconditionFailed, if fileIds not correct or decryption failed.

----------------------------------------------

tun6d0 tcpdump on server:

15:46:51.252871 IP6 fd28:914c:1da9:0:21b:c50c:6003:b375.4059 > fd00::1.46933: UDP, length 13
15:46:51.273854 IP6 fd00::1.46933 > fd28:914c:1da9:0:21b:c50c:6003:b375.4059: UDP, length 294
15:46:52.374903 IP6 fd28:914c:1da9:0:21b:c50c:6003:b375.4059 > fd00::1.46933: UDP, length 13
15:46:52.395176 IP6 fd00::1.46933 > fd28:914c:1da9:0:21b:c50c:6003:b375.4059: UDP, length 294
15:46:53.495454 IP6 fd28:914c:1da9:0:21b:c50c:6003:b375.4059 > fd00::1.46933: UDP, length 13
15:46:53.514675 IP6 fd00::1.46933 > fd28:914c:1da9:0:21b:c50c:6003:b375.4059: UDP, length 294
15:46:54.762037 IP6 fd28:914c:1da9:0:21b:c50c:6003:b375.4059 > fd00::1.46933: UDP, length 13
15:46:54.782972 IP6 fd00::1.46933 > fd28:914c:1da9:0:21b:c50c:6003:b375.4059: UDP, length 294
15:46:56.007230 IP6 fd28:914c:1da9:0:21b:c50c:6003:b375.4059 > fd00::1.46933: UDP, length 13
15:46:56.027404 IP6 fd00::1.46933 > fd28:914c:1da9:0:21b:c50c:6003:b375.4059: UDP, length 294
15:46:57.126004 IP6 fd28:914c:1da9:0:21b:c50c:6003:b375.4059 > fd00::1.46933: UDP, length 13
15:46:57.144665 IP6 fd00::1.46933 > fd28:914c:1da9:0:21b:c50c:6003:b375.4059: UDP, length 294
15:46:58.244960 IP6 fd28:914c:1da9:0:21b:c50c:6003:b375.4059 > fd00::1.46933: UDP, length 13
15:46:58.264564 IP6 fd00::1.46933 > fd28:914c:1da9:0:21b:c50c:6003:b375.4059: UDP, length 294
15:46:59.363634 IP6 fd28:914c:1da9:0:21b:c50c:6003:b375.4059 > fd00::1.46933: UDP, length 13
15:46:59.383066 IP6 fd00::1.46933 > fd28:914c:1da9:0:21b:c50c:6003:b375.4059: UDP, length 294
15:47:50.568987 IP6 fd00::1.5684 > fd28:914c:1da9:0:21b:c50c:6000:4d34.5684: UDP, length 55
15:47:51.200792 IP6 fd28:914c:1da9:0:21b:c50c:6000:4d34.5684 > fd00::1.5684: UDP, length 88
15:47:59.967673 IP6 fd00::1.46933 > fd28:914c:1da9:0:21b:c50c:6003:b375.4059: UDP, length 294
15:48:50.629317 IP6 fd00::1.5684 > fd28:914c:1da9:0:21b:c50c:6000:4d34.5684: UDP, length 55
15:48:53.856686 IP6 fd28:914c:1da9:0:21b:c50c:6000:4d34.5684 > fd00::1.5684: UDP, length 88
15:49:00.967076 IP6 fd00::1.46933 > fd28:914c:1da9:0:21b:c50c:6003:b375.4059: UDP, length 13
15:49:03.008632 IP6 fd28:914c:1da9:0:21b:c50c:6003:b375.4059 > fd00::1.46933: UDP, length 10
15:49:50.679846 IP6 fd00::1.5684 > fd28:914c:1da9:0:21b:c50c:6000:4d34.5684: UDP, length 55
15:50:02.146112 IP6 fd28:914c:1da9:0:21b:c50c:6000:4d34.5684 > fd00::1.5684: UDP, length 125
15:50:02.154162 IP6 fd00::1.5684 > fd28:914c:1da9:0:21b:c50c:6000:4d34.5684: UDP, length 37
15:50:02.263629 IP6 fd00::1.5684 > fd28:914c:1da9:0:21b:c50c:6000:4d34.5684: UDP, length 55
15:50:02.846015 IP6 fd28:914c:1da9:0:21b:c50c:6000:4d34.5684 > fd00::1.5684: UDP, length 88


eth0 tcpdump on server:
15:46:50.152194 IP6 2a03:a000:5:192:226:b9ff:fe1b:4bf8.52875 > 2a05:d014:8af:4c00:c41d:cd18:9d70:96d8.4059: UDP, length 294
15:46:50.152449 IP genus-tt1.dev.cyanconnode.com.8050 > 193.192.218.204.50412: UDP, length 342
15:46:50.518944 IP genus-tt1.dev.cyanconnode.com.8050 > 193.192.218.204.50412: UDP, length 103
15:46:50.624539 IP 193.192.218.204.50412 > genus-tt1.dev.cyanconnode.com.8050: UDP, length 136
15:46:51.252732 IP 193.192.218.204.50412 > genus-tt1.dev.cyanconnode.com.8050: UDP, length 61
15:46:51.253000 IP6 2a05:d014:8af:4c00:c41d:cd18:9d70:96d8.4059 > 2a03:a000:5:192:226:b9ff:fe1b:4bf8.52875: UDP, length 13
15:46:51.273697 IP6 2a03:a000:5:192:226:b9ff:fe1b:4bf8.52875 > 2a05:d014:8af:4c00:c41d:cd18:9d70:96d8.4059: UDP, length 294
15:46:51.274215 IP genus-tt1.dev.cyanconnode.com.8050 > 193.192.218.204.50412: UDP, length 342
15:46:51.490939 IP 42-107-233-226.live.vodafone.in.63330 > genus-tt1.dev.cyanconnode.com.8050: UDP, length 48
15:46:51.491282 IP genus-tt1.dev.cyanconnode.com.8050 > 42-107-233-226.live.vodafone.in.63330: UDP, length 48
15:46:52.374593 IP 193.192.218.204.50412 > genus-tt1.dev.cyanconnode.com.8050: UDP, length 61
15:46:52.375052 IP6 2a05:d014:8af:4c00:c41d:cd18:9d70:96d8.4059 > 2a03:a000:5:192:226:b9ff:fe1b:4bf8.52875: UDP, length 13
15:46:52.395000 IP6 2a03:a000:5:192:226:b9ff:fe1b:4bf8.52875 > 2a05:d014:8af:4c00:c41d:cd18:9d70:96d8.4059: UDP, length 294
15:46:52.395388 IP genus-tt1.dev.cyanconnode.com.8050 > 193.192.218.204.50412: UDP, length 342
15:46:53.495246 IP 193.192.218.204.50412 > genus-tt1.dev.cyanconnode.com.8050: UDP, length 61
15:46:53.495596 IP6 2a05:d014:8af:4c00:c41d:cd18:9d70:96d8.4059 > 2a03:a000:5:192:226:b9ff:fe1b:4bf8.52875: UDP, length 13
15:46:53.514518 IP6 2a03:a000:5:192:226:b9ff:fe1b:4bf8.52875 > 2a05:d014:8af:4c00:c41d:cd18:9d70:96d8.4059: UDP, length 294
15:46:53.514788 IP genus-tt1.dev.cyanconnode.com.8050 > 193.192.218.204.50412: UDP, length 342
15:46:54.761889 IP 193.192.218.204.50412 > genus-tt1.dev.cyanconnode.com.8050: UDP, length 61
15:46:54.762219 IP6 2a05:d014:8af:4c00:c41d:cd18:9d70:96d8.4059 > 2a03:a000:5:192:226:b9ff:fe1b:4bf8.52875: UDP, length 13
15:46:54.782830 IP6 2a03:a000:5:192:226:b9ff:fe1b:4bf8.52875 > 2a05:d014:8af:4c00:c41d:cd18:9d70:96d8.4059: UDP, length 294
15:46:54.783113 IP genus-tt1.dev.cyanconnode.com.8050 > 193.192.218.204.50412: UDP, length 342
15:46:56.006966 IP 193.192.218.204.50412 > genus-tt1.dev.cyanconnode.com.8050: UDP, length 61
15:46:56.007391 IP6 2a05:d014:8af:4c00:c41d:cd18:9d70:96d8.4059 > 2a03:a000:5:192:226:b9ff:fe1b:4bf8.52875: UDP, length 13
15:46:56.027247 IP6 2a03:a000:5:192:226:b9ff:fe1b:4bf8.52875 > 2a05:d014:8af:4c00:c41d:cd18:9d70:96d8.4059: UDP, length 294
15:46:56.027655 IP genus-tt1.dev.cyanconnode.com.8050 > 193.192.218.204.50412: UDP, length 342
15:46:57.125819 IP 193.192.218.204.50412 > genus-tt1.dev.cyanconnode.com.8050: UDP, length 61
15:46:57.126168 IP6 2a05:d014:8af:4c00:c41d:cd18:9d70:96d8.4059 > 2a03:a000:5:192:226:b9ff:fe1b:4bf8.52875: UDP, length 13
15:46:57.144526 IP6 2a03:a000:5:192:226:b9ff:fe1b:4bf8.52875 > 2a05:d014:8af:4c00:c41d:cd18:9d70:96d8.4059: UDP, length 294
15:46:57.144869 IP genus-tt1.dev.cyanconnode.com.8050 > 193.192.218.204.50412: UDP, length 342
15:46:58.244775 IP 193.192.218.204.50412 > genus-tt1.dev.cyanconnode.com.8050: UDP, length 61
15:46:58.245128 IP6 2a05:d014:8af:4c00:c41d:cd18:9d70:96d8.4059 > 2a03:a000:5:192:226:b9ff:fe1b:4bf8.52875: UDP, length 13
15:46:58.264407 IP6 2a03:a000:5:192:226:b9ff:fe1b:4bf8.52875 > 2a05:d014:8af:4c00:c41d:cd18:9d70:96d8.4059: UDP, length 294
15:46:58.264685 IP genus-tt1.dev.cyanconnode.com.8050 > 193.192.218.204.50412: UDP, length 342
15:46:59.363499 IP 193.192.218.204.50412 > genus-tt1.dev.cyanconnode.com.8050: UDP, length 61
15:46:59.363777 IP6 2a05:d014:8af:4c00:c41d:cd18:9d70:96d8.4059 > 2a03:a000:5:192:226:b9ff:fe1b:4bf8.52875: UDP, length 13
>>> above was the last one received on PC.

15:46:59.382915 IP6 2a03:a000:5:192:226:b9ff:fe1b:4bf8.52875 > 2a05:d014:8af:4c00:c41d:cd18:9d70:96d8.4059: UDP, length 294
>>> This packet was sent from PC to server, reaches tun6d0 interface, but not the agent.

15:46:59.383189 IP genus-tt1.dev.cyanconnode.com.8050 > 193.192.218.204.50412: UDP, length 342
>>> This is likely the above 294b packet forwarded and wrapped by tun6d over ipv4 to the gateway (cellular)

15:47:17.153070 IP 42-107-233-226.live.vodafone.in.63330 > genus-tt1.dev.cyanconnode.com.8050: UDP, length 48
15:47:17.153339 IP genus-tt1.dev.cyanconnode.com.8050 > 42-107-233-226.live.vodafone.in.63330: UDP, length 48
15:47:19.512107 IP6 fe80::2e:9ff:fe37:1e84.dhcpv6-client > ff02::1:2.dhcpv6-server: dhcp6 renew
15:47:19.512152 IP6 fe80::51:daff:fe5a:740.dhcpv6-server > fe80::2e:9ff:fe37:1e84.dhcpv6-client: dhcp6 reply
15:47:23.952457 IP 193.192.218.204.50412 > genus-tt1.dev.cyanconnode.com.8050: UDP, length 48
15:47:23.952757 IP genus-tt1.dev.cyanconnode.com.8050 > 193.192.218.204.50412: UDP, length 48
15:47:41.369688 IP 42-107-233-226.live.vodafone.in.63330 > genus-tt1.dev.cyanconnode.com.8050: UDP, length 48
15:47:41.369918 IP genus-tt1.dev.cyanconnode.com.8050 > 42-107-233-226.live.vodafone.in.63330: UDP, length 48
15:47:48.939332 IP 193.192.218.204.50412 > genus-tt1.dev.cyanconnode.com.8050: UDP, length 48
15:47:48.939561 IP genus-tt1.dev.cyanconnode.com.8050 > 193.192.218.204.50412: UDP, length 48
15:47:50.569145 IP genus-tt1.dev.cyanconnode.com.8050 > 193.192.218.204.50412: UDP, length 103
15:47:51.200567 IP 193.192.218.204.50412 > genus-tt1.dev.cyanconnode.com.8050: UDP, length 136
15:47:52.157101 IP genus-tt1.dev.cyanconnode.com.bootpc > ip-10-73-1-1.eu-central-1.compute.internal.bootps: BOOTP/DHCP, Request from 02:2e:09:37:1e:84 (oui Unknown), length 300
15:47:52.157144 IP ip-10-73-1-1.eu-central-1.compute.internal.bootps > genus-tt1.dev.cyanconnode.com.bootpc: BOOTP/DHCP, Reply, length 548
15:47:52.157241 IP genus-tt1.dev.cyanconnode.com.46517 > ip-10-73-0-2.eu-central-1.compute.internal.domain: 33151+ PTR? 1.1.73.10.in-addr.arpa. (40)
15:47:52.157954 IP ip-10-73-0-2.eu-central-1.compute.internal.domain > genus-tt1.dev.cyanconnode.com.46517: 33151 1/0/0 PTR ip-10-73-1-1.eu-central-1.compute.internal. (96)


(agent log) 2018-11-28 15:47:59.125 #1   000000006003b375 <log> 4:39:07.033 [debug] [    dlmspipe] { dlmspipe}: close session: timeout
>>> This is the agent timing out the session.

15:47:59.967505 IP6 2a03:a000:5:192:226:b9ff:fe1b:4bf8.52875 > 2a05:d014:8af:4c00:c41d:cd18:9d70:96d8.4059: UDP, length 294
>>> This is Kalkitech retrying... unfortunately the agent has already timed out and closed the session.


15:47:59.967868 IP genus-tt1.dev.cyanconnode.com.8050 > 193.192.218.204.50412: UDP, length 342
15:48:06.280086 IP 42-107-233-226.live.vodafone.in.63330 > genus-tt1.dev.cyanconnode.com.8050: UDP, length 48
15:48:06.280282 IP genus-tt1.dev.cyanconnode.com.8050 > 42-107-233-226.live.vodafone.in.63330: UDP, length 48
15:48:16.635276 IP 193.192.218.204.50412 > genus-tt1.dev.cyanconnode.com.8050: UDP, length 48


agent log:

02-1b-c5-0c-60-00-4d-34: rssi -88 dBm, sec 5, payload 214 B
2018-11-28 15:46:53.927 #1   000000006003b375 <log> 4:38:01.829 [debug] [      mac_rx] {   mac_rx}: Received 153 B, unicast #173 from 02-1b-c5-0c-60-00-4d-34: rssi -89 dBm, sec 5, payload 123 B
2018-11-28 15:46:53.943 #1   000000006003b375 <log> 4:38:01.843 [debug] [ tran_switch] {   mac_rx}: UDP received from [fd00::1]:46933 to [fd28:914c:1da9:0:21b:c50c:6003:b375]:4059 of size 294: dtls session: -1
2018-11-28 15:46:53.951 #1   000000006003b375 <log> 4:38:01.858 [debug] [    dlmspipe] {   mac_rx}: UDP rx 294 B from [fd00::1]:46933
2018-11-28 15:46:53.959 #1   000000006003b375 <log> 4:38:01.867 [debug] [    dlmspipe] { dlmspipe}: ** dlmspipe task triggered **
2018-11-28 15:46:53.968 #1   000000006003b375 <log> 4:38:01.875 [debug] [    dlmspipe] { dlmspipe}:  ** packet forwarding to meter. **
2018-11-28 15:46:53.975 #1   000000006003b375 <log> 4:38:01.883 [debug] [    dlmspipe] { dlmspipe}: HDLC send 286 B
2018-11-28 15:46:53.981 #1   000000006003b375 <log> 4:38:01.890 [debug] [        hdlc] { dlmspipe}: tx: (1/1): 7e
2018-11-28 15:46:53.988 #1   000000006003b375 <log> 4:38:01.896 [debug] [        hdlc] { dlmspipe}: tx: (1/1): a12a
2018-11-28 15:46:53.994 #1   000000006003b375 <log> 4:38:01.903 [debug] [        hdlc] { dlmspipe}: tx: (1/1): 03
2018-11-28 15:46:54.001 #1   000000006003b375 <log> 4:38:01.910 [debug] [        hdlc] { dlmspipe}: tx: (1/1): a1
2018-11-28 15:46:54.007 #1   000000006003b375 <log> 4:38:01.916 [debug] [        hdlc] { dlmspipe}: tx: (1/1): 10
2018-11-28 15:46:54.014 #1   000000006003b375 <log> 4:38:01.923 [debug] [        hdlc] { dlmspipe}: tx: (1/1): c834
2018-11-28 15:46:54.021 #1   000000006003b375 <log> 4:38:01.929 [debug] [        hdlc] { dlmspipe}: tx: (1/1): e6e600
2018-11-28 15:46:54.032 #1   000000006003b375 <log> 4:38:01.938 [debug] [        hdlc] { dlmspipe}: tx: (1/18): c301c1001200002c0000ff0201020206
2018-11-28 15:46:54.041 #1   000000006003b375 <log> 4:38:01.947 [debug] [        hdlc] { dlmspipe}: tx: (2/18): 0000003a0982010600010400bc27d14f
2018-11-28 15:46:54.050 #1   000000006003b375 <log> 4:38:01.956 [debug] [        hdlc] { dlmspipe}: tx: (3/18): 232d0600f1920600032cc19306000a20
2018-11-28 15:46:54.059 #1   000000006003b375 <log> 4:38:01.965 [debug] [        hdlc] { dlmspipe}: tx: (4/18): f193060007247c40fa00b41308cc4c43
2018-11-28 15:46:54.068 #1   000000006003b375 <log> 4:38:01.974 [debug] [        hdlc] { dlmspipe}: tx: (5/18): 8001085d1f42bc27d14f242d02001f42
2018-11-28 15:46:54.078 #1   000000006003b375 <log> 4:38:01.984 [debug] [        hdlc] { dlmspipe}: tx: (6/18): bc27554f252d1f42bc27564f262df190
2018-11-28 15:46:54.087 #1   000000006003b375 <log> 4:38:01.993 [debug] [        hdlc] { dlmspipe}: tx: (7/18): 18000200062c75903c00032c76903c00
2018-11-28 15:46:54.096 #1   000000006003b375 <log> 4:38:02.002 [debug] [        hdlc] { dlmspipe}: tx: (8/18): 07287c40fa00b41308cc4c438001085d
2018-11-28 15:46:54.105 #1   000000006003b375 <log> 4:38:02.011 [debug] [        hdlc] { dlmspipe}: tx: (9/18): 1f42bc27594f1f2d9253bc274f493ff0
2018-11-28 15:46:54.115 #1   000000006003b375 <log> 4:38:02.020 [debug] [        hdlc] { dlmspipe}: tx: (10/18): ff008f10084f1f42bc275f4f1f2d4f4f
2018-11-28 15:46:54.124 #1   000000006003b375 <log> 4:38:02.030 [debug] [        hdlc] { dlmspipe}: tx: (11/18): 3f5030f8085f9253bc2749484c49b413
2018-11-28 15:46:54.133 #1   000000006003b375 <log> 4:38:02.039 [debug] [        hdlc] { dlmspipe}: tx: (12/18): 22bbc24c77371f42bc27594f1f2d9253
2018-11-28 15:46:54.143 #1   000000006003b375 <log> 4:38:02.048 [debug] [        hdlc] { dlmspipe}: tx: (13/18): bc274c49b41322bbc24c78371f42bc27
2018-11-28 15:46:54.152 #1   000000006003b375 <log> 4:38:02.058 [debug] [        hdlc] { dlmspipe}: tx: (14/18): 594f1f2d9253bc274c49b41322bbc24c
2018-11-28 15:46:54.161 #1   000000006003b375 <log> 4:38:02.067 [debug] [        hdlc] { dlmspipe}: tx: (15/18): 79371f42bc27594f1f2d9253bc277990
2018-11-28 15:46:54.171 #1   000000006003b375 <log> 4:38:02.076 [debug] [        hdlc] { dlmspipe}: tx: (16/18): 070001204943f193060005244c49b413
2018-11-28 15:46:54.180 #1   000000006003b375 <log> 4:38:02.086 [debug] [        hdlc] { dlmspipe}: tx: (17/18): 22bbc24c7a371f42bc27594f1f2d9253
2018-11-28 15:46:54.189 #1   000000006003b375 <log> 4:38:02.095 [debug] [        hdlc] { dlmspipe}: tx: (18/18): bc274c49b41322bbc24c76378f85
2018-11-28 15:46:54.490 #1   000000006003b375 <log> 4:38:02.399 [debug] [        hdlc] { dlmspipe}: tx: (1/1): 3eef
2018-11-28 15:46:54.497 #1   000000006003b375 <log> 4:38:02.405 [debug] [        hdlc] { dlmspipe}: tx: (1/1): 7e
2018-11-28 15:46:54.507 #1   000000006003b375 <log> 4:38:02.412 [debug] [    dlmspipe] { dlmspipe}: ** dlmspipe task waiting to be triggered (59992) **
2018-11-28 15:46:54.660 #1   000000006003b375 <log> 4:38:02.567 [debug] [        hdlc] {     hdlc}: ** giveCause = 3, 1 **
2018-11-28 15:46:54.669 #1   000000006003b375 <log> 4:38:02.575 [debug] [        hdlc] {     hdlc}: rx: (1/2): 7ea011a1033049b4e6e700c701c10000
2018-11-28 15:46:54.676 #1   000000006003b375 <log> 4:38:02.584 [debug] [        hdlc] {     hdlc}: rx: (2/2): fcb47e
2018-11-28 15:46:54.685 #1   000000006003b375 <log> 4:38:02.591 [debug] [    dlmspipe] {     hdlc}: HDLC rx 5 B forwarding to [fd00::1]:46933
2018-11-28 15:46:54.699 #1   000000006003b375 <log> 4:38:02.601 [debug] [          ip] {     hdlc}: Send IP on lowpan, 21 B, type 17, ttl 32: fd28:914c:1da9:0:21b:c50c:6003:b375 -> fd00::1
2018-11-28 15:46:54.708 #1   000000006003b375 <log> 4:38:02.614 [debug] [        hdlc] {     hdlc}: ** Waiting for HDLC event (10000ms) **
2018-11-28 15:46:54.731 #1   000000006003b375 <log> 4:38:02.634 [debug] [      mac_tx] {lowpan_tx}: Tx 77 B at -26 dBm as #17 to 02-1b-c5-0c-60-00-4d-34: Got ack after 1 try
2018-11-28 15:46:54.743 #1   000000006003b375 <log> 4:38:02.646 [debug] [    rpl/core] {lowpan_tx}: Stats for 02-1b-c5-0c-60-00-4d-34: ack: 1, nack: 0, roundtrip: 1 ms, etx: 128/128
2018-11-28 15:46:54.754 #1   000000006003b375 <log> 4:38:02.658 [ info] [      status] { schedule}: Version: ipa3-genus-dlms-insecure:v136-13-g1a2c258 on hw ipa3
2018-11-28 15:46:54.762 #1   000000006003b375 <log> 4:38:02.669 [ info] [      status] { schedule}: IID: 02-1b-c5-0c-60-03-b3-75
2018-11-28 15:46:54.772 #1   000000006003b375 <log> 4:38:02.677 [event] [      status] { schedule}: LoWPAN address: fd28:914c:1da9:0:21b:c50c:6003:b375
2018-11-28 15:46:54.782 #1   000000006003b375 <log> 4:38:02.687 [debug] [      status] { schedule}: Next hop (parent): fd28:914c:1da9:0:21b:c50c:6000:4d34
2018-11-28 15:46:54.793 #1   000000006003b375 <log> 4:38:02.697 [ info] [          ip] { schedule}: IP queue lowpan: pkts: 0 (max 2), bytes: 0 (max 290), max wait: 252 ms
2018-11-28 15:46:54.806 #1   000000006003b375 <log> 4:38:02.708 [ info] [       radio] { schedule}: RX packets:27472 bad:1144, TX packets:1779 channel-busy:145 errors:0, resets: 0
2018-11-28 15:46:54.815 #1   000000006003b375 <log> 4:38:02.721 [ info] [       login] { schedule}: Login state: logged in, server: [fd00::1]:5684
2018-11-28 15:46:54.823 #1   000000006003b375 <log> 4:38:02.730 [ info] [      conman] { schedule}: Agent Mode: Auto, ifaces up: lowpan
2018-11-28 15:46:54.834 #1   000000006003b375 <log> 4:38:02.741 [debug] [        osal] { schedule}: Task:  3  schedule p2  464/1440 3.510s
2018-11-28 15:46:54.844 #1   000000006003b375 <log> 4:38:02.750 [debug] [        osal] { schedule}: Task:  2      IDLE p0  232/ 280 16643.965s
2018-11-28 15:46:54.852 #1   000000006003b375 <log> 4:38:02.759 [debug] [        osal] { schedule}: Task: 10       rpl p3  672/1600 2.395s
2018-11-28 15:46:54.861 #1   000000006003b375 <log> 4:38:02.767 [debug] [        osal] { schedule}: Task: 11  readings p2  856/1600 0.340s
2018-11-28 15:46:54.870 #1   000000006003b375 <log> 4:38:02.776 [debug] [        osal] { schedule}: Task:  1  terminal p1  328/1600 3.375s
2018-11-28 15:46:54.879 #1   000000006003b375 <log> 4:38:02.785 [debug] [        osal] { schedule}: Task: 12      hdlc p4  288/1200 7.624s
2018-11-28 15:46:54.888 #1   000000006003b375 <log> 4:38:02.794 [debug] [        osal] { schedule}: Task: 15      cron p2 1016/1200 0.011s
2018-11-28 15:46:54.896 #1   000000006003b375 <log> 4:38:02.803 [debug] [        osal] { schedule}: Task: 17  dlmspipe p2  248/1200 9.166s
2018-11-28 15:46:54.906 #1   000000006003b375 <log> 4:38:02.811 [debug] [        osal] { schedule}: Task:  6     radio p5  408/ 800 3.622s
2018-11-28 15:46:54.919 #1   000000006003b375 <log> 4:38:02.821 [debug] [      mac_rx] {   mac_rx}: Received 244 B, unicast #174 from 02-1b-c5-0c-60-00-4d-34: rssi -91 dBm, sec 5, payload 214 B
2018-11-28 15:46:54.928 #1   000000006003b375 <log> 4:38:02.835 [debug] [        osal] { schedule}: Task:  5    mac_rx p4  600/1400 5.772s
2018-11-28 15:46:54.937 #1   000000006003b375 <log> 4:38:02.844 [debug] [        osal] { schedule}: Task:  7 lowpan_tx p3  432/1000 1.287s
2018-11-28 15:46:54.946 #1   000000006003b375 <log> 4:38:02.852 [debug] [        osal] { schedule}: Task: 16    filedl p2 1312/1600 0.000s
2018-11-28 15:46:54.955 #1   000000006003b375 <log> 4:38:02.861 [debug] [        osal] { schedule}: Task: 14 timeSynch p2 2248/3072 0.030s
2018-11-28 15:46:54.964 #1   000000006003b375 <log> 4:38:02.870 [debug] [        osal] { schedule}: Task:  9      dtls p2  656/1700 0.780s
2018-11-28 15:46:54.972 #1   000000006003b375 <log> 4:38:02.879 [debug] [        osal] { schedule}: Task:  8      coap p3 1440/2048 0.019s
2018-11-28 15:46:54.981 #1   000000006003b375 <log> 4:38:02.887 [debug] [        osal] { schedule}: Task:  4  ctrlport p3 1320/1600 0.000s
2018-11-28 15:46:54.990 #1   000000006003b375 <log> 4:38:02.896 [debug] [        osal] { schedule}: Task: 13      dlms p2  232/1200 0.834s
2018-11-28 15:46:54.997 #1   000000006003b375 <log> 4:38:02.905 [debug] [      status] { schedule}: CPU load: 3%
2018-11-28 15:46:55.007 #1   000000006003b375 <log> 4:38:02.912 [debug] [    memstats] { schedule}: FILE                      now blocks    max  total  calls
2018-11-28 15:46:55.018 #1   000000006003b375 <log> 4:38:02.922 [debug] [    memstats] { schedule}: wolfssl_funcs            2697     24   6242  50888    216
2018-11-28 15:46:55.028 #1   000000006003b375 <log> 4:38:02.933 [debug] [    memstats] { schedule}: device-dlms               960      1    960    960      1
2018-11-28 15:46:55.038 #1   000000006003b375 <log> 4:38:02.943 [debug] [    memstats] { schedule}: dataprofile               368     10    368    368     10
2018-11-28 15:46:55.052 #1   000000006003b375 <log> 4:38:02.954 [debug] [      mac_rx] {   mac_rx}: Received 153 B, unicast #175 from 02-1b-c5-0c-60-00-4d-34: rssi -92 dBm, sec 5, payload 123 B
2018-11-28 15:46:55.068 #1   000000006003b375 <log> 4:38:02.968 [debug] [ tran_switch] {   mac_rx}: UDP received from [fd00::1]:46933 to [fd28:914c:1da9:0:21b:c50c:6003:b375]:4059 of size 294: dtls session: -1
2018-11-28 15:46:55.076 #1   000000006003b375 <log> 4:38:02.983 [debug] [    dlmspipe] {   mac_rx}: UDP rx 294 B from [fd00::1]:46933
2018-11-28 15:46:55.087 #1   000000006003b375 <log> 4:38:02.991 [debug] [    memstats] { schedule}: lowpan_frag               328      1    328  87904    268
2018-11-28 15:46:55.097 #1   000000006003b375 <log> 4:38:03.002 [debug] [    memstats] { schedule}: schedule_service          220     11    280   1740     87
2018-11-28 15:46:55.108 #1   000000006003b375 <log> 4:38:03.012 [debug] [    memstats] { schedule}: GLOBAL                   4445     53   8719 1988599  23631
2018-11-28 15:46:55.125 #1   000000006003b375 <log> 4:38:03.023 [ info] [    rpl/task] {      rpl}: RPL: attached, inst 20, rank 256, dag fd28:914c:1da9:0:21b:c50c:6000:4d34 v.240, pp fd28:914c:1da9:0:21b:c50c:6000:4d34, hop 1, routes 0
2018-11-28 15:46:55.132 #1   000000006003b375 <log> 4:38:03.040 [ info] [    rpl/data] {      rpl}: Number of dags: 1
2018-11-28 15:46:55.141 #1   000000006003b375 <log> 4:38:03.047 [debug] [    rpl/data] {      rpl}: DAG prefix                ver DODAG-ID
2018-11-28 15:46:55.152 #1   000000006003b375 <log> 4:38:03.056 [debug] [    rpl/data] {      rpl}:   0 fd28:914c:1da9::      240 fd28:914c:1da9:0:21b:c50c:6000:4d34
2018-11-28 15:46:55.161 #1   000000006003b375 <log> 4:38:03.067 [ info] [    rpl/data] {      rpl}: Neighbors: 1, local: 1. Parents: 1, preferred: 1
2018-11-28 15:46:55.174 #1   000000006003b375 <log> 4:38:03.077 [debug] [    rpl/data] {      rpl}: NB D state       iid                     ver  rank  ttl   etx sam t_btr global IP
2018-11-28 15:46:55.189 #1   000000006003b375 <log> 4:38:03.089 [debug] [    rpl/data] {      rpl}:  0 0 pref-parent 02-1b-c5-0c-60-00-4d-34 240   128 2096   128  64     0 fd28:914c:1da9:0:21b:c50c:6000:4d34
2018-11-28 15:46:55.199 #1   000000006003b375 <log> 4:38:03.104 [debug] [rpl/routelist] {      rpl}: RPL route list: 0 entries using 0 B (0 B/entry)
2018-11-28 15:46:55.206 #1   000000006003b375 <log> 4:38:03.113 [debug] [    dlmspipe] { dlmspipe}: ** dlmspipe task triggered **
2018-11-28 15:46:55.215 #1   000000006003b375 <log> 4:38:03.121 [debug] [    dlmspipe] { dlmspipe}:  ** packet forwarding to meter. **
2018-11-28 15:46:55.222 #1   000000006003b375 <log> 4:38:03.130 [debug] [    dlmspipe] { dlmspipe}: HDLC send 286 B
2018-11-28 15:46:55.228 #1   000000006003b375 <log> 4:38:03.137 [debug] [        hdlc] { dlmspipe}: tx: (1/1): 7e
2018-11-28 15:46:55.235 #1   000000006003b375 <log> 4:38:03.143 [debug] [        hdlc] { dlmspipe}: tx: (1/1): a12a
2018-11-28 15:46:55.241 #1   000000006003b375 <log> 4:38:03.150 [debug] [        hdlc] { dlmspipe}: tx: (1/1): 03
2018-11-28 15:46:55.248 #1   000000006003b375 <log> 4:38:03.156 [debug] [        hdlc] { dlmspipe}: tx: (1/1): a1
2018-11-28 15:46:55.254 #1   000000006003b375 <log> 4:38:03.163 [debug] [        hdlc] { dlmspipe}: tx: (1/1): 32
2018-11-28 15:46:55.261 #1   000000006003b375 <log> 4:38:03.169 [debug] [        hdlc] { dlmspipe}: tx: (1/1): d836
2018-11-28 15:46:55.268 #1   000000006003b375 <log> 4:38:03.176 [debug] [        hdlc] { dlmspipe}: tx: (1/1): e6e600
2018-11-28 15:46:55.279 #1   000000006003b375 <log> 4:38:03.184 [debug] [        hdlc] { dlmspipe}: tx: (1/18): c301c1001200002c0000ff0201020206
2018-11-28 15:46:55.288 #1   000000006003b375 <log> 4:38:03.193 [debug] [        hdlc] { dlmspipe}: tx: (2/18): 0000003b09820106000105001f42bc27
2018-11-28 15:46:55.297 #1   000000006003b375 <log> 4:38:03.203 [debug] [        hdlc] { dlmspipe}: tx: (3/18): 594f1f2d9253bc274c49b41322bbc24c
2018-11-28 15:46:55.306 #1   000000006003b375 <log> 4:38:03.212 [debug] [        hdlc] { dlmspipe}: tx: (4/18): 75371f42bc27594f1f2d9253bc274c49
2018-11-28 15:46:55.315 #1   000000006003b375 <log> 4:38:03.221 [debug] [        hdlc] { dlmspipe}: tx: (5/18): b41322bbc24c7437d292773798401428
2018-11-28 15:46:55.325 #1   000000006003b375 <log> 4:38:03.230 [debug] [        hdlc] { dlmspipe}: tx: (6/18): d292984077370420d292783797400c28
2018-11-28 15:46:55.334 #1   000000006003b375 <log> 4:38:03.240 [debug] [        hdlc] { dlmspipe}: tx: (7/18): d292984077378420d292974078378020
2018-11-28 15:46:55.343 #1   000000006003b375 <log> 4:38:03.249 [debug] [        hdlc] { dlmspipe}: tx: (8/18): d292964079377c28d243d736c243c840
2018-11-28 15:46:55.352 #1   000000006003b375 <log> 4:38:03.258 [debug] [        hdlc] { dlmspipe}: tx: (9/18): d292984077376c20d292974078376820
2018-11-28 15:46:55.362 #1   000000006003b375 <log> 4:38:03.267 [debug] [        hdlc] { dlmspipe}: tx: (10/18): d292964079376420d292954076372f20
2018-11-28 15:46:55.371 #1   000000006003b375 <log> 4:38:03.277 [debug] [        hdlc] { dlmspipe}: tx: (11/18): 40185c427537b413fab6c14c0b004018
2018-11-28 15:46:55.380 #1   000000006003b375 <log> 4:38:03.286 [debug] [        hdlc] { dlmspipe}: tx: (12/18): 5c429440b413fab6c14c0a005c410b00
2018-11-28 15:46:55.390 #1   000000006003b375 <log> 4:38:03.295 [debug] [        hdlc] { dlmspipe}: tx: (13/18): 4c127c403c005e429037b4138cc84e4c
2018-11-28 15:46:55.399 #1   000000006003b375 <log> 4:38:03.304 [debug] [        hdlc] { dlmspipe}: tx: (14/18): 7c41b4138cc84c125c410c004c127c40
2018-11-28 15:46:55.408 #1   000000006003b375 <log> 4:38:03.314 [debug] [        hdlc] { dlmspipe}: tx: (15/18): 3c005e429037b4138cc84e4c7c41b413
2018-11-28 15:46:55.417 #1   000000006003b375 <log> 4:38:03.323 [debug] [        hdlc] { dlmspipe}: tx: (16/18): 8cc87e414e9c0320c243c7403b3dd292
2018-11-28 15:46:55.427 #1   000000006003b375 <log> 4:38:03.332 [debug] [        hdlc] { dlmspipe}: tx: (17/18): 763795400828d292954076370c20d292
2018-11-28 15:46:55.436 #1   000000006003b375 <log> 4:38:03.342 [debug] [        hdlc] { dlmspipe}: tx: (18/18): 944075370828d243c74040187f08
2018-11-28 15:46:55.737 #1   000000006003b375 <log> 4:38:03.646 [debug] [        hdlc] { dlmspipe}: tx: (1/1): 62c6
2018-11-28 15:46:55.744 #1   000000006003b375 <log> 4:38:03.652 [debug] [        hdlc] { dlmspipe}: tx: (1/1): 7e
2018-11-28 15:46:55.754 #1   000000006003b375 <log> 4:38:03.659 [debug] [    dlmspipe] { dlmspipe}: ** dlmspipe task waiting to be triggered (59870) **
2018-11-28 15:46:55.906 #1   000000006003b375 <log> 4:38:03.814 [debug] [        hdlc] {     hdlc}: ** giveCause = 3, 1 **
2018-11-28 15:46:55.916 #1   000000006003b375 <log> 4:38:03.821 [debug] [        hdlc] {     hdlc}: rx: (1/2): 7ea011a103525df4e6e700c701c10000
2018-11-28 15:46:55.922 #1   000000006003b375 <log> 4:38:03.830 [debug] [        hdlc] {     hdlc}: rx: (2/2): fcb47e
2018-11-28 15:46:55.932 #1   000000006003b375 <log> 4:38:03.838 [debug] [    dlmspipe] {     hdlc}: HDLC rx 5 B forwarding to [fd00::1]:46933
2018-11-28 15:46:55.945 #1   000000006003b375 <log> 4:38:03.847 [debug] [          ip] {     hdlc}: Send IP on lowpan, 21 B, type 17, ttl 32: fd28:914c:1da9:0:21b:c50c:6003:b375 -> fd00::1
2018-11-28 15:46:55.954 #1   000000006003b375 <log> 4:38:03.860 [debug] [        hdlc] {     hdlc}: ** Waiting for HDLC event (10000ms) **
2018-11-28 15:46:55.977 #1   000000006003b375 <log> 4:38:03.880 [debug] [      mac_tx] {lowpan_tx}: Tx 77 B at -26 dBm as #18 to 02-1b-c5-0c-60-00-4d-34: Got ack after 1 try
2018-11-28 15:46:55.989 #1   000000006003b375 <log> 4:38:03.892 [debug] [    rpl/core] {lowpan_tx}: Stats for 02-1b-c5-0c-60-00-4d-34: ack: 1, nack: 0, roundtrip: 1 ms, etx: 128/128
2018-11-28 15:46:56.160 #1   000000006003b375 <log> 4:38:04.061 [debug] [      mac_rx] {   mac_rx}: Received 244 B, unicast #176 from 02-1b-c5-0c-60-00-4d-34: rssi -89 dBm, sec 5, payload 214 B
2018-11-28 15:46:56.291 #1   000000006003b375 <log> 4:38:04.192 [debug] [      mac_rx] {   mac_rx}: Received 153 B, unicast #177 from 02-1b-c5-0c-60-00-4d-34: rssi -84 dBm, sec 5, payload 123 B
2018-11-28 15:46:56.306 #1   000000006003b375 <log> 4:38:04.206 [debug] [ tran_switch] {   mac_rx}: UDP received from [fd00::1]:46933 to [fd28:914c:1da9:0:21b:c50c:6003:b375]:4059 of size 294: dtls session: -1
2018-11-28 15:46:56.315 #1   000000006003b375 <log> 4:38:04.221 [debug] [    dlmspipe] {   mac_rx}: UDP rx 294 B from [fd00::1]:46933
2018-11-28 15:46:56.323 #1   000000006003b375 <log> 4:38:04.230 [debug] [    dlmspipe] { dlmspipe}: ** dlmspipe task triggered **
2018-11-28 15:46:56.331 #1   000000006003b375 <log> 4:38:04.238 [debug] [    dlmspipe] { dlmspipe}:  ** packet forwarding to meter. **
2018-11-28 15:46:56.338 #1   000000006003b375 <log> 4:38:04.246 [debug] [    dlmspipe] { dlmspipe}: HDLC send 286 B
2018-11-28 15:46:56.345 #1   000000006003b375 <log> 4:38:04.253 [debug] [        hdlc] { dlmspipe}: tx: (1/1): 7e
2018-11-28 15:46:56.351 #1   000000006003b375 <log> 4:38:04.259 [debug] [        hdlc] { dlmspipe}: tx: (1/1): a12a
2018-11-28 15:46:56.358 #1   000000006003b375 <log> 4:38:04.266 [debug] [        hdlc] { dlmspipe}: tx: (1/1): 03
2018-11-28 15:46:56.364 #1   000000006003b375 <log> 4:38:04.273 [debug] [        hdlc] { dlmspipe}: tx: (1/1): a1
2018-11-28 15:46:56.371 #1   000000006003b375 <log> 4:38:04.279 [debug] [        hdlc] { dlmspipe}: tx: (1/1): 54
2018-11-28 15:46:56.378 #1   000000006003b375 <log> 4:38:04.286 [debug] [        hdlc] { dlmspipe}: tx: (1/1): e830
2018-11-28 15:46:56.384 #1   000000006003b375 <log> 4:38:04.292 [debug] [        hdlc] { dlmspipe}: tx: (1/1): e6e600
2018-11-28 15:46:56.395 #1   000000006003b375 <log> 4:38:04.301 [debug] [        hdlc] { dlmspipe}: tx: (1/18): c301c1001200002c0000ff0201020206
2018-11-28 15:46:56.404 #1   000000006003b375 <log> 4:38:04.310 [debug] [        hdlc] { dlmspipe}: tx: (2/18): 0000003c09820106000106005c429037
2018-11-28 15:46:56.413 #1   000000006003b375 <log> 4:38:04.319 [debug] [        hdlc] { dlmspipe}: tx: (3/18): b4138e2e273df2400a009b36f240e000
2018-11-28 15:46:56.423 #1   000000006003b375 <log> 4:38:04.328 [debug] [        hdlc] { dlmspipe}: tx: (4/18): 9c36f240a1008f1df240a000901db313
2018-11-28 15:46:56.432 #1   000000006003b375 <log> 4:38:04.337 [debug] [        hdlc] { dlmspipe}: tx: (5/18): 96efc2438340d2428340c637b413e485
2018-11-28 15:46:56.441 #1   000000006003b375 <log> 4:38:04.347 [debug] [        hdlc] { dlmspipe}: tx: (6/18): d243c74040185c429037b4138e2e0a3d
2018-11-28 15:46:56.450 #1   000000006003b375 <log> 4:38:04.356 [debug] [        hdlc] { dlmspipe}: tx: (7/18): d243c74040185c429037b4138e2e023d
2018-11-28 15:46:56.460 #1   000000006003b375 <log> 4:38:04.365 [debug] [        hdlc] { dlmspipe}: tx: (8/18): f2400a009b36f240e0009c36f240a100
2018-11-28 15:46:56.469 #1   000000006003b375 <log> 4:38:04.374 [debug] [        hdlc] { dlmspipe}: tx: (9/18): 8f1df240a000901db31396efc2438340
2018-11-28 15:46:56.478 #1   000000006003b375 <log> 4:38:04.383 [debug] [        hdlc] { dlmspipe}: tx: (10/18): d2428340c637b413e48540185e427737
2018-11-28 15:46:56.487 #1   000000006003b375 <log> 4:38:04.393 [debug] [        hdlc] { dlmspipe}: tx: (11/18): 40185d42783740185c427937b413ec9c
2018-11-28 15:46:56.497 #1   000000006003b375 <log> 4:38:04.402 [debug] [        hdlc] { dlmspipe}: tx: (12/18): 084c7940c80055421638464356922738
2018-11-28 15:46:56.506 #1   000000006003b375 <log> 4:38:04.411 [debug] [        hdlc] { dlmspipe}: tx: (13/18): 142c4f450f5f189f082507284f450f5f
2018-11-28 15:46:56.515 #1   000000006003b375 <log> 4:38:04.421 [debug] [        hdlc] { dlmspipe}: tx: (14/18): 8f93082502244945083c755375930320
2018-11-28 15:46:56.525 #1   000000006003b375 <log> 4:38:04.430 [debug] [        hdlc] { dlmspipe}: tx: (15/18): 7940c800023c5653e93f7990c8000b20
2018-11-28 15:46:56.534 #1   000000006003b375 <log> 4:38:04.439 [debug] [        hdlc] { dlmspipe}: tx: (16/18): c2431638d2432638d243c740d243c840
2018-11-28 15:46:56.543 #1   000000006003b375 <log> 4:38:04.449 [debug] [        hdlc] { dlmspipe}: tx: (17/18): c24318384b3c4f450f5f8f980825282c
2018-11-28 15:46:56.552 #1   000000006003b375 <log> 4:38:04.458 [debug] [        hdlc] { dlmspipe}: tx: (18/18): 5f4216384f4f49490f893f902850
2018-11-28 15:46:56.854 #1   000000006003b375 <log> 4:38:04.762 [debug] [        hdlc] { dlmspipe}: tx: (1/1): f618
2018-11-28 15:46:56.860 #1   000000006003b375 <log> 4:38:04.768 [debug] [        hdlc] { dlmspipe}: tx: (1/1): 7e
2018-11-28 15:46:56.870 #1   000000006003b375 <log> 4:38:04.775 [debug] [    dlmspipe] { dlmspipe}: ** dlmspipe task waiting to be triggered (59992) **
2018-11-28 15:46:57.023 #1   000000006003b375 <log> 4:38:04.930 [debug] [        hdlc] {     hdlc}: ** giveCause = 3, 1 **
2018-11-28 15:46:57.032 #1   000000006003b375 <log> 4:38:04.938 [debug] [        hdlc] {     hdlc}: rx: (1/2): 7ea011a1037469b0e6e700c701c10000
2018-11-28 15:46:57.039 #1   000000006003b375 <log> 4:38:04.947 [debug] [        hdlc] {     hdlc}: rx: (2/2): fcb47e
2018-11-28 15:46:57.048 #1   000000006003b375 <log> 4:38:04.954 [debug] [    dlmspipe] {     hdlc}: HDLC rx 5 B forwarding to [fd00::1]:46933
2018-11-28 15:46:57.062 #1   000000006003b375 <log> 4:38:04.963 [debug] [          ip] {     hdlc}: Send IP on lowpan, 21 B, type 17, ttl 32: fd28:914c:1da9:0:21b:c50c:6003:b375 -> fd00::1
2018-11-28 15:46:57.071 #1   000000006003b375 <log> 4:38:04.977 [debug] [        hdlc] {     hdlc}: ** Waiting for HDLC event (10000ms) **
2018-11-28 15:46:57.094 #1   000000006003b375 <log> 4:38:04.997 [debug] [      mac_tx] {lowpan_tx}: Tx 77 B at -26 dBm as #19 to 02-1b-c5-0c-60-00-4d-34: Got ack after 1 try
2018-11-28 15:46:57.106 #1   000000006003b375 <log> 4:38:05.009 [debug] [    rpl/core] {lowpan_tx}: Stats for 02-1b-c5-0c-60-00-4d-34: ack: 1, nack: 0, roundtrip: 1 ms, etx: 128/128
2018-11-28 15:46:57.280 #1   000000006003b375 <log> 4:38:05.181 [debug] [      mac_rx] {   mac_rx}: Received 244 B, unicast #178 from 02-1b-c5-0c-60-00-4d-34: rssi -87 dBm, sec 5, payload 214 B
2018-11-28 15:46:57.411 #1   000000006003b375 <log> 4:38:05.312 [debug] [      mac_rx] {   mac_rx}: Received 153 B, unicast #179 from 02-1b-c5-0c-60-00-4d-34: rssi -85 dBm, sec 5, payload 123 B
2018-11-28 15:46:57.427 #1   000000006003b375 <log> 4:38:05.326 [debug] [ tran_switch] {   mac_rx}: UDP received from [fd00::1]:46933 to [fd28:914c:1da9:0:21b:c50c:6003:b375]:4059 of size 294: dtls session: -1
2018-11-28 15:46:57.435 #1   000000006003b375 <log> 4:38:05.341 [debug] [    dlmspipe] {   mac_rx}: UDP rx 294 B from [fd00::1]:46933
2018-11-28 15:46:57.443 #1   000000006003b375 <log> 4:38:05.350 [debug] [    dlmspipe] { dlmspipe}: ** dlmspipe task triggered **
2018-11-28 15:46:57.451 #1   000000006003b375 <log> 4:38:05.358 [debug] [    dlmspipe] { dlmspipe}:  ** packet forwarding to meter. **
2018-11-28 15:46:57.458 #1   000000006003b375 <log> 4:38:05.366 [debug] [    dlmspipe] { dlmspipe}: HDLC send 286 B
2018-11-28 15:46:57.465 #1   000000006003b375 <log> 4:38:05.373 [debug] [        hdlc] { dlmspipe}: tx: (1/1): 7e
2018-11-28 15:46:57.471 #1   000000006003b375 <log> 4:38:05.379 [debug] [        hdlc] { dlmspipe}: tx: (1/1): a12a
2018-11-28 15:46:57.478 #1   000000006003b375 <log> 4:38:05.386 [debug] [        hdlc] { dlmspipe}: tx: (1/1): 03
2018-11-28 15:46:57.485 #1   000000006003b375 <log> 4:38:05.393 [debug] [        hdlc] { dlmspipe}: tx: (1/1): a1
2018-11-28 15:46:57.491 #1   000000006003b375 <log> 4:38:05.399 [debug] [        hdlc] { dlmspipe}: tx: (1/1): 76
2018-11-28 15:46:57.498 #1   000000006003b375 <log> 4:38:05.406 [debug] [        hdlc] { dlmspipe}: tx: (1/1): f832
2018-11-28 15:46:57.505 #1   000000006003b375 <log> 4:38:05.412 [debug] [        hdlc] { dlmspipe}: tx: (1/1): e6e600
2018-11-28 15:46:57.515 #1   000000006003b375 <log> 4:38:05.421 [debug] [        hdlc] { dlmspipe}: tx: (1/18): c301c1001200002c0000ff0201020206
2018-11-28 15:46:57.524 #1   000000006003b375 <log> 4:38:05.430 [debug] [        hdlc] { dlmspipe}: tx: (2/18): 0000003d098201060001070028000a34
2018-11-28 15:46:57.534 #1   000000006003b375 <log> 4:38:05.439 [debug] [        hdlc] { dlmspipe}: tx: (3/18): 5e4218384e4e5f4216384f4f49490f89
2018-11-28 15:46:57.543 #1   000000006003b375 <log> 4:38:05.448 [debug] [        hdlc] { dlmspipe}: tx: (4/18): 0e9f0334c2431838083c5e4218385e82
2018-11-28 15:46:57.552 #1   000000006003b375 <log> 4:38:05.457 [debug] [        hdlc] { dlmspipe}: tx: (5/18): 16384e595e53c24e18384e495e53c24e
2018-11-28 15:46:57.561 #1   000000006003b375 <log> 4:38:05.467 [debug] [        hdlc] { dlmspipe}: tx: (6/18): 1638d2432638d243c740d243c8401e3c
2018-11-28 15:46:57.570 #1   000000006003b375 <log> 4:38:05.476 [debug] [        hdlc] { dlmspipe}: tx: (7/18): 5f4216384f4f49490f893f9028000a34
2018-11-28 15:46:57.579 #1   000000006003b375 <log> 4:38:05.485 [debug] [        hdlc] { dlmspipe}: tx: (8/18): 5e4218384e4e5f4216384f4f49490f89
2018-11-28 15:46:57.588 #1   000000006003b375 <log> 4:38:05.494 [debug] [        hdlc] { dlmspipe}: tx: (9/18): 0e9f0334c2431838053cd28216381838
2018-11-28 15:46:57.597 #1   000000006003b375 <log> 4:38:05.503 [debug] [        hdlc] { dlmspipe}: tx: (10/18): c25918384e497e53c24e1638c2431938
2018-11-28 15:46:57.607 #1   000000006003b375 <log> 4:38:05.513 [debug] [        hdlc] { dlmspipe}: tx: (11/18): d24379363c406002b41360bbd2421838
2018-11-28 15:46:57.616 #1   000000006003b375 <log> 4:38:05.522 [debug] [        hdlc] { dlmspipe}: tx: (12/18): 8340d242193884407d400f003c408340
2018-11-28 15:46:57.625 #1   000000006003b375 <log> 4:38:05.531 [debug] [        hdlc] { dlmspipe}: tx: (13/18): b4131cafc24c92403d4060023c401000
2018-11-28 15:46:57.635 #1   000000006003b375 <log> 4:38:05.541 [debug] [        hdlc] { dlmspipe}: tx: (14/18): b413b0b1d243d7363c403006b41360bb
2018-11-28 15:46:57.644 #1   000000006003b375 <log> 4:38:05.550 [debug] [        hdlc] { dlmspipe}: tx: (15/18): 1c42442a3c5028003e402800b41390c8
2018-11-28 15:46:57.653 #1   000000006003b375 <log> 4:38:05.559 [debug] [        hdlc] { dlmspipe}: tx: (16/18): 5c0a0f4c5c060c5f824c442ad242452a
2018-11-28 15:46:57.662 #1   000000006003b375 <log> 4:38:05.569 [debug] [        hdlc] { dlmspipe}: tx: (17/18): 8440d242442a85401c42c22a0d431c52
2018-11-28 15:46:57.671 #1   000000006003b375 <log> 4:38:05.578 [debug] [        hdlc] { dlmspipe}: tx: (18/18): 462a1d62482a1e42c22a0f4300d5
2018-11-28 15:46:57.973 #1   000000006003b375 <log> 4:38:05.882 [debug] [        hdlc] { dlmspipe}: tx: (1/1): aa31
2018-11-28 15:46:57.980 #1   000000006003b375 <log> 4:38:05.888 [debug] [        hdlc] { dlmspipe}: tx: (1/1): 7e
2018-11-28 15:46:57.989 #1   000000006003b375 <log> 4:38:05.895 [debug] [    dlmspipe] { dlmspipe}: ** dlmspipe task waiting to be triggered (59992) **
2018-11-28 15:46:58.142 #1   000000006003b375 <log> 4:38:06.050 [debug] [        hdlc] {     hdlc}: ** giveCause = 3, 1 **
2018-11-28 15:46:58.151 #1   000000006003b375 <log> 4:38:06.058 [debug] [        hdlc] {     hdlc}: rx: (1/2): 7ea011a103967574e6e700c701c10000
2018-11-28 15:46:58.158 #1   000000006003b375 <log> 4:38:06.067 [debug] [        hdlc] {     hdlc}: rx: (2/2): fcb47e
2018-11-28 15:46:58.167 #1   000000006003b375 <log> 4:38:06.074 [debug] [    dlmspipe] {     hdlc}: HDLC rx 5 B forwarding to [fd00::1]:46933
2018-11-28 15:46:58.181 #1   000000006003b375 <log> 4:38:06.083 [debug] [          ip] {     hdlc}: Send IP on lowpan, 21 B, type 17, ttl 32: fd28:914c:1da9:0:21b:c50c:6003:b375 -> fd00::1
2018-11-28 15:46:58.190 #1   000000006003b375 <log> 4:38:06.097 [debug] [        hdlc] {     hdlc}: ** Waiting for HDLC event (10000ms) **
2018-11-28 15:46:58.213 #1   000000006003b375 <log> 4:38:06.117 [debug] [      mac_tx] {lowpan_tx}: Tx 77 B at -26 dBm as #20 to 02-1b-c5-0c-60-00-4d-34: Got ack after 1 try
2018-11-28 15:46:58.226 #1   000000006003b375 <log> 4:38:06.129 [debug] [    rpl/core] {lowpan_tx}: Stats for 02-1b-c5-0c-60-00-4d-34: ack: 1, nack: 0, roundtrip: 1 ms, etx: 128/128
2018-11-28 15:46:58.398 #1   000000006003b375 <log> 4:38:06.300 [debug] [      mac_rx] {   mac_rx}: Received 244 B, unicast #180 from 02-1b-c5-0c-60-00-4d-34: rssi -89 dBm, sec 5, payload 214 B
2018-11-28 15:46:58.530 #1   000000006003b375 <log> 4:38:06.432 [debug] [      mac_rx] {   mac_rx}: Received 153 B, unicast #181 from 02-1b-c5-0c-60-00-4d-34: rssi -86 dBm, sec 5, payload 123 B
2018-11-28 15:46:58.546 #1   000000006003b375 <log> 4:38:06.446 [debug] [ tran_switch] {   mac_rx}: UDP received from [fd00::1]:46933 to [fd28:914c:1da9:0:21b:c50c:6003:b375]:4059 of size 294: dtls session: -1
2018-11-28 15:46:58.554 #1   000000006003b375 <log> 4:38:06.461 [debug] [    dlmspipe] {   mac_rx}: UDP rx 294 B from [fd00::1]:46933
2018-11-28 15:46:58.562 #1   000000006003b375 <log> 4:38:06.470 [debug] [    dlmspipe] { dlmspipe}: ** dlmspipe task triggered **
2018-11-28 15:46:58.571 #1   000000006003b375 <log> 4:38:06.478 [debug] [    dlmspipe] { dlmspipe}:  ** packet forwarding to meter. **
2018-11-28 15:46:58.577 #1   000000006003b375 <log> 4:38:06.486 [debug] [    dlmspipe] { dlmspipe}: HDLC send 286 B
2018-11-28 15:46:58.584 #1   000000006003b375 <log> 4:38:06.493 [debug] [        hdlc] { dlmspipe}: tx: (1/1): 7e
2018-11-28 15:46:58.591 #1   000000006003b375 <log> 4:38:06.499 [debug] [        hdlc] { dlmspipe}: tx: (1/1): a12a
2018-11-28 15:46:58.597 #1   000000006003b375 <log> 4:38:06.506 [debug] [        hdlc] { dlmspipe}: tx: (1/1): 03
2018-11-28 15:46:58.604 #1   000000006003b375 <log> 4:38:06.513 [debug] [        hdlc] { dlmspipe}: tx: (1/1): a1
2018-11-28 15:46:58.610 #1   000000006003b375 <log> 4:38:06.519 [debug] [        hdlc] { dlmspipe}: tx: (1/1): 98
2018-11-28 15:46:58.617 #1   000000006003b375 <log> 4:38:06.526 [debug] [        hdlc] { dlmspipe}: tx: (1/1): 883c
2018-11-28 15:46:58.624 #1   000000006003b375 <log> 4:38:06.532 [debug] [        hdlc] { dlmspipe}: tx: (1/1): e6e600
2018-11-28 15:46:58.634 #1   000000006003b375 <log> 4:38:06.541 [debug] [        hdlc] { dlmspipe}: tx: (1/18): c301c1001200002c0000ff0201020206
2018-11-28 15:46:58.644 #1   000000006003b375 <log> 4:38:06.550 [debug] [        hdlc] { dlmspipe}: tx: (2/18): 0000003e0982010600010800b4134cc1
2018-11-28 15:46:58.653 #1   000000006003b375 <log> 4:38:06.559 [debug] [        hdlc] { dlmspipe}: tx: (3/18): 021232c203439242c22ad004824ce004
2018-11-28 15:46:58.662 #1   000000006003b375 <log> 4:38:06.568 [debug] [        hdlc] { dlmspipe}: tx: (4/18): 824de2049242e404462a9242e604482a
2018-11-28 15:46:58.671 #1   000000006003b375 <log> 4:38:06.577 [debug] [        hdlc] { dlmspipe}: tx: (5/18): 034332419242462a982a9242482a9a2a
2018-11-28 15:46:58.680 #1   000000006003b375 <log> 4:38:06.587 [debug] [        hdlc] { dlmspipe}: tx: (6/18): d2429b2a8640d2429a2a8740d242992a
2018-11-28 15:46:58.690 #1   000000006003b375 <log> 4:38:06.596 [debug] [        hdlc] { dlmspipe}: tx: (7/18): 8840d242982a89403d4030063c401000
2018-11-28 15:46:58.699 #1   000000006003b375 <log> 4:38:06.605 [debug] [        hdlc] { dlmspipe}: tx: (8/18): b413b0b1d29388380820d2d37f36d253
2018-11-28 15:46:58.708 #1   000000006003b375 <log> 4:38:06.614 [debug] [        hdlc] { dlmspipe}: tx: (9/18): dc377c409700b41306163c40500eb413
2018-11-28 15:46:58.717 #1   000000006003b375 <log> 4:38:06.623 [debug] [        hdlc] { dlmspipe}: tx: (10/18): 60bbc2439140c2439040c243bb41c243
2018-11-28 15:46:58.727 #1   000000006003b375 <log> 4:38:06.633 [debug] [        hdlc] { dlmspipe}: tx: (11/18): 8e40c24385423d40500e3c401000b413
2018-11-28 15:46:58.736 #1   000000006003b375 <log> 4:38:06.642 [debug] [        hdlc] { dlmspipe}: tx: (12/18): b0b1b41368bab41398ca3e4086404018
2018-11-28 15:46:58.745 #1   000000006003b375 <log> 4:38:06.651 [debug] [        hdlc] { dlmspipe}: tx: (13/18): 1c429a2240181d429c22b413c2c73e40
2018-11-28 15:46:58.755 #1   000000006003b375 <log> 4:38:06.661 [debug] [        hdlc] { dlmspipe}: tx: (14/18): 8a4040181c429e2240181d42a022b413
2018-11-28 15:46:58.764 #1   000000006003b375 <log> 4:38:06.670 [debug] [        hdlc] { dlmspipe}: tx: (15/18): c2c73e408e4040181c42a22240181d42
2018-11-28 15:46:58.773 #1   000000006003b375 <log> 4:38:06.679 [debug] [        hdlc] { dlmspipe}: tx: (16/18): a422b413c2c73d4080023c403000b413
2018-11-28 15:46:58.783 #1   000000006003b375 <log> 4:38:06.689 [debug] [        hdlc] { dlmspipe}: tx: (17/18): b0b1b41398ca3e40864040181c42ae22
2018-11-28 15:46:58.792 #1   000000006003b375 <log> 4:38:06.698 [debug] [        hdlc] { dlmspipe}: tx: (18/18): 40181d42b022b413c2c73e405929
2018-11-28 15:46:59.093 #1   000000006003b375 <log> 4:38:07.002 [debug] [        hdlc] { dlmspipe}: tx: (1/1): 4e4a
2018-11-28 15:46:59.100 #1   000000006003b375 <log> 4:38:07.008 [debug] [        hdlc] { dlmspipe}: tx: (1/1): 7e
2018-11-28 15:46:59.110 #1   000000006003b375 <log> 4:38:07.015 [debug] [    dlmspipe] { dlmspipe}: ** dlmspipe task waiting to be triggered (59992) **
2018-11-28 15:46:59.262 #1   000000006003b375 <log> 4:38:07.170 [debug] [        hdlc] {     hdlc}: ** giveCause = 3, 1 **
2018-11-28 15:46:59.271 #1   000000006003b375 <log> 4:38:07.177 [debug] [        hdlc] {     hdlc}: rx: (1/2): 7ea011a103b809bce6e700c701c10000
2018-11-28 15:46:59.278 #1   000000006003b375 <log> 4:38:07.186 [debug] [        hdlc] {     hdlc}: rx: (2/2): fcb47e
2018-11-28 15:46:59.287 #1   000000006003b375 <log> 4:38:07.194 [debug] [    dlmspipe] {     hdlc}: HDLC rx 5 B forwarding to [fd00::1]:46933
2018-11-28 15:46:59.301 #1   000000006003b375 <log> 4:38:07.203 [debug] [          ip] {     hdlc}: Send IP on lowpan, 21 B, type 17, ttl 32: fd28:914c:1da9:0:21b:c50c:6003:b375 -> fd00::1
2018-11-28 15:46:59.310 #1   000000006003b375 <log> 4:38:07.217 [debug] [        hdlc] {     hdlc}: ** Waiting for HDLC event (10000ms) **
2018-11-28 15:46:59.332 #1   000000006003b375 <log> 4:38:07.236 [debug] [      mac_tx] {lowpan_tx}: Tx 77 B at -26 dBm as #21 to 02-1b-c5-0c-60-00-4d-34: Got ack after 1 try
2018-11-28 15:46:59.345 #1   000000006003b375 <log> 4:38:07.248 [debug] [    rpl/core] {lowpan_tx}: Stats for 02-1b-c5-0c-60-00-4d-34: ack: 1, nack: 0, roundtrip: 1 ms, etx: 128/128
>>> last received on laptop.
>>> this was received, the next 294b packet transmitted, but never received here.

2018-11-28 15:47:09.317 #1   000000006003b375 <log> 4:38:17.225 [debug] [        hdlc] {     hdlc}: ** giveCause = 10, 0 **
2018-11-28 15:47:09.323 #1   000000006003b375 <log> 4:38:17.232 [debug] [        hdlc] {     hdlc}: Idle tickover.
2018-11-28 15:47:09.330 #1   000000006003b375 <log> 4:38:17.239 [debug] [        hdlc] {     hdlc}: disconnectLink 0x0
2018-11-28 15:47:09.337 #1   000000006003b375 <log> 4:38:17.246 [debug] [        hdlc] {     hdlc}: Disconnect HDLC link
2018-11-28 15:47:09.346 #1   000000006003b375 <log> 4:38:17.253 [debug] [        hdlc] {     hdlc}: ** Waiting for HDLC event (10000ms) **
2018-11-28 15:47:16.293 #1   000000006003b375 <log> 4:38:24.196 [debug] [      mac_rx] {   mac_rx}: Received 113 B, broadcast #83 from 02-1b-c5-0c-60-00-c9-8e: rssi 0 dBm, sec 5, payload 89 B
2018-11-28 15:47:16.306 #1   000000006003b375 <log> 4:38:24.210 [debug] [        icmp] {   mac_rx}: ICMPv6 multicast from fe80::21b:c50c:6000:c98e, RPL control message (DIO), 80 B
2018-11-28 15:47:16.315 #1   000000006003b375 <log> 4:38:24.222 [debug] [    rpl/core] {      rpl}: 0: Ignoring DIO for instance 0 (mine is 20)
2018-11-28 15:47:16.698 #1   000000006003b375 <log> 4:38:24.601 [debug] [      mac_rx] {   mac_rx}: Received 113 B, broadcast #252 from 02-1b-c5-0c-60-01-8e-10: rssi -45 dBm, sec 5, payload 89 B
2018-11-28 15:47:16.711 #1   000000006003b375 <log> 4:38:24.615 [debug] [        icmp] {   mac_rx}: ICMPv6 multicast from fe80::21b:c50c:6001:8e10, RPL control message (DIO), 80 B
2018-11-28 15:47:16.720 #1   000000006003b375 <log> 4:38:24.627 [debug] [    rpl/core] {      rpl}: 0: Ignoring DIO for instance 0 (mine is 20)
2018-11-28 15:47:19.352 #1   000000006003b375 <log> 4:38:27.261 [debug] [        hdlc] {     hdlc}: ** giveCause = 10, 0 **
2018-11-28 15:47:19.359 #1   000000006003b375 <log> 4:38:27.268 [debug] [        hdlc] {     hdlc}: Idle tickover.
2018-11-28 15:47:19.366 #1   000000006003b375 <log> 4:38:27.275 [debug] [        hdlc] {     hdlc}: disconnectLink 0x0
2018-11-28 15:47:19.375 #1   000000006003b375 <log> 4:38:27.282 [debug] [        hdlc] {     hdlc}: ** Waiting for HDLC event (10000ms) **
2018-11-28 15:47:20.785 #1   000000006003b375 <log> 4:38:28.691 [debug] [     rpl/dao] {      rpl}: 0: DAO: lifetime expires in 797s (defLifeTime=1200s)
2018-11-28 15:47:27.210 #1   000000006003b375 <log> 4:38:35.112 [debug] [      mac_rx] {   mac_rx}: Received 113 B, broadcast #47 from 02-1b-c5-0c-60-01-73-c0: rssi -44 dBm, sec 5, payload 89 B



Wireshark on laptop:








-------------------------------------

Stop@ 12:14:07
last @12:13:12.533
2018-11-29 12:13:12.502 #1   000000006003b375 <log> 2:59:48.930 [debug] [          ip] {     hdlc}: Send IP on lowpan, 16 B, type 17, ttl 32: fd28:914c:1da9:0:21b:c50c:6003:b375 -> fd00::1

DISC from
2018-11-29 12:13:12.979 #1   000000006003b375 <log> 2:59:49.413 [debug] [    dlmspipe] {     hdlc}: hdlc DISC response


RLRE from meter.


Bad detection of RLRQ @12:13:12
2018-11-29 12:13:13.035 #1   000000006003b375 <log> 2:59:49.467 [debug] [    dlmspipe] { dlmspipe}: Syth RLRE 10 B forwarding to [fd00::1]:37257
2018-11-29 12:13:12.533 #1   000000006003b375 <log> 2:59:48.963 [debug] [      mac_tx] {lowpan_tx}: Tx 72 B at -26 dBm as #213 to 02-1b-c5-0c-60-00-4d-34: Got ack after 1 try
2018-11-29 12:13:12.546 #1   000000006003b375 <log> 2:59:48.975 [debug] [    rpl/core] {lowpan_tx}: Stats for 02-1b-c5-0c-60-00-4d-34: ack: 1, nack: 0, roundtrip: 2 ms, etx: 128/128
2018-11-29 12:13:12.678 #1   000000006003b375 <log> 2:59:49.106 [debug] [      mac_rx] {   mac_rx}: Received 77 B, unicast #224 from 02-1b-c5-0c-60-00-4d-34: rssi -68 dBm, sec 5, payload 47 B
2018-11-29 12:13:12.693 #1   000000006003b375 <log> 2:59:49.119 [debug] [ tran_switch] {   mac_rx}: UDP received from [fd00::1]:37257 to [fd28:914c:1da9:0:21b:c50c:6003:b375]:4059 of size 13: dtls session: -1
2018-11-29 12:13:12.701 #1   000000006003b375 <log> 2:59:49.134 [debug] [    dlmspipe] {   mac_rx}: UDP rx 13 B from [fd00::1]:37257
2018-11-29 12:13:12.709 #1   000000006003b375 <log> 2:59:49.142 [debug] [    dlmspipe] { dlmspipe}: ** dlmspipe task triggered **
2018-11-29 12:13:12.717 #1   000000006003b375 <log> 2:59:49.150 [debug] [    dlmspipe] { dlmspipe}:  ** packet forwarding to meter. **
2018-11-29 12:13:12.724 #1   000000006003b375 <log> 2:59:49.159 [debug] [    dlmspipe] { dlmspipe}: HDLC send DISC





-------------------------------------------------

git push ssh://stevetickle@gerrit.cyco.io:222/terminal HEAD:refs/for/master

-------------------------------

lnt 3-phase

gdb --args ./build/host-lnt-insecure/bin/agent -eui64 00-00-00-00-00-00-00-01\
 -meter /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0\
 -initrtc\
 -ctrlhub 127.0.0.1\
 -ctrlhubport 4243\
 -loglevel debug\
 -param device.dlms.lls_password=6C6E7431\
 -param device.dlms.authentication_key=31323334353637383930313233343536\
 -param device.dlms.encryption_key= 31323334353637383930313233343536\
 -param device.dlms.hls_key=30303030303030303031303335383230\
 -param device.time.sync_timer=1\
 -param server.ip=2a03:a000:192:35:a72f:f760:55bd:9cf\
 -param server.port=5684\
 -param modem.tun6.ip=127.0.0.1\
 -param modem.tun6.secret=whatsfordinner\
 -param modem.apn=4g.tele2.se\
 -param server.mq.push_now=1\
 -param server.mq.push_delay=30\
 -param device.capabilities.dlmspipe.push=0\
 -param device.dlms.pipe_enabled=0\
 -rootcert /Data/Temp/KeyTest/root.crt.der\
 -cert /Data/Temp/KeyTest/node.crt.der\
 -key /Data/Temp/KeyTest/node.key.der\
 -mackey /Data/Temp/KeyTest/mac-keys.txt\
 -gateway\
 -statedir AgentState\
 -socket

-------------------------------------------------

select device_id from device where node_id in (select id from terminal where terminal_id='00-00-00-00-00-00-00-01');


------------------------------
disable ipv6 temporary addresses

sysctl -w net.ipv6.conf.all.use_tempaddr=0
sysctl -w net.ipv6.conf.default.use_tempaddr=0
sysctl -w net.ipv6.conf.<devname>.use_tempaddr=0

---------------------------------------------

produce provision

./tools/c4-tools/coap_request.py --ctrlporthub :4243  --config prod.lowpan.eui64 00-00-00-00-00-00-00-01
./tools/c4-tools/coap_request.py --ctrlporthub :4243  --config prod.prodtime 1

./tools/c4-tools/coap_request.py --ctrlporthub :4243 --load-key client-key /Data/Temp/KeyTest/node.key.der
./tools/c4-tools/coap_request.py --ctrlporthub :4243 --load-key client-cert /Data/Temp/KeyTest/node.crt.der
./tools/c4-tools/coap_request.py --ctrlporthub :4243 --load-key root-cert /Data/Temp/KeyTest/root.crt.der
./tools/c4-tools/coap_request.py --ctrlporthub :4243 --rll-key /Data/Temp/KeyTest/mac-keys.txt

channelplan
channel
dtls instance id
server.ip
tnunel pw
tunnel ip.

----------------------------------------------

ip3b-kaifa assert

    at src/platform/drivers/uart/uart-efr32.c:127
127     ASSERT(port >= 0 && port < ARRAY_SIZE(s_usartPortDescriptors));
(gdb) p port
$1 = 6
(gdb) where
#0  uartOpen (port=port@entry=6, settings=settings@entry=0x200103f0 <s_terminalTaskStack+1472>)
    at src/platform/drivers/uart/uart-efr32.c:127
#1  0x0002c7fa in deviceStart () at src/device/drivers/kaifa_ma304/device-kaifa_ma304.c:3243
#2  0x0001022c in modulesStart (list=list@entry=0x5d624 <meteringModules>) at src/base/module.c:25
#3  0x0002618c in deviceStart () at src/device/addons/management/device.c:1390
#4  0x0001022c in modulesStart (list=list@entry=0x5b51c <managementModules>) at src/base/module.c:25
#5  0x00020602 in start () at src/management/management.c:82
#6  0x0003bc68 in terminalTask (arg=0x2000fd20 <s_terminalInitedSemaphore>)
    at src/terminal/terminal.c:255
#7  0x0004dfbc in pvTaskIncrementMutexHeldCount () at build/3pp/freertos/FreeRTOS/Source/tasks.c:4251
Backtrace stopped: previous frame identical to this frame (corrupt stack?)
(gdb)

CONFIG_DEVICE_UART=6

----------------------------------------



gdb --args ./build/host-kaifa-insecure/bin/agent -eui64 00-00-00-00-00-00-00-01 \
 -meter /dev/serial/by-id/usb-FTDI_TTL232R-3V3_FT9SI5ZW-if00-port0 \
 -initrtc \
 -ctrlhub 127.0.0.1 \
 -ctrlhubport 4242 \
 -loglevel debug \
 -param device.dlms.lls_password=lnt1 \
 -param device.dlms.authentication_key=31323334353637383930313233343536 \
 -param device.dlms.encryption_key=31323334353637383930313233343536 \
 -param device.dlms.hls_key=31323334353637383930414243444546 \
 -param device.time.sync_timer=1 \
 -param server.ip=2a03:a000:192:35:a72f:f760:55bd:9cf \
 -param server.port=5684 \
 -param modem.tun6.ip=127.0.0.1 \
 -param modem.tun6.secret=whatsfordinner \
 -param modem.apn=4g.tele2.se \
 -param server.mq.push_now=1 \
 -param server.mq.push_delay=30 \
 -param device.capabilities.dlmspipe.push=0 \
 -param device.dlms.pipe_enabled=0 \
 -rootcert /Data/Temp/KeyTest/root.crt.der \
 -cert /Data/Temp/KeyTest/node.crt.der \
 -key /Data/Temp/KeyTest/node.key.der \
 -mackey /Data/Temp/KeyTest/mac-keys.txt \
 -gateway \
 -statedir AgentState \
 -socket


gdb --args ./build/host-kaifa-insecure/bin/agent -eui64 00-00-00-00-00-00-00-01 \
 -meter /dev/serial/by-id/usb-FTDI_UC232R_FTXQJEKR-if00-port0 \
 -initrtc \
 -ctrlhub 127.0.0.1 \
 -ctrlhubport 4242 \
 -loglevel debug \
 -param device.dlms.lls_password=hello \
 -param device.dlms.authentication_key=31323334353637383930313233343536 \
 -param device.dlms.encryption_key=31323334353637383930313233343536 \
 -param device.dlms.hls_key=31323334353637383930414243444546 \
 -param device.time.sync_timer=1 \
 -param server.ip=2a03:a000:192:35:a72f:f760:55bd:9cf \
 -param server.port=5684 \
 -param modem.tun6.ip=127.0.0.1 \
 -param modem.tun6.secret=whatsfordinner \
 -param modem.apn=4g.tele2.se \
 -param server.mq.push_now=1 \
 -param server.mq.push_delay=30 \
 -param device.capabilities.dlmspipe.push=0 \
 -param device.dlms.pipe_enabled=0 \
 -rootcert /Data/Temp/KeyTest/root.crt.der \
 -cert /Data/Temp/KeyTest/node.crt.der \
 -key /Data/Temp/KeyTest/node.key.der \
 -mackey /Data/Temp/KeyTest/mac-keys.txt \
 -gateway \
 -statedir AgentState \
 -socket


--------------------------------------------

commit 27fa525e6acbe023a0b0c72ba89f36b61ac3608b
Author: Steve Tickle <Steve.Tickle@CyanConnode.com>
Date:   Thu Nov 8 17:59:17 2018 +0000

    Fix race condition causing RAM leak in HDLC.

    Because the HDLC and device tasks effectively share data such as
    s_sendPayload, there exists a race-condition where in high load conditions
    the data can get overwritten in disconnectLink without first FREEing the
    allocated data.
    All the global data is now protected by a mutex and the missing FREE has
    been added.

    Change-Id: I1b977f88fddb7dc9e8d15aa8b3df03c2536eac25

commit 45925561d1601922b28cb736f37fd9b2e404073b
Author: Steve Tickle <Steve.Tickle@CyanConnode.com>
Date:   Thu Nov 8 14:22:05 2018 +0000

    Protect data shared between DLMS and device tasks.

    The response data passed up from the DLMS task is shared between it
    and the device-task.
    In high-load situations with timeouts, the timeout can be signalled
    while processing the previous (good) message, since the shared data
    is overwritten, the continuing processing of the data results in
    a) hard-fault while accessing the data.
    b) the previous good message not being FREEd, leading to OOM errors
    and a subsequent panic later down the line.

    Change-Id: Ic5c5de7db24dacdfaa091242850bf7fd83870e12



--------------------------------


Breakpoint 2, isrHardFaultHandler () at src/hw/stm32/crash.c:147
147     while (keepMeHere == true) {
(gdb) p keepMeHere
$1 = true
(gdb) set keepMeHere=0
(gdb) stepi
0x08036fea  147     while (keepMeHere == true) {
(gdb)
150 }
(gdb) stepi
0x08036fee  150 }
(gdb)
uffs_crc16update (data=0x2000fbf8 <s_uffsPool+508>, length=length@entry=50331647, crc=17207,
    crc@entry=65535) at build/3pp/uffs/src/uffs/uffs_crc.c:84
84          CRC16(crc, *p);
(gdb) where
#0  uffs_crc16update (data=0x2000fbf8 <s_uffsPool+508>, length=length@entry=50331647, crc=17207,
    crc@entry=65535) at build/3pp/uffs/src/uffs/uffs_crc.c:84
#1  0x08068fd8 in uffs_crc16sum (data=<optimized out>, length=50331647)
    at build/3pp/uffs/src/uffs/uffs_crc.c:92
#2  0x0806c6da in uffs_MakeSum16 (p=<optimized out>, len=<optimized out>)
    at build/3pp/uffs/src/uffs/uffs_public.c:255
#3  0x0806d60a in _BuildValidTreeNode (st=<synthetic pointer>, bc=0x2001103c <s_uffsPool+5696>,
    node=0x2001188c <s_uffsPool+7824>, dev=0x2000f81c <s_flashDevice>)
    at build/3pp/uffs/src/uffs/uffs_tree.c:426
#4  _BuildTreeStepOne (dev=dev@entry=0x2000f81c <s_flashDevice>)
    at build/3pp/uffs/src/uffs/uffs_tree.c:626
#5  uffs_BuildTree (dev=dev@entry=0x2000f81c <s_flashDevice>)
    at build/3pp/uffs/src/uffs/uffs_tree.c:1325
#6  0x0806bf6e in uffs_InitDevice (dev=0x2000f81c <s_flashDevice>)
    at build/3pp/uffs/src/uffs/uffs_init.c:132
#7  0x0806c196 in uffs_Mount (mount=mount@entry=0x807d9b8 "/")
    at build/3pp/uffs/src/uffs/uffs_mtb.c:195
#8  0x0804af4a in start () at src/services/fs/uffs/fs_service.c:86
#9  0x0802017c in modulesStart (list=list@entry=0x807d0f8 <serviceModules>) at src/base/module.c:25
#10 0x08049616 in servicesStart () at src/services/services.c:64
#11 0x08053686 in terminalBasicStart () at src/terminal/terminal.c:124
#12 0x080536d4 in terminalTask (arg=0x20016c68 <s_terminalInitedSemaphore>)
    at src/terminal/terminal.c:232
#13 0x08065484 in pvTaskIncrementMutexHeldCount () at build/3pp/freertos/FreeRTOS/Source/tasks.c:4251
Backtrace stopped: previous frame identical to this frame (corrupt stack?)
(gdb)

-------------------------------------------------


ubuntu@ubuntu-VirtualBox:/Data/Projects/terminal$ ~/pbd 0801121c303031626335306336303030643363615f657863657270742e6c6f6718cd2a2080012a4666696c65747970653d6d6574657266772c7461726765746465766963653d30303030303030312c6d6574657266775f69643d313832383135353337353031333136363037393430d8043a103388745bd5ccf0c9aeecf564621f2b6342240a106264f1dedf904e9a8ad5fad10571a978121096b1eafe5a864d294e65a332315b09cc
1: 1
2: "001bc50c6000d3ca_excerpt.log"
3: 5453
4: 128
5: "filetype=meterfw,targetdevice=00000001,meterfw_id=18281553750131660794"
6: 600
7: "3\210t[\325\314\360\311\256\354\365db\037+c"
8 {
  1: "bd\361\336\337\220N\232\212\325\372\321\005q\251x"
  2: "\226\261\352\376Z\206M)Ne\24321[\t\314"
}


0801121c303031626335306336303030643363615f657863657270742e6c6f6718cd2a2080012a4666696c65747970653d6d6574657266772c7461726765746465766963653d30303030303030312c6d6574657266775f69643d313832383135353337353031333136363037393430d8043a103388745bd5ccf0c9aeecf564621f2b6342240a106264f1dedf904e9a8ad5fad10571a978121096b1eafe5a864d294e65a332315b09cc


0x08,0x01,0x12,0x1c,0x30,0x30,0x31,0x62,
0x63,0x35,0x30,0x63,0x36,0x30,0x30,0x30,
0x64,0x33,0x63,0x61,0x5f,0x65,0x78,0x63,
0x65,0x72,0x70,0x74,0x2e,0x6c,0x6f,0x67,
0x18,0xcd,0x2a,0x20,0x80,0x01,0x2a,0x46,
0x66,0x69,0x6c,0x65,0x74,0x79,0x70,0x65,
0x3d,0x6d,0x65,0x74,0x65,0x72,0x66,0x77,
0x2c,0x74,0x61,0x72,0x67,0x65,0x74,0x64,
0x65,0x76,0x69,0x63,0x65,0x3d,0x30,0x30,
0x30,0x30,0x30,0x30,0x30,0x31,0x2c,0x6d,
0x65,0x74,0x65,0x72,0x66,0x77,0x5f,0x69,
0x64,0x3d,0x31,0x38,0x32,0x38,0x31,0x35,
0x35,0x33,0x37,0x35,0x30,0x31,0x33,0x31,
0x36,0x36,0x30,0x37,0x39,0x34,0x30,0xd8,
0x04,0x3a,0x10,0x33,0x88,0x74,0x5b,0xd5,
0xcc,0xf0,0xc9,0xae,0xec,0xf5,0x64,0x62,
0x1f,0x2b,0x63,0x42,0x24,0x0a,0x10,0x62,
0x64,0xf1,0xde,0xdf,0x90,0x4e,0x9a,0x8a,
0xd5,0xfa,0xd1,0x05,0x71,0xa9,0x78,0x12,
0x10,0x96,0xb1,0xea,0xfe,0x5a,0x86,0x4d,
0x29,0x4e,0x65,0xa3,0x32,0x31,0x5b,0x09,
0xcc,

-------------------------------------------------

Kaifa MA304

6033a10906076085
74050801018a0207
808b076085740508
0201ac0780056865
6c6c6fbe10040e01
000000065f1f0400
001f1f00c8

<AssociationRequest>
  <ApplicationContextName Value="LN" />
  <SenderACSERequirements Value="1" />
  <MechanismName Value="Low" />
  <CallingAuthentication Value="68656C6C6F" />
  <InitiateRequest>
    <ProposedDlmsVersionNumber Value="06" />
    <ProposedConformance>
      <ConformanceBit Name="Action" />
      <ConformanceBit Name="EventNotification" />
      <ConformanceBit Name="SelectiveAccess" />
      <ConformanceBit Name="Set" />
      <ConformanceBit Name="Get" />
      <ConformanceBit Name="InformationReport" />
      <ConformanceBit Name="MultipleReferences" />
      <ConformanceBit Name="BlockTransferWithAction" />
      <ConformanceBit Name="BlockTransferWithSetOrWrite" />
      <ConformanceBit Name="BlockTransferWithGetOrRead" />
    </ProposedConformance>
    <ProposedMaxPduSize Value="00C8" />
  </InitiateRequest>
</AssociationRequest>


604aa10906076085
7405080101a60a
040800000000000000008a0207808b07
60857405080205ac128010c0beac7da2
f23ff8fe5f18342d60ebf3be10040e01
000000065f1f0400001f1f00c8

<AssociationRequest>
  <ApplicationContextName Value="LN" />
  <CallingAPTitle Value="0000000000000000" />
  <SenderACSERequirements Value="1" />
  <MechanismName Value="HighGMac" />
  <CallingAuthentication Value="C0BEAC7DA2F23FF8FE5F18342D60EBF3" />
  <InitiateRequest>
    <ProposedDlmsVersionNumber Value="06" />
    <ProposedConformance>
      <ConformanceBit Name="Action" />
      <ConformanceBit Name="EventNotification" />
      <ConformanceBit Name="SelectiveAccess" />
      <ConformanceBit Name="Set" />
      <ConformanceBit Name="Get" />
      <ConformanceBit Name="InformationReport" />
      <ConformanceBit Name="MultipleReferences" />
      <ConformanceBit Name="BlockTransferWithAction" />
      <ConformanceBit Name="BlockTransferWithSetOrWrite" />
      <ConformanceBit Name="BlockTransferWithGetOrRead" />
    </ProposedConformance>
    <ProposedMaxPduSize Value="00C8" />
  </InitiateRequest>
</AssociationRequest>



From above (dlms_request.py):
Kaifa LLS pw : "hello"
Kaifa HLS GMAC key: C0BEAC7DA2F23FF8FE5F18342D60EBF3

Test IPA3b
00-1B-C5-0C-60-04-FD-D6

./tools/c4-tools/coap_request.py --ctrlporthub :4000  --config prod.lowpan.eui64 00-1B-C5-0C-60-04-FD-D6
./tools/c4-tools/coap_request.py --ctrlporthub :4000  --config prod.prodtime 1

./tools/c4-tools/coap_request.py --ctrlporthub :4000 --load-key client-key /Data/Temp/00-1B-C5-0C-60-04-FD-D6/node.key.der
./tools/c4-tools/coap_request.py --ctrlporthub :4000 --load-key client-cert /Data/Temp/00-1B-C5-0C-60-04-FD-D6/node.crt.der
./tools/c4-tools/coap_request.py --ctrlporthub :4000 --load-key root-cert /Data/Temp/00-1B-C5-0C-60-04-FD-D6/ca.crt.der
./tools/c4-tools/coap_request.py --ctrlporthub :4000 --rll-key /Data/Temp/00-1B-C5-0C-60-04-FD-D6/mac_keys.txt

./tools/c4-tools/coap_request.py --ctrlporthub :4000  --config lowpan.channel 5
./tools/c4-tools/coap_request.py --ctrlporthub :4000  --config lowpan.channelplan 2
./tools/c4-tools/coap_request.py --ctrlporthub :4000  --config rpl.instance_id 0
./tools/c4-tools/coap_request.py --ctrlporthub :4000  --config server.ip fd00::1

-----------------------------------------------

apt install radvd

vi /etc/radvd.conf

interface eth0
{
    # This simply means that we are sending advertisements.
    AdvSendAdvert on;
    # This example prefix uses the IPv6 prefix for documentation.
    # When deploying, generate an ULA prefix from: http://unique-local-ipv6.com/
    # Netmask length must be "/64" (see RFC 2462, sect 5.5.3, page 18).
    prefix 2001:db8:1::/64
    {
        AdvOnLink on;
        AdvAutonomous on;
    };
};

sudo radvd --debug=5 -n

---------------------------------

blfwupload:

./build/host-lnt-insecure/bin/blfwupload -ctrlport 4000 -loglevel debug -image kaifa.image -dev /dev/serial/by-id/usb-FTDI_UM232H-B_FTWNSWIJ-if00-port0


-----------------------------------

  CC       src/tun4d-tun4d.o
In file included from src/tun4d.c:32:0:
src/tun4d.c: In function ‘receiveMessage’:
src/tun4d.c:393:26: error: format ‘%llu’ expects argument of type ‘long long unsigned int’, but argument 4 has type ‘size_t {aka unsigned int}’ [-Werror=format=]
     LOG_DEBUG_PEER(peer, "Parsing %" PRIu64 " bytes of RequestMessage",
                          ^
src/log.h:38:106: note: in definition of macro ‘LOG_DEBUG_PEER’
 #define LOG_DEBUG_PEER(p, fmt, ...) logWithAddress(LogLevelDebug, (const struct sockaddr *)(&(p)->addr), fmt, ##__VA_ARGS__)
                                                                                                          ^
cc1: all warnings being treated as errors
Makefile:644: recipe for target 'src/tun4d-tun4d.o' failed

------------------------------------------



gdb --args ./build/host-lnt-insecure/bin/agent -eui64 00-00-00-00-00-00-00-01 \
 -meter /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0 \
 -initrtc \
 -ctrlhub 127.0.0.1 \
 -ctrlhubport 4244 \
 -loglevel debug \
 -param device.dlms.lls_password=lnt1 \
 -param device.dlms.authentication_key=31323334353637383930313233343536 \
 -param device.dlms.encryption_key=31323334353637383930313233343536 \
 -param device.dlms.hls_key=30303030303030303031303335383230 \
 -param device.time.sync_timer=1 \
 -param server.ip=2a03:a000:192:35:a72f:f760:55bd:9cf \
 -param server.port=5684 \
 -param modem.tun6.ip=lnt-dev2.dev.cyanconnode.com \
 -param modem.tun6.secret=lnt-dev2 \
 -param modem.apn=4g.tele2.se \
 -param server.mq.push_now=1 \
 -param server.mq.push_delay=30 \
 -param device.capabilities.dlmspipe.push=0 \
 -param device.dlms.pipe_enabled=0 \
 -rootcert /Data/Temp/KeyTest/root.crt.der \
 -cert /Data/Temp/KeyTest/node.crt.der \
 -key /Data/Temp/KeyTest/node.key.der \
 -mackey /Data/Temp/KeyTest/mac-keys.txt \
 -gateway \
 -statedir AgentState \
 -socket


------------------------------------------

./tools/c4-tools/coap_request.py --ctrlporthub :4000  --config prod.lowpan.eui64 00-1b-c5-0c-60-01-b6-31
./tools/c4-tools/coap_request.py --ctrlporthub :4000  --config prod.prodtime 1

./tools/c4-tools/coap_request.py --ctrlporthub :4000 --load-key client-key /Data/Temp/00-1b-c5-0c-60-01-b6-31/node.key.der
./tools/c4-tools/coap_request.py --ctrlporthub :4000 --load-key client-cert /Data/Temp/00-1b-c5-0c-60-01-b6-31/node.crt.der
./tools/c4-tools/coap_request.py --ctrlporthub :4000 --load-key root-cert /Data/Temp/00-1b-c5-0c-60-01-b6-31/ca.crt.der
./tools/c4-tools/coap_request.py --ctrlporthub :4000 --rll-key /Data/Temp/00-1b-c5-0c-60-01-b6-31/mac_keys.txt

./tools/c4-tools/coap_request.py --ctrlporthub :4000  --config lowpan.channel 5
./tools/c4-tools/coap_request.py --ctrlporthub :4000  --config lowpan.channelplan 2
./tools/c4-tools/coap_request.py --ctrlporthub :4000  --config rpl.instance_id 0
./tools/c4-tools/coap_request.py --ctrlporthub :4000  --config server.ip fd00::1

-----------------------------------------


omni@omnibox10:~$ cat /lib/systemd/system/tun6d.service
[Unit]
Description=Connode IPv6 tunnel daemon
After=network-online.target c4server.service
Requires=c4server.service

[Service]
ExecStart=/usr/local/bin/tun6d
CapabilityBoundingSet=CAP_NET_ADMIN
EnvironmentFile=/usr/local/etc/tun6d.secret

[Install]
WantedBy=multi-user.target





omni@omnibox10:~$ cat /etc/network/interfaces
source /etc/network/interfaces.d/*

# This file intentionally left blank
#
# All interfaces are handled by network-manager, use nmtui or nmcli on
# server/headless images or the "Network Manager" GUI on desktop images
#  ! Not any more !


#auto usb0
iface usb0 inet dhcp
hwaddress ether 82:bc:09:47:28:a9


#auto wlan0
#iface wlan0 inet dhcp
#wpa-ssid Cyanconnode-1
#wpa-psk W6&v$8?6d!p3

#
# This is the static IP definition for Kalkitech/DLMSpipe-push testing.
#
auto eth0
iface eth0 inet6 static
        address fd00::1
        netmask 64



#
# NM has great difficulties creating random MAC addresses (spoofing) and
# really gets in the way of spoofing, so manage eth0 here.
#
auto eth0
iface eth0 inet static
        address 172.16.32.1
        netmask 255.255.255.0
        broadcast 172.16.32.255
        gateway 172.16.32.1
        pre-up [ -f /etc/network/if-pre-up.d/randomise-mac ]


auto tun6d0
iface tun6d0 inet static
        address 172.16.33.1


-----------------------------------------------------------

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/usr/local/connode/lib/activemq-all-5.15.3.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/usr/local/connode/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]


--------------------------------------------------------

SMIP CH

https://www.telit.com/m2m-iot-products/cellular-modules/standard-industrial-grade/xe910-family/#UE910-EU-downloads

Log:
minicom -D /dev/serial/by-id/usb-Telit_6_CDC-ACM_004678058002915-if06

lxfp m2mapz.bin  /dev/serial/by-id/usb-Telit_6_CDC-ACM_004678058002915-if00 -d6 verbose

Scimitar.xml:150:     <Value>UE910-EUD-AZ</Value>

Telit UE910-EUD-AZ (Type 6)

AT+GMM
UE910-EUD-AZ

OK


tools/c4-tools/upload_smip.py


OK
AT#M2MLIST
#M2MLIST: <MOD>
#M2MLIST: "m2m_config",185
#M2MLIST: <MFG>
#M2MLIST: <fileservice>
#M2MLIST: "debuglog_normal.txt",32768
#M2MLIST: <connode>
#M2MLIST: "diag.txt",179
#M2MLIST: <smurf>
#M2MLIST: "m2mapz.bin",1670688
#M2MLIST: free bytes: 27971584

OK

OK
AT#M2MREAD="diag.txt"
<<<Self Test Result: PASS-F8000000
Telit Firmware Version: 12.00.926-B024
CH Software Version: 9.r
CHFID: 887384530000092C
GPFID: 887384FF0000092C
Zigbee SW Version: 04.05.00.04
OK


AT#M2MRUN=2,m2mapz.bin
AT#M2MRUN=1,m2mapz.bin

AT+M2M=4,10 this means that the application will start 10 seconds after start-up.



AT#M2MREAD="debuglog_normal.txt"
AT#M2MREAD="m2m_config"



--------------------------------------------------------

Kaifa debug release for IPA3b:

kaifa-insecure:v138-14-ge12e424

equivalent to 33f391fceaeb9e91bf16c1f230a1dcc7ab79111e

18/12/2018




-------------------------------------


6abb0203720420a5d0e7c78db9964251c8bca1ca

a317f188b6229046a72ff8e5dbd1a3b391298aaa

5e1e4f20336e24cd6d4c761d4ab901265865babb


------------------------------------------------------

52416 [   6295.476][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set security level to 0x 5: Status: 0x00:
52417 [   6295.485][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set address table size to 0x10: Status: 0x00:
52418 [   6295.495][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set TC addr cache to 0x 2: Status: 0x00:
52419 [   6295.500][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set stack profile to 0x 2: Status: 0x00:
52420 [   6295.506][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set MAC indirect TX timeout to 0x1e00: Status: 0x00:
52421 [   6295.512][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set max hops to 0x1e: Status: 0x00:
52422 [   6295.518][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set tx power mode to 0x8000: Status: 0x00:
52423 [   6295.528][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set supported networks to 0x 1: Status: 0x00:
52424 [   6295.534][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,746:Ezsp Policy: set binding modify to "allow for valid endpoints & clusters only":
52425 [   6295.540][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,746:Ezsp Policy: set message content in msgSent to "return":
52426 [   6295.573][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set Fragmentation RX window size to 0x 1: Status: 0x00:
52427 [   6295.582][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set binding table size to 0x10: Status: 0x00:
52428 [   6295.591][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set key table size to 0x10: Status: 0x00:
52429 [   6295.599][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set max end device children to 0x 6: Status: 0x00:
52430 [   6295.636][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set Fragmentation RX window size to 0x 1: Status: 0x00:
52431 [   6295.642][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set end device poll timeout to 0x5a: Status: 0x00:
52432 [   6295.647][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set end device poll timeout shift to 0x 6: Status: 0x00:
52433 [   6295.653][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set transient key timeout to 0x12c: Status: 0x37:
52434 [   6295.661][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]CommsHubSample_callbacks.c,318:Ember Bootloader Version 1.0.0.9, Application Version 4.5.0.4
52435 [   6295.693][yyyy-mm-dd hh:mm:ss][ERROR][Ezsp              ]multi-network.c,89:Failure in network index
52436 [   6295.694][yyyy-mm-dd hh:mm:ss][ERROR][Ezsp              ]multi-network.c,54:Failure in network index
52437 [   6295.715][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]CH_osal_ezsp.c,4165:EZSP state is set as : EZSP_CONNECTED
52438 [   6295.717][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]EZSP_Task.c,982:Previous timer still pending, new timer not created
52439 [   6297.046][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,746:Ezsp Policy: set TC Key Request to "Deny":
52440 [   6297.055][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,746:Ezsp Policy: set App. Key Request to "Allow":
52441 [   6297.063][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,746:Ezsp Policy: set Trust Center Policy to "Allow preconfigured key joins":
52442 [   6297.079][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]EZSP_Task.c,1916:Set EZSP ZigBee Network monitor state from 0 to 1
52443 [   6297.090][yyyy-mm-dd hh:mm:ss][ info][Diagnostics       ]DIAGNOSTICS_Task.c,217:Current CPU load is 16%
52444 [   6297.123][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]af-main-host.c,986:ERROR: ezspErrorHandler : EZSP_ERROR_INVALID_FRAME_ID (0x31)
52445 [   6297.127][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]CH_osal_ezsp.c,4165:EZSP state is set as : EZSP_DISCONNECTED
52446 [   6297.132][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]CH_osal_ezsp.c,4176:EZSP state is already set as : EZSP_DISCONNECTED
52447 [   6297.135][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]EZSP_Task.c,820:Failure in EZSP main loop execution
52448 [   6297.141][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]EZSP_Task.c,1033:EZSP received CHAPPMSG_EzspHandleZigBeeReset, handling errors
52449 [   6297.143][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]EZSP_Task.c,1916:Set EZSP ZigBee Network monitor state from 1 to 0
52450 [   6297.146][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]telit-stubs.c,297:[ASH:TraceEvent]
=== ASH started ===

52451 [   6298.036][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1546:Feeding watchdog
52452 [   6300.415][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]telit-stubs.c,288:[ASH:TraceEventTime] ASH connected
52453 [   6300.421][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,1275:ERROR: NCP EZSP protocol version of 0x4 does not match Host version 0x6

52454 [   6300.427][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,1294:ezsp ver 0x4 stack type 0x2
52455 [   6300.451][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set source route table size to 0x10: Status: 0x00:
52456 [   6300.457][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set security level to 0x 5: Status: 0x00:
52457 [   6300.467][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set address table size to 0x10: Status: 0x00:
52458 [   6300.476][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set TC addr cache to 0x 2: Status: 0x00:
52459 [   6300.482][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set stack profile to 0x 2: Status: 0x00:
52460 [   6300.488][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set MAC indirect TX timeout to 0x1e00: Status: 0x00:
52461 [   6300.495][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set max hops to 0x1e: Status: 0x00:
52462 [   6300.501][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set tx power mode to 0x8000: Status: 0x00:
52463 [   6300.510][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set supported networks to 0x 1: Status: 0x00:
52464 [   6300.515][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,746:Ezsp Policy: set binding modify to "allow for valid endpoints & clusters only":
52465 [   6300.522][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,746:Ezsp Policy: set message content in msgSent to "return":
52466 [   6300.554][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set Fragmentation RX window size to 0x 1: Status: 0x00:
52467 [   6300.564][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set binding table size to 0x10: Status: 0x00:
52468 [   6300.573][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set key table size to 0x10: Status: 0x00:
52469 [   6300.582][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set max end device children to 0x 6: Status: 0x00:
52470 [   6300.619][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set Fragmentation RX window size to 0x 1: Status: 0x00:
52471 [   6300.625][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set end device poll timeout to 0x5a: Status: 0x00:
52472 [   6300.631][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set end device poll timeout shift to 0x 6: Status: 0x00:
52473 [   6300.638][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set transient key timeout to 0x12c: Status: 0x37:
52474 [   6300.645][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]CommsHubSample_callbacks.c,318:Ember Bootloader Version 1.0.0.9, Application Version 4.5.0.4
52475 [   6300.677][yyyy-mm-dd hh:mm:ss][ERROR][Ezsp              ]multi-network.c,89:Failure in network index
52476 [   6300.679][yyyy-mm-dd hh:mm:ss][ERROR][Ezsp              ]multi-network.c,54:Failure in network index
52477 [   6300.699][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]CH_osal_ezsp.c,4165:EZSP state is set as : EZSP_CONNECTED
52478 [   6300.701][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]EZSP_Task.c,982:Previous timer still pending, new timer not created
52479 [   6302.026][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,746:Ezsp Policy: set TC Key Request to "Deny":
52480 [   6302.034][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,746:Ezsp Policy: set App. Key Request to "Allow":
52481 [   6302.040][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,746:Ezsp Policy: set Trust Center Policy to "Allow preconfigured key joins":
52482 [   6302.055][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]EZSP_Task.c,1916:Set EZSP ZigBee Network monitor state from 0 to 1
52483 [   6302.106][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]af-main-host.c,986:ERROR: ezspErrorHandler : EZSP_ERROR_INVALID_FRAME_ID (0x31)
52484 [   6302.110][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]CH_osal_ezsp.c,4165:EZSP state is set as : EZSP_DISCONNECTED
52485 [   6302.115][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]CH_osal_ezsp.c,4176:EZSP state is already set as : EZSP_DISCONNECTED
52486 [   6302.120][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]EZSP_Task.c,820:Failure in EZSP main loop execution
52487 [   6302.123][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]EZSP_Task.c,1033:EZSP received CHAPPMSG_EzspHandleZigBeeReset, handling errors
52488 [   6302.124][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]EZSP_Task.c,1916:Set EZSP ZigBee Network monitor state from 1 to 0
52489 [   6302.126][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]telit-stubs.c,297:[ASH:TraceEvent]
=== ASH started ===

52490 [   6303.016][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1546:Feeding watchdog
52491 [   6305.399][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]telit-stubs.c,288:[ASH:TraceEventTime] ASH connected
52492 [   6305.405][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,1275:ERROR: NCP EZSP protocol version of 0x4 does not match Host version 0x6

52493 [   6305.412][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,1294:ezsp ver 0x4 stack type 0x2
52494 [   6305.435][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set source route table size to 0x10: Status: 0x00:
52495 [   6305.441][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set security level to 0x 5: Status: 0x00:
52496 [   6305.451][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set address table size to 0x10: Status: 0x00:
52497 [   6305.460][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set TC addr cache to 0x 2: Status: 0x00:
52498 [   6305.466][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set stack profile to 0x 2: Status: 0x00:
52499 [   6305.472][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set MAC indirect TX timeout to 0x1e00: Status: 0x00:
52500 [   6305.478][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set max hops to 0x1e: Status: 0x00:
52501 [   6305.484][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set tx power mode to 0x8000: Status: 0x00:
52502 [   6305.494][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set supported networks to 0x 1: Status: 0x00:
52503 [   6305.500][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,746:Ezsp Policy: set binding modify to "allow for valid endpoints & clusters only":
52504 [   6305.506][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,746:Ezsp Policy: set message content in msgSent to "return":
52505 [   6305.539][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set Fragmentation RX window size to 0x 1: Status: 0x00:
52506 [   6305.548][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set binding table size to 0x10: Status: 0x00:
52507 [   6305.557][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set key table size to 0x10: Status: 0x00:
52508 [   6305.569][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set max end device children to 0x 6: Status: 0x00:
52509 [   6305.606][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set Fragmentation RX window size to 0x 1: Status: 0x00:
52510 [   6305.613][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set end device poll timeout to 0x5a: Status: 0x00:
52511 [   6305.618][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set end device poll timeout shift to 0x 6: Status: 0x00:
52512 [   6305.624][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set transient key timeout to 0x12c: Status: 0x37:
52513 [   6305.631][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]CommsHubSample_callbacks.c,318:Ember Bootloader Version 1.0.0.9, Application Version 4.5.0.4
52514 [   6305.663][yyyy-mm-dd hh:mm:ss][ERROR][Ezsp              ]multi-network.c,89:Failure in network index
52515 [   6305.664][yyyy-mm-dd hh:mm:ss][ERROR][Ezsp              ]multi-network.c,54:Failure in network index
52516 [   6305.684][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]CH_osal_ezsp.c,4165:EZSP state is set as : EZSP_CONNECTED
52517 [   6305.686][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]EZSP_Task.c,982:Previous timer still pending, new timer not created
52518 [   6307.008][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,746:Ezsp Policy: set TC Key Request to "Deny":
52519 [   6307.018][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,746:Ezsp Policy: set App. Key Request to "Allow":
52520 [   6307.023][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,746:Ezsp Policy: set Trust Center Policy to "Allow preconfigured key joins":
52521 [   6307.039][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]EZSP_Task.c,1916:Set EZSP ZigBee Network monitor state from 0 to 1
52522 [   6307.092][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]af-main-host.c,986:ERROR: ezspErrorHandler : EZSP_ERROR_INVALID_FRAME_ID (0x31)
52523 [   6307.095][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]CH_osal_ezsp.c,4165:EZSP state is set as : EZSP_DISCONNECTED
52524 [   6307.100][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]CH_osal_ezsp.c,4176:EZSP state is already set as : EZSP_DISCONNECTED
52525 [   6307.104][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]EZSP_Task.c,820:Failure in EZSP main loop execution
52526 [   6307.107][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]EZSP_Task.c,1033:EZSP received CHAPPMSG_EzspHandleZigBeeReset, handling errors
52527 [   6307.108][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]EZSP_Task.c,1916:Set EZSP ZigBee Network monitor state from 1 to 0
52528 [   6307.110][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]telit-stubs.c,297:[ASH:TraceEvent]
=== ASH started ===

52529 [   6307.999][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1546:Feeding watchdog
52530 [   6310.384][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]telit-stubs.c,288:[ASH:TraceEventTime] ASH connected
52531 [   6310.391][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,1275:ERROR: NCP EZSP protocol version of 0x4 does not match Host version 0x6

52532 [   6310.397][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,1294:ezsp ver 0x4 stack type 0x2
52533 [   6310.421][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set source route table size to 0x10: Status: 0x00:
52534 [   6310.427][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set security level to 0x 5: Status: 0x00:
52535 [   6310.436][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set address table size to 0x10: Status: 0x00:
52536 [   6310.446][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set TC addr cache to 0x 2: Status: 0x00:
52537 [   6310.452][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set stack profile to 0x 2: Status: 0x00:
52538 [   6310.458][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set MAC indirect TX timeout to 0x1e00: Status: 0x00:
52539 [   6310.464][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set max hops to 0x1e: Status: 0x00:
52540 [   6310.470][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set tx power mode to 0x8000: Status: 0x00:
52541 [   6310.479][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set supported networks to 0x 1: Status: 0x00:
52542 [   6310.485][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,746:Ezsp Policy: set binding modify to "allow for valid endpoints & clusters only":
52543 [   6310.491][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,746:Ezsp Policy: set message content in msgSent to "return":
52544 [   6310.525][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set Fragmentation RX window size to 0x 1: Status: 0x00:
52545 [   6310.534][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set binding table size to 0x10: Status: 0x00:
52546 [   6310.543][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set key table size to 0x10: Status: 0x00:
52547 [   6310.552][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set max end device children to 0x 6: Status: 0x00:
52548 [   6310.588][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set Fragmentation RX window size to 0x 1: Status: 0x00:
52549 [   6310.594][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set end device poll timeout to 0x5a: Status: 0x00:
52550 [   6310.600][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set end device poll timeout shift to 0x 6: Status: 0x00:
52551 [   6310.607][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set transient key timeout to 0x12c: Status: 0x37:
52552 [   6310.614][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]CommsHubSample_callbacks.c,318:Ember Bootloader Version 1.0.0.9, Application Version 4.5.0.4
52553 [   6310.645][yyyy-mm-dd hh:mm:ss][ERROR][Ezsp              ]multi-network.c,89:Failure in network index
52554 [   6310.647][yyyy-mm-dd hh:mm:ss][ERROR][Ezsp              ]multi-network.c,54:Failure in network index
52555 [   6310.667][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]CH_osal_ezsp.c,4165:EZSP state is set as : EZSP_CONNECTED
52556 [   6310.669][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]EZSP_Task.c,982:Previous timer still pending, new timer not created
52557 [   6311.990][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,746:Ezsp Policy: set TC Key Request to "Deny":
52558 [   6311.999][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,746:Ezsp Policy: set App. Key Request to "Allow":
52559 [   6312.005][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,746:Ezsp Policy: set Trust Center Policy to "Allow preconfigured key joins":
52560 [   6312.020][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]EZSP_Task.c,1916:Set EZSP ZigBee Network monitor state from 0 to 1
52561 [   6312.072][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]af-main-host.c,986:ERROR: ezspErrorHandler : EZSP_ERROR_INVALID_FRAME_ID (0x31)
52562 [   6312.077][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]CH_osal_ezsp.c,4165:EZSP state is set as : EZSP_DISCONNECTED
52563 [   6312.082][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]CH_osal_ezsp.c,4176:EZSP state is already set as : EZSP_DISCONNECTED
52564 [   6312.087][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]EZSP_Task.c,820:Failure in EZSP main loop execution
52565 [   6312.089][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]EZSP_Task.c,1033:EZSP received CHAPPMSG_EzspHandleZigBeeReset, handling errors
52566 [   6312.090][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]EZSP_Task.c,1916:Set EZSP ZigBee Network monitor state from 1 to 0
52567 [   6312.092][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]telit-stubs.c,297:[ASH:TraceEvent]
=== ASH started ===

52568 [   6312.981][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1546:Feeding watchdog
52569 [   6312.983][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1568:Feeding watchdog: checking tasks
52570 [   6312.984][yyyy-mm-dd hh:mm:ss][ERROR][Supervisor        ]SUPERVISOR_Task.c,1584:C4_Task task heart beat not received: Rebooting
52571 [   6313.002][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]DEVICE_Task.c,1663:Re-boot cause set to 5
52572 [   6313.004][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]LOGGING_Service.c,628:[DMM Reboot Log: Write entry: Reason=1
52573 [   6313.080][yyyy-mm-dd hh:mm:ss][ info][Power             ]POWER_Task.c,331:power_Shutdown
52574 [   6315.367][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]telit-stubs.c,288:[ASH:TraceEventTime] ASH connected
52575 [   6315.374][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,1275:ERROR: NCP EZSP protocol version of 0x4 does not match Host version 0x6

52576 [   6315.380][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,1294:ezsp ver 0x4 stack type 0x2
52577 [   6315.403][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set source route table size to 0x10: Status: 0x00:
52578 [   6315.409][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set security level to 0x 5: Status: 0x00:
52579 [   6315.418][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set address table size to 0x10: Status: 0x00:
52580 [   6315.428][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set TC addr cache to 0x 2: Status: 0x00:
52581 [   6315.434][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set stack profile to 0x 2: Status: 0x00:
52582 [   6315.440][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set MAC indirect TX timeout to 0x1e00: Status: 0x00:
52583 [   6315.445][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set max hops to 0x1e: Status: 0x00:
52584 [   6315.451][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set tx power mode to 0x8000: Status: 0x00:
52585 [   6315.461][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set supported networks to 0x 1: Status: 0x00:
52586 [   6315.468][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,746:Ezsp Policy: set binding modify to "allow for valid endpoints & clusters only":
52587 [   6315.474][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,746:Ezsp Policy: set message content in msgSent to "return":
52588 [   6315.507][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set Fragmentation RX window size to 0x 1: Status: 0x00:
52589 [   6315.516][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set binding table size to 0x10: Status: 0x00:
52590 [   6315.526][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set key table size to 0x10: Status: 0x00:
52591 [   6315.535][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set max end device children to 0x 6: Status: 0x00:
52592 [   6315.571][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set Fragmentation RX window size to 0x 1: Status: 0x00:
52593 [   6315.577][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set end device poll timeout to 0x5a: Status: 0x00:
52594 [   6315.584][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set end device poll timeout shift to 0x 6: Status: 0x00:
52595 [   6315.589][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set transient key timeout to 0x12c: Status: 0x37:
52596 [   6315.596][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]CommsHubSample_callbacks.c,318:Ember Bootloader Version 1.0.0.9, Application Version 4.5.0.4
52597 [   6315.628][yyyy-mm-dd hh:mm:ss][ERROR][Ezsp              ]multi-network.c,89:Failure in network index
52598 [   6315.630][yyyy-mm-dd hh:mm:ss][ERROR][Ezsp              ]multi-network.c,54:Failure in network index
52599 [   6315.650][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]CH_osal_ezsp.c,4165:EZSP state is set as : EZSP_CONNECTED
52600 [   6315.652][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]EZSP_Task.c,982:Previous timer still pending, new timer not created
52601 [   6315.654][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]interpan.c,289:Interpan is already Disabled
52602 [   6315.656][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]telit-stubs.c,297:[ASH:TraceEvent] ======== ASH stopped ========

52603 [   6315.657][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]CH_osal_ezsp.c,4165:EZSP state is set as : EZSP_SHUTDOWN
52604 [   6315.660][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]ota-storage-telit.c,246:Closing the Ota Server File Store.
52605 [   6315.663][yyyy-mm-dd hh:mm:ss][ info][WanManager        ]WANMGR_Task.c,1549:WANMGR shutdown de-activating PDP context
52606 [   6315.666][yyyy-mm-dd hh:mm:ss][ info][SocketManager     ]SOCKETMGR_Task.c,2559:SOCKETMGR_clearRetryTable cleared
52607 [   6315.668][yyyy-mm-dd hh:mm:ss][ info][C4_Task           ]C4_Task.c,1100:taskc4_Shutdown
52608 [   6315.670][yyyy-mm-dd hh:mm:ss][ info][WanManager        ]LED_Service.c,150:SetLED, LED:WAN, Freq(state):OFF
52609 [   6315.672][yyyy-mm-dd hh:mm:ss][ info][SocketManager     ]SOCKETMGR_Task.c,2575:SOCKETMGR_clearAckRetryTable cleared
52610 [   6315.674][yyyy-mm-dd hh:mm:ss][ERROR][WanManager        ]CH_osal_ezsp.c,4842:Failed to get EZSP LOCK
52611 [   6315.676][yyyy-mm-dd hh:mm:ss][ERROR][WanManager        ]LED_Service.c,185:Failed ZigBee SetLED, status : 104
52612 [   6315.678][yyyy-mm-dd hh:mm:ss][ info][WanManager        ]WANMGR_NetworkTimers.c,1558:WANMGR_DeleteNetworkTimers
52613 [   6315.680][yyyy-mm-dd hh:mm:ss][ info][WanManager        ]WANMGR_Task.c,750:Completing shutdown
52614 [   6315.682][yyyy-mm-dd hh:mm:ss][ info][WanManager        ]WANMGR_Task.c,835:wanmgr_atCmdQueueInit
52615 [   6315.799][yyyy-mm-dd hh:mm:ss][ info][HANInterface      ]HANInterface_Task.c,1627:CHF: haninterfaceTomMsgTimer Timer deleted
52616 [   6315.848][yyyy-mm-dd hh:mm:ss][ info][FwDownload        ]FwDownload_Task.c,2245:Shutting down FwDownload Task
52617 [   6315.866][yyyy-mm-dd hh:mm:ss][ info][HANmanager        ]HANMGR_HANInterface.c,581:HAN Interface Enabled/Disabled status = 0
52618 [   6315.868][yyyy-mm-dd hh:mm:ss][ info][FwDownload        ]FwDownload_Task.c,1596:FwDownload.State setting updated to 1
52619 [   6315.886][yyyy-mm-dd hh:mm:ss][ info][HANmanager        ]HANMGR_HANInterface.c,599:HAN Interface_Enabled = FALSE
52620 [   6315.888][yyyy-mm-dd hh:mm:ss][ info][FwDownload        ]FwDownload_Task.c,1596:FwDownload.Interruptions setting updated to 0
52621 [   6315.905][yyyy-mm-dd hh:mm:ss][ info][FwDownload        ]FwDownload_Task.c,1596:FwDownLoad.RetryCounterOuter setting updated to 0
52622 [   6315.924][yyyy-mm-dd hh:mm:ss][ info][FwDownload        ]FwDownload_Task.c,1596:FwDownload.OngoingFwDownloadType setting updated to 0
52623 [   6315.925][yyyy-mm-dd hh:mm:ss][ info][FwDownload        ]FwDownload_Tftp.c,881:Closing socket and file descriptors, Buffer is NULL
52624 [   6315.928][yyyy-mm-dd hh:mm:ss][ info][Diagnostics       ]DIAGNOSTICS_Task.c,372:diagnostics_Shutdown
52625 [   6315.931][yyyy-mm-dd hh:mm:ss][ERROR][Diagnostics       ]DIAGNOSTICS_Task.c,266:Unrecognised timer expired (1027), removed!
52626 [   6317.964][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1546:Feeding watchdog
52627 [   6317.968][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1568:Feeding watchdog: checking tasks
52628 [   6317.971][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1580:C4_Task task heart beat not received. Supervisor is already in shutdown state. no action taken.
52629 [   6322.952][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1546:Feeding watchdog
52630 [   6322.955][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1568:Feeding watchdog: checking tasks
52631 [   6322.960][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1580:C4_Task task heart beat not received. Supervisor is already in shutdown state. no action taken.
52632 [   6327.939][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1546:Feeding watchdog
52633 [   6327.943][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1568:Feeding watchdog: checking tasks
52634 [   6327.946][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1580:C4_Task task heart beat not received. Supervisor is already in shutdown state. no action taken.
52635 [   6332.925][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1546:Feeding watchdog
52636 [   6332.929][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1568:Feeding watchdog: checking tasks
52637 [   6332.933][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1580:C4_Task task heart beat not received. Supervisor is already in shutdown state. no action taken.
52638 [   6337.905][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1546:Feeding watchdog
52639 [   6337.909][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1568:Feeding watchdog: checking tasks
52640 [   6337.913][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1580:C4_Task task heart beat not received. Supervisor is already in shutdown state. no action taken.
52641 [   6342.888][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1546:Feeding watchdog
52642 [   6342.892][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1568:Feeding watchdog: checking tasks
52643 [   6342.896][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1580:C4_Task task heart beat not received. Supervisor is already in shutdown state. no action taken.
52644 [   6347.868][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1546:Feeding watchdog
52645 [   6347.872][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1568:Feeding watchdog: checking tasks
52646 [   6347.876][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1580:C4_Task task heart beat not received. Supervisor is already in shutdown state. no action taken.
52647 [   6352.852][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1546:Feeding watchdog
52648 [   6352.856][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1568:Feeding watchdog: checking tasks
52649 [   6352.859][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1580:C4_Task task heart beat not received. Supervisor is already in shutdown state. no action taken.
52650 [   6357.833][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1546:Feeding watchdog
52651 [   6357.837][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1568:Feeding watchdog: checking tasks
52652 [   6357.841][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1580:C4_Task task heart beat not received. Supervisor is already in shutdown state. no action taken.
52653 [   6362.812][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1546:Feeding watchdog
52654 [   6362.817][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1568:Feeding watchdog: checking tasks
52655 [   6362.820][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1580:C4_Task task heart beat not received. Supervisor is already in shutdown state. no action taken.
52656 [   6367.796][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1546:Feeding watchdog
52657 [   6367.800][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1568:Feeding watchdog: checking tasks
52658 [   6367.804][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1580:C4_Task task heart beat not received. Supervisor is already in shutdown state. no action taken.
52659 [   6372.777][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1546:Feeding watchdog
52660 [   6372.781][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1568:Feeding watchdog: checking tasks
52661 [   6372.785][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1580:C4_Task task heart beat not received. Supervisor is already in shutdown state. no action taken.
52662 [   6377.759][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1546:Feeding watchdog
52663 [   6377.763][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1568:Feeding watchdog: checking tasks
52664 [   6377.767][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1580:C4_Task task heart beat not received. Supervisor is already in shutdown state. no action taken.
52665 [   6382.740][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1546:Feeding watchdog
52666 [   6382.744][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1568:Feeding watchdog: checking tasks
52667 [   6382.748][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1580:C4_Task task heart beat not received. Supervisor is already in shutdown state. no action taken.
52668 [   6387.720][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1546:Feeding watchdog
52669 [   6387.725][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1568:Feeding watchdog: checking tasks
52670 [   6387.728][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1580:C4_Task task heart beat not received. Supervisor is already in shutdown state. no action taken.
52671 [   6392.703][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1546:Feeding watchdog
52672 [   6392.707][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1568:Feeding watchdog: checking tasks
52673 [   6392.711][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1580:C4_Task task heart beat not received. Supervisor is already in shutdown state. no action taken.
52674 [   6397.683][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1546:Feeding watchdog
52675 [   6397.687][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1568:Feeding watchdog: checking tasks
52676 [   6397.691][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1580:C4_Task task heart beat not received. Supervisor is already in shutdown state. no action taken.
52677 [   6402.664][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1546:Feeding watchdog
52678 [   6402.667][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1568:Feeding watchdog: checking tasks
52679 [   6402.671][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1580:C4_Task task heart beat not received. Supervisor is already in shutdown state. no action taken.
52680 [   6407.648][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1546:Feeding watchdog
52681 [   6407.652][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1568:Feeding watchdog: checking tasks
52682 [   6407.656][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1580:C4_Task task heart beat not received. Supervisor is already in shutdown state. no action taken.
52683 [   6412.627][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1546:Feeding watchdog
52684 [   6412.632][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1568:Feeding watchdog: checking tasks
52685 [   6412.636][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1580:C4_Task task heart beat not received. Supervisor is already in shutdown state. no action taken.
52686 [   6417.610][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1546:Feeding watchdog
52687 [   6417.614][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1568:Feeding watchdog: checking tasks
52688 [   6417.617][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1580:C4_Task task heart beat not received. Supervisor is already in shutdown state. no action taken.
52689 [   6422.589][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1546:Feeding watchdog
52690 [   6422.594][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1568:Feeding watchdog: checking tasks
52691 [   6422.597][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1580:C4_Task task heart beat not received. Supervisor is already in shutdown state. no action taken.
52692 [   6427.570][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1546:Feeding watchdog
52693 [   6427.574][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1568:Feeding watchdog: checking tasks
52694 [   6427.577][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1580:C4_Task task heart beat not received. Supervisor is already in shutdown state. no action taken.
52695 [   6432.551][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1546:Feeding watchdog
52696 [   6432.555][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1568:Feeding watchdog: checking tasks
52697 [   6432.559][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1580:C4_Task task heart beat not received. Supervisor is already in shutdown state. no action taken.
52698 [   6432.564][yyyy-mm-dd hh:mm:ss][ERROR][Supervisor        ]SUPERVISOR_Task.c,1727:Time out waiting for tasks to shutdown, shutting down
52699 [   6432.567][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,677:Supervisor reboot/shutdown type 5 in progress...
52700 [   6432.570][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]CH_osal_lock.c,1066:LOCK Name: C4_Task, LockedBy:c:schedule
52701 [   6432.573][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]CH_osal_lock.c,1066:LOCK Name: c:termina, LockedBy:c:schedule
52702 [   6432.574][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]CH_osal_lock.c,1070:Total Lock Entries in use: 157
52703 [   6432.576][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]LED_Service.c,150:SetLED, LED:SW, Freq(state):HIGH_FREQ
52704 [   6432.578][yyyy-mm-dd hh:mm:ss][ERROR][Supervisor        ]CH_osal_ezsp.c,4842:Failed to get EZSP LOCK
52705 [   6432.579][yyyy-mm-dd hh:mm:ss][ERROR][Supervisor        ]LED_Service.c,185:Failed ZigBee SetLED, status : 52
52706 [   6432.581][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]sqlite3_setup.c,170:chClose called! for file: /file2
52707 [   6432.603][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]CRYPTOIF_Service.c,1345:Read Key: Group 3, Index 0x0C


----------------------------------------

omnibox10 changes:
- Add a second static ipv6 address in /etc/network/interfaces (2a03:a000:5:192:226:b9ff:fe1b:4b00)
- Add a static ipv6 address on the laptop (2a03:a000:5:192:226:b9ff:fe1b:4bf8).
"/64" addresses

tun6 ip
2a03:a000:5:192:226:b9ff:fe1b:4bf8

--prefix

server.ip address on nodes needs to be the ip address of server, otherwise packets are returned
from aliased source address (2a03...) whereas they were sent to fd00::1 and are therefore rejected.

---------------------------------------

back office vpn

sudo openvpn --config ~/.vpn/SteveTickle.ovpn

----------------------------------

gerrit manual verification

ssh -p 222 stevetickle@gerrit.cyco.io gerrit review --verified 2 --message "'Manual Verification by SteveT'" a558787356713d818fd9fdcdd70a4aaa422c1079
ssh -p 222 stevetickle@gerrit.cyco.io gerrit review --submit a558787356713d818fd9fdcdd70a4aaa422c1079
-------------------------------------------


git remote set-url origin ssh://stevetickle@gerrit.cyco.io:222/interface

------------------------------------------


First make sure all commit are in master

then make sure your HEAD is point to the latest master

git fetch
git checkout origin/master
Command to tag a version in git:

git tag -a v50
git push origin v50


------------------------------------------

build #8 for agent
MPWZ_R4

v141 agent v58 server tund v7

agent-gw200-bl-OMNIMESH_R5.2.zip            - Done
agent-gw200-OMNIMESH_R5.2.zip               - Done
agent-ipa3-bl-OMNIMESH_R5.2.zip             - Done
agent-ipa3-genus-dlms-OMNIMESH_R5.2.zip     - Done
agent-ipa3-lnt-dlms-OMNIMESH_R5.2.zip       - Done
server-MPWZ_R4.zip                          - Done
tund-OMNIMESH_R5.2.zip                      - Done

----------------------------------------
ssh stickle@release.se.cyco.io


OMNIMESH_R6
build #8 server == v60


--------------------------------------------------------


ubuntu@ubuntu-VirtualBox:/Data/Projects/terminal$ ./tools/c4-tools/upload_smip.py -r --reboot m2mapz.bin
--> AT
AT
OK
--> ATE1
ATE1
OK
--> AT#PORTCFG?
AT#PORTCFG?
#PORTCFG: 8,8

OK
--> AT#PORTCFG=8
AT#PORTCFG=8
OK
--> AT+GMR
AT+GMR
12.00.927

OK
Uploading m2mapz.bin to /dev/ttyACM4
--> AT#M2MWRITE="m2mapz.bin",1688968,1
AT#M2MWRITE="m2mapz.bin",1688968,1
.................................................................................................................................................................................................................
File of size 1688968 written, waiting for modem to confirm with OK...
>>>
OK
Writing SHA sum b65a1b9245053996ebfe09474e884062183d930d2ae93794de016835c65c21e6 of m2mapz.bin to hash info file slot
--> AT#M2MCHDIR?
AT#M2MCHDIR?
#M2MCHDIR: "/"

OK
--> AT#M2MCHDIR="/fileservice/firmware/slot4"
AT#M2MCHDIR="/fileservice/firmware/slot4"
OK
--> AT#M2MWRITE="slot4.slt",32,0
AT#M2MWRITE="slot4.slt",32,0
.
File of size 32 written, waiting for modem to confirm with OK...
>>>
OK
--> AT#M2MCHDIR="/"
AT#M2MCHDIR="/"
OK
Making m2mapz.bin runnable
--> AT#M2MRUN=2,"m2mapz.bin"
AT#M2MRUN=2,"m2mapz.bin"
OK
--> AT#M2MRUN?
AT#M2MRUN?
#M2MRUN: "m2mapz.bin"

OK
--> AT+M2M=4,10
AT+M2M=4,10
OK
Rebooting CH
--> AT#REBOOT


--------------------------------------------

SMIP CH:

"AT+M2M=1"

Starts the application.

use ./tools/c4-tools/readport.py to get log.

Generate keys and certs for SMIP.

./tools/c4-tools/provision_smip.sh  -p /dev/ttyACM4 8a-73-84-53-00-00-09-2c


 1536 [    166.087][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1546:Feeding watchdog
 1537 [    167.476][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]telit-stubs.c,288:[ASH:TraceEventTime] ASH connected
 1538 [    167.483][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,1275:ERROR: NCP EZSP protocol version of 0x4 does not match Host version 0x6

 1539 [    167.489][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,1294:ezsp ver 0x4 stack type 0x2
 1540 [    167.512][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set source route table size to 0x10: Status: 0x00:
 1541 [    167.518][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set security level to 0x 5: Status: 0x00:
 1542 [    167.527][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set address table size to 0x10: Status: 0x00:
 1543 [    167.537][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set TC addr cache to 0x 2: Status: 0x00:
 1544 [    167.542][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set stack profile to 0x 2: Status: 0x00:
 1545 [    167.549][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set MAC indirect TX timeout to 0x1e00: Status: 0x00:
 1546 [    167.555][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set max hops to 0x1e: Status: 0x00:
 1547 [    167.561][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set tx power mode to 0x8000: Status: 0x00:
 1548 [    167.570][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set supported networks to 0x 1: Status: 0x00:
 1549 [    167.577][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,746:Ezsp Policy: set binding modify to "allow for valid endpoints & clusters only":
 1550 [    167.583][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,746:Ezsp Policy: set message content in msgSent to "return":
 1551 [    167.616][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set Fragmentation RX window size to 0x 1: Status: 0x00:
 1552 [    167.618][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]interpan-host.c,48:Inter pan NCP init Callback
 1553 [    167.635][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set binding table size to 0x10: Status: 0x00:
 1554 [    167.644][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set key table size to 0x10: Status: 0x00:
 1555 [    167.653][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set max end device children to 0x 6: Status: 0x00:
 1556 [    167.690][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set Fragmentation RX window size to 0x 1: Status: 0x00:
 1557 [    167.692][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]interpan-host.c,48:Inter pan NCP init Callback
 1558 [    167.701][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]interpan-host.c,88:Mac filter List Enable status = 0x00
 1559 [    167.707][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set end device poll timeout to 0x5a: Status: 0x00:
 1560 [    167.713][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set end device poll timeout shift to 0x 6: Status: 0x00:
 1561 [    167.719][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set transient key timeout to 0x12c: Status: 0x37:
 1562 [    167.726][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]CommsHubSample_callbacks.c,318:Ember Bootloader Version 1.0.0.9, Application Version 4.5.0.4
 1563 [    167.757][yyyy-mm-dd hh:mm:ss][ERROR][Ezsp              ]multi-network.c,89:Failure in network index
 1564 [    167.759][yyyy-mm-dd hh:mm:ss][ERROR][Ezsp              ]multi-network.c,54:Failure in network index
 1565 [    167.779][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]CH_osal_ezsp.c,4165:EZSP state is set as : EZSP_CONNECTED
 1566 [    167.781][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]EZSP_Task.c,982:Previous timer still pending, new timer not created
 1567 [    169.082][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,746:Ezsp Policy: set TC Key Request to "Deny":
 1568 [    169.090][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,746:Ezsp Policy: set App. Key Request to "Allow":
 1569 [    169.098][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,746:Ezsp Policy: set Trust Center Policy to "Allow preconfigured key joins":
 1570 [    169.113][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]EZSP_Task.c,1916:Set EZSP ZigBee Network monitor state from 0 to 1
 1571 [    169.115][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]af-main-host.c,986:ERROR: ezspErrorHandler : EZSP_ERROR_INVALID_FRAME_ID (0x31)
 1572 [    169.117][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]CH_osal_ezsp.c,4165:EZSP state is set as : EZSP_DISCONNECTED
 1573 [    169.119][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]CH_osal_ezsp.c,4176:EZSP state is already set as : EZSP_DISCONNECTED
 1574 [    169.121][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]EZSP_Task.c,820:Failure in EZSP main loop execution
 1575 [    169.123][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]EZSP_Task.c,1033:EZSP received CHAPPMSG_EzspHandleZigBeeReset, handling errors
 1576 [    169.124][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]EZSP_Task.c,1916:Set EZSP ZigBee Network monitor state from 1 to 0
 1577 [    169.126][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]telit-stubs.c,297:[ASH:TraceEvent]
=== ASH started ===


ost.c,986:ERROR: ezspErrorHandler : EZSP_ERROR_INVALID_FRAME_ID (0x31)
 2002 [    215.290][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]CH_osal_ezsp.c,4165:EZSP state is set as : EZSP_DISCONNECTED
 2003 [    215.296][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]CH_osal_ezsp.c,4176:EZSP state is already set as : EZSP_DISCONNECTED
 2004 [    215.299][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]EZSP_Task.c,820:Failure in EZSP main loop execution
 2005 [    215.302][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]EZSP_Task.c,1033:EZSP received CHAPPMSG_EzspHandleZigBeeReset, handling errors
 2006 [    215.304][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]EZSP_Task.c,1916:Set EZSP ZigBee Network monitor state from 1 to 0
 2007 [    215.305][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]telit-stubs.c,297:[ASH:TraceEvent]
=== ASH started ===

 2008 [    216.623][yyyy-mm-dd hh:mm:ss][ info][  status          ] Version: smip_ctrlporthub:v141-2-g0717dd0M on hw B3PRIME_SKU3_NOSIM
 2009 [    216.625][yyyy-mm-dd hh:mm:ss][ info][  status          ] IID: 88-73-84-53-00-00-09-2c
 2010 [    216.627][yyyy-mm-dd hh:mm:ss][ info][  status          ] LoWPAN address: ::
 2011 [    216.628][yyyy-mm-dd hh:mm:ss][ info][  ip              ] IP queue lowpan: pkts: 0 (max 1), bytes: 0 (max 32), max wait: 1 ms
 2012 [    216.630][yyyy-mm-dd hh:mm:ss][ info][  ip              ] IP queue uplink: pkts: 0 (max 0), bytes: 0 (max 0), max wait: 0 ms
 2013 [    216.631][yyyy-mm-dd hh:mm:ss][ info][  cc1200          ] RX packets:1 ignored:0 bytes:56 FIFO-overflow:0 invalid:0
 2014 [    216.632][yyyy-mm-dd hh:mm:ss][ info][  cc1200          ] TX packets:3 bytes:168 channel-busy:0 FIFO-underflow:0 other-errors:0
 2015 [    216.634][yyyy-mm-dd hh:mm:ss][ info][  login           ] Login state: wait, server: [2001:9b0:192:8::10]:5684
 2016 [    216.635][yyyy-mm-dd hh:mm:ss][ info][  conman          ] Agent Mode: MeshOnly, ifaces up: NONE
 2017 [    216.637][yyyy-mm-dd hh:mm:ss][ info][  rpl/task        ] RPL Status: soliciting, instance 26
 2018 [    216.639][yyyy-mm-dd hh:mm:ss][ info][  rpl/data        ] Number of dags: 0
 2019 [    216.640][yyyy-mm-dd hh:mm:ss][ info][  rpl/data        ] Neighbors: 0, local: 0. Parents: 0, preferred: 0
 2020 [    218.214][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,1546:Feeding watchdog
 2021 [    218.566][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]telit-stubs.c,288:[ASH:TraceEventTime] ASH connected
 2022 [    218.572][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,1275:ERROR: NCP EZSP protocol version of 0x4 does not match Host version 0x6

 2023 [    218.578][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,1294:ezsp ver 0x4 stack type 0x2
 2024 [    218.601][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set source route table size to 0x10: Status: 0x00:
 2025 [    218.608][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set security level to 0x 5: Status: 0x00:
 2026 [    218.617][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set address table size to 0x10: Status: 0x00:
 2027 [    218.626][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set TC addr cache to 0x 2: Status: 0x00:
 2028 [    218.632][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set stack profile to 0x 2: Status: 0x00:
 2029 [    218.638][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set MAC indirect TX timeout to 0x1e00: Status: 0x00:
 2030 [    218.644][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set max hops to 0x1e: Status: 0x00:
 2031 [    218.650][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set tx power mode to 0x8000: Status: 0x00:
 2032 [    218.659][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set supported networks to 0x 1: Status: 0x00:
 2033 [    218.666][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,746:Ezsp Policy: set binding modify to "allow for valid endpoints & clusters only":
 2034 [    218.672][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,746:Ezsp Policy: set message content in msgSent to "return":
 2035 [    218.705][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set Fragmentation RX window size to 0x 1: Status: 0x00:
 2036 [    218.707][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]interpan-host.c,48:Inter pan NCP init Callback
 2037 [    218.724][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set binding table size to 0x10: Status: 0x00:
 2038 [    218.733][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]af-main-host.c,712:Ezsp Config: set key table size to 0x10: Status: 0


 2022 [    216.627][yyyy-mm-dd hh:mm:ss][ info][  status          ] Version: smip_ctrlporthub:v141-2-g0717dd0M on hw B3PRIME_SKU3_NOSIM



----------------------------------------------------------------------




{
  "jobName": "RAVISET12",
  "meterGroup": "RAVIFW1",
  "scheduledTime": null,
  "timeoutTime": null,
  "createTime": "2018-12-19T11:53:57Z",
  "updateTime": "2018-12-19T11:56:25Z",
  "status": "FINISHED",
      "jobType": "METER_COMMAND_SET",
      "jobConfiguration": {
        "name": null,
        "commands": [
          {
            "type": "PROFILE_CAPTURE_PERIOD",
            "activationTime": "2018-12-19T17:30:00+0530",
            "profileType": "BLOCK_LOAD",
            "capturePeriod": 1800
          },
          {
            "type": "PROFILE_CAPTURE_PERIOD",
            "activationTime": "2018-12-19T17:30:00+0530",
            "profileType": "INSTANTANEOUS",
            "capturePeriod": 1800
          },
          {
            "type": "DEMAND_INTEGRATION_PERIOD",
            "activationTime": "2018-12-19T17:30:00+0530",
            "demandPeriod": 1800
          },
          {
            "type": "BILLING_PERIOD",
            "activationTime": "2018-12-19T17:30:00+0530",
            "date": {
              "dayOfMonth": 3
            }
          }
        ]
      },
      "totalProcessedDevices": 2,
      "totalSuccessfulDevices": 2,
      "totalFailedDevices": 0
    }



    {
      "meters": [
        {
          "meterId": "G102008",
          "status": "SUCCESS",
          "failureStep": "0",
          "response": [
            {
              "type": "BILLING_PERIOD",
              "active": true,
              "date": {
                "dayOfMonth": 1
              }
            },
            {
              "type": "DEMAND_INTEGRATION_PERIOD",
              "demandPeriod": 1800,
              "active": true
            },
            {
              "type": "PROFILE_CAPTURE_PERIOD",
              "profileType": "BLOCK_LOAD",
              "capturePeriod": 1800,
              "active": true
            },
            {
              "type": "PROFILE_CAPTURE_PERIOD",
              "profileType": "INSTANTANEOUS",
              "capturePeriod": 1800,
              "active": true
            }
          ]
        },
        {
          "meterId": "G102009",
          "status": "SUCCESS",
          "failureStep": "0",
          "response": [
            {
              "type": "BILLING_PERIOD",
              "active": true,
              "date": {
                "dayOfMonth": 5
              }
            },
            {
              "type": "DEMAND_INTEGRATION_PERIOD",
              "demandPeriod": 900,
              "active": true
            },
            {
              "type": "PROFILE_CAPTURE_PERIOD",
              "profileType": "BLOCK_LOAD",
              "capturePeriod": 1800,
              "active": true
            },
            {
              "type": "PROFILE_CAPTURE_PERIOD",
              "profileType": "INSTANTANEOUS",
              "capturePeriod": 1800,
              "active": true
            }
          ]
        }
      ]
    }

    ---------------------------------

    --------------------------------

    FILE_service.h


    /*!
     * Connode files, which are located in Telit file system.
     */
    enum
    {
       FILE_ConActivityReportSlot = 0U,
       FILE_ConRplStateSlot,
       FILE_ConFwDlEncryptedFileSlot,
       FILE_ConFwDlFileSlot,
       FILE_ConFwDlStateSlot,
       FILE_ConCfgDataSlot,             /*!< Unused from Agent v84, Kept for backward compatibility */
       FILE_ConMacSecStateSlot,
       FILE_ConDtlsStateSlot,           /*!< Unused from Agent v84, Kept for backward compatibility */
       FILE_ConMsgQ0Slot,
       FILE_ConMsgQ1Slot,
       FILE_ConMsgQ2Slot,
       FILE_ConMsgQ3Slot,
       FILE_ConMsgQ4Slot,
       FILE_ConMsgQ5Slot,
       FILE_ConMsgQ6Slot,
       FILE_ConMsgQ7Slot,
       FILE_ConMsgQ8Slot,
       FILE_ConMsgQ9Slot,
       FILE_ConSpare1Slot,
       FILE_ConSpare2Slot,
       FILE_ConSpare3Slot,
       FILE_ConSpare4Slot,
       FILE_ConSpare5Slot,
       FILE_ConSpare6Slot,
       FILE_ConSpare7Slot,
       FILE_ConSpare8Slot,
       FILE_ConSpare9Slot,
       FILE_ConTempDL,                  /*!< Temporary file location used once Connode have completed download */
       FILE_ConnodeSlotsSizeEnum        /*!< MUST be last entry, used for validation */
    };


    --------------------------------------------

    NMS API

    "/networks/:networkId/nodes*": "/network-nodes",
    "/widget/nodestats": "/widgets-nodestats",
    "/widget/serverstats": "/widgets-servers",
    "/nodes/:nodeId/configuration*": "/node-configuration",
    "/nodes/:nodeId/widgets/statistics": "/nodes-widgets-statistics",
    "/nodes/:nodeId/actions/ping": "/node-ping",
    "/nodes/:nodeId/actions/restart": "/node-restart",
    "/nodes/:nodeId/events/node*": "/node-events-node",
    "/groups/:groupId/nodes*": "/group-nodes",
    "/nodes/:nodeId/events/network*": "/node-events-network",
    "/nodes/:nodeId/devices*": "/node-devices",
    "/jobs/configuration/params*": "/configuration-params",
    "/platform/servers/:serverName": "/platform-server",
    "/platform/servers*": "/platform-servers",
    "/jobs/:jobId/nodes*": "/job-nodes",
    "/platform/config/auth": "/configuration-auth",
    "/platform/config/dns": "/configuration-dns",
    "/platform/config/ha": "/configuration-ha",
    "/platform/config/proxy": "/configuration-proxy",
    "/platform/config/log": "/configuration-logging",
    "/platform/config/mq": "/configuration-message-queue",
    "/platform/config/events": "/configuration-network-events",
    "/platform/config/alarms": "/configuration-server-alarms",
    "/platform/config/tun6d": "/configuration-uplink-monitoring",
    "/platform/config/pki": "/configuration-pki",
    "/platform/config/nodeAccess": "/configuration-node-access",
    "/platform/alarms*": "/platform-alarms",
    "/map/nodes*": "/map-nodes",
    "/nodes/:nodeId/statistics/properties": "/node-statistics-properties",
    "/nodes/:nodeId/statistics*": "/node-statistics",
    "/platform/dtls*": "/platform-dtls$1",
    "/map/networks*": "/map-networks",
    "/platform/server-security-pair*": "/platform-server-security-pair"


    ---------------------------------------------

    smip error:

    74638 [   8898.621][yyyy-mm-dd hh:mm:ss][ERROR][WanManager        ]WANMGR_NetworkTimers.c,1106:Too many AT command errors, rebooting to recover, AT command: 'AT#CSURV' after command 'AT+COPS=2'


    ---------------------------------------------

    Adams repo omnimesh

    https://gitlab.cyco.io/Omnimesh/omnimesh-demo/blob/master/omnisma-demo.py

    ----------------------------------------------

    Disabling ipv6 address generation with NetworkManager:

    /etc/NetworkManager/system-connections/BackOffice

    [ipv6]
    addr-gen-mode=eui64

    ----------------------------------------------------------------

    SMIP-26

    - Suspected deadlock on acquiring SPI mutex. Is VaultIC device and CC1200 on same SPI bus?
    - Possible problem is CC code has SPI bus held, but then tries to acquire SPI bus again for
    random number generation? Don't think this can happen.
    - Possibly generate high rate of SPI traffic with CC1200 and RNG calls?



    ch_hal_spi_transfer:
     - ch_osal_mutex_lock(spi_mtx, CH_HAL_SPI_MUTEX_TIMEOUT, CH_OSAL_MUTEX_RECURSIVE)

    agent.h
    cndsmip.h

    C4_rndSetCallback(taskc4_rndCB);
    s_rndCB() -> taskc4_rndCB() -> CRYPTOIF_Random()

    CRYPTOIF_Random:
    ch_osal_mutex_lock(cryptoif_Lock, C_CH_OSAL_MUTEX_INFINITE, CH_OSAL_MUTEX_RECURSIVE)
    cryptoif_IC_Random() -> VltGenerateRandom()
    ch_osal_mutex_unlock(cryptoif_Lock);


    --------------------------------------------------

    agent.h:

    cnd_ConState
    cnd_AgentMode

    cnd_ConStateCB()
    cnd_conStateAddCallback()

    conStateUpdatedSchedule()
    triggered by conStateUpdated()

    ---------------------------------------------------------

    secondary ipv6 order:

    https://unix.stackexchange.com/questions/285051/how-do-i-add-a-second-ipv6-address-on-linux-without-making-it-default

    ip addr add <address> dev <device> preferred_lft <lifetime>

    you can also set it on an existing address

    ip addr change <address> dev <device> preferred_lft <lifetime>


    if-up script in /etc/network/interfaces

    -------------------------------------------------------------------

    time sync test:

    server->gateway->nodes->meter.

    tests:
    - (Set test) end-to-end, read meter-clock and server-clock simulateneouslyi(ish) to determine current offset. Modify server-clock -1hr to
    and monitor meter-time by monitoring log to check for time sync occurring. When found, perform a final read and comparison to verify.
    - (update) end-to-end, with a delta of -(update-threshold), -(update-threshold+1), +(update-threshold-1), +(update-threshold+1)

    [meter/time_synch] { schedule}: Time synchronization request


    ---------------------------------------------------------------


    Stages:
    - Implement end-to-end application-level reliability so we don't rely on transport-level reliability (MQ) so we don't rely on transport-level reliability (MQ).
    - Implement a small RAM-backed mq, run in parallel. Duplicate existing mq code, change file-backing to RAM-backed.
    - Move sample-data to RAM-MQ. Small-change, lots of testing.
    - Allocate space in internal FLASH for file-distribution, redirect file distribution to use this area. Encryption may need to be done a block-basis instead of whole-file.
    - Make small cirular buffer (notification-queue) in FLASH for node events, redirect eventStore API to use this area.
    - Move metrics to straight CoAP PUSH. Allow metrics to be unreliable? I think this is a good trade-off.
    - Move Storage of the Configuration PB to a simple small circular buffer. This is currently implemented with two-files as a (small) circular buffer.
    - Add storage for configuration of instantaneous profile capture-period (in configuration circular buffer?). Remove DataProfileContext storage.
    - Move meter-push-alarm notifications to circular buffer notification-queue.

    At this point we have the FLASH requirement removed for the following types:
    - Profile samples (moved to RAM-MQ which can be further optimised given time).
    - Meter push alarm notifications (moved to notification-queue).
    - Node events (moved to notification-queue)
    - Metrics data changed to use direct CoAP PUSH mechanism rather than storing in MQ (change of semantics here).
    - File distribution (moved to designated area on internal-FLASH).
    - Configuration (moved to small circular-buffer on internal FLASH).
    - Meter-driver context storage (removed exept for instantaneous-profile capture-period which moves into config).

    Which leaves the final step:
    - Make FLASH driver & CNDFS optional in build.


    First phase ofFLASH-removal, put application checking in position:
    - SMA to validate incoming profile data against corresponding schema (number of fields, type of field).
    - On device registration/login, SMA responds with new message containing timestamps for all profiles.
    - On Agent:
    DataProfileContext->timestamp
    dataprofile::storeConfig()
    dataprofile::restoreConfig()
    handle storage of the last timestamp, these will evetually be removed, but for now DataProfileContext->timestamp can be
    modified by receipt of a new message from SMA: SetLastKnownGoodProfileTimestamp.
    - SMA must handle potential duplicated messages for same timestamps via db update.

    At this point, FLASH is still being used to store updated last-known-good timestamp. We can stop this
    then the DataProfileContext mostly doesn't need storage.
    There is capture-period-setting state in there that needs to be persisted in a different way that
    is common with all other config data, not just capture-period.
    DataProfileContext can then be removed, leaving the timestamp to be stored (transiently) in DataProfileDiscovery struct.
    along with discovery infomation.
    DataProfileContext does store capturePeriod for isntantaneous, need to find a way around that.



    -------------------------------------------------------

    Hard fault:  Hsch BF200543f5@633beL63383S2000e958
    location is within "_malloc_r()"


    -----------------------------------------------------------


    - Add, not replace generation of Activation-complete with newly created activation-complete node-event.
    - parameter in node event needs to contain job id for NMS to match up.
    - Timed activation of meter is complete for job.
    - Got picture of sequence to document.


    ----------------------------------------------------------


    ./build/host-ctrlporthub/bin/ctrlporthub -controllerport 4000 -listen 4242 -loglevel debug


    gdb --args ./build/host-lnt-insecure/bin/agent -eui64 00-00-00-00-00-00-00-01 \
     -meter /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0 \
     -initrtc \
     -ctrlhub 127.0.0.1 \
     -ctrlhubport 4242 \
     -loglevel debug \
     -param device.dlms.lls_password=lnt1 \
     -param device.dlms.authentication_key=31323334353637383930313233343536 \
     -param device.dlms.encryption_key=31323334353637383930313233343536 \
     -param device.dlms.hls_key=30303030303030303031303335383230 \
     -param device.time.sync_timer=1 \
     -param server.ip=2a03:a000:5:192:e437:5170:6f78:cfc5 \
     -param server.port=5684 \
     -param modem.tun6.ip=127.0.0.1 \
     -param modem.tun6.secret=whatsfordinner \
     -param modem.apn=4g.tele2.se \
     -param server.mq.push_now=1 \
     -param server.mq.push_delay=30 \
     -param device.capabilities.dlmspipe.push=0 \
     -param device.dlms.pipe_enabled=0 \
     -rootcert /Data/Temp/KeyTest/root.crt.der  \
     -cert /Data/Temp/KeyTest/node.crt.der  \
     -key /Data/Temp/KeyTest/node.key.der  \
     -mackey /Data/Temp/KeyTest/mac-keys.txt \
     -gateway \
     -statedir AgentState \
     -socket


    ------------------------------------------------------------



    Regarding low-power

    9) low-power is in Omnimeshs's future (however distant).
    9b) sleepy-nodes will always be lower-power than mostly-on nodes, reagrdless of technology.
    9c) High-power (always-on) is a special-case of low-power (i.e. a high-power node can just do nothing with the 'off' time).
    9d) The architectural requirements of sleepy-nodes dictate a large part of the architecture of the system as a whole.
    9c) 9 + 9b + 9c  imply that we *can* design for sleepy-nodes now without losing any features.
    9e) 9d + 9c imply that we *should* design for low power now rather than later.
    10) Non-mesh networks such as stars are inherently better for low-power than meshes.
    11) Low-power networks such as ZigBee, BLE or LoRA cannot support the overhead of IPv6 (or rather they can, but generally choose not to). There are good reasons for this.
    12) 9 + 10 + 11 implies IPv6 is not a given in Ommnimesh's future.
    13) 12 implies IPv6 is not suitable for addressing nodes looking forward.
    14) In this (eventual) low-power future, it would be desirable to support mixed always-on/mostly-off networks, i.e. Elec/Gas/Water.
    15) 14 implies a hybrid network (e.g. mesh-of-stars) is a good fit for Omnimesh in the future (almost ZigBee model).
    16) 15 implies there is an elephant in the room ;o)



    Primary node addressing scheme:

    0) Addressing-scheme is a critical architectural point that dictates available technologies in the future.
    0b) addressing is difficult to change.
    1) IPv6 addresses under Omnimesh are dynamic (mesh hopping).
    1b) IPv6 addresses are arbitrary and composed by our code from "prefix##eui64".
    2) Individual transactions are long-duration, and multi-packet, thus may cross dynamic IP boundaries, i.e. a node can change IP in the middle of a transfer.
    2b) different technologies will have (potentially) hardcoded addressing schemes (e.g. based on manufacturer-specified MAC address).
    3) 1 + 2 + 2b imply IPv6 addresses are not suitable to uniquely identify a node.
    4) 1 + 2 also imply a DTLS session (between IPv6 endpoints) will not be efficient as the session may be torn down and restarted mid-transaction.
    4) IPv6 is an implementation detail. You can imagine a ZigBee or LoRAWAN based network with different addressing needs.
    5) Device EUI is static, uniquely identifies a node and is assigned by us, independent of communication technology.
    6) 4 + 5 imply the real unique identifiers of nodes for communication purposes should be EUI-64.
    7) DTLS may be appropriate for some applications, so no problem keeping it as an option for those (and for backward compatibility).


    NMS split:

    Data types:
    - IPv6                          - open.
    - EUI64                         - open.
    - meterID                       - open.
    - Configuration data            - authenticated.
    - event data                    - closed/authenticated.
    - metering data                 - closed/authenticated.
    - PKI credentials               - closed/authenticated.
    - monitoring data               - open.

    Features of NMS are:
    - job management                        - unprivileged, coupled with node-data-transfer.
    - node data transfer                    - unpriveleged, coupled with job management/asynchronous comms.
    - DTLS PKI management                   - privileged coupled with transport security (DTLS).
    - transport security (DTLS)             - privileged, coupled with CoAP/HTTP proxy (?)
    - CoAP/HTTP proxy                       - unprivileged, coupled with DTLS and PKI.
    - configuration management              - privileged, coupled with other management features,
    - event handling                        - privileged, coupled with other management features.
    - network monitoring                    - unprivileged, coupled with other management features.

    So NMS becomes 3 submodules:
    - Network Management Application (NMA). Network configuration,  event handling and monitoring.
    - Secure Transport Endpoint (STE). Secure CoAP/HTTP proxy. Could be co-located with MDMS over a VPN providing a secure endpoint to SMA (not HTTPS over open network which would require re-encrypting), bypssing NMA (old NMS).
    - Asynchronous Communications Manager (ACM).




    Secure Transport Endpoint (STE):
    - Secure CoAP/HTTP proxy.
    - VPN between our data centre and secure data centre (MDMS).
    - SMA co-located with MDMS.
    - STE co-located with MDMS.
    - Nodes can target STE over IPv6/VPN, physically located in secure data centre.
    - decrypting avoided until physically inside secure data centre with SMA and MDMS.
    - *only* secure when physically located at the *real* endpoint.
    - Reusable for different applications.

    Network Management Application (NMA).
    - Network configuration
    - event handling and notfication.
    - Network Monitoring and notification.
    - Geographic UI.

    Asynchronous Communications Manager (ACM):
    - Co-located with tun6d.
    - request aggregation.
    - multi-packet response collation.
    - Has to be a man-in-the-middle in order to perform aggregation and collation of multi-packet responses.
    - Single ACM instance serves multiple applications, can optimise across applications.
    - ACM has a new API that we can migrate to slowly
    - Has to be ouside of DTLS as an ACM inside DTLS would have no visibility of other DTLS streams.
    - ACM has to deal with raw UDP packets to be able to transport DTLS streams.
    - ACM can have no API, it must be a network interface similar to tun6.
    - ACM could present a tun interface to outside world (i.e. STE).
    - incoming packets are aggregated according to network topology obtained from tun6.


    - packet aggregation can be done outside DTLS
    - async API needs to be inside DTLS
    - request aggregation needs to be done instide DTLS.
    - reponse collation needs visibility of data, therfore has to be inside of DTLS.



    1) Nodes are primarily addressed by EUI-64 (following from above).
    2) Communications facility should be (able to be) shared between multiple applications (application independence).
    3) Some metering networks (e.g. SMETS) exist where end-to-end encryption is assumed.
    4) Welmec/MID (European metering standards) software requirements for metering *strongly* imply end-to-end encryption.
    5) CPA requirements (GB security/robistness standards related to metering) for metering *specify* end-to-end encryption.
    6) Welmec would consider Omnimesh to be an "open network" and suggest use of encryption (and specify authentication).
    7) Most/all(?) deployed DLMS systems use end-to-end encryption.
    8) Accepted techniques for secure end-to-end transfer of private information (i.e. metering data) involve end-to-end encryption.
    9) 7 + 8 imply our competitors will be end-to-end encrypted.
    10) We can't consider the data centre (AWS/bare-metal) to be secure as it is out of our control.
    11a) "Dont trust services"; We can't trust a data centre to be secure.
    11b) "Principle of least privelage"; The communications portions of our network don't need to see the plaintext data, therefore they shouldn't.
    11c) "Minimise attack surface area"; We have the opportunity to remove an exposed surface (security endpoint terminating at NMS) therefore we should.
    11d) "limit the impact of any compromise". If the data centre gets exposed, *all* metering data for the *whole* population would be exposed (and could be exfiltrated with e.g. tcpdump on a running server).
    11e) "No segment or tier of a service should implicitly trust requests from other segments." Currently our NMS/SMA implicitly trust each other, they shouldn't.
    12) True end-to-end encryption is table-stakes for a secure metering application.

    13) Network data transfer infrastructure should be un-privelaged (opaque data/payloads).
    14) Management features should be privelaged (transparent data/payloads).
    15) CoAP/HTTP proxy simply performs protocol translation, entirely decoupled from rest of system, therefore can be entirely standalone.
    16) PKI management is obviously privelaged.
    17) Event handling may need to trigger privelaged actions, therefore privelaged.
    18) Job management is effectively an asynchronous data transfer API, therefore application independent and sees opaque data, therfore unprivelaged.

    20) Secure end-to-end transport communications (i.e. to STE) cannot be aggregated/optimised though ACM (ACM *has* to be a man-in-the-middle).
    21) ACM is a single isntance serving multiple applications.

    Factors to consider for determining split?
    - security/privelage separation.
    - performance
    - Grouping of features
    - use-case



    MID requirement: "Any network that contains legally controlled devices with IR or wireless network communications
    interfaces shall be considered to be an open network."

    Welmec: https://www.owasp.org/index.php/Security_by_Design_Principles
    NCSC: https://www.ncsc.gov.uk/blog-post/how-ncsc-thinks-about-security-architecture




    ------------------------------------------------

    Load balancing:


        TunnelA -|
                 --- Tunnel
        TunnelB -|


        fd00::a -|
                 ---- fd00::1
        fd00::b -|

    - Agent opens uplink with tunnel, gets forwaded to tunnelA.
    - Agent opens DTLS session with fd00::1, get forwarded to fd00:B.

    - by sharing a prefix file, tunnelA and tunnelB can allocate the same IP address

    ----------------------------------------------------

    prefer IPv4 over IPv6
    getaddrinfo

    /etc/gai.conf


    https://community.rackspace.com/products/f/public-cloud-forum/5110/how-to-prefer-ipv4-over-ipv6-in-ubuntu-and-centos

    precedence ::ffff:0:0/96  100

    ------------------------------------------------------


    __ram_start = 536888834 __ram_end = 406209674
    stackVar= 536938872 heapVar=536942368

    __ram_start = 0x20004602
    __ram_end   = 0x1836448a
    stackVar    = 0x20010978
    heapVar     = 0x20011720

    #include "platform/core/pointer-checks.h"
    #include <inttypes.h>
    #include "platform/core/memory.h"

    void prodmodeEnterIfNotCommissioned(void)
    {
        logSetLevel(LogLevelDebug);

        uint8_t     stackVar[16];
        uint8_t*    heapVar = MALLOC(10);
        //LOG_INFO("__ram_start = %"PRIu32" __ram_end = %"PRIu32"",__ram_start,__ram_end);
        //LOG_INFO("stackVar= %"PRIu32" heapVar=%"PRIu32"",(uint32_t)&stackVar[0],(uint32_t)&heapVar[0]);
        LOG_INFO(">>> doing test...");
        OS_sleepSec(1);
        CHECK_POINTER_IS_READABLE( &stackVar[0] );
        LOG_INFO(">>> %d",__LINE__);
        OS_sleepSec(1);
        CHECK_POINTER_IS_WRITABLE( &stackVar[0] );
        LOG_INFO(">>> %d",__LINE__);
        OS_sleepSec(1);
        CHECK_POINTER_IS_READABLE( &heapVar[0] );
        LOG_INFO(">>> %d",__LINE__);
        OS_sleepSec(1);
        CHECK_POINTER_IS_WRITABLE( &heapVar[0] );
        LOG_INFO(">>> %d",__LINE__);
        OS_sleepSec(1);
        CHECK_POINTER_IS_WITHIN_BUFFER( &stackVar[1], &stackVar[0],&stackVar[0]+sizeof(stackVar));
        LOG_INFO(">>> %d",__LINE__);
        OS_sleepSec(1);
        CHECK_POINTER_IS_WITHIN_BUFFER( &stackVar[0], &stackVar[0],&stackVar[0]+sizeof(stackVar));
        LOG_INFO(">>> %d",__LINE__);
        OS_sleepSec(1);
        CHECK_POINTER_IS_WITHIN_BUFFER( &stackVar[15], &stackVar[0],&stackVar[0]+sizeof(stackVar));
        LOG_INFO(">>> %d",__LINE__);
        OS_sleepSec(1);

        //CHECK_POINTER_IS_WITHIN_BUFFER( &stackVar[16], &stackVar[0],&stackVar[0]+sizeof(stackVar));

        LOG_INFO(">>> %d",__LINE__);
        OS_sleepSec(1);



    ----------------------------

    Kaifa: PanMesh server on http://10.32.31.121
    EUI of gateway 00-1b-c5-0c-60-00-27-11

    64 bytes from fd7e:ce88:ce59:0:21b:c50c:6000:2711: icmp_seq=1 ttl=32 time=72.8 ms
    64 bytes from fd7e:ce88:ce59:0:21b:c50c:6000:2711: icmp_seq=2 ttl=32 time=72.9 ms
    64 bytes from fd7e:ce88:ce59:0:21b:c50c:6000:2711: icmp_seq=3 ttl=32 time=72.8 ms
    64 bytes from fd7e:ce88:ce59:0:21b:c50c:6000:2711: icmp_seq=4 ttl=32 time=73.0 ms
    64 bytes from fd7e:ce88:ce59:0:21b:c50c:6000:2711: icmp_seq=5 ttl=32 time=72.9 ms
    64 bytes from fd7e:ce88:ce59:0:21b:c50c:6000:2711: icmp_seq=6 ttl=32 time=72.9 ms
    64 bytes from fd7e:ce88:ce59:0:21b:c50c:6000:2711: icmp_seq=7 ttl=32 time=72.9 ms
    64 bytes from fd7e:ce88:ce59:0:21b:c50c:6000:2711: icmp_seq=8 ttl=32 time=72.9 ms
    64 bytes from fd7e:ce88:ce59:0:21b:c50c:6000:2711: icmp_seq=9 ttl=32 time=72.9 ms
    64 bytes from fd7e:ce88:ce59:0:21b:c50c:6000:2711: icmp_seq=10 ttl=32 time=72.9 ms
    64 bytes from fd7e:ce88:ce59:0:21b:c50c:6000:2711: icmp_seq=11 ttl=32 time=72.9 ms

    hello

    The following information may be useful if you are connected to this computer.


    Serial port:


    ttyACM0 is Gateway
    ttyACM1 is IPA3 module

    The IPA3 Module is not connected to the gateway.


    my computer password:tianmei


    the following two board are old version RF mesh

    fd7e:ce88:ce59:0:21b:c50c:6000:2791
    fd7e:ce88:ce59:0:21b:c50c:6000:2793


    thank you and good luck!
    Thanks!
    ok



    pls go on

    tianmei@user:~/CoAPTools$ ./coap_tool.py --config-list

    agent:
    2019-01-22 19:19:46,640 ctrlport : Connecting to ctrlporthub on localhost:4000
    prod.prodtime                            : 1544457897
    prod.alias.id                            :
    prod.ethernet.macaddr                    :
    prod.lowpan.eui64                        : 00-1B-C5-0C-60-04-FD-D9
    prod.hw.version                          :
    rpl.enabled                              : 1
    rpl.br.dio.imin                          : 12
    rpl.br.dio.imax                          : 8
    rpl.br.dio.k                             : 6
    rpl.br.routelife                         : 1200
    rpl.br.ocp                               : 1
    rpl.dis.trickle.min.ms                   : 10000
    rpl.dis.trickle.doublings                : 4
    rpl.probe.interval.min.ms                : 1500
    rpl.probe.doublings                      : 6
    rpl.instance_id                          : 0
    rpl.etx.weight_factor                    : 64
    rpl.mrhof.pp_hysteresis                  : 75
    rpl.dag_switch.hysteresis                : 150
    rpl.dag_switch.time                      : 7200
    rpl.routes.max                           : 10000
    rpl.dao.deferred_ack                     : 1
    rpl.netsize_penalty                      : 64
    ^[[Alowpan.txpower.max                       : 10
    lowpan.hop_limit                         : 32
    lowpan.frame_retries                     : 3
    lowpan.powercontrol.interval             : 480
    lowpan.powercontrol.target               : -90
    lowpan.powercontrol                      : 1
    lowpan.cca.threshold                     : -94
    lowpan.channelplan                       : 7
    lowpan.channel                           : 0
    lowpan.autochannel                       : 0
    lowpan.highgainmode                      : 0
    server.ip                                : fd00:c4::1
    server.port                              : 5684
    server.mq.push_now                       : 0
    server.mq.push_delay                     : 3600
    server.mq.more_delay                     : 600
    modem.uplink.max_failures_before_reset   : 5
    mac.lbt.min.be                           : 3
    mac.lbt.max.be                           : 8
    mac.lbt.max.backoffs                     : 20
    mac.dutycycle.limit                      : 10
    mac.dutycycle.buffer                     : 1000
    mac.frame_size                           : 253
    dtls.timeout.initial.s                   : 8
    dtls.timeout.max.s                       : 127
    dtls.heartbeat.period.s                  : 3600
    dtls.heartbeat.retry.s                   : 120
    dtls.heartbeat.max.retries               : 4
    monitor.profile.default.enabled          : 1
    monitor.profile.default.sample.interval  : 86400
    monitor.profile.radio.enabled            : 0
    monitor.profile.radio.sample.interval    : 3600
    monitor.profile.network.enabled          : 0
    monitor.profile.network.sample.interval  : 3600
    monitor.profile.ip.enabled               : 0
    monitor.profile.ip.sample.interval       : 3600
    time.tz                                  : CET-1CEST,M3.5.0/2,M10.5.0/3
    time.max.diff                            : 30
    time.mesh.fail.event.interval            : 1800
    time.mesh.period                         : 3600
    time.ref.period                          : 43200
    time.ref.rtt.max                         : 30
    coap.retry.timeout                       : 10
    coap.session.timeout                     : 60
    coap.attempts                            : 3
    device.error.rate_limit.s                : 7200
    device.dlms.lls_password                 : hello
    device.dlms.data_profiles                : 1
    device.time.set.enabled                  : 1
    device.instant.default_period            : 15
    device.time.min_deviation                : 10
    device.time.max_deviation                : 180
    device.time.sync_timer                   : 240
    device.dlms.pipe_enabled                 : 1
    device.capabilities.dlmspipe.push        : 0
    node.power_fail.gracetime                : 0
    node.production.rssisource.enabled       : 0
    node.production.rssisource.power         : 10
    node.production.rssisource.period        : -500
    node.production.meter_update_period      : 5
    capabilities.meter.reverse_ESW           : 0
    capabilities.meter.device_testing        : 1
    capabilities.dlmspipe.session_close_detection : 0


    gw:

    activity
    activity.report.enabled 1
    coap
    coap.attempts   3
    coap.retry.timeout  10
    coap.session.timeout    60
    device
    device.error.rate_limit.s   7200
    device.dlms.lls_password    hello
    dtls
    dtls.timeout.initial.s  8
    dtls.heartbeat.retry.s  120
    dtls.heartbeat.period.s 3600
    dtls.timeout.max.s  127
    dtls.heartbeat.max.retries  4
    lowpan
    lowpan.cca.threshold    -94
    lowpan.frame_retries    3
    lowpan.frequency    0
    lowpan.channel  27
    lowpan.hop_limit    32
    lowpan.autochannel  0
    lowpan.phymode  0
    lowpan.powercontrol.target  -90
    lowpan.txpower.max  38
    lowpan.powercontrol 1
    lowpan.powercontrol.interval    480
    mac
    mac.frame_size  253
    mac.lbt.max.backoffs    20
    mac.filter.src.iid.1    00-00-00-00-00-00-00-00
    mac.filter.src.iid.2    00-00-00-00-00-00-00-00
    mac.dutycycle.buffer    1000
    mac.lbt.min.be  3
    mac.dutycycle.limit 10
    mac.lbt.max.be  8
    modem
    modem.tun6.secret   yooheem6eeBe
    modem.tun6.port 8050
    modem.tun6.ip   10.32.31.121
    monitor
    monitor.profile.radio.enabled   0
    monitor.profile.network.sample.interval 3600
    monitor.profile.ip.enabled  0
    monitor.profile.network.enabled 0
    monitor.profile.ip.sample.interval  3600
    monitor.profile.default.enabled 1
    monitor.profile.radio.sample.interval   3600
    monitor.profile.default.sample.interval 3600
    rpl
    rpl.dis.trickle.doublings   4
    rpl.br.dio.k    6
    rpl.instance_id 0
    rpl.br.routelife    1200
    rpl.br.mrhof.max_rank_increase  384
    rpl.br.mrhof.min_rank_increase  128
    rpl.probe.doublings 6
    rpl.dis.trickle.min.ms  10000
    rpl.probe.interval.min.ms   1500
    rpl.br.dio.imin 12
    rpl.dag_switch.time 7200
    rpl.dag_switch.hysteresis   150
    rpl.br.ocp  1
    rpl.mrhof.pp_hysteresis 75
    rpl.br.dio.imax 8
    rpl.etx.weight_factor   64
    rpl.enabled 1
    server
    server.mq.push_delay    3600
    server.mq.push_now  0
    server.ip   fd00:c4::1
    server.port 5684
    server.mq.more_delay    600
    time
    time.ref.rtt.max    30
    time.ref.period 43200
    time.mesh.period    3600
    time.mesh.fail.event.interval   1800
    time.max.diff   30
    time.tz CET-1CEST,M3.5.0/2,M10.5.0/3



    echo -n 0 `xxd -ps mac_key` > mac_keys.txt.mine
    diff mac_keys.txt mac_keys.txt.mine


    ./tools/c4-tools/coap_request.py ---eui64 <eui64> --fs_read dp_config


    gw v94 on an ma304_eth
    v45 on Panmesh server
    v14x on IPA3b.


    channel 27 == plan 0, channel 27

    On Mesh , can ping
    fd7e:ce88:ce59:0:21b:c50c:6004:fdd9

    eui: 00-1b-c5-0c-60-04-fd-d9


    /opt/panmesh/current
    - Can see DTLS conversation happening on Panmesh server.
    - Conversation ends with "no server certificate available"



    2019-01-24 00:07:22,083 TRACE [dtls-pool-4] DTLSConnection - DTLS packet 5d3963b7 being processed, address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, sessionId=SessionId(781dc1955974417547b817a32e5a53829a48416742a675d0b78b2b0914ec9b46), migrating=false
    2019-01-24 00:07:22,083 TRACE [dtls-pool-4] DTLSConnection - Wrong epoch address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, gotEpoch=1, gotSeqNo=0
    2019-01-24 00:08:13,413 TRACE [dtls] DTLSConnectionRegistry - New connection address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684
    2019-01-24 00:08:13,413 TRACE [dtls] DTLSConnection - DTLS packet bf12b9f0 added to queue, address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, sessionId=null, migrating=false
    2019-01-24 00:08:13,414 TRACE [dtls-pool-1] DTLSConnection - DTLS packet bf12b9f0 being processed, address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, sessionId=null, migrating=false
    2019-01-24 00:08:13,415 TRACE [dtls-pool-1] DTLSConnection - Start handshake address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, serverSessionId=null
    2019-01-24 00:08:13,415 TRACE [dtls-pool-1] DTLSServerHandshake - Handshake fragment address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, handshakeType=HandshakeType=client_hello, messageSeq=0
    2019-01-24 00:08:13,415 TRACE [dtls-pool-1] DTLSHandshakeProcedureFactory - isResuming address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, clientSessionId=SessionId(781dc1955974417547b817a32e5a53829a48416742a675d0b78b2b0914ec9b46), serverSessionId=null, clientRandom=Random(6c3a20316e53baca519e656eb8d41e122ae2036fda5dd41df29e9b43033aba2c), remoteCookie=null
    2019-01-24 00:08:13,417 TRACE [dtls-pool-1] NodeStorageProvider - Session info null
    2019-01-24 00:08:13,418 TRACE [dtls-pool-1] DTLSHandshakeProcedureFactory - Cannot read session info from the database - reverting to full handshake, clientSessionId=Cannot read session info from the database
    2019-01-24 00:08:13,418 TRACE [dtls-pool-1] DTLSHandshakeProcedureFactory - isResuming address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, clientSessionId=SessionId(781dc1955974417547b817a32e5a53829a48416742a675d0b78b2b0914ec9b46), resuming=false
    2019-01-24 00:08:13,419 TRACE [dtls-pool-1] DTLSHandshakeProcedure - Handshake message address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, handshakeType=HandshakeType=client_hello, expectedMessageSeq=0, messageSeq=0
    2019-01-24 00:08:13,419 TRACE [dtls-pool-1] DTLSHandshakeProcedure - receiveInitialClientHello address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, clientSessionId=SessionId(781dc1955974417547b817a32e5a53829a48416742a675d0b78b2b0914ec9b46), serverSessionId=null, cookie=12744cbd011fb530b30eaf6a4700c8155da9a7b0e6769e3bd69994b3d5d1
    2019-01-24 00:08:13,634 TRACE [dtls] DTLSConnection - DTLS packet 1a4e7352 added to queue, address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, sessionId=null, migrating=false
    2019-01-24 00:08:13,635 TRACE [dtls-pool-3] DTLSConnection - DTLS packet 1a4e7352 being processed, address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, sessionId=null, migrating=false
    2019-01-24 00:08:13,635 TRACE [dtls-pool-3] DTLSConnection - Record packet address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, contentType=ContentType=handshake, epoch=0, nextSeqNo=2, gotEpoch=0, gotSeqNo=1
    2019-01-24 00:08:13,635 TRACE [dtls-pool-3] DTLSServerHandshake - Handshake fragment address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, handshakeType=HandshakeType=client_hello, messageSeq=1
    2019-01-24 00:08:13,635 TRACE [dtls-pool-3] DTLSHandshakeProcedure - Handshake message address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, handshakeType=HandshakeType=client_hello, expectedMessageSeq=1, messageSeq=1
    2019-01-24 00:08:13,635 TRACE [dtls-pool-3] DTLSFullHandshakeProcedure - receiveClientHelloWithCookie address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, clientSessionId=SessionId(781dc1955974417547b817a32e5a53829a48416742a675d0b78b2b0914ec9b46), serverSessionId=null, clientRandom=Random(6c3a20316e53baca519e656eb8d41e122ae2036fda5dd41df29e9b43033aba2c), remoteCookie=12744cbd011fb530b30eaf6a4700c8155da9a7b0e6769e3bd69994b3d5d1
    2019-01-24 00:08:13,635 TRACE [dtls-pool-3] DTLSFullHandshakeProcedure - protocolVersion version=DTLS_PROTOCOL_VERSION_1_2
    2019-01-24 00:08:13,635 TRACE [dtls-pool-3] DTLSFullHandshakeProcedure - trustedCaKeys x509Name=null, keySha1Hash=bd0adc9791da7b4ac2e4cf1fc364217114f23205
    2019-01-24 00:08:13,636 TRACE [dtls-pool-3] DTLSFullHandshakeProcedure - sendServerHello address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, clientSessionId=SessionId(781dc1955974417547b817a32e5a53829a48416742a675d0b78b2b0914ec9b46), serverSessionId=SessionId(441def1dc2df18dbcb178d823d0e83fe58e4447c7f129e43f1e86fd9795d2525), serverRandom=Random(bd677a7513f3ad531d51f214385195381ab05e7e10bcff88fa778680fe272bdc), cipherSuite=TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8
    2019-01-24 00:08:13,636 TRACE [dtls-pool-3] DTLSFullHandshakeProcedure - sendCertificate address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, clientSessionId=SessionId(781dc1955974417547b817a32e5a53829a48416742a675d0b78b2b0914ec9b46), serverSessionId=SessionId(441def1dc2df18dbcb178d823d0e83fe58e4447c7f129e43f1e86fd9795d2525)
    2019-01-24 00:08:13,657 TRACE [dtls-pool-3] DTLSFullHandshakeProcedure - sendServerKeyExchange address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, clientSessionId=SessionId(781dc1955974417547b817a32e5a53829a48416742a675d0b78b2b0914ec9b46), serverSessionId=SessionId(441def1dc2df18dbcb178d823d0e83fe58e4447c7f129e43f1e86fd9795d2525)
    2019-01-24 00:08:13,662 TRACE [dtls-pool-3] DTLSFullHandshakeProcedure - sendCertificateRequest address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, clientSessionId=SessionId(781dc1955974417547b817a32e5a53829a48416742a675d0b78b2b0914ec9b46), serverSessionId=SessionId(441def1dc2df18dbcb178d823d0e83fe58e4447c7f129e43f1e86fd9795d2525), authorities=null
    2019-01-24 00:08:13,663 TRACE [dtls-pool-3] DTLSFullHandshakeProcedure - sendServerHelloDone address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, clientSessionId=SessionId(781dc1955974417547b817a32e5a53829a48416742a675d0b78b2b0914ec9b46), serverSessionId=SessionId(441def1dc2df18dbcb178d823d0e83fe58e4447c7f129e43f1e86fd9795d2525)
    2019-01-24 00:09:59,539 TRACE [dtls] DTLSConnection - DTLS packet 41972fa1 added to queue, address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, sessionId=SessionId(441def1dc2df18dbcb178d823d0e83fe58e4447c7f129e43f1e86fd9795d2525), migrating=false
    2019-01-24 00:09:59,539 TRACE [dtls-pool-2] DTLSConnection - DTLS packet 41972fa1 being processed, address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, sessionId=SessionId(441def1dc2df18dbcb178d823d0e83fe58e4447c7f129e43f1e86fd9795d2525), migrating=false
    2019-01-24 00:09:59,539 TRACE [dtls-pool-2] DTLSConnection - Record packet address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, contentType=ContentType=handshake, epoch=0, nextSeqNo=3, gotEpoch=0, gotSeqNo=2
    2019-01-24 00:09:59,540 TRACE [dtls-pool-2] DTLSServerHandshake - Handshake fragment address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, handshakeType=HandshakeType=certificate, messageSeq=2
    2019-01-24 00:09:59,540 TRACE [dtls-pool-2] DTLSConnection - DTLS packet 41972fa1 being processed, address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, sessionId=SessionId(441def1dc2df18dbcb178d823d0e83fe58e4447c7f129e43f1e86fd9795d2525), migrating=false
    2019-01-24 00:09:59,540 TRACE [dtls-pool-2] DTLSConnection - Record packet address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, contentType=ContentType=handshake, epoch=0, nextSeqNo=4, gotEpoch=0, gotSeqNo=3
    2019-01-24 00:09:59,540 TRACE [dtls-pool-2] DTLSServerHandshake - Handshake fragment address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, handshakeType=HandshakeType=client_key_exchange, messageSeq=3
    2019-01-24 00:09:59,540 TRACE [dtls-pool-2] DTLSConnection - DTLS packet 41972fa1 being processed, address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, sessionId=SessionId(441def1dc2df18dbcb178d823d0e83fe58e4447c7f129e43f1e86fd9795d2525), migrating=false
    2019-01-24 00:09:59,540 TRACE [dtls-pool-2] DTLSConnection - Record packet address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, contentType=ContentType=handshake, epoch=0, nextSeqNo=5, gotEpoch=0, gotSeqNo=4
    2019-01-24 00:09:59,540 TRACE [dtls-pool-2] DTLSServerHandshake - Handshake fragment address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, handshakeType=HandshakeType=certificate_verify, messageSeq=4
    2019-01-24 00:09:59,540 TRACE [dtls-pool-2] DTLSHandshakeProcedure - Handshake message address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, handshakeType=HandshakeType=certificate, expectedMessageSeq=2, messageSeq=2
    2019-01-24 00:09:59,541 TRACE [dtls-pool-2] DTLSFullHandshakeProcedure - receiveCertificate address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, length=1
    2019-01-24 00:09:59,541 TRACE [dtls-pool-2] PKIManagement - Extracting identifier from certificate issued by CN=poc.cyanconnode.com,OU=R&D,O=Connode AB,L=Stockholm,ST=Stockholm,C=SE with serial number 10305341667164315852.
    2019-01-24 00:09:59,541 TRACE [dtls-pool-2] CommonNameCertificateIdentifierExtractor - Extracting identifier from certificate issued by CN=poc.cyanconnode.com,OU=R&D,O=Connode AB,L=Stockholm,ST=Stockholm,C=SE with serial number 10305341667164315852.
    2019-01-24 00:09:59,541 TRACE [dtls-pool-2] CommonNameCertificateIdentifierExtractor - 1 CNs found.
    2019-01-24 00:09:59,541 TRACE [dtls-pool-2] CommonNameCertificateIdentifierExtractor - First CN is 00-1B-C5-0C-60-04-FD-D9
    2019-01-24 00:09:59,541 TRACE [dtls-pool-2] CommonNameCertificateIdentifierExtractor - Certificate issued by CN=poc.cyanconnode.com,OU=R&D,O=Connode AB,L=Stockholm,ST=Stockholm,C=SE with serial number 10305341667164315852 yielded identifier 00-1B-C5-0C-60-04-FD-D9.
    2019-01-24 00:09:59,541 TRACE [dtls-pool-2] PKIManagement - Extracted identifier 00-1B-C5-0C-60-04-FD-D9 from certificate issued by CN=poc.cyanconnode.com,OU=R&D,O=Connode AB,L=Stockholm,ST=Stockholm,C=SE with serial number 10305341667164315852.
    2019-01-24 00:09:59,542 TRACE [dtls-pool-2] ClientDTLSDomain - Domain node_default does not trust certificate issued by CN=poc.cyanconnode.com,OU=R&D,O=Connode AB,L=Stockholm,ST=Stockholm,C=SE with serial number 10305341667164315852 and subject CN=00-1B-C5-0C-60-04-FD-D9, due to: java.security.cert.CertPathBuilderException: No issuer certificate for certificate in certification path found.
    2019-01-24 00:09:59,543 TRACE [dtls-pool-2] ClientDTLSDomain - Domain kaifa_nodes does not trust certificate issued by CN=poc.cyanconnode.com,OU=R&D,O=Connode AB,L=Stockholm,ST=Stockholm,C=SE with serial number 10305341667164315852 and subject CN=00-1B-C5-0C-60-04-FD-D9, due to: java.security.cert.CertPathBuilderException: No issuer certificate for certificate in certification path found.
    2019-01-24 00:09:59,544 TRACE [dtls-pool-2] DTLSECDHKeyExchange - Cannot validate client certificate: Node certificate is not trusted by any node DTLS domain.
    2019-01-24 00:09:59,544 TRACE [dtls-pool-2] DTLSConnection - DTLS alert address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, sessionId=SessionId(441def1dc2df18dbcb178d823d0e83fe58e4447c7f129e43f1e86fd9795d2525), level=fatal, description=certificate_unknown, message=Node certificate is not trusted by any node DTLS domain.
    2019-01-24 00:09:59,544 TRACE [dtls-pool-2] ServiceRegistry - CoAP layer signaled closing of remote address /fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684.
    2019-01-24 00:09:59,544 TRACE [dtls-pool-2] TerminalProxiesRegistry - Logged out remote address /fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684 which resolved to node null.
    2019-01-24 00:09:59,545 TRACE [dtls-pool-2] DTLSConnection - Send fatal alert, closing connection address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, sessionId=SessionId(441def1dc2df18dbcb178d823d0e83fe58e4447c7f129e43f1e86fd9795d2525)
    2019-01-24 00:09:59,545 TRACE [dtls-pool-2] DTLSConnection - DTLS packet 41972fa1 being processed, address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, sessionId=SessionId(441def1dc2df18dbcb178d823d0e83fe58e4447c7f129e43f1e86fd9795d2525), migrating=false
    2019-01-24 00:09:59,545 TRACE [dtls-pool-2] DTLSConnection - Record packet address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, contentType=ContentType=change_cipher_spec, epoch=0, nextSeqNo=6, gotEpoch=0, gotSeqNo=5
    2019-01-24 00:09:59,545 TRACE [dtls-pool-2] DTLSConnection - DTLS packet 41972fa1 being processed, address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, sessionId=SessionId(441def1dc2df18dbcb178d823d0e83fe58e4447c7f129e43f1e86fd9795d2525), migrating=false
    2019-01-24 00:09:59,545 TRACE [dtls-pool-2] DTLSConnection - Wrong epoch address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684, gotEpoch=1, gotSeqNo=0
    2019-01-24 00:10:07,550 TRACE [dtls] DTLSConnectionRegistry - New connection address=/fd7e:ce88:ce59:0:21b:c50c:6004:fdd9:5684


    ------------------------------------------

    CNDFS

    Meter configuration hash.

    Also... thinking about the "right" way to do this... we should really perform a configuration-discovery operation on startup in the same manner as we do a profile-discovery to obtain the profile-hash.

    The configuration-discovery would produce a "meter config hash" that goes up to the server. The server can then perform a change-detect on the configuration and initiate a recovery operation if needed.

    This mirrors what we do for the profiles and would close a significant gap in that we have no guarantee of the meter-configuration at any point in time (and this can have significant effects on the billing which would be noticed by an MDMS in theory).


    --------------------------------------------------------

    CA certificate          ca_demo-poc.crt.crt Import to Server DTLS domain/"Issuer Certificate" and Node DTLS domain/Trusted certificates
    CA private key          ca_demo-poc.crt.key Optional, Import to Node DTLS domain/CA private key, only csr renew require this
    Server certificate      omnitube-demo-poc.crt.pem   Import to Server DTLS domain/Certificate
    Server private key      omnitube-demo-poc.key.pem   Import to Server DTLS domain/Private key
    RSA private key         rsa.priv    Import to Server Security Pair/Private key
    RSA public key          rsa.pub Import to Server Security Pair/Public key
    RSA private key         password    rsa_pass.txt    Copy the content to Server Security Pair/Password


    Name    File_name    Comment
    CA certificate    poc.crt.crt    Import to Server DTLS domain/"Issuer Certificate" and Node DTLS domain/Trusted certificates
    CA private key    poc.crt.key    Optional, Import to Node DTLS domain/CA private key, only csr renew require this
    Server certificate    kaifa_development.crt.pem    Import to Server DTLS domain/Certificate
    Server private key    kaifa_development.key.pem    Import to Server DTLS domain/Private key
    RSA private key    rsa.priv    Import to Server Security Pair/Private key
    RSA public key    rsa.pub    Import to Server Security Pair/Public key
    RSA private key password    rsa_pass.txt    Copy the content to Server Security Pair/Password


    -----------------------------------------------------------

    IPA1: STM32F217 + FLASH + CC1200 (127KB SRAM)
    SPA3: stm32f401ce + CC1200 (96KB SRAM)

    tradfri hub:
    https://github.com/basilfx/TRADFRI-Hacking
    oMicrocontroller: EFR32MG1P132F256GM32
    2 Mbit SPI Flash: IS25LQ020B
    Crystal: 38.4 MHz


    ./tools/c4-tools/coap_request.py --ctrlporthub :4001 --load-key client-key /Data/Temp/00-1B-C5-0C-60-04-FD-D9/node.key.der
    ./tools/c4-tools/coap_request.py --ctrlporthub :4001 --load-key client-cert /Data/Temp/00-1B-C5-0C-60-04-FD-D9/node.crt.der
    ./tools/c4-tools/coap_request.py --ctrlporthub :4001 --load-key root-cert /Data/Temp/00-1B-C5-0C-60-04-FD-D9/ca.crt.der
    ./tools/c4-tools/coap_request.py --ctrlporthub :4001 --rll-key /Data/Temp/00-1B-C5-0C-60-04-FD-D9/mac_keys.txt


    --------------------------------------------------

    So, while its on my mind and since we also had the email from Alan regarding thinking about the cost reduction, I took the liberty to sketch out the tickets needed for entirely removing FLASH (since the MQ issue is step 1). The details for step 1 are at the bottom.

    This is in addition to Adams low-level "lossy-mq" changes.


    The stages are:

    - Implement end-to-end application-level reliability so we don't rely on transport-level reliability (MQ). This is what we discussed yesterday.
    - Implement a small RAM-backed mq, run in parallel. Duplicate existing mq code, change file-backing to RAM-backed (keep it small, can optimise this later, but for now keep semantics the same).
    - Move sample-data to RAM-MQ. Small-change, lots of testing.
    - Allocate space in internal FLASH for file-distribution, redirect file distribution to use this area. Encryption may need to be done a block-basis instead of whole-file.
    - Make small circular buffer (notification-queue) in internal-FLASH for node events, redirect eventStore API to use this area.
    - Move metrics to straight CoAP PUSH. Allow metrics to be unreliable? I think this is a good trade-off.
    - Move Storage of the Configuration PB to a simple small circular buffer. This is currently implemented with two-files as a (small) circular buffer (ish).
    - Add storage for configuration of instantaneous profile capture-period (in configuration circular buffer?). Remove DataProfileContext storage.
    - Move meter-push-alarm notifications to circular buffer notification-queue.

    At this point we have the FLASH requirement removed for the following types:
    - Profile samples (moved to RAM-MQ which can be further optimised given time).
    - Meter push alarm notifications (moved to notification-queue).
    - Node events (moved to notification-queue)
    - Metrics data changed to use direct CoAP PUSH mechanism rather than storing in MQ (change of semantics here).
    - File distribution (moved to designated area on internal-FLASH).
    - Configuration (moved to small circular-buffer on internal FLASH).
    - Meter-driver context storage (removed except for instantaneous-profile capture-period which moves into config).

    Which leaves the final step:
    - Make FLASH driver & CNDFS optional in build.
    - (optional) Optimise and remove RAM-MQ.


    The detail for the first task is to remove the dependence on transport-level-reliability by adding an application-level reliability mechanism.
    - SMA to validate incoming profile data against corresponding schema (number of fields, type of field).
    - Implement new pb sent from SMA to Agent containing tiemstamps for all profiles.
    - On device registration/login, SMA responds with new message containing last-known-good timestamps for all profiles.
    - On Agent, "DataProfileContext->timestamp", "dataprofile::storeConfig()", and "dataprofile::restoreConfig()" handle storage of the last timestamp, these will eventually be removed, but for now DataProfileContext->timestamp can be modified by receipt of a new message from SMA: SetLastKnownGoodProfileTimestamp.
    - SMA must handle potential duplicated messages for same timestamps via db update. This is because our delivery mechanism is now an "at-least-once" rather than "at-most-once".
    - Testing needs to cover normal usage over time with power-cycles for recovery, ensuring all samples are retrieved.

    -------------------------------------------------------------

    FLASH removal, initially focus on one processor family (EFR32) then bring in STM32 builds.

    Stage 0: Get some tests in place for sampling-correctness in presence of restarts/power-cycles/watchdogs/long-delays.

    Stage 1: Application-level reliability mechanism:
    - Agent to stop using filesystem for 'lastDriverTimestamp'. This becomes simply a global var with no persistence over resets.
    - When Agent registers with SMA, the SMA needs to get the timestamp of the last-received timestamp for each profile and return it to the Agent. Probably
    needs to hook up with the profile-registering mechanism.
    - The interface between Agent/SMA needs to provide protobuf structures for this new message.
    - Agent should not start sampling a profile until it receives the last-received-timestamp for it.
    - When SMA receives a sample, it should perform a validation of it prior to putting it into the db (e.g. check number and type of fields).
    - Test thoroughly.

    At this stage, the data is still being put into the MQ on FLASH, but we remove the reliance on it for sampling-reliability.


    Stage 2: Make a transitional 'RAM' MQ on Agent.
    - Duplicate mq.c into ram_mq.c and make the storage layer an OS_Queue.
    - On a schedule (same as mq equivalent), check the queue and send (via CoAP) the messages from the queue sequentially.
    These CoAP messages will need to either have some indication in them to the server that the sequence number is not valid as it
    has not come via the real mq or perhaps easier to have a new "NewSample" message to the SMA to bypass the existing scheme.
    - Move the Agent sampling code over to using the RAM MQ instead of the FLASH MQ (API is same).
    - Test thoroughly.

    At this stage, meter sample data is not being stored on FLASH, yet should be reliably received on SMA in presence of restarts/power-cycles/watchdogs/long-delays.

    Stage 3: Enable concurrent FLASH-erase and program execution.
    - Move interrupt-handlers into RAM to allow running while internal-FLASH is being erased.
    - UART use may need use of a queue.

    Now, we're able to start using internal FLASH for storage (without a filesystem).
    Note: This will only be needed on EFR32 devices with <512KB due to their ability to do read-while-write operations in
    separate banks.


    Stage 4: Move File-distribution storage.
    - Reduce size of filesystem on FLASH and allocate space for file-distribution (512KB? or just under) (storage_flash.c)
    - Change filedl_storage to store data in new partion in a 'raw' format, no fs (this will eventually be moved to internal FLASH).
    - May need to change from whole-file encryption to block-by block encryption to make this usable in-place.

    Stage 5: Move file distribution to internal-FLASH.
    - Move filedl_storage to (efr32-internal-flash/stm32f2xx_flash).
    - Think about whether we need bad-block-management/wear-levelling in this area as we have 10'000 erase cycles available.
    If we do, use a simple rotation/circular-buffer mechanism nothing complicated.
    - Test thoroughly.

    At this point, we should be able to perform meter-upgrade and node-upgrade just using internal FLASH.



    Stage 6: Move node-events into internal-FLASH (notification-queue)
    - Allocate a very-small area/partition in internal-FLASH to store a circular-buffer of events structures.
    - Create a small persistent-circular-buffer mechanism in this area. Each element is (say 16 bytes) and buffer size of (say) 16 elements.
    - Add an 'eventStore' compatible API onto this circular-buffer.
    - On a schedule, read events from the persistent-circular-buffer and send them via CoAP.
    - Sending via CoAP will likely need a new 'NewEvent' message created to the NMS to bypass the current mq mechanism.
    - Make this an 'interlocked' operation, i.e Only mark element in circular-buffer as sent when Agent gets CoAP response.
    - Test

    Now node-events should be stored persistent and have reliable delivery up to the NMS event with power-cycle/watchdogs/etc.


    Stage 7: Make metrics 'unreliable' by moving them to CoAP out of the flash-mq.
    - Change monitor.c:sample() to perform a direct CoAP request instead of putting the data into the mq.
    - Will likely need a new message to bypass the flas-mq mechanism.
    - Test.

    Here, we lose persistence on delivery of metrics, but this is (probably) not critical and under-used anyway.



    Stage 8: Move configuration-storage internal.
    - Allocate space for a small persistent-circular-buffer in internal FLASH (3x1KB?)
    - Implement a persistent-circular-buffer in internal-FLASH
    - Move Storage of the Configuration to this persistent-circular-buffer in internal-FLASH.
    - Create a new configuration "backend" to store data in the circular-buffer instead of a file (config_backend.h)

    Now configuration should be stored in internal-FLASH and rollback can happen if corrupted by virtue of circular-buffer.



    Stage 9: Add a small 'local-configuration' struct into the configuration pb.
    - We have a need to store a small amount of data for configuration of local services (e.g. instantaneous profile read).
    So we can add a pb structure into the configuration storage for this purpose.
    - Test

    Now storage of the instantaneous capture-period and other small miscellaneous items should be in internal-FLASH.


    Stage 10: Move meter-push-alarm notification into node-event queue
    - Give the node event queue (notification queue) the ability to target multiple API endpoints (e.g. NMS & SMA APIs)
    - Move device_alarms usage of FLASH mq into notification-queue (circular buffer).
    - Make PUSH operations (from meter) an interlocked operation with insertion into the notification-queue.
    - Test.

    Now push-alarms from the meter will be persistently stored in the notification-queue and sent to SMA periodically.

    We should now have removed all the usage of the filesystem from the Agent, allowing us to...


    Stage 11: Cleanup.
    - Remove FLASH driver.
    - Remove CNDFS.
    - Remove MQ.
    - Remove production-mode FLASH test.


    From EFR32 reference doc:

    7.3.14.1 Read-While-Write
    Parts with 512 KB flash or more have the ability to read from the flash while writing to it. On these parts, reading from the lower half of
    the flash is possible while writing/erasing from the upper half of the flash and vice versa. Enable read-while-write by setting RWWEN in
    MSC_WRITECTRL.
    The information pages can be written and erased while running from the lower half of the flash


    -----------------------

    4133584 42047   22.0    node.boot                           PUSH    S~restart   04/12/18 17:07:08   04/12/18 17:12:13
    4133583 42046   15.0    firmwareupdate.restart              PUSH    13          04/12/18 17:05:32   04/12/18 17:12:13
    4130297 41981   14.3    filedistribution.downloadFinished   PUSH    1           04/12/18 09:13:45   04/12/18 09:18:40
    4119680 41794   14.2    filedistribution.downloadStarted    PUSH                03/12/18 10:04:23   03/12/18 10:06:02

    ----------------------------------------

    flashGetInfo:

    const FlashInfo* flashGetInfo(void)
    {
        static const FlashInfo fi = {
                .pageSize = FLASH_PAGE_SIZE (512),           (512)
                .spareSize = 0,                              (0)
                .pagesPerBlock = PAGES_PER_BLOCK (4096/512), (8)
                .blocks = BLOCK_COUNT ( (4096*1024))/4096 }; (1024)
        return &fi;
    }


    at45GetInfo()



    --------------------------------------------

    08cd01121a6d5f696d675f6d6574657246775570677261646533312e62696e18012080012a3c66696c65747970653d6d6574657266772c7461726765746465766963653d55535320303030323030342c6d6574657266775f69643d3132333435363730d8043a10b10a8db164e0754105b7a99be72e3fe542240a10580f79b15b2453a53c3e9b18771ee2661210918eded9ecf11c56885e628025199ee1

    (gdb) p bytes->bytes
    $15 = 0x60c00001de28 "filetype=meterfw,targetdevice=USS 0002004,meterfw_id=1234567", '\265' <repeats 16 times>
    (gdb)


    (gdb) p *bytes
    $17 = {size = 60, bytes = 0x60c00001de28 "filetype=meterfw,targetdevice=USS 0002004,meterfw_id=1234567", '\265' <repeats 16 times>}
    (gdb)

    (gdb) p ((PbDecodeBytes*)*arg)->bytes
    $22 = 0x60c00001de28 "filetype=meterfw,targetdevice=USS 0002004,meterfw_id=1234567", '\265' <repeats 16 times>
    (gdb)

    (gdb) p ((PbDecodeBytes*)0x60c00001de20)->bytes
    $24 = 0x60c00001de28 "filetype=meterfw,targetdevice=USS 0002004,meterfw_id=1234567", '\265' <repeats 16 times>
    (gdb)

    decode_field (stream=0x7ffff3afeb70, wire_type=PB_WT_STRING, iter=0x7ffff3afea20) at build/3pp/nanopb/pb_decode.c:723
    723 }
    (gdb) p iter->pos->type
    $26 = 85 'U'
    (gdb) s




    uffs_Mount (mount=mount@entry=0x807dcc0 "/") at build/3pp/uffs/src/uffs/uffs_mtb.c:192
    192     uffs_Perror(UFFS_MSG_NOISY, "mount partiton: %d,%d",
    (gdb)
    195     if (uffs_InitDevice(mtb->dev) != U_SUCC) {


    uffs_InitDevice()
    uffs_BuildTree()
    _BuildTreeStepOne()




    #2  0x00000000 in ?? ()
    Backtrace stopped: previous frame identical to this frame (corrupt stack?)
    (gdb) set exitLoop=true
    No symbol "true" in current context.
    (gdb) set exitLoop=1
    (gdb) s
    159 }
    (gdb)
    uffs_crc16update (data=0x2000fd20 <s_uffsPool+508>, length=length@entry=50331647, crc=41354,
        crc@entry=65535) at build/3pp/uffs/src/uffs/uffs_crc.c:84
    84          CRC16(crc, *p);
    (gdb) where
    #0  uffs_crc16update (data=0x2000fd20 <s_uffsPool+508>, length=length@entry=50331647, crc=41354,
        crc@entry=65535) at build/3pp/uffs/src/uffs/uffs_crc.c:84
    #1  0x080690d8 in uffs_crc16sum (data=<optimized out>, length=50331647)
        at build/3pp/uffs/src/uffs/uffs_crc.c:92
    #2  0x0806c7da in uffs_MakeSum16 (p=<optimized out>, len=<optimized out>)
        at build/3pp/uffs/src/uffs/uffs_public.c:255
    #3  0x0806d70a in _BuildValidTreeNode (st=<synthetic pointer>, bc=0x20011164 <s_uffsPool+5696>,
        node=0x200119b4 <s_uffsPool+7824>, dev=0x2000f944 <s_flashDevice>)
        at build/3pp/uffs/src/uffs/uffs_tree.c:426
    #4  _BuildTreeStepOne (dev=dev@entry=0x2000f944 <s_flashDevice>)
        at build/3pp/uffs/src/uffs/uffs_tree.c:626
    #5  uffs_BuildTree (dev=dev@entry=0x2000f944 <s_flashDevice>)
        at build/3pp/uffs/src/uffs/uffs_tree.c:1325
    #6  0x0806c06e in uffs_InitDevice (dev=0x2000f944 <s_flashDevice>)
        at build/3pp/uffs/src/uffs/uffs_init.c:132
    #7  0x0806c296 in uffs_Mount (mount=mount@entry=0x807daf0 "/")
        at build/3pp/uffs/src/uffs/uffs_mtb.c:195
    #8  0x0804affa in start () at src/services/fs/uffs/fs_service.c:86
    #9  0x0802017c in modulesStart (list=list@entry=0x807d228 <serviceModules>) at src/base/module.c:25
    #10 0x080496c6 in servicesStart () at src/services/services.c:64
    #11 0x08053762 in terminalBasicStart () at src/terminal/terminal.c:124
    #12 0x080537b0 in terminalTask (arg=0x20016d90 <s_terminalInitedSemaphore>)
        at src/terminal/terminal.c:232
    #13 0x08065584 in pvTaskIncrementMutexHeldCount () at build/3pp/freertos/FreeRTOS/Source/tasks.c:4251
    Backtrace stopped: previous frame identical to this frame (corrupt stack?)
    (gdb)

    uffs_crc16update asked to do CRC on 50331647 bytes (50MB).

    in _BuildValidTreeNode()

    (gdb) p *dev
    $2 = {Init = 0x804ae0d <flashDeviceInitForUffs>, Release = 0x804af55 <flashDeviceReleaseForUffs>,
      _private = 0x0, attr = 0x20000464 <s_attr>, par = {start = 164, end = 1023},
      ops = 0x807da44 <s_flashOps>, bc = {head = 0x2001117c <s_uffsPool+5720>,
        tail = 0x20011164 <s_uffsPool+5696>, mem_pool = 0x20011104 <s_uffsPool+5600>}, lock = {sem = 0x0,
        task_id = 0, counter = 0}, buf = {head = 0x2000fb9c <s_uffsPool+120>,
        tail = 0x2000fcdc <s_uffsPool+440>, clone = 0x0, dirtyGroup = {{count = 0, lock = 0, dirty = 0x0},
          {count = 0, lock = 0, dirty = 0x0}, {count = 0, lock = 0, dirty = 0x0}}, buf_max = 10,
        dirty_buf_max = 8, pool = 0x2000fb74 <s_uffsPool+80>}, com = {pg_data_size = 508, header_size = 4,
        pg_size = 512}, tree = {erased = 0x200116f4 <s_uffsPool+7120>,
        erased_tail = 0x200119a4 <s_uffsPool+7808>, erased_count = 35, suspend = 0x0, bad = 0x0,
        bad_count = 0, dir_entry = {65535 <repeats 32 times>}, file_entry = {65535, 65535, 38, 21, 65535,
          65535, 65535, 65535}, data_entry = {18, 65535, 34, 39, 65535 <repeats 23 times>, 28, 65535, 33,
          65535, 65535}, max_serial = 0}, pending = {count = 1, list = {{block = 208, mark = 3 '\003'}, {
            block = 0, mark = 0 '\000'}, {block = 0, mark = 0 '\000'}, {block = 0, mark = 0 '\000'}},
        block_in_recovery = 65534}, st = {block_erase_count = 0, page_write_count = 0,
        page_read_count = 59, page_header_read_count = 55, spare_write_count = 0, spare_read_count = 83,
        io_read = 3596, io_write = 0}, mem = {init = 0x0, release = 0x0,
        malloc = 0x806c0d1 <static_malloc>, free = 0x0, blockinfo_pool_buf = 0x20011104 <s_uffsPool+5600>,
        pagebuf_pool_buf = 0x2000fb74 <s_uffsPool+80>, tree_nodes_pool_buf = 0x200116f4 <s_uffsPool+7120>,
        spare_pool_buf = 0x2000fb24 <s_uffsPool>, blockinfo_pool_size = 1520, pagebuf_pool_size = 5520,
        tree_nodes_pool_size = 13760, spare_pool_size = 80, tree_pool = {
          mem = 0x200116f4 <s_uffsPool+7120> "\004\027\001 ", buf_size = 16, num_bufs = 860,
          free_list = 0x200119c4 <s_uffsPool+7840>, sem = 0x0}, spare_pool = {
          mem = 0x2000fb24 <s_uffsPool> <incomplete sequence \373>, buf_size = 16, num_bufs = 5,
          free_list = 0x2000fb24 <s_uffsPool>, sem = 0x0}, spare_data_size = 16,
        buf_start = 0x2000fb24 <s_uffsPool> <incomplete sequence \373>, buf_size = 20880, pos = 20880},
      cfg = {bc_caches = 10, page_buffers = 10, dirty_pages = 8, dirty_groups = 3,
        reserved_free_blocks = 2}, ref_count = 0, dev_num = 1}

    at call to uffs_MakeSum16()
    info =
    (gdb) p *(uffs_FileInfo *) (buf->data)
    $4 = {attr = 4294967295, create_time = 4294967295, last_modify = 4294967295, access = 4294967295,
      reserved = 4294967295, name_len = 50331647,
      name = "macs", '\377' <repeats 66 times>, "\000\000\000\377", '\000' <repeats 53 times>}
    (gdb)



    ---------------------------------

    - Application-level reliability covers samples from meter.
    - Other events aren't covered, so need a mechanism.
    -



            Agent <-----> NMS <-----> SMA
    samples       <----------------->
    node-events   <-----> CM


    - Protocol is assymetric, at-least-once, deduped upstream. Downstream non-existent?
    - Delivers normal packets
    - priorities?
    - window of acks?
    - sequence number == UTC 32bit uint?
    - Each element in circular buffer has a UTC time associated with it.
    - On login, time (-a few seconds) of last element received is sent down to Agent (for all queues).
    - On server, messages are de-duped.
    - On Agent, removal of element from queue is interlocked with receipt of ACK.
    - On Server, transmission of ACK is interlocked with storage of received message.
    - Before Agent is logged-in, knowledge of time can be retrieved from latest time in queues.
    - Last-gasp therefore will provide the time on startup prior to login, so never have zero time.
    - Can have multiple messages with same time, rely on dedupe rather than exact sequence numbers.
    - Time cannot go backwards due to retrieval of time from circular buffers.
    - If too much overhead in dedupe, increase resolution of message-timestamps to make them more unique.
    - How to send multiple packets, and collate then into a single request??
    - Include "message sequence number" along with time and dedupe on time##msgSeqNum?
    - Start sequence number at maximum and work downwards to zero.
    - Server identifies when a zero is hit and collates the full message for forwarding.



    --------------------------------

    Purposes
    - Move away from a callback and state-machine approach to a blocking model.
    - Increase determinism.
    - Simplify!
    - In-place processing of DLMS requests & responses.
    - Use a blocking model to stay in the same context instead of using heap to save
    global data. Use stack instead of heap. Stack is more efficient and can be sanitised.
    - Current code requires *way too much* cognitive overhead to keep track of context. Aim to
    minimise this by staying in the one context as much as possible.
    - Reduce association overhead to once-per-cycle at highest required level.


    //
    // Push request.
    //
    bool pushHasBeenSignalled   = false;

    void pushISR()
    {
        pushHasBeenSignalled    = true;
    }

    void readPushData()
    {
        if( pushHasBeenSignalled == true) {

            // Clear the request.
            pushHasBeenSignalled    = false;

            // Collect push data.
        }
    }



    //
    // Meter ping request.
    //
    bool meterPingHasBeenSignalled  = false;

    void performMeterPing()
    {
        if( meterPingHasBeenSignalled == true ) {

            // Clear the request.
            meterPingHasBeenSignalled   = false;

            // Request time object
            dlmsSendGetRequest(8, timeRegisterObis, 2, NULL, 0);

            // Block waiting for response (or timeout).
            AXDRStream* responseStream    = dlmsWaitForResponseOrTimmeout();

            // Parse DLMS response.
            uint32_t value  = axdrGetUint32( responseStream );

            // Send response to server.
            MeterPingStatus msg = MeterPingStatus_init_zero;
            msg.status = value;
            coapSendResponseProtobuf(req->sessiondId, CoapResponseContent, MeterPingStatus_fields, &msg);
        }
    }


    //
    // Association request.
    //
    void associateWithMeter()
    {
        bool    llsRequired                     = false;
        bool    hlsRequired                     = false;
        bool    invocationCounterReadRequired   = false;
        bool    cipheringRequired               = false;
        bool    fwUpgradeRequired               = false;

        //
        // Determine the highest level required for this operation cycle.
        //

        if( meterPingHasBeenSignalled == true ) {
            llsRequired = true;
        }

        if( meterSetHasBeenSignalled == true ) {
            hlsRequired = true;
            invocationCounterReadRequired   = true;
        }

        if( profileReadHasBeenSignalled == true ) {
            llsRequired = true;
        }

        if( meterSetConfigurationHasBeenSignalled == true ) {
            hlsRequired = true;
        }

        //
        // Now perform the association.
        //

        // Send AARQ
        if( hlsRequired == true ) {
            dlmsVariantSetupAA(DLMS_DRIVER_CONTEXT, true, isCiphering, fwUpgrade);
        }
        else if( llsRequired == true ) {
            dlmsVariantSetupAA(DLMS_DRIVER_CONTEXT, false, isCiphering, fwUpgrade);
        }

        // Block waiting for response (or timeout).
        AXDRStream* responseStream    = dlmsWaitForResponseOrTimmeout();

        // Parse response.
        parseAARE();
    }


    //
    // Read a profile from the meter.
    //
    bool profileReadHasBeenSignalled    = false;

    void readProfile( Profile profile, uint32_t currentNodeTime )
    {
        if( profileReadHasBeenSignalled == true ) {

            // Check that its time for this profile to be read.
            if( isItTimeForProfileRead( profile, currentNodeTime ) {

                // Form request (selective access by time or index).

                // Send request to meter.

                // Block, waiting for response (or timeout).

                // Parse DLMS response.

                // Form response to server.

                // Send response to server.
            }
        }
    }



    //
    // This is the main superloop for all the meter-facing activity.
    //
    // - Everything is driven from the one loop, flags and current-time indicate
    // whether operations should be performed or not.
    // - Asynchronous operationsi (i.e. from ISR or CoAP)  are signalled via flags.
    // - Operations are blocking, so request and response sent within the same context. This really
    // simplifies the code and will greately benefit ease-of-development.
    // - Associations are performed once-per-cycle.
    // - Meter-configuration is performed once prior to entering the superloop.
    // - Meter re-configuration is performed by setting a flag to make the superloop restart.
    // - meter-configuration is checked against expected values prior to entering superloop.
    // - Time sensitive operation are performed immediately after the cycle starts, in this deterministic
    // phase of the superloop requests are not retried. The cycle will naturally retry the operation.
    // - The second phase of the superloop is the non-deterministic phase. Sufficient slack time needs
    // to be planned into the schedule to allow this to run to worst-case otherwise the following
    // deterministic phase will be commprimised.
    // - Messages are processed in-place (zero-copy style) via the use of AXDRStreams, reducing
    // RAM usage.
    //
    void deviceTask()
    {
        // Forever....
        while(true) {

            //
            // Note, this would probably be better handled as a full reset of the device
            // but that would take down the network-side also which is probably unnecessarily
            // harsh (though cleaner as we can guarantee no state will be left behind).
            // As it is, we should probably have a dedicated heap for the application that
            // we can clear at this point.
            //

            // Clear out our application-heap.
            resetApplicationHeap();

            // Discover the capture-objects from the profile registers.
            performProfileDiscovery();

            // Read, check and set the configuration registers to the expected values
            //  before we do anything further.
            do {
                // read the contents of all configuration registers.
                performMeterConfigurationDiscovery();

                // Check validity of meter-configuration.
                checkMeterConfiguration();

                checkCount++;

            } while( configIsValid == false && checkCount < 2 );

            // Report current state of profiles and meter-configuration to server.
            sendDiscoveredProfiles();
            sendDiscoveredMeterConfiguration();

            //
            // Forever (or until we need to reset the device task).
            //
            // Note: No retry is needed on the operations here because the schedule
            // naturally retries them.
            //
            // Note: When we wish to apply a configuration, simply cause a restart by
            // setting 'restartDeviceTask' to true. This will cause this loop to
            // terminate and the whole outer sequence to be re-run.
            //
            while( restartDeviceTask == false ) {

                // Wait until our next allotted time (every 5 mins?)
                waitUntilNextTimeSlotOrPushSignalled();

                //
                // Now do the time-sensitive reads.
                // No retries on these requests, just rely on the natural cycle to retry.
                // This portion of the cycle should be as deterministic as possible.
                // We allow a 'slack' period after the time-sensitive operations to do all
                // the miscellaneous operations.
                //

                // Get the current node time
                currentNodeTime = getNodeTime();

                // Associate with meter once-per-cycle at the highest level required
                // for this cycle. This is determined by looking at all the condition
                // flags.
                associateWithMeter();

                // Perform time sync if required.
                performTimeSync( currentNodeTime );

                // Capture an Instantaneous profile if required.
                // NOTE: This is the capture only. Not the profile read.
                performInstantaneousProfileCapture().

                // Iterate thru all the profiles reading them if the time
                // is appropriate for them.
                // NOTE: This profileList also contains the instantaneous profile which has
                // been previously captured. This brings all profile-reading code together.
                for( profile in profileList ) {
                    readProfile( profile, currentNodeTime );
                }

                //
                // Now perform the asynchronous operations.
                // These operations are not time-sensitive, so providing we leave enough slack
                // time in the schedule, we should be ok for long reads.
                //
                // This provides a good amount of determinism for the soft-real-time operations
                // such as time-sync and IS capture.
                //

                // If a 'push' event has been signalled, lets read the push data now..
                readPushData();

                // Perform an on-demand profile read if requested.
                performOnDemandRead();

                // Perform the 'get configuration' operation.
                performGetConfiguration();

                //
                performMeterUpgrade();

                //
                performDisconnectorSet();

                //
                performMeterPing();

                // Release the association.
                releaseMeterAssociation();
            }
        }
    }


    ---------------------------------------


    kaifa_ma304 time

    CLOCK_UPDATE_STATE_TIME

    Bad:

    7e
    a021
    0201
    41
    93
    9e86
    81801405020100060201000704000000
    01080400000001
    696d
    7e
    e = 3, 1 **
    7ea02141020173e8fb81801405020100
    06020100070400000001080400000001
    696d7e
    7e
    a042
    0201
    41
    10
    728c
    e6e600
    6033a1090607608574050801018a0207
    808b0760857405080201ac0780056865
    6c6c6fbe10040e01000000065f1f0400
    001f1fffff
    e741
    7e
    for HDLC event (60000ms) **
    e = 3, 1 **
    7ea03841020130536ee6e7006129a109
    060760857405080101a203020100a305
    a103020100be10040e0800065f1f0400
    00101c020000079cdf7e

     [meter/time_synch] {     dlms}: dlmsReceiveCb called with s_rxRes=0 from time synch
     [meter/time_synch] {timeSynch}: Clock drift is -112 seconds
     [        dlms] {timeSynch}: Action 0-0:1.0.0*255 ic 8 methodId 6 actionLen: 3 B
     [      mac_rx] {   mac_rx}: Received 43 B, unicast #113 from 02-1b-c5-0c-60-00-ea-10: rssi -61 dBm, sec 5, payload 13 B
     [        icmp] {   mac_rx}: ICMPv6 unicast from fe80::21b:c50c:6000:ea10, Private (probe), 6 B
     [        hdlc] {timeSynch}: tx: (1/1): 7e
     [        hdlc] {timeSynch}: tx: (1/1): a01d
     [        hdlc] {timeSynch}: tx: (1/1): 0201
     [        hdlc] {timeSynch}: tx: (1/1): 41
     [        hdlc] {timeSynch}: tx: (1/1): 32
     [        hdlc] {timeSynch}: tx: (1/1): fc91
     [        hdlc] {timeSynch}: tx: (1/1): e6e600
     [        hdlc] {timeSynch}: tx: (1/1): c3018100080000010000ff060110ff90
     [        hdlc] {timeSynch}: tx: (1/1): 59ad
     [        hdlc] {timeSynch}: tx: (1/1): 7e
     [        hdlc] {     hdlc}: ** giveCause = 3, 1 **
     [        hdlc] {     hdlc}: rx: (1/2): 7ea012410201527e02e6e700c7018103
     [        hdlc] {     hdlc}: rx: (2/2): 00e2987e
     [        hdlc] {     hdlc}: ** Waiting for HDLC event (60000ms) **
     [        dlms] {     dlms}: Action Response result: r/w denied     <----
     [        dlms] {     dlms}: processXDlmsApdu(5 B): failed
     [        dlms] {     dlms}: DLMS result is 0 bytes with code 12
     [meter/time_synch] {     dlms}: dlmsReceiveCb called with s_rxRes=12 from time synch
     [meter/time_synch] {timeSynch}: Broken response: check failed
     [meter/time_synch] {timeSynch}: Failed to adjust time: check failed
     [        dlms] {timeSynch}: Disconnect HDLC link
     [        hdlc] {timeSynch}: tx: (1/1): 7e
     [        hdlc] {timeSynch}: tx: (1/1): a008
     [        hdlc] {timeSynch}: tx: (1/1): 0201
     [        hdlc] {timeSynch}: tx: (1/1): 41
     [        hdlc] {timeSynch}: tx: (1/1): 53
     [        hdlc] {timeSynch}: tx: (1/1): 6771
     [        hdlc] {timeSynch}: tx: (1/1): 7e

    7e
    a021
    0201
    41
    93
    9e86
    81801405020100060201000704000000
    01080400000001
    696d
    7e
    7ea02141020173e8fb81801405020100
    06020100070400000001080400000001
    696d7e
    7e
    a042
    0201
    41
    10
    728c
    e6e600
    6033a1090607608574050801018a0207
    808b0760857405080201ac0780056865
    6c6c6fbe10040e01000000065f1f0400
    001f1fffff
    e741
    7e
    7ea03841020130536ee6e7006129a109
    060760857405080101a203020100a305
    a103020100be10040e0800065f1f0400
    00101c020000079cdf7e

    7e
    a01d
    0201
    41
    32
    fc91
    e6e600
    c3018100080000010000ff060110ff90
    59ad
    7e
    7ea012410201527e02e6e700c7018103
    00e2987e


    Bad:

    <HDLC len="32" >
    <TargetAddress Value="128" />
    <SourceAddress Value="32" />
    <!--SNRM frame.-->
    <FrameType Value="93" />
    <PDU>
    <Snrm>
      <MaxInfoTX Value="256" />
      <MaxInfoRX Value="256" />
      <WindowSizeTX Value="1" />
      <WindowSizeRX Value="1" />
    </Snrm>
    </PDU>
    </HDLC>

    <HDLC len="32" >
    <TargetAddress Value="32" />
    <SourceAddress Value="128" />
    <!--UA frame.-->
    <FrameType Value="73" />
    <PDU>
    <Ua>
      <MaxInfoTX Value="256" />
      <MaxInfoRX Value="256" />
      <WindowSizeTX Value="1" />
      <WindowSizeRX Value="1" />
    </Ua>
    </PDU>
    </HDLC>

    <HDLC len="65" >
    <TargetAddress Value="128" />
    <SourceAddress Value="32" />
    <!--AARQ frame.-->
    <FrameType Value="10" />
    <PDU>
    <AssociationRequest>
      <ApplicationContextName Value="LN" />
      <SenderACSERequirements Value="1" />
      <MechanismName Value="Low" />
      <CallingAuthentication Value="68656C6C6F" />
      <InitiateRequest>
        <ProposedDlmsVersionNumber Value="6" />
        <ProposedConformance>
          <ConformanceBit Name="Action" />
          <ConformanceBit Name="EventNotification" />
          <ConformanceBit Name="SelectiveAccess" />
          <ConformanceBit Name="Set" />
          <ConformanceBit Name="Get" />
          <ConformanceBit Name="InformationReport" />
          <ConformanceBit Name="MultipleReferences" />
          <ConformanceBit Name="BlockTransferWithAction" />
          <ConformanceBit Name="BlockTransferWithSetOrWrite" />
          <ConformanceBit Name="BlockTransferWithGetOrRead" />
        </ProposedConformance>
        <ProposedMaxPduSize Value="65535" />
      </InitiateRequest>
    </AssociationRequest>
    </PDU>
    </HDLC>

    <HDLC len="55" >
    <TargetAddress Value="32" />
    <SourceAddress Value="128" />
    <!--AARE frame.-->
    <FrameType Value="30" />
    <PDU>
    <AssociationResponse>
      <ApplicationContextName Value="LN" />
      <AssociationResult Value="0" />
      <ResultSourceDiagnostic>
        <ACSEServiceUser Value="0" />
      </ResultSourceDiagnostic>
      <InitiateResponse>
        <NegotiatedDlmsVersionNumber Value="6" />
        <NegotiatedConformance>
          <ConformanceBit Name="SelectiveAccess" />
          <ConformanceBit Name="Set" />
          <ConformanceBit Name="Get" />
          <ConformanceBit Name="BlockTransferWithGetOrRead" />
        </NegotiatedConformance>
        <NegotiatedMaxPduSize Value="512" />
        <VaaName Value="7" />
      </InitiateResponse>
    </AssociationResponse>
    </PDU>
    </HDLC>

    <HDLC len="28" >
    <TargetAddress Value="128" />
    <SourceAddress Value="32" />
    <!--I frame.-->
    <FrameType Value="32" />
    <PDU>
    <ActionRequest>
      <ActionRequestNormal>
        <InvokeIdAndPriority Value="129" />
        <MethodDescriptor>
          <!--CLOCK-->
          <ClassId Value="8" />
          <!--0.0.1.0.0.255-->
          <InstanceId Value="0000010000FF" />
          <MethodId Value="6" />
        </MethodDescriptor>
        <MethodInvocationParameters>
          <Int16 Value="-112" />
        </MethodInvocationParameters>
      </ActionRequestNormal>
    </ActionRequest>
    </PDU>
    </HDLC>

    <HDLC len="17" >
    <TargetAddress Value="32" />
    <SourceAddress Value="128" />
    <!--I frame.-->
    <FrameType Value="52" />
    <PDU>
    <ActionResponse>
      <ActionResponseNormal>
        <InvokeIdAndPriority Value="129" />
        <Result Value="ReadWriteDenied" />
      </ActionResponseNormal>
    </ActionResponse>
    </PDU>
    </HDLC>







    Good:

     [        hdlc] {     hdlc}: tx: (1/3): 7ea021020141939e8681801405020100
     [        hdlc] {     hdlc}: tx: (2/3): 06020100070400000001080400000001
     [        hdlc] {     hdlc}: tx: (3/3): 696d7e
     [        hdlc] {     hdlc}: rx: (1/3): 7ea02141020173e8fb81801405020100
     [        hdlc] {     hdlc}: rx: (2/3): 06020100070400000001080400000001
     [        hdlc] {     hdlc}: rx: (3/3): 696d7e
     [        hdlc] {     hdlc}: tx: (1/5): 7ea04202014110728ce6e6006033a109
     [        hdlc] {     hdlc}: tx: (2/5): 0607608574050801018a0207808b0760
     [        hdlc] {     hdlc}: tx: (3/5): 857405080201ac07800568656c6c6fbe
     [        hdlc] {     hdlc}: tx: (4/5): 10040e01000000065f1f0400001f1fff
     [        hdlc] {     hdlc}: tx: (5/5): ffe7417e
     [        hdlc] {     hdlc}: rx: (1/4): 7ea03841020130536ee6e7006129a109
     [        hdlc] {     hdlc}: rx: (2/4): 060760857405080101a203020100a305
     [        hdlc] {     hdlc}: rx: (3/4): a103020100be10040e0800065f1f0400
     [        hdlc] {     hdlc}: rx: (4/4): 00101c020000079cdf7e
     [meter/kaifaMa304] {   device}: Request meter time update
     [        hdlc] {     hdlc}: tx: (1/3): 7ea028020141327963e6e600c1018100
     [        hdlc] {     hdlc}: tx: (2/3): 080000010000ff0200090c07e3011fff
     [        hdlc] {     hdlc}: tx: (3/3): 0c3708ffffc400c9357e
     [        hdlc] {     hdlc}: rx: (1/2): 7ea01141020152b21fe6e700c5018100
     [        hdlc] {     hdlc}: rx: (2/2): 36cf7e



    Good:

    7ea021020141939e8681801405020100
    06020100070400000001080400000001
    696d7e
    7ea02141020173e8fb81801405020100
    06020100070400000001080400000001
    696d7e
    7ea04202014110728ce6e6006033a109
    0607608574050801018a0207808b0760
    857405080201ac07800568656c6c6fbe
    10040e01000000065f1f0400001f1fff
    ffe7417e
    7ea03841020130536ee6e7006129a109
    060760857405080101a203020100a305
    a103020100be10040e0800065f1f0400
    00101c020000079cdf7e

    7ea028020141327963e6e600c1018100
    080000010000ff0200090c07e3011fff
    0c3708ffffc400c9357e
    7ea01141020152b21fe6e700c5018100
    36cf7e

    <HDLC len="32" >
    <TargetAddress Value="128" />
    <SourceAddress Value="32" />
    <!--SNRM frame.-->
    <FrameType Value="93" />
    <PDU>
    <Snrm>
      <MaxInfoTX Value="256" />
      <MaxInfoRX Value="256" />
      <WindowSizeTX Value="1" />
      <WindowSizeRX Value="1" />
    </Snrm>

    </PDU>
    </HDLC>
    <HDLC len="32" >
    <TargetAddress Value="32" />
    <SourceAddress Value="128" />
    <!--UA frame.-->
    <FrameType Value="73" />
    <PDU>
    <Ua>
      <MaxInfoTX Value="256" />
      <MaxInfoRX Value="256" />
      <WindowSizeTX Value="1" />
      <WindowSizeRX Value="1" />
    </Ua>
    </PDU>
    </HDLC>

    <HDLC len="65" >
    <TargetAddress Value="128" />
    <SourceAddress Value="32" />
    <!--AARQ frame.-->
    <FrameType Value="10" />
    <PDU>
    <AssociationRequest>
      <ApplicationContextName Value="LN" />
      <SenderACSERequirements Value="1" />
      <MechanismName Value="Low" />
      <CallingAuthentication Value="68656C6C6F" />
      <InitiateRequest>
        <ProposedDlmsVersionNumber Value="6" />
        <ProposedConformance>
          <ConformanceBit Name="Action" />
          <ConformanceBit Name="EventNotification" />
          <ConformanceBit Name="SelectiveAccess" />
          <ConformanceBit Name="Set" />
          <ConformanceBit Name="Get" />
          <ConformanceBit Name="InformationReport" />
          <ConformanceBit Name="MultipleReferences" />
          <ConformanceBit Name="BlockTransferWithAction" />
          <ConformanceBit Name="BlockTransferWithSetOrWrite" />
          <ConformanceBit Name="BlockTransferWithGetOrRead" />
        </ProposedConformance>
        <ProposedMaxPduSize Value="65535" />
      </InitiateRequest>
    </AssociationRequest>
    </PDU>
    </HDLC>

    <HDLC len="55" >
    <TargetAddress Value="32" />
    <SourceAddress Value="128" />
    <!--AARE frame.-->
    <FrameType Value="30" />
    <PDU>
    <AssociationResponse>
      <ApplicationContextName Value="LN" />
      <AssociationResult Value="0" />
      <ResultSourceDiagnostic>
        <ACSEServiceUser Value="0" />
      </ResultSourceDiagnostic>
      <InitiateResponse>
        <NegotiatedDlmsVersionNumber Value="6" />
        <NegotiatedConformance>
          <ConformanceBit Name="SelectiveAccess" />
          <ConformanceBit Name="Set" />
          <ConformanceBit Name="Get" />
          <ConformanceBit Name="BlockTransferWithGetOrRead" />
        </NegotiatedConformance>
        <NegotiatedMaxPduSize Value="512" />
        <VaaName Value="7" />
      </InitiateResponse>
    </AssociationResponse>
    </PDU>
    </HDLC>

    <HDLC len="39" >
    <TargetAddress Value="128" />
    <SourceAddress Value="32" />
    <!--I frame.-->
    <FrameType Value="32" />
    <PDU>
    <SetRequest>
      <SetRequestNormal>
        <InvokeIdAndPriority Value="129" />
        <AttributeDescriptor>
          <!--CLOCK-->
          <ClassId Value="8" />
          <!--0.0.1.0.0.255-->
          <InstanceId Value="0000010000FF" />
          <AttributeId Value="2" />
        </AttributeDescriptor>
        <Value>
          <!--2019-01-31 12:55:08-->
          <OctetString Value="07E3011FFF0C3708FFFFC400" />
        </Value>
      </SetRequestNormal>
    </SetRequest>
    </PDU>
    </HDLC>

    <HDLC len="16" >
    <TargetAddress Value="32" />
    <SourceAddress Value="128" />
    <!--I frame.-->
    <FrameType Value="52" />
    <PDU>
    <SetResponse>
      <SetResponseNormal>
        <InvokeIdAndPriority Value="129" />
        <Result Value="Success" />
      </SetResponseNormal>
    </SetResponse>
    </PDU>
    </HDLC>

    -------------------

    CLOCK_UPDATE_STATE_DST_START:
    setMeterDstRule()
    0  1  2  3  4  5  6  7  8  9  10 11
    07 E3 01 1F FF 0C 37 08 FF FF C4 00

    [meter/time_synch] {timeSynch}: Clock drift is 2 seconds
    [meter/common] {timeSynch}: Setting time: 2019-02-01T14:30:36.000+01:00 0
    [        dlms] {timeSynch}: Set 0-0:1.0.0*255 ic 8 attr 2 valueLen 14 B
    [        hdlc] {timeSynch}: tx: (1/1): 7e
    [        hdlc] {timeSynch}: tx: (1/1): a028
    [        hdlc] {timeSynch}: tx: (1/1): 0201
    [        hdlc] {timeSynch}: tx: (1/1): 41
    [        hdlc] {timeSynch}: tx: (1/1): 32
    [        hdlc] {timeSynch}: tx: (1/1): 7963
    [        hdlc] {timeSynch}: tx: (1/1): e6e600
    [        hdlc] {timeSynch}: tx: (1/2): c1018100080000010000ff0200090c07
    [        hdlc] {timeSynch}: tx: (2/2): e30201050e1e24ff003c00
    [        hdlc] {timeSynch}: tx: (1/1): 9bf4
    [        hdlc] {timeSynch}: tx: (1/1): 7e
    [        hdlc] {     hdlc}: ** giveCause = 3, 1 **
    [        hdlc] {     hdlc}: rx: (1/2): 7ea01141020152b21fe6e700c5018100
    [        hdlc] {     hdlc}: rx: (2/2): 36cf7e
    [        hdlc] {     hdlc}: ** Waiting for HDLC event (60000ms) **
    [        dlms] {     dlms}: DLMS result is 0 bytes with code 0
    [meter/time_synch] {     dlms}: dlmsReceiveCb called with s_rxRes=0 from ti

    [meter/time_synch] {timeSynch}: ** Setting DST deviation **
    [meter/time_synch] {timeSynch}: Request meter DST deviation update
    [        dlms] {timeSynch}: Set 0-0:1.0.0*255 ic 8 attr 7 valueLen 2 B
    [        hdlc] {timeSynch}: tx: (1/1): 7e
    [        hdlc] {timeSynch}: tx: (1/1): a01c
    [        hdlc] {timeSynch}: tx: (1/1): 0201
    [        hdlc] {timeSynch}: tx: (1/1): 41
    [        hdlc] {timeSynch}: tx: (1/1): 54
    [        hdlc] {timeSynch}: tx: (1/1): 889c
    [        hdlc] {timeSynch}: tx: (1/1): e6e600
    [        hdlc] {timeSynch}: tx: (1/1): c1018100080000010000ff07000f3c
    [        hdlc] {timeSynch}: tx: (1/1): c2e8
    [        hdlc] {timeSynch}: tx: (1/1): 7e
    [        hdlc] {     hdlc}: ** giveCause = 3, 1 **
    [        hdlc] {     hdlc}: rx: (1/2): 7ea01141020174865be6e700c5018100
    [        hdlc] {     hdlc}: rx: (2/2): 36cf7e
    [        hdlc] {     hdlc}: ** Waiting for HDLC event (60000ms) **
    [        dlms] {     dlms}: DLMS result is 0 bytes with code 0
    [    modemdrv] {    modem}: Not present
    [       modem] {    modem}: Unknown -> Unknown
    [    modemdrv] {    modem}: Not present
    [meter/time_synch] {     dlms}: dlmsReceiveCb called with s_rxRes=0 from ti

    [meter/time_synch] {timeSynch}: ** Setting DST enabled flag **
    [meter/time_synch] {timeSynch}: Request meter DST enabled update
    [        dlms] {timeSynch}: Set 0-0:1.0.0*255 ic 8 attr 8 valueLen 2 B
    [        hdlc] {timeSynch}: tx: (1/1): 7e
    [        hdlc] {timeSynch}: tx: (1/1): a01c
    [        hdlc] {timeSynch}: tx: (1/1): 0201
    [        hdlc] {timeSynch}: tx: (1/1): 41
    [        hdlc] {timeSynch}: tx: (1/1): 76
    [        hdlc] {timeSynch}: tx: (1/1): 989e
    [        hdlc] {timeSynch}: tx: (1/1): e6e600
    [        hdlc] {timeSynch}: tx: (1/1): c1018100080000010000ff08000301
    [        hdlc] {timeSynch}: tx: (1/1): fd19
    [        hdlc] {timeSynch}: tx: (1/1): 7e
    [        hdlc] {     hdlc}: ** giveCause = 3, 1 **
    [        hdlc] {     hdlc}: rx: (1/2): 7ea011410201969a9fe6e700c5018100
    [        hdlc] {     hdlc}: rx: (2/2): 36cf7e
    [        hdlc] {     hdlc}: ** Waiting for HDLC event (60000ms) **
    [        dlms] {     dlms}: DLMS result is 0 bytes with code 0
    [meter/time_synch] {     dlms}: dlmsReceiveCb called with s_rxRes=0 from ti

    [meter/time_synch] {timeSynch}: ** Setting DST daylight_savings_begin **
    [        dlms] {timeSynch}: Set 0-0:1.0.0*255 ic 8 attr 5 valueLen 14 B
    [      mac_rx] {   mac_rx}: Received 113 B, broadcast #90 from 02-1b-c5-0c-

    [        icmp] {   mac_rx}: ICMPv6 multicast from fe80::21b:c50c:6000:e9fc,

    [    rpl/core] {      rpl}: 0: process DIO from fe80::21b:c50c:6000:e9fc (f

    [    rpl/core] {      rpl}: Neighbor info: fde4:731d:dfa6:0:21b:c50c:6000:e

    [        hdlc] {timeSynch}: tx: (1/1): 7e
    [        hdlc] {timeSynch}: tx: (1/1): a028
    [        hdlc] {timeSynch}: tx: (1/1): 0201
    [        hdlc] {timeSynch}: tx: (1/1): 41
    [        hdlc] {timeSynch}: tx: (1/1): 98
    [        hdlc] {timeSynch}: tx: (1/1): 2969
    [        hdlc] {timeSynch}: tx: (1/1): e6e600
    [        hdlc] {timeSynch}: tx: (1/2): c1018100080000010000ff0500090cff
    [        hdlc] {timeSynch}: tx: (2/2): ff03fe07020000ff800000
    [        hdlc] {timeSynch}: tx: (1/1): d817
    [        hdlc] {timeSynch}: tx: (1/1): 7e
    [        hdlc] {     hdlc}: ** giveCause = 3, 1 **
    [        hdlc] {     hdlc}: rx: (1/2): 7ea011410201b8e657e6e700c5018100
    [        hdlc] {     hdlc}: rx: (2/2): 36cf7e
    [        hdlc] {     hdlc}: ** Waiting for HDLC event (60000ms) **
    [        dlms] {     dlms}: DLMS result is 0 bytes with code 0
    [meter/time_synch] {     dlms}: dlmsReceiveCb called with s_rxRes=0 from ti

    [meter/time_synch] {timeSynch}: ** Setting DST daylight_savings_end **
    [        dlms] {timeSynch}: Set 0-0:1.0.0*255 ic 8 attr 6 valueLen 14 B
    [      mac_rx] {   mac_rx}: Received 113 B, broadcast #41 from 02-1b-c5-0c-

    [        icmp] {   mac_rx}: ICMPv6 multicast from fe80::21b:c50c:6001:8dff,

    [    rpl/core] {      rpl}: 0: process DIO from fe80::21b:c50c:6001:8dff (f

    [    rpl/core] {      rpl}: Neighbor info: fde4:731d:dfa6:0:21b:c50c:6001:8

    [        hdlc] {timeSynch}: tx: (1/1): 7e
    [        hdlc] {timeSynch}: tx: (1/1): a028
    [        hdlc] {timeSynch}: tx: (1/1): 0201
    [        hdlc] {timeSynch}: tx: (1/1): 41
    [        hdlc] {timeSynch}: tx: (1/1): ba
    [        hdlc] {timeSynch}: tx: (1/1): 396b
    [        hdlc] {timeSynch}: tx: (1/1): e6e600
    [        hdlc] {timeSynch}: tx: (1/2): c1018100080000010000ff0600090cff
    [        hdlc] {timeSynch}: tx: (2/2): ff0afe07030000ff800000
    [        hdlc] {timeSynch}: tx: (1/1): 2257
    [        hdlc] {timeSynch}: tx: (1/1): 7e
    [    modemdrv] {    modem}: Not present
    [       modem] {    modem}: Unknown -> Unknown
    [    modemdrv] {    modem}: Not present
    [        hdlc] {     hdlc}: ** giveCause = 3, 1 **
    [        hdlc] {     hdlc}: rx: (1/2): 7ea011410201daf217e6e700c5018100
    [        hdlc] {     hdlc}: rx: (2/2): 36cf7e
    [        hdlc] {     hdlc}: ** Waiting for HDLC event (60000ms) **
    [    hdlclock] {   device}: -- HDLC locked --
    [        dlms] {     dlms}: DLMS result is 0 bytes with code 0
    [meter/time_synch] {     dlms}: dlmsReceiveCb called with s_rxRes=0 from ti

    [      cc1200] {   cc1200}: RX FIFO overflow, flushed
    [meter/time_synch] {timeSynch}: ** Time sync complete **


    ---------------------------------------

    LNT Good:

    <HDLC len="31" >
    <TargetAddress Value="1" />
    <SourceAddress Value="16" />
    <!--SNRM frame.-->
    <FrameType Value="93" />
    <PDU>
    <Snrm>
      <MaxInfoTX Value="350" />
      <MaxInfoRX Value="350" />
      <WindowSizeTX Value="1" />
      <WindowSizeRX Value="1" />
    </Snrm>
    </PDU>
    </HDLC>

    <HDLC len="29" >
    <TargetAddress Value="16" />
    <SourceAddress Value="1" />
    <!--UA frame.-->
    <FrameType Value="73" />
    <PDU>
    <Ua>
      <MaxInfoTX Value="128" />
      <MaxInfoRX Value="128" />
      <WindowSizeTX Value="1" />
      <WindowSizeRX Value="1" />
    </Ua>
    </PDU>
    </HDLC>

    <HDLC len="42" >
    <TargetAddress Value="1" />
    <SourceAddress Value="16" />
    <!--AARQ frame.-->
    <FrameType Value="10" />
    <PDU>
    <AssociationRequest>
      <ApplicationContextName Value="LN" />
      <InitiateRequest>
        <ProposedDlmsVersionNumber Value="6" />
        <ProposedConformance>
          <ConformanceBit Name="Action" />
          <ConformanceBit Name="EventNotification" />
          <ConformanceBit Name="SelectiveAccess" />
          <ConformanceBit Name="Set" />
          <ConformanceBit Name="Get" />
          <ConformanceBit Name="InformationReport" />
          <ConformanceBit Name="MultipleReferences" />
          <ConformanceBit Name="BlockTransferWithAction" />
          <ConformanceBit Name="BlockTransferWithSetOrWrite" />
          <ConformanceBit Name="BlockTransferWithGetOrRead" />
        </ProposedConformance>
        <ProposedMaxPduSize Value="65535" />
      </InitiateRequest>
    </AssociationRequest>
    </PDU>
    </HDLC>

    <HDLC len="54" >
    <TargetAddress Value="16" />
    <SourceAddress Value="1" />
    <!--AARE frame.-->
    <FrameType Value="30" />
    <PDU>
    <AssociationResponse>
      <ApplicationContextName Value="LN" />
      <AssociationResult Value="0" />
      <ResultSourceDiagnostic>
        <ACSEServiceUser Value="0" />
      </ResultSourceDiagnostic>
      <InitiateResponse>
        <NegotiatedDlmsVersionNumber Value="6" />
        <NegotiatedConformance>
          <ConformanceBit Name="Get" />
        </NegotiatedConformance>
        <NegotiatedMaxPduSize Value="560" />
        <VaaName Value="7" />
      </InitiateResponse>
    </AssociationResponse>
    </PDU>
    </HDLC>




    LNT Bad:

    <HDLC len="59" >
    <TargetAddress Value="1" />
    <SourceAddress Value="16" />
    <!--I frame.-->
    <FrameType Value="54" />
    <PDU>
    <AssociationRequest>
      <ApplicationContextName Value="LN" />
      <InitiateRequest>
        <DedicatedKey Value="78787878787878787878787878787878" />
        <ProposedDlmsVersionNumber Value="6" />
        <ProposedConformance>
          <ConformanceBit Name="Action" />
          <ConformanceBit Name="EventNotification" />
          <ConformanceBit Name="SelectiveAccess" />
          <ConformanceBit Name="Set" />
          <ConformanceBit Name="Get" />
          <ConformanceBit Name="InformationReport" />
          <ConformanceBit Name="MultipleReferences" />
          <ConformanceBit Name="BlockTransferWithAction" />
          <ConformanceBit Name="BlockTransferWithSetOrWrite" />
          <ConformanceBit Name="BlockTransferWithGetOrRead" />
        </ProposedConformance>
        <ProposedMaxPduSize Value="65535" />
      </InitiateRequest>
    </AssociationRequest>
    </PDU>
    </HDLC>

    <HDLC len="44" >
    <TargetAddress Value="16" />
    <SourceAddress Value="1" />
    <!--I frame.-->
    <FrameType Value="74" />
    <PDU>
    <AssociationResponse>
      <ApplicationContextName Value="LN" />
      <!--PERMANENT_REJECTED-->
      <AssociationResult Value="1" />
      <ResultSourceDiagnostic>
        <!--NO_REASON_GIVEN-->
        <ACSEServiceUser Value="1" />
      </ResultSourceDiagnostic>
      <ConfirmedServiceError>
        <Service Value="1" />
        <ServiceError>
          <Initiate Value="Other" />
        </ServiceError>
      </ConfirmedServiceError>
    </AssociationResponse>
    </PDU>
    </HDLC>


    ---------------------------------------------------------

     7e
     a020
     03
     21
     93
     7dd9
     8180140502015e0602015e0704000000
     01080400000001
     51af
     7e
    g on s_dlmsSemaphore for 64000ms --
    se = 3, 1 **
     7ea01e210373c37a8180120501800601
     80070400000001080400000001533b7e
     7e
     a02b
     03
     21
     10
     fbaf
     e6e600
     601da109060760857405080101be1004
     0e01000000065f1f0400001f1fffff
     c64d
     7e
     for HDLC event (60000ms) **
    se = 3, 1 **
     7ea0372103306c7ce6e7006129a10906
     0760857405080101a203020100a305a1
     03020100be10040e0800065f1f040000
     001002300007b26c7e


    Send IC read request for 1
    Get 0-0:43.1.3*255 ic 1 attr 2 normal access


     7e
     a019
     03
     21
     32
     6fd8
     e6e600
     c00181000100002b0103ff0200
     b567
     7e
    g on s_dlmsSemaphore for 64000ms --
    se = 3, 1 **
     7ea0152103525d8ae6e700c401810006
     003ad8df2e957e

    IC value is:3856607

    frameCounter:385660

     frameCounter:3856607
     Setup AA with HLS
     Connect HDLC link
     tx: (1/1): 7e
     tx: (1/1): a020
     tx: (1/1): 03
     tx: (1/1): 61
     tx: (1/1): 93
     tx: (1/1): 1b9f
     tx: (1/2): 81801405020080060200800704000000
     tx: (2/2): 01080400000001
     tx: (1/1): ce6a
     tx: (1/1): 7e
      -- waiting on s_dlmsSemaphore for 64000ms --
     ** giveCause = 3, 1 **
     rx: (1/2): 7ea01e610373b57c8180120501800601
     rx: (2/2): 80070400000001080400000001533b7e
     tx: (1/1): 7e
     tx: (1/1): a07c
     tx: (1/1): 03
     tx: (1/1): 61
     tx: (1/1): 10
     tx: (1/1): aa6b
     tx: (1/1): e6e600
     tx: (1/7): 606ea109060760857405080103a60a04
     tx: (2/7): 084c54434c49454e548a0207808b0760
     tx: (3/7): 857405080202ac128010306545374563
     tx: (4/7): 63633938356635344342be3404322130
     tx: (5/7): 30003ad8dfe6bc287074ea3387383597
     tx: (6/7): 610d967081ae3b1749c66f4a2776cdca
     tx: (7/7): 767d786f1bc534e79d4b641d645b7453
     tx: (1/1): d116
     tx: (1/1): 7e
     ** Waiting for HDLC event (60000ms) **
     ** giveCause = 3, 1 **
     rx: (1/8): 7ea077610330ad6ce6e7006169a10906
     rx: (2/8): 0760857405080103a203020100a305a1
     rx: (3/8): 0302010ea40a04084c4e543031313830
     rx: (4/8): 88020780890760857405080202aa1280
     rx: (5/8): 106162636465666768696a6b6c6d6e6f
     rx: (6/8): 70be230421281f30000081d9f6a16f35
     rx: (7/8): a11a0f3c666281af1e458c05a818a8cb
     rx: (8/8): ca9290d0149df6cf7e
     ** Waiting for HDLC event (60000ms) **
     rx decrypted: (1/1): 0800065f1f040000181d02300007
     extracted server max pdu size is 1024
    -----------------------------------------

    Hard-fault

    Hcoa DV27@2676eL5b3c1S20000fc0

    coap task, data acess violation to address 0x27 (MMFAR).

    ipa3-genus-dlms-insecure:v143-14-g656429d

    ubuntu@ubuntu-VirtualBox:/Data/Projects/terminal$ ag -B 2 "=== Hard" ~/node62.log
    87454-2019-02-01 13:43:42.430 #1   001bc50c6000d3ca <log> 1:41:44.913 [debug] [  meter/dlms] {     dlms}: dlmsReceiveCb called with s_rxRes=0
    87455-2019-02-01 13:43:42.462 #1   001bc50c6000d3ca <log> 1:41:44.921 [debug] [  meter/dlms] {   device}: ** processDlmsPayload (0) **
    87456:2019-02-01 13:43:42.462 #1   001bc50c6000d3ca <log> 1:41:44.929 ======== Hard fault ========
    1211544-2019-02-03 11:56:01.621 #1   001bc50c6000cad0 <log> 36:43:12.639 [debug] [   coap/task] {     coap}: session 5028 (21f8bdd2): removing old outgoing, payload len 54
    1211545-2019-02-03 11:56:01.621 #1   001bc50c6000cad0 <log> 36:43:12.650 [debug] [   coap/task] {     coap}: session 5028 (21f8bdd2): session timeout without a response (msgid 37401)
    1211546:2019-02-03 11:56:01.621 #1   001bc50c6000cad0 <log> 36:43:12.661 ======== Hard fault ========
    1535210-2019-02-04  4:50:35.276 #1   001bc50c6000cad0 <log> 16:54:07.830 [debug] [   coap/task] {     coap}: session 709 (69109af7): removing old outgoing, payload len 54
    1535211-2019-02-04  4:50:35.276 #1   001bc50c6000cad0 <log> 16:54:07.840 [debug] [   coap/task] {     coap}: session 709 (69109af7): session timeout without a response (msgid 17736)
    1535212:2019-02-04  4:50:35.276 #1   001bc50c6000cad0 <log> 16:54:07.852 ======== Hard fault ========
    1624956-2019-02-04  9:32:17.890 #1   001bc50c6000cad0 <log> 4:41:14.453 [debug] [   coap/task] {     coap}: session 198 (40b657e6): removing old outgoing, payload len 54
    1624957-2019-02-04  9:32:17.890 #1   001bc50c6000cad0 <log> 4:41:14.463 [debug] [   coap/task] {     coap}: session 198 (40b657e6): session timeout without a response (msgid 314)
    1624958:2019-02-04  9:32:17.890 #1   001bc50c6000cad0 <log> 4:41:14.475 ======== Hard fault ========
    1634189-2019-02-04  9:44:39.835 #1   001bc50c6000cad0 <log> 0:06:43.615 [debug] [   coap/task] {     coap}: session 9 (1f9f46bb): removing old outgoing, payload len 54
    1634190-2019-02-04  9:44:39.835 #1   001bc50c6000cad0 <log> 0:06:43.625 [debug] [   coap/task] {     coap}: session 9 (1f9f46bb): session timeout without a response (msgid 3468)
    1634191:2019-02-04  9:44:39.835 #1   001bc50c6000cad0 <log> 0:06:43.636 ======== Hard fault ========
    1638834-2019-02-04  9:51:50.248 #1   001bc50c6000cad0 <log> 0:06:42.264 [debug] [   coap/task] {     coap}: session 10 (5ea2163a): removing old outgoing, payload len 54
    1638835-2019-02-04  9:51:50.248 #1   001bc50c6000cad0 <log> 0:06:42.274 [debug] [   coap/task] {     coap}: session 10 (5ea2163a): session timeout without a response (msgid 28666)
    1638836:2019-02-04  9:51:50.248 #1   001bc50c6000cad0 <log> 0:06:42.286 ======== Hard fault ========
    1642971-2019-02-04  9:56:56.835 #1   001bc50c6000cad0 <log> 0:04:38.666 [debug] [   coap/task] {     coap}: session 8 (2f6c3b71): removing old outgoing, payload len 54
    1642972-2019-02-04  9:56:56.835 #1   001bc50c6000cad0 <log> 0:04:38.676 [debug] [   coap/task] {     coap}: session 8 (2f6c3b71): session timeout without a response (msgid 18345)
    1642973:2019-02-04  9:56:56.835 #1   001bc50c6000cad0 <log> 0:04:38.688 ======== Hard fault ========
    1652066-2019-02-04 10:16:08.118 #1   001bc50c6000cad0 <log> 0:18:44.555 [debug] [   coap/task] {     coap}: session 17 (165f8605): removing old outgoing, payload len 54
    1652067-2019-02-04 10:16:08.118 #1   001bc50c6000cad0 <log> 0:18:44.565 [debug] [   coap/task] {     coap}: session 17 (165f8605): session timeout without a response (msgid 14348)
    1652068:2019-02-04 10:16:08.118 #1   001bc50c6000cad0 <log> 0:18:44.577 ======== Hard fault ========


    00026740 <coapSendNodeRegistrationCb>:
    {
       26740:   b538        push    {r3, r4, r5, lr}
       26742:   460d        mov r5, r1
       26744:   4604        mov r4, r0
        OS_mutexTake(&s_mutex);
       26746:   4811        ldr r0, [pc, #68]   ; (2678c <coapSendNodeRegistrationCb+0x4c>)
       26748:   f022 ffa4   bl  49694 <OS_mutexTake>
        if ((requestResultCode == CoapResultGotResponse &&
       2674c:   2d15        cmp r5, #21
       2674e:   d10c        bne.n   2676a <coapSendNodeRegistrationCb+0x2a>
                (messageInfo->header.code != CoapResponseCreated &&
       26750:   f894 3027   ldrb.w  r3, [r4, #39]   ; 0x27
        if ((requestResultCode == CoapResultGotResponse &&
       26754:   2b41        cmp r3, #65 ; 0x41
       26756:   d003        beq.n   26760 <coapSendNodeRegistrationCb+0x20>
                (messageInfo->header.code != CoapResponseCreated &&
       26758:   2b44        cmp r3, #68 ; 0x44
       2675a:   d001        beq.n   26760 <coapSendNodeRegistrationCb+0x20>
                 messageInfo->header.code != CoapResponseChanged &&
       2675c:   2b84        cmp r3, #132    ; 0x84
       2675e:   d106        bne.n   2676e <coapSendNodeRegistrationCb+0x2e>
    }
       26760:   e8bd 4038   ldmia.w sp!, {r3, r4, r5, lr}
        OS_mutexGive(&s_mutex);
       26764:   4809        ldr r0, [pc, #36]   ; (2678c <coapSendNodeRegistrationCb+0x4c>)
       26766:   f022 bf65   b.w 49634 <OS_mutexGive>
                 messageInfo->header.code != CoapResponseNotFound)) ||
       2676a:   2d16        cmp r5, #22
       2676c:   d1f8        bne.n   26760 <coapSendNodeRegistrationCb+0x20>
            LOG_WARNING("Unexpected response %u from server,"
       2676e:   f894 3027   ldrb.w  r3, [r4, #39]   ; 0x27                                  <-------- crash here.
       26772:   4a07        ldr r2, [pc, #28]   ; (26790 <coapSendNodeRegistrationCb+0x50>)
       26774:   4907        ldr r1, [pc, #28]   ; (26794 <coapSendNodeRegistrationCb+0x54>)
       26776:   2004        movs    r0, #4
       26778:   f01f f872   bl  45860 <logFormatted>
            scheduleChangeOrAdd(&s_retrySendNodeRegistration, nodeRegistration,
       2677c:   4b06        ldr r3, [pc, #24]   ; (26798 <coapSendNodeRegistrationCb+0x58>)
       2677e:   2200        movs    r2, #0
       26780:   4906        ldr r1, [pc, #24]   ; (2679c <coapSendNodeRegistrationCb+0x5c>)
       26782:   4807        ldr r0, [pc, #28]   ; (267a0 <coapSendNodeRegistrationCb+0x60>)
       26784:   f01d f8fa   bl  4397c <scheduleChangeOrAdd>
       26788:   e7ea        b.n 26760 <coapSendNodeRegistrationCb+0x20>
       2678a:   bf00        nop
       2678c:   20007ea8    .word   0x20007ea8
       26790:   0006c581    .word   0x0006c581
       26794:   0006c5c9    .word   0x0006c5c9
       26798:   0001d4c0    .word   0x0001d4c0
       2679c:   00026c35    .word   0x00026c35
       267a0:   20007f0c    .word   0x20007f0c


    static void coapSendNodeRegistrationCb(const CoapMessageInfo* messageInfo,
            ResultCode requestResultCode, const void* payload, int payloadSize,
            void* requestCallbackData)
    {
        OS_mutexTake(&s_mutex);
        if ((requestResultCode == CoapResultGotResponse &&
                (messageInfo->header.code != CoapResponseCreated &&
                 messageInfo->header.code != CoapResponseChanged &&
                 messageInfo->header.code != CoapResponseNotFound)) ||
            (requestResultCode == CoapResultNoResponse)) {
            LOG_WARNING("Unexpected response %u from server,"
                    "reschedule sending node registration", messageInfo->header.code);
            scheduleChangeOrAdd(&s_retrySendNodeRegistration, nodeRegistration,
                    NULL, RETRY_SEND_NODE_REGISTRATION_DELAY);
        }
        OS_mutexGive(&s_mutex);
    }

    Suspected bad messageInfo pointer that isn't checked.

    Seems to be another case of https://gerrit.cyco.io/#/c/12042/


    ----------------------------------------------------------------------

    MQ

    1) Corrupt messages transferred correctly through the mq to NMS... NMS continuously loops as it faults.
    2) On Agent, an entire mq file goes bad, causing the mq to rollback a *long* way. Agent has to fill up the queue before the NMS recognises
    that its back at a good position and starts letting the messages thru again.



    Agent-old, NMS-new
    Agent-new, NMS-old
    Agent-new, NMS-new
    Agent-old, NMS-old (Same as above, with repeated samples retrieved).




    --------------------------

    433MHz gw-200 build.... channel & channel plan??

    ---------------------------

    IS 802.15.4 spec

    384 Nodes must implement the User Datagram Protocol as defined in [RFC768].                     <--- Yes.
    385 Nodes may also implement the Transport Control Protocol as defined in [RFC793].             <--- No, but its a *may*
    386 Nodes must implement Internet Protocol Version 6 as described in [RFC2460].                 <--- Yes.
    387 Nodes must implement ICMPv6 message processing as described in [RFC4443].                   <--- Yes.
    388 Nodes must implement Neighbour Cache Management as described in [RFC6775].                  <--- No, and its a *must*
    389 Nodes must implement [RFC6775] Neighbour Solicitation with Address Registration Option
    390 (ARO) to resolve link layer addresses.                                                      <--- No. SLAAC-optimisations.
    391 Nodes use the techniques described in [RFC6775] and [RFC6550] to optimize IPv6 Neighbour
    392 Discovery.                                                                                  <--- RFC-6550 yes (RPL), RFC-6775, no.
    393 Nodes should auto configure a link-local IPv6 address as described in [RFC4862]             <--- Yes on ethernet, not needed on mesh as IPs are allocated using EUI-64.
    394 Node should support Duplicate Address Detection, as described in [RFC4861].                 <--- Yes on ethernet, not needed on mesh as IPs are allocated using EUI-64.
    395 Nodes may originate multicast ICMPv6 or UDP messaging.                                      <--- Yes.
    396 A Router Node may support the DHCPv6 Relay Agent mechanism as described in [RFC3315].       <--- DHCPv6 yes, relay-agent? its a *may*. Not really needed since we don't use DHCP on the mesh.
    397 Nodes implement DHCPv6 [RFC3315] to provide automated management of IPv6 GUA and            <--- Yes, but fully? (december 2003)
    398 ULA address assignments

    a) Mutual authentication of a node and the node to which the node connects must be
    416 supported.                                                                                  <--- Generally no, encryption, yes, authentication... IPSEC? DTLS over mesh to server.
    417 b) The Node must provide a means to restrict traffic from non-authenticated nodes.          <--- Yes, RLL key
    418 c) The Node must support establishment, refresh, and revocation of pairwise keys
    419 between Border Routers and non-Border Router nodes.                                         <--- No, RLL keys are currently re shared.
    420 d) The Node must support establishment, refresh, and revocation of group keys to nodes.     <--- hmm, is the RLL key considered a 'group' key?
    421 e) The Node may support establishment, refresh, and revocation of pairwise keys
    422 between any two nodes.                                                                      <--- Yes.
    423 f) The Node must support encryption of transmitted frames and decryption of received
    424 frames.                                                                                     <--- Yes.
    425 g) The Node must support integrity checking of transmitted frames.                          <--- Yes (assuming it means received frames).

    446 i) Misbehaving nodes are removed from the network by the Border Router revoking the node’s
    447 pairwise keys, followed by distribution of new group keys to the remaining end nodes.       <--- We currently can't do this I don't think.

    9.5.3:
    CoAP over DTLS.

    479 - MAC Layer: IEEE 802.15.4-2015                                                             <--- Yes.
    480 - PHY Layer: IEEE 802.15.4u, IEEE 802.15.4v                                                 <---
    481 - USIL Layer: 6LoWPAN, RPL                                                                  <--- Yes, RPL and 6LoWPAN.



    Ok, I've had a look at the BIS PHY standard and the delta between it and what we currently have:



    6.1: PPDU Format:
    - Preamble field; some changes needed to length coding & decoding.
    - SFD; Assuming no FEC, a simple constant change. Addition of FEC is a simple alternative value.
    - PHR; Minor changes to logic regarding handling and rejection of frames without whitening enabled
    also have to enable data whitening on transmit (EFR32 and CC1200 support this). Other fields such
    as frame length can be updated to match.
    6.2 FEC; This is optional, so yes we can support the 'no FEC' option. There are FEC options available
    in the EFR32 that would seem to be appropriate tho. Adding these would require additional implementation and testing time.
    6.3 Modulation and Coding
    - Symbol rate and modulation index; Currently we support the 50 Ksym/sec for operating mode 1.
    - Frequency Bands and Channel Parameters; We support a wide range of frequencies already, these lie within that range.
    6.4 Data whitening; supporting this is a matter of turning on the facility in the EFR32 and marking the flags in the packet likewise.
    7 PHY requirements
    - Assumed h/w wise the part is compliant.

    Additionally, we need some logic around variant handling; i.e. making the code sufficiently flexible to handle multiple variants in this part of the codebase.
    Potentially at runtime where it is currently hardcoded.

    Estimate: 1 weeks work to determine the details and implement with minimal dev-testing + 1 week for testing to ensure the effects of the
    changes are as required + a period of interoperability testing which could last as long as desired.
    Limitations: Need a suitable device for interop testing.  Is FEC needed? This would be roughly an additional few days to implement.




    > *PHY LAYER*
    >
    >
    > The PHY layer is derived from a sub-set of [IEEE802.15.4u].
    >
    > 2-FSK modulation schemes, with channel spacing range from 100 to 200
    > kHz, are defined to provide uncoded data rates from 50 to 150 kbps.
    > FEC is optional and based upon NRNSC code.
    >
    > The PHY Protocol Data Unit (PPDU) structure is as defined in
    > [IEEE802.15.4u]. Coded and uncoded transmissions are discriminated by
    > separate Start Words. Preamble lengths are predefined to achive the
    > interoperability requirements. PHY header options are simplified by
    > enforcing no Mode Switch, Data Whitening enabled and use of 4-octet FCS.
    >
    > ____________________________________
    >
    > *MAC LAYER*
    >
    > The MAC sub-layer uses data structures defined an [IEEE802.15.4].
    >
    > The MAC sub-layer operates in non-beacon enabled mode (no periodic
    > beacon frames are defined) and hence no contention free period exists.
    > All channel access operates using contention access mode. The
    > [IEEE802.15.4] association procedures are not used.  Short addressing
    > is not within scope of this specification.
    >
    > Nodes use EUI-64 based MAC address as defined in [IEEE802.15.4].  The
    > Data and Enhanced Acknowledge frames are used and extended with a set
    > of Information Elements.  Further, all MAC payload is encapsulated in
    > an [IEEE802.15.9] MPX-IE, which enables LLC protocol dispatch.
    I think we stopped using the enhanced ack frames some years ago. We don't use MPX-IE.

    >
    >
    > ______________________________________
    >
    > *6LOWPAN*
    >
    > Nodes support transmission and reception of IPv6 packets over IEEE
    > 802.15.4 networks as described in [RFC4944] and amended by [RFC 6282].
    > Specifically:
    >
    > 1.     Nodes MUST implement reception for the NALP Header Type as
    > defined in [RFC4944].
    I think we do the right thing here, i.e. drop the packet.

    >
    > 2.     Nodes MUST implement generation and reception for the IPv6
    > Header Type as defined in [RFC4944].
    I think we support uncompressed as well, but it's not really used.

    >
    > 3.     Nodes MUST implement generation and reception for IPv6 Header
    > Compression (LOWPAN_IPHC) as defined in [RFC6282].  Nodes are not
    > required to implement stateful context based source, destination, or
    > multicast address compression.
    Yes we do.

    >
    > 4.     Nodes MUST implement generation and reception of IPv6 Extension
    > Header Compression (LOWPAN_NHC) as defined in [RFC6282] (supporting
    > IP-in-IP tunneling for packet forwarding).
    I don't think we support IP-in-IP header compression.

    >
    > 5.     Nodes MUST implement reception of UDP header compression as
    > defined in [RFC6282].
    Yes, we do.

    >
    > 6.     Nodes MUST implement support for the FRAG1 and FRAGN Header
    > Types as described in [RFC4944] (regardless of the FAN’s minimum IPv6
    > MTU size, fragmentation support is desirable  for high noise environments).
    > Fragmentation and re-assembly MUST be performed on a hop-by-hop basis.
    > Fragments MUST be transmitted in order, and indication of successful
    > fragment delivery MUST be received before the next fragment is
    > transmitted.
    Yes, we support this.

    >
    > 7.     Multicast packets SHOULD not be fragmented.  Fragmented
    > multicast packets MUST be ignored on receipt (as layer 2 broadcast
    > frames are unacknowledged).
    I assume this mean IPv6 layer fragmentation and not 6LowPAN fragmentation. We don't support IPv6 fragmentation at all.

    >
    > 8.     Nodes MUST drop any frame containing an unknown 6LoWPAN Header Type.
    We should do that.

    >
    >
    > _______________________________________
    >
    > *ROUTING AND IPv6*
    >
    > Nodes MUST implement the non-storing downward mode of RPL as described
    > in [RFC6550]
    Yes we do.

    >
    > Nodes MUST implement Neighbor Cache Management as described in [RFC6775].
    We don't do neighbor hood discovery on the radio.

    >
    > Nodes MUST implement [RFC6775] Neighbor Solicitation with Address
    > Registration Option (ARO) to resolve link layer addresses.
    We don't.

    >
    > Nodes use the techniques described in [RFC6775] and [RFC6550] to
    > optimize IPv6 Neighbor Discovery.
    We don't.

    >
    > Nodes MUST auto configure a link-local IPv6 address as described in
    > [RFC4862]
    Yes we do.

    >
    > Node MUST support Duplicate Address Detection, as described in [RFC4861].
    We don't, not on mesh radio. When using IPv6 over Ethernet we support it.

    >
    > Nodes MAY originate multicast ICMPv6 or UDP messaging.
    We do.

    >
    >
    > This next one may be applicable to our Gateway ... Do we support
    > DHCPv6 Relay agent ?
    No, we don't.

    >
    >
    > A Router Node MUST support the DHCPv6 Relay Agent mechanism as
    > described in [RFC3315].
    No.

    >
    > Nodes implement DHCPv6 [RFC3315] to provide automated management of
    > IPv6 GUA and ULA address assignments.
    Our GW has limited support for DHCPv6. HMP is using that for some deployment. There is a user story about improving the DHCPv6 support.

    >
    >
    > _______________________________________________
    >
    > *SECURITY**
    > *
    > let me know what we do not support / like ... I wonder if the first
    > one can be interpreted as a node being a mesh node in one side and our
    > server on the other side or if they envision mutual authentication
    > between every single mesh link in a mesh network... Which I guess we
    > do not supportAuthentication is based on the fact that the other end
    > knows about the
    RLL key and is therefor trusted.

    >
    >
    > Security functionalities (authentication, key management, and so on)
    > is important pieaces of this document. The BIS – LMCP supports the
    > following set of security mechanisms:
    >
    > The following section presents the technical requirements related to
    > security.
    >
    > 1.     Mutual authentication of a node and the node to which the node
    > connects MUST be supported.
    Not supported, it's only end-to-end security.

    >
    > 2.     The Node MUST provide a means to restrict traffic from
    > non-authenticated nodes.
    If you don't have the correct RLL-key packets will be dropped. There is support for a restricted rll-key as implemented for smip.

    >
    > 3.     The Node MUST support establishment, refresh, and revocation of
    > pairwise keys between Border Routers and non Border Router nodes.
    Not supported. It's a shared rll-key.

    >
    > 4.     The Node MUST support establishment, refresh, and revocation of
    > group keys to nodes.
    Not supported.

    >
    > 5.     The Node MAY support establishment, refresh, and revocation of
    > pairwise keys between any two nodes.
    Not supported.

    >
    > 6.     The Node MUST support encryption of transmitted frames and
    > decryption of received frames.
    That we support.

    >
    > 7.     The N ode MUST support integrity checking of transmitted frames.
    Should we check the integrity of frames sent? It makes more sense to check it on received frames and that we do.

    >
    >
    > _________________________________________________________
    >
    > *SECURITY - PART 2
    >
    > *Finally I found this from that spec and there are a number of items I
    > do not like as being far away from what we do like 802.1X.
    > Should our Gateway be considered a Border Router and is there any kind
    > of node-to-node mutual authentication, group key or node-to-node key
    > in the standards we follow or in our implementation  .
    Our Gateway is a RPL Boarder Router.

    > All of this below sounds like a rewrite of our RLL Management Key solution..
    A little, it's a different approach to it.

    >
    > So what are your comments for the text below ?
    >
    > Below are the component of the security to be implemented.
    >
    > 1.     Layer 2 network access control, mutual authentication, and
    > establishment of a secure pairwise link between a End Node and its
    > Border Router is implemented with an adaptation of [IEEE802.1X] and
    > [RFC5216] for [IEEE802.15.4].
    Not supported.

    >
    > 2.     Below are the role of different roles of the devices in network
    >
    > a.     Joining nodes should assume the role of SUP
    >
    > b.     Border Routers assume the role of Authenticator
    >
    > c.     A AAA service (such as RADIUS) fulfills the role of the
    > Authentication Service.
    >
    > 2.     An EAPOL Relay mechanism is defined to provide EAPOL messaging
    > between Supplicant and Authenticator when the two are not within radio
    > range of each another.
    >
    > 3.     Mutual authentication is based on [IEEE802.1AR] secure device
    > identity.
    >
    > 4.     The BIS-LMCP will support the PKI.
    >
    > 3.     An adaptation of the [IEEE802.11] 4-Way Handshake establishes a
    > shorter-lived secure pairwise link between the joining node and the
    > Border Router; the 4-Way Handshake also establishes the network group
    > security between all nodes of the network.
    >
    > 4.     Secure node to node (pairwise) links are supported between
    > one-hop neighbors using an adaptation of [ETSI-TS-102-887-2].
    >
    > 5.     BIS-LMCP nodes implements frame Security as specified in
    > section
    > 9 of [IEEE802.15.4], using either the group or node to node pairwise
    > keys previously established.
    >
    > 6.     Misbehaving nodes are removed from the network by the Border
    > Router revoking the node’s pairwise keys, followed by distribution of
    > new group keys to the remaining end nodes.

    Not sure what to say for all of the above. It basically re-iterates the 802.1X
    standard which we skipped because it would require to much cpu resources and wouldn't really give us much.




    neighbour discovery
    https://confluence.cyco.io/display/ENG/C4+-+Design?preview=%2F1179851%2F2097164%2FIPSO_NeighborDiscovery.pdf


    ---------------------------------------
    meter fw upgrade:

    [filetype = meterfw]
    setFileTypeFromMetadata( meterfw )
    [targetdevice = KT026818]
    [meterfw_id = 1234567]
    setMeterFwIdFromMetadata( 1234567 )
    fw Identifier = [1234567]


    2019-02-06  7:59:40.079 #1   001bc50c6000cad0 <log> 6:40:20.589 [debug] [      filedl] {   filedl}: No more missing blocks; we are finished!
    2019-02-06  8:00:12.262 #1   001bc50c6000cad0 <log> 6:40:52.763 [debug] [  meter/upgr] {   filedl}: --- Upgrade result: File received, meter-upgrade starting ---

    [        hdlc] {     dlms}: tx: (1/1): 7e
    [        hdlc] {     dlms}: tx: (1/1): a02b
    [        hdlc] {     dlms}: tx: (1/1): 03
    [        hdlc] {     dlms}: tx: (1/1): 61
    [        hdlc] {     dlms}: tx: (1/1): 32
    [        hdlc] {     dlms}: tx: (1/1): 8deb
    [        hdlc] {     dlms}: tx: (1/1): e6e600
    [        hdlc] {     dlms}: tx: (1/2): c30181000f0000280000ff0101091020
    [        hdlc] {     dlms}: tx: (2/2): b7df32af70d9ced08102820ae3ed17
    [  fs/service] {   filedl}: flashopErase 163:0x0 4096 B
    [        hdlc] {     dlms}: tx: (1/1): a304
    [        hdlc] {     dlms}: tx: (1/1): 7e
    [        hdlc] {     hdlc}: ** giveCause = 3, 1 **
    [        hdlc] {     hdlc}: rx: (1/2): 7ea011610352c7fee6e700c701c1010c
    [  fs/service] {   filedl}: flashopErase 164:0x0 4096 B
    [        hdlc] {     hdlc}: rx: (2/2): 48677e
    [        hdlc] {     hdlc}: ** Waiting for HDLC event (60000ms) **
    [        dlms] {     dlms}: Action Response result: hw fault
    [        dlms] {     dlms}: processXDlmsApdu(5 B): failed
    [        dlms] {     dlms}: DLMS result is 0 bytes with code 12
    [  meter/dlms] {     dlms}: dlmsReceiveCb called with s_rxRes=0
    [  meter/dlms] {   device}: ** processDlmsPayload (12) **
    [  meter/dlms] {   device}: Broken response: check failed
    [meter/device] {   device}: Error from KT026818: comm: broken rsp
    [  fs/service] {   filedl}: flashopErase 165:0x0 4096 B


    2019-02-06  8:00:17.907 #1   001bc50c6000cad0 <log> 6:40:58.424 [debug] [  meter/upgr] {   device}: --- Upgrade result: Meter-upgrade termination ---

    ----------------------------------------

    Generate certs

    "release" repo

    sudo apt install libio-all-perl
    sudo apt-get install libxml-libxml-perl libxml-simple-perl libexpect-perl libsoap-lite-perl libjson-perl libchart-clicker-perl libwww-perl libterm-readline-gnu-perl libdate-simple-perl libgraph-easy-perl libproc-simple-perl libproc-processtable-perl libipc-run-perl liblog-log4perl-perl libio-all-perl libcapture-tiny-perl libtext-asciitable-perl libyaml-perl libfile-find-rule-perl libstring-random-perl libdate-calc-perl libnet-smtp-tls-perl libio-all-perl libparse-recdescent-perl libio-captureoutput-perl libdata-structure-util-perl libfile-chdir-perl libmoo-perl libdevice-serialport-perl libnet-sftp-foreign-perl libdbd-sqlite3-perl libcrypt-ssleay-perl libio-interface-perl libdancer-perl libnet-rawip-perl libnetpacket-perl libnet-libdnet-perl libnetwork-ipv4addr-perl libnet-ipv6addr-perl libnet-write-perl libnet-frame-perl libnet-ssh-perl libnet-oping-perl libdbd-mysql-perl libbarcode-code128-perl libswitch-perl libio-socket-inet6-perl libdatetime-format-dateparse-perl


    ./utils/gen_certs.pl 00-00-00-00-00-00-00-01


    ------------------------------------------------

    LMCP series of standards

    - "Nodes must implement RPL". A significant point of the optimisation of neighbour-discovery ([RFC6775] and [RFC6550]) is to allow sleepy-nodes. Also the supported device-types indicate support for
    battery-powered devices, yet RPL does not currently have any provision for sleepy-nodes, is there any consideration at this level for those types of devices?

    - Is neighbour-cache-management necessary when the product in question has an alternative method of determining node address (i.e. static or deterministic allocation of addresses).

    - To what extent is the standard flexible for producets that do not require interoperability (i.e. closed systems)

    - Is Duplicate-Address-Detection necessary in networks of statically-allocated nodes?

    - "Nodes implement DHCPv6 [RFC3315]" Is this a "must"? what if we have a system of static (or deterministic) addressed nodes?

    - "Nodes must provide a means to restrict traffic from non-authenticated nodes". If a node can filter traffic (drop packets) that does not decrypt, is this sufficient? i.e. Is this
    a requirement for authentication or a filtering function?

    - "The Node must support establishment, refresh, and revocation of group keys to nodes". If a product does not support the concept of groups, is this feature still required?


    -----------------------------------------------------------

    MQ issue

    Some MQ entries lost, server wants 7221, only 3154 to 7219 are available
    Skipping missing mq #7220
    Push re-scheduled in 7 s
    Some MQ entries lost, server wants 7221, only 3154 to 7219 are available
    Skipping missing mq #7220
    Push re-scheduled in 28 s
    Version: posix-kaifa:v144-4-g1efa345 on hw linux
    IID: 02-00-00-00-00-00-00-01

    sanitizePushLaterSeqNum();

    Generate protobuf (pb) binary files.
    https://medium.com/@at_ishikawa/cli-to-generate-protocol-buffers-c2cfdf633dce

    cat mq.text
    time: 1234

    protoc --encode=MqEntry interface/proto/mq.proto -I./interface/proto  < mq.text > mq.data

    cat <hex_string> | xxd -r -p > pb.bin
    protoc --decode=MqEntry interface/proto/mq.proto -I./interface/proto  < pb.bin  > pb.text

    ------------------------------

    TI SensorController

    Ok, so out application would be running on the M4F core.
    In that sense it has 80KB SRAM & 350KB of FLASH.

    Problems:
    - 80KB SRAM... would *hope* we would be able to cut down our app to run in that. Not a given tho.
    - 350KB FLASH... Our app is around that size, so nothing available for firmware (or meter) upgrade unless
    we get an external SPI FLASH also. Again, we can do something about this, but we aren't right now
    (with the prospect of more security protocol modules coming up) this is likely to *increase* rather
    than stay static (or reduce).
    - The low-power 16-bit processor (SC) is currently useless to us (tho when we get into gas & water
    meters it would become *very* useful).

    Other points:
    - If we needed to use that processor, the quickest way would be to take advantage of the fact that
    they already have Thread (https://www.threadgroup.org/) running on it and simple port our application
    to Thread. This would efectively remove the Connode IPv6/LoWPAN stack and you could argue would be
    better in the long-run anyway (because we can't compete with Google, ARM, TI, etc who all throw their
    money behind Thread).
    - An interesting idea would be to port the low-level radio stack to the ultra-low-power processor
    (the SC) on that device and allow the main Cortex-M4F to be turned off. This would resolve a number
    of issues we will have when going low-power (in the future).



    https://site.eettaiwan.com/events/iot_embed_2018/sources/05_TI_WT.pdf







    -----------------------------

    Listing entries from 60925:
    NUMBER UTC TIME                 T-STATUS  - ENTRY
     60935 Sun Feb 10 06:15:30 2019 in sync   - Data profile sample: USS 0000483 Sun Feb 10 06:15:00 2019 1.0.99.1.0.255:  "2019-02-10T11:45:00 dev 330 status: 0x0","250.3800048828125","0.0","0.0","0.0","0.0","0.0","0.0","0"
     60941 Sun Feb 10 06:30:33 2019 in sync   - Data profile sample: USS 0000483 Sun Feb 10 06:30:00 2019 1.0.99.1.0.255:  "2019-02-10T12:00:00 dev 330 status: 0x0","251.97999572753906","0.0","0.0","0.0","0.0","0.0","0.0","0"

     60934 Sun Feb 10 06:15:31 2019 uncertain - Data profile sample: USS 0000483 Sun Feb 10 06:15:30 2019 1.0.94.91.0.255: "2019-02-10T11:45:30 dev 330 status: 0x0","250.1199951171875","0.0","0.0","0.0","50.0","0.0","0.0","32238.0","60442.0","0.0","b'ffffffffffffffffff014a00'","0.0","b'ffffffffffffffffff014a00'","444135.0","0","12","2","0.0","0.0","1","16560"
     60938 Sun Feb 10 06:15:33 2019 in sync   - Data profile sample: USS 0000483 Sun Feb 10 06:15:35 2019 1.0.94.91.0.255: "2019-02-10T11:45:35 dev 330 status: 0x0","249.97999572753906","0.0","0.0","0.0","50.0","0.0","0.0","32238.0","60442.0","0.0","b'ffffffffffffffffff014a00'","0.0","b'ffffffffffffffffff014a00'","444135.0","0","12","2","0.0","0.0","1","16560"

     60936 Sun Feb 10 06:15:31 2019 in sync   - Data profile sample: USS 0000483 Sun Feb 10 06:07:00 2019 0.0.99.98.2.255: "2019-02-10T11:37:00 dev 330 status: 0x0","102","286"
     60937 Sun Feb 10 06:15:31 2019 in sync   - Data profile sample: USS 0000483 Sun Feb 10 06:04:00 2019 0.0.99.98.2.255: "2019-02-10T11:34:00 dev 330 status: 0x0","101","285"
     60940 Sun Feb 10 06:30:31 2019 in sync   - Data profile sample: USS 0000483 Sun Feb 10 06:30:34 2019 1.0.94.91.0.255: "2019-02-10T12:00:34 dev 330 status: 0x0","254.6699981689453","0.0","0.0","0.0","50.0890007019043","0.0","0.0","32238.0","60442.0","0.0","b'ffffffffffffffffff014a00'","0.0","b'ffffffffffffffffff014a00'","444150.0","0","12","2","0.0","0.0","1","16560"


    -------------------------


    2019-02-12 12:39:13.809 [debug] [          hdlclock] {   timeSynch}: -- unlocking HDLC --
    2019-02-12 12:39:13.809 [debug] [              hdlc] {   timeSynch}: disconnectLink 0x0
    2019-02-12 12:39:14.652 [ WARN] [            mqcoap] {    schedule}: Some MQ entries lost, server wants 46624, only 5879 to 21234 are available
    2019-02-12 12:39:14.653 [ WARN] [            mqcoap] {    schedule}: Skipping missing mq #21235





    ------------------------------

     ** Reading PFAIL BLOB **
     -- HDLC locked --
     GPIO Push Start (send HDLC RR)
     Setup AA using LLS without ciphering
     Setup AA with LLS
     Storing configuration
     fsOpen (/configuration-1.pb, newfile, fd=11)
     fsClose (fd=11)
     s_currentContextId = 3
     Connect HDLC link
     tx: (1/1): 7e
     tx: (1/1): a020
     tx: (1/1): 03
     tx: (1/1): 41
     tx: (1/1): 93
     tx: (1/1): 28bc
     tx: (1/2): 8180140502015e0602015e0704000000
     tx: (2/2): 01080400000001
     tx: (1/1): 51af
     tx: (1/1): 7e
     ** dlmspipe task waiting to be triggered (30000) **
     ** giveCause = 3, 1 **
     rx: (1/3): 7ea0204103733e9d8180140502015e06
     rx: (2/3): 02015e07040000000108040000000151
     rx: (3/3): af7e
     tx: (1/1): 7e
     tx: (1/1): a044
     tx: (1/1): 03
     tx: (1/1): 41
     tx: (1/1): 10
     tx: (1/1): b3e1
     tx: (1/1): e6e600
     tx: (1/4): 6036a1090607608574050801018a0207
     tx: (2/4): 808b0760857405080201ac0a80083141
     tx: (3/4): 324233433444be10040e01000000065f
     tx: (4/4): 1f0400001f1fffff
     tx: (1/1): dd04
     tx: (1/1): 7e
     ** Waiting for HDLC event (10000ms) **
     ** giveCause = 3, 1 **
     rx: (1/4): 7ea0374103302179e6e7006129a10906
     rx: (2/4): 0760857405080101a203020101a305a1
     rx: (3/4): 0302010dbe10040e0800065f1f040000
     rx: (4/4): 1014015e00079a8a7e
     DLMS:receiveCb (0)
     ** Waiting for HDLC event (10000ms) **
     COSEM AA is rejected: authentication failure
     processAcseApdu(43 B): failed
     DLMS result is 0 bytes with code 12
     ** dlmsReceiveCb **
     ** triggering dlmspipe task **
     ** dlmspipe task triggered **
     ** Waiting for DLMS report (14000) **
     ** processDlmsPayload **
     processDlmsPayload = 4, 12
     Broken response: check failed
     GPIO Push Finished


    - GPIO level triggers ISR.
    - Send RR frame for alarm request
    tx: (1/3): 7ea02003819382768180140502015e06
    tx: (2/3): 02015e07040000000108040000000151
    tx: (3/3): af7e

    (Decodes as an SNRM frame, the RR flags are set).
    <HDLC len="31" >
    <TargetAddress Value="1" />
    <SourceAddress Value="64" />
    <!--SNRM frame.-->
    <FrameType Value="93" />
    <PDU>
    <Snrm>
      <MaxInfoTX Value="350" />
      <MaxInfoRX Value="350" />
      <WindowSizeTX Value="1" />
      <WindowSizeRX Value="1" />
    </Snrm>
    </PDU>
    </HDLC>


    - receipt of UA for the above.
    rx: (1/3): 7ea020810373a4978180140502015e06
    rx: (2/3): 02015e07040000000108040000000151
    rx: (3/3): af7e

    (decodes as follows)
    <HDLC len="31" >
    <TargetAddress Value="64" />
    <SourceAddress Value="1" />
    <!--UA frame.-->
    <FrameType Value="73" />
    <PDU>
    <Ua>
      <MaxInfoTX Value="350" />
      <MaxInfoRX Value="350" />
      <WindowSizeTX Value="1" />
      <WindowSizeRX Value="1" />
    </Ua>
    </PDU>
    </HDLC>


    The pushed,encrypted data is then received on the node (pushed by the meter).
    rx: (1/7): 7ea0688103105635e6e700db08474f45
    rx: (2/7): 0000018e8e82004f200000000117b22c
    rx: (3/7): 1cf312162ff40e7f2cedc8e3f0b72b95
    rx: (4/7): 1f4894f767824259a64b60b746afdb9e
    rx: (5/7): c4bf953575f54836a45c0a8c3aa3f700
    rx: (6/7): dfeb96e030a65b073722e0789efe2f2e
    rx: (7/7): cda8da1a7fb4bf05c17e


    After decryption of the pushed,encrypted data, we get the unencrypted "pushed" payload...
    09060004190900ff090c07e20816030b
    031aff014a0004820080900000000050
    00000000000000000000

    which decodes as:
    <GetResponse>
      <GetResponseNormal>
        <InvokeIdAndPriority Value="81" />
        <Result>
          <Data>
            <Array Qty="01" >
              <Structure Qty="19" >
                <Structure Qty="02" >
                  <Int8 Value="00" />
                  <Enum Value="FF" />
                </Structure>
                <Structure Qty="02" >
                  <Int8 Value="FE" />
                  <Enum Value="FF" />
                </Structure>
                <Structure Qty="02" >
                  <Int8 Value="01" />
                  <Enum Value="1E" />
                </Structure>
                <Structure Qty="02" >
                  <Int8 Value="01" />
                  <Enum Value="1E" />
                </Structure>
                <!--0.4.25.9.0.255-->
                <OctetString Value="0004190900FF" />
                <!--2018-08-22 11:03:26-->
                <OctetString Value="07E20816030B031AFF014A00" />
                <BitString Value="10010000000000000000000000000000000000000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000" />
              </Structure>
            </Array>
          </Data>
        </Result>
      </GetResponseNormal>
    </GetResponse>




    In there, you can see the ESW (Equipment Status Word).












    -------------------------------







    -------------------------------------



    @Bhavana Kotagiri @Steve Tickle @James Charlton
    Hi all.
    I tried to parse log where agent has been crashed and it seems to me that some content is a lot of strange. When agent sends request for get Profile Daily load (Get 1-0:99.2.0*255 ic 7 attr 2) then meter sends response where the length of array is a lot of size and it is 65319.  Please take a look to chunk of log

    [36mlnt3ph_1  |[0m 2019-01-16 15:27:23.750 [debug] [              dlms] {      device}: Get 1-0:99.2.0*255 ic 7 attr 2 by range:
    [36mlnt3ph_1  |[0m 2019-01-16 15:27:23.750 [ info] [              dlms] {      device}: Profile Daily load: From time: 2018-12-27 11:09:58
    [36mlnt3ph_1  |[0m 2019-01-16 15:27:23.750 [ info] [              dlms] {      device}: Profile Daily load: To time: 2019-01-16 11:09:58
    [36mlnt3ph_1  |[0m 2019-01-16 15:27:23.750 [debug] [              dlms] {      device}: tx unencrypted: (1/4): c0018100070100630200ff0201010204
    [36mlnt3ph_1  |[0m 2019-01-16 15:27:23.750 [debug] [              dlms] {      device}: tx unencrypted: (2/4): 020412000809060000010000ff0f0212
    [36mlnt3ph_1  |[0m 2019-01-16 15:27:23.750 [debug] [              dlms] {      device}: tx unencrypted: (3/4): 0000090c07e20c1b040b093aff014a00
    [36mlnt3ph_1  |[0m 2019-01-16 15:27:23.750 [debug] [              dlms] {      device}: tx unencrypted: (4/4): 090c07e30110030b093aff014a000100
    [36mlnt3ph_1  |[0m 2019-01-16  4:22:27.117 [debug] [              dlms] {        dlms}: rx decrypted: (1/62): c402810000000001008203d0 01 82 ff27 <---length
    [36mlnt3ph_1  |[0m 2019-01-16  4:22:27.117 [debug] [              dlms] {        dlms}: rx decrypted: (2/62): 0205090c00000000ff0000ffff014a00
    ..............................................................................................................................................

    <GetRequest>
      <GetRequestNormal>
        <InvokeIdAndPriority Value="81" />
        <AttributeDescriptor>
          <!--PROFILE_GENERIC-->
          <ClassId Value="0007" />
          <!--1.0.99.2.0.255-->
          <InstanceId Value="0100630200FF" />
          <AttributeId Value="02" />
        </AttributeDescriptor>
        <AccessSelection>
          <AccessSelector Value="01" />
          <AccessParameters>
            <Structure Qty="04" >
              <Structure Qty="04" >
                <UInt16 Value="0008" />
                <!--0.0.1.0.0.255-->
                <OctetString Value="0000010000FF" />
                <Int8 Value="02" />
                <UInt16 Value="0000" />
              </Structure>
              <!--2018-12-27 11:09:58-->
              <OctetString Value="07E20C1B040B093AFF014A00" />
              <!--2019-01-16 11:09:58-->
              <OctetString Value="07E30110030B093AFF014A00" />
              <Array Qty="00" >
              </Array>
            </Structure>
          </AccessParameters>
        </AccessSelection>
      </GetRequestNormal>
    </GetRequest>



    <GetResponse>
      <GetResponsewithDataBlock>
        <InvokeIdAndPriority Value="81" />
        <Result>
          <LastBlock Value="00" />
          <BlockNumber Value="00000001" />
          <Result>
            <!--Block is not complete.20/976.-->
            <RawData Value="0182FF270205090C00000000FF0000FFFF014A00" />
          </Result>
        </Result>
      </GetResponsewithDataBlock>
    </GetResponse>


    7e a020 03 81 93 8276 8180 140502015e0602015e070400000001080400000001 51af 7e

    7ea02003819382768180140502015e0602015e07040000000108040000000151af7e`

    --------------------------------------

    CVE-2019-5736 generic container break-out exploit.
    CVE-2019-7304 Ubuntu snapd API privelage-escalation
    -----------------------------

    METRIC_RADIO_MAC_CONTENTION_PERCENTAGE:
    numSendErrorsAllTries


    CND-9058 Set Time-sync support for DST

    The current timesync mechanism does not take account of meters that
    don't support time-update (as opposed to time-set).
    Also, we need to set DST (deviation, enabled flags, period) on Kaifa meters
    and any others that may require this in future.

    Change-Id: I5ecb6d5a9ac1a492f56b56b643367d554a1c5057



    --------------------------------------

    0A0B5553532030303034373133120517438260001A0E090C07E30210FF160F00FF014A001A0517419800001A051741F000001A0517000000001A0517000000001A05173EE666661A05173EE666661A0312000022100A2CC11589B722195076D70FF6FF8754288CFCA0E305


    ---------------------------------------

    Asynchronous Comms Manager (ACM)
    - Maintain mesh in stable state, i.e. minimise disruption to mesh thru reboots, etc.
    - Optimise throughput of cellular and mesh.
    - Input is unoptimised list of nodes to send BLOBs to and topology of network.
    - Output is packets sent to nodes, scheduled according to network conditions.
    - Has to maintain estimate of current gateway load given changing topology.
    - Packets are opaque.
    - ACM has knowledge of how nodes are allocated to gateways, number of hops to a node, current
    throughput on mesh and cellular link (per gateway, possibly cell-id is useful here also).
    - Works using EUI-64 node-addressing.

    NMS uses ACM by:
    - Creation of packets and list of nodes (multicast to EUI-64s).
    - Notified of response packets by ACM.
    - Retrieval of response packets from ACM.

    SMA uses ACM by:
    - Same as NMS.


    ACM API:
    - POST /job         Create a multicast-job returns jobId.
    - GET /jobStatus    Get status of all multicast targets in the job.

    Problem:
    - ACM encrypts on output (i.e. uses DTLS transport). If packets are encrypted
    on entry to the ACM, they cannot be multicast (as they will all be unique).
    - If ACM takes enrypted input, no multicast is possilble.


    AWS security issues:

    - AWS doesn't protect against insider-exploits. If a bad-actor can get inside the CC or AWS, then all packets are
    wide open to tcpdump and the like.
    - Most breakins occur due to credential theft. This means CC security is critical and the lack of end-to-end security
    means CC would be a target for and liable for data theft.
    - Application security is not in the domain of AWS security, we need to fuzz and lock it all down.
    - Pen testing of the servers.
    - AWS is a big target.
    - Shared tenency can lead to side-channel attacks such as spectre/meltdown.
    - M2M credentials as well as user credentials are targets (i.e. Ansible creds).
    - A shared ACM is required for multi-applications. This is a single point where all data is plaintext and mixed in the
    one application.
    - Different servers should have different credentials. The system should not have one set for everything.
    - Central point for communications should be isolated from applications credential-wise.
    - "The default privacy setting for AWS S3 buckets is owner-only. Most AWS breaches involve organizations choosing the “all authorized users” setting when expanding access to their buckets, not realizing that this setting includes all authorized users of Amazon Web Services, not just their account. This means that anyone with an AWS account can access that bucket with whatever permissions are granted to that level of access. It’s a free-for-all."
    - Principle of "least privelage", the ACM does not need to know the contents of the data so should not.

    Do we need transparent data to optimise comms? Can we do the same with opawue data?
    - Metadata can contain the required source and destination info, payload can be encrypted.
    - Packets are unique, but can be coalesced if going towards a common gateway.
    - Required metadata? destination-EUI, jobId.

    Purpose of ACM:
    - To perform asychronous communications with the mesh on behalf of the application.
    - API presented to the application(s) allows large-scale multicast operations to be submitted. Responses from nodes
    will be multi-part (completion indicated by node). Job status may be polled using a unique job id allocated by ACM.
    Job statuses will show progress (packets received from node) and completion status (final packet received?)

    Optimisations by ACM:
    - Mesh loading; maintain throughput on the mesh by limiting activity in file-distributions, i.e. don't send
    distribution requests to all nodes on a mesh, sequence them instead.
    - Packet aggregation; combine packets for the same gateway into one transfer over cellular to optimise bandwidth.
    - Mesh stability; order activities on mesh such that mesh stability is maintained, i.e don't reboot a node that has
    children. Order based on outer-first and work-inwards.
    - Packet aggregation and mesh laoding; broadcast on mesh whenever possible. If packets are targetted at multiple
    EUIs on a mesh, broadcast the packet.
    - Takes into account the network metrics (live) from nodes & gateways.
    - Jobs can run in parallel, depending on optimisations, i.e. part of a mesh performing one job-id while the othe
    part performing a separate job-id.

    Addressing:
    - Nodes are addressed by EUI.
    - IP addresses are dynamic, based on environmental conditions, not suitable for application-level addressing.
    - IP isn't a given in future protocols, e..g ZigBee, LoRAWAN, SigFox, etc.
    - Request-response durations are expected to be long, increasing the chance of changing IP during the cycle.
    - EUIs are allocated by CC in a controlled manner.
    - EUIs are static.
    - For SM product, nodes register meter-id with SMA. SMA maintains EUI<->meter-id mapping, NMA has no need for this
    information.
    - UI can perform data fusion between NMA and SMA (EUI/meter-id) to present the UI.
    - ACM takes EUIs as input (destination adresses).
    - ACM provides response packets as output to application, addressed by EUI to avoid dynamic IP issues.
    - EUI<->IP mapping is performed on output/input to ACM (mesh-side) and is closely linked to tund to minimise chance
    of misdirected packets during mesh hopping.


    Phase 1:
    - Use DTLS.

    Phase 2:
    - Use application encryption.
    - At this point, packet aggregation is difficult to perform, but we could then move to a local distribution model
    as the file-distribution mechanism currently does. This would send the bulk to the gw where it gets broadcast.

    -----------------------------------------------

    dev keys eui64 EUI64:
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --load-key client-key /Data/Temp/00-1B-C5-0C-60-04-FD-D6/node.key.der
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --load-key client-cert /Data/Temp/00-1B-C5-0C-60-04-FD-D6/node.crt.der
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --load-key root-cert /Data/Temp/00-1B-C5-0C-60-04-FD-D6/ca.crt.der
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --rll-key /Data/Temp/00-1B-C5-0C-60-04-FD-D6/mac_keys.txt



    -------------------------------------------------

    Hsch DV8@31c64L5a9a5S2000e2d8

    Schedule task, Data access violation, @31c64.

    Possible that discovery has not completed and s_alarmsProfile->deviceId has not been created yet.

    Alarm crash on startup:

    00031c2c <synthesizeMeterAlarm.part.13>:
            DeviceAlarmsIndication* alarmsInd = MALLOCZ(sizeof(DeviceAlarmsIndication));
       31c2c:   f241 1363   movw    r3, #4451   ; 0x1163
    static bool synthesizeMeterAlarm( uint32_t alarmId )
       31c30:   b5f0        push    {r4, r5, r6, r7, lr}
       31c32:   b085        sub sp, #20
       31c34:   4607        mov r7, r0
            DeviceAlarmsIndication* alarmsInd = MALLOCZ(sizeof(DeviceAlarmsIndication));
       31c36:   9300        str r3, [sp, #0]
       31c38:   2201        movs    r2, #1
       31c3a:   4b1c        ldr r3, [pc, #112]  ; (31cac <synthesizeMeterAlarm.part.13+0x80>)
       31c3c:   2110        movs    r1, #16
       31c3e:   2000        movs    r0, #0
       31c40:   f013 fcd2   bl  455e8 <reallocWrapper>
            alarmsInd->numAlarms = 1;
       31c44:   2601        movs    r6, #1
            alarmsInd->raisedAlarms = MALLOCZ(alarmsInd->numAlarms * sizeof(uint32_t));
       31c46:   f241 1365   movw    r3, #4453   ; 0x1165
            DeviceAlarmsIndication* alarmsInd = MALLOCZ(sizeof(DeviceAlarmsIndication));
       31c4a:   4604        mov r4, r0
            alarmsInd->numAlarms = 1;
       31c4c:   6006        str r6, [r0, #0]
            alarmsInd->raisedAlarms = MALLOCZ(alarmsInd->numAlarms * sizeof(uint32_t));
       31c4e:   4632        mov r2, r6
       31c50:   2104        movs    r1, #4
       31c52:   9300        str r3, [sp, #0]
       31c54:   2000        movs    r0, #0
       31c56:   4b15        ldr r3, [pc, #84]   ; (31cac <synthesizeMeterAlarm.part.13+0x80>)
       31c58:   f013 fcc6   bl  455e8 <reallocWrapper>
            alarmsInd->deviceId = s_alarmsProfile->deviceId;
       31c5c:   4d14        ldr r5, [pc, #80]   ; (31cb0 <synthesizeMeterAlarm.part.13+0x84>)
            alarmsInd->raisedAlarms = MALLOCZ(alarmsInd->numAlarms * sizeof(uint32_t));
       31c5e:   6060        str r0, [r4, #4]
            alarmsInd->deviceId = s_alarmsProfile->deviceId;
       31c60:   682b        ldr r3, [r5, #0]
            (void)driverGetMeterTime(&meterTime);
       31c62:   a802        add r0, sp, #8
            alarmsInd->deviceId = s_alarmsProfile->deviceId;
       31c64:   689b        ldr r3, [r3, #8]                    <-------- crash here!


    ----------------------------------------------

    stty -F /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0 9600 raw
    stty -F /dev/serial/by-id/usb-FTDI_TTL232R_FT94TOL6-if00-port0 9600 raw
    socat -x /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0,raw,echo=0,crnl /dev/serial/by-id/usb-FTDI_TTL232R_FT94TOL6-if00-port0,raw,echo=0,crnl

    ---------------------------------------------

    Kaifa IPA3b:

    baud rate over opto == 9600

    Bad:

    <HDLC len="32" >
    <TargetAddress Value="128" />
    <SourceAddress Value="32" />
    <!--SNRM frame.-->
    <FrameType Value="93" />
    <PDU>
    <Snrm>
      <MaxInfoTX Value="256" />
      <MaxInfoRX Value="256" />
      <WindowSizeTX Value="1" />
      <WindowSizeRX Value="1" />
    </Snrm>
    </PDU>
    </HDLC>

    <HDLC len="32" >
    <TargetAddress Value="32" />
    <SourceAddress Value="128" />
    <!--UA frame.-->
    <FrameType Value="73" />
    <PDU>
    <Ua>
      <MaxInfoTX Value="256" />
      <MaxInfoRX Value="256" />
      <WindowSizeTX Value="1" />
      <WindowSizeRX Value="1" />
    </Ua>
    </PDU>
    </HDLC>

    <HDLC len="65" >
    <TargetAddress Value="128" />
    <SourceAddress Value="32" />
    <!--AARQ frame.-->
    <FrameType Value="10" />
    <PDU>
    <AssociationRequest>
      <ApplicationContextName Value="LN" />
      <SenderACSERequirements Value="1" />
      <MechanismName Value="Low" />
      <CallingAuthentication Value="68656C6C6F" />
      <InitiateRequest>
        <ProposedDlmsVersionNumber Value="6" />
        <ProposedConformance>
          <ConformanceBit Name="Action" />
          <ConformanceBit Name="EventNotification" />
          <ConformanceBit Name="SelectiveAccess" />
          <ConformanceBit Name="Set" />
          <ConformanceBit Name="Get" />
          <ConformanceBit Name="InformationReport" />
          <ConformanceBit Name="MultipleReferences" />
          <ConformanceBit Name="BlockTransferWithAction" />
          <ConformanceBit Name="BlockTransferWithSetOrWrite" />
          <ConformanceBit Name="BlockTransferWithGetOrRead" />
        </ProposedConformance>
        <ProposedMaxPduSize Value="65535" />
      </InitiateRequest>
    </AssociationRequest>
    </PDU>
    </HDLC>

    good:

    <HDLC len="32" >
    <TargetAddress Value="128" />
    <SourceAddress Value="32" />
    <!--SNRM frame.-->
    <FrameType Value="93" />
    <PDU>
    <Snrm>
      <MaxInfoTX Value="256" />
      <MaxInfoRX Value="256" />
      <WindowSizeTX Value="1" />
      <WindowSizeRX Value="1" />
    </Snrm>
    </PDU>
    </HDLC>

    <HDLC len="32" >
    <TargetAddress Value="32" />
    <SourceAddress Value="128" />
    <!--UA frame.-->
    <FrameType Value="73" />
    <PDU>
    <Ua>
      <MaxInfoTX Value="256" />
      <MaxInfoRX Value="256" />
      <WindowSizeTX Value="1" />
      <WindowSizeRX Value="1" />
    </Ua>
    </PDU>
    </HDLC>

    <HDLC len="65" >
    <TargetAddress Value="128" />
    <SourceAddress Value="32" />
    <!--AARQ frame.-->
    <FrameType Value="10" />
    <PDU>
    <AssociationRequest>
      <ApplicationContextName Value="LN" />
      <SenderACSERequirements Value="1" />
      <MechanismName Value="Low" />
      <CallingAuthentication Value="68656C6C6F" />
      <InitiateRequest>
        <ProposedDlmsVersionNumber Value="6" />
        <ProposedConformance>
          <ConformanceBit Name="Action" />
          <ConformanceBit Name="EventNotification" />
          <ConformanceBit Name="SelectiveAccess" />
          <ConformanceBit Name="Set" />
          <ConformanceBit Name="Get" />
          <ConformanceBit Name="InformationReport" />
          <ConformanceBit Name="MultipleReferences" />
          <ConformanceBit Name="BlockTransferWithAction" />
          <ConformanceBit Name="BlockTransferWithSetOrWrite" />
          <ConformanceBit Name="BlockTransferWithGetOrRead" />
        </ProposedConformance>
        <ProposedMaxPduSize Value="65535" />
      </InitiateRequest>
    </AssociationRequest>
    </PDU>
    </HDLC>

    <HDLC len="55" >
    <TargetAddress Value="32" />
    <SourceAddress Value="128" />
    <!--AARE frame.-->
    <FrameType Value="30" />
    <PDU>
    <AssociationResponse>
      <ApplicationContextName Value="LN" />
      <AssociationResult Value="0" />
      <ResultSourceDiagnostic>
        <ACSEServiceUser Value="0" />
      </ResultSourceDiagnostic>
      <InitiateResponse>
        <NegotiatedDlmsVersionNumber Value="6" />
        <NegotiatedConformance>
          <ConformanceBit Name="SelectiveAccess" />
          <ConformanceBit Name="Set" />
          <ConformanceBit Name="Get" />
          <ConformanceBit Name="BlockTransferWithGetOrRead" />
        </NegotiatedConformance>
        <NegotiatedMaxPduSize Value="512" />
        <VaaName Value="7" />
      </InitiateResponse>
    </AssociationResponse>
    </PDU>
    </HDLC>




    < 2019/02/20 16:21:21.020877  length=11 from=23257 to=23267
     81 80 14 05 02 01 00 06 02 01 00
    < 2019/02/20 16:21:21.036662  length=12 from=23268 to=23279
     07 04 00 00 00 01 08 04 00 00 00 01
    < 2019/02/20 16:21:21.052658  length=3 from=23280 to=23282
     69 6d 7e
    > 2019/02/20 16:21:21.124714  length=12 from=7700 to=7711
     7e a0 21 41 02 01 73 e8 fb 81 80 14
    > 2019/02/20 16:21:21.140966  length=14 from=7712 to=7725
     05 02 01 00 06 02 01 00 07 04 00 00 00 01
    > 2019/02/20 16:21:21.156804  length=9 from=7726 to=7734
     08 04 00 00 00 01 69 6d 7e
    < 2019/02/20 16:21:21.212590  length=1 from=23283 to=23283
     7e
    < 2019/02/20 16:21:21.228583  length=5 from=23284 to=23288
     a0 42 02 01 41
    < 2019/02/20 16:21:21.244564  length=3 from=23289 to=23291
     10 72 8c
    < 2019/02/20 16:21:21.260790  length=3 from=23292 to=23294
     e6 e6 00
    < 2019/02/20 16:21:21.292534  length=10 from=23295 to=23304
     60 33 a1 09 06 07 60 85 74 05
    < 2019/02/20 16:21:21.308487  length=16 from=23305 to=23320
     08 01 01 8a 02 07 80 8b 07 60 85 74 05 08 02 01
    < 2019/02/20 16:21:21.324549  length=15 from=23321 to=23335
     ac 07 80 05 68 65 6c 6c 6f be 10 04 0e 01 00
    < 2019/02/20 16:21:21.340318  length=12 from=23336 to=23347
     00 00 06 5f 1f 04 00 00 1f 1f ff ff
    < 2019/02/20 16:21:21.356401  length=3 from=23348 to=23350
     e7 41 7e
    < 2019/02/20 16:22:21.501025  length=3 from=23351 to=23353
     7e a0 21
    < 2019/02/20 16:22:21.516946  length=3 from=23354 to=23356
     02 01 41
    < 2019/02/20 16:22:21.532793  length=3 from=23357 to=23359
     93 9e 86
    < 2019/02/20 16:22:21.548799  length=8 from=23360 to=23367
     81 80 14 05 02 01 00 06
    < 2019/02/20 16:22:21.564915  length=15 from=23368 to=23382
     02 01 00 07 04 00 00 00 01 08 04 00 00 00 01
    < 2019/02/20 16:22:21.580814  length=3 from=23383 to=23385
     69 6d 7e
    > 2019/02/20 16:22:21.650523  length=14 from=7735 to=7748
     7e a0 21 41 02 01 73 e8 fb 81 80 14 05 02
    > 2019/02/20 16:22:21.666419  length=14 from=7749 to=7762
     01 00 06 02 01 00 07 04 00 00 00 01 08 04
    > 2019/02/20 16:22:21.682273  length=7 from=7763 to=7769
     00 00 00 01 69 6d 7e
    < 2019/02/20 16:22:21.741013  length=3 from=23386 to=23388
     7e a0 42
    < 2019/02/20 16:22:21.756574  length=3 from=23389 to=23391
     02 01 41
    < 2019/02/20 16:22:21.772503  length=5 from=23392 to=23396
     10 72 8c e6 e6
    < 2019/02/20 16:22:21.788718  length=1 from=23397 to=23397
     00
    < 2019/02/20 16:22:21.820509  length=15 from=23398 to=23412
     60 33 a1 09 06 07 60 85 74 05 08 01 01 8a 02
    < 2019/02/20 16:22:21.836486  length=15 from=23413 to=23427
     07 80 8b 07 60 85 74 05 08 02 01 ac 07 80 05
    < 2019/02/20 16:22:21.852343  length=15 from=23428 to=23442
     68 65 6c 6c 6f be 10 04 0e 01 00 00 00 06 5f
    < 2019/02/20 16:22:21.868623  length=10 from=23443 to=23452
     1f 04 00 00 1f 1f ff ff e7 41
    < 2019/02/20 16:22:21.884383  length=1 from=23453 to=23453
     7e
    < 2019/02/20 16:22:25.145025  length=3 from=23454 to=23456
     7e a0 21
    < 2019/02/20 16:22:25.161296  length=4 from=23457 to=23460
     02 01 41 93
    < 2019/02/20 16:22:25.177314  length=2 from=23461 to=23462
     9e 86
    < 2019/02/20 16:22:25.193222  length=9 from=23463 to=23471
     81 80 14 05 02 01 00 06 02
    < 2019/02/20 16:22:25.209020  length=14 from=23472 to=23485
     01 00 07 04 00 00 00 01 08 04 00 00 00 01
    < 2019/02/20 16:22:25.225189  length=3 from=23486 to=23488
     69 6d 7e

    > 2019/02/20 16:22:25.262203  length=3 from=7770 to=7772
     7e a0 21
    > 2019/02/20 16:22:25.278267  length=14 from=7773 to=7786
     41 02 01 73 e8 fb 81 80 14 05 02 01 00 06
    > 2019/02/20 16:22:25.294412  length=14 from=7787 to=7800
     02 01 00 07 04 00 00 00 01 08 04 00 00 00
    > 2019/02/20 16:22:25.310651  length=4 from=7801 to=7804
     01 69 6d 7e

     7e a0 42
     02 01 41 10
     72 8c e6 e6 00
     60 33
     a1 09 06 07 60 85 74 05 08 01 01 8a 02 07 80 8b
     07 60 85 74 05 08 02 01 ac 07 80 05 68 65 6c
     6c 6f be 10 04 0e 01 00 00 00 06 5f 1f 04 00
     00 1f 1f ff ff e7 41 7e

     7e a0 21
     02 01 41 93
     9e 86
     81 80 14 05 02 01 00 06 02
     01 00 07 04 00 00 00 01 08 04 00 00 00 01
     69 6d 7e

     7e a0 21 41 02 01 73 e8
     fb 81 80 14 05 02 01 00 06 02 01 00 07 04
     00 00 00 01 08 04 00 00 00 01 69 6d 7e

     7e
     a0 42 02 01 41
     10 72 8c
     e6 e6 00
     60 33 a1 09 06 07 60 85 74 05 08
     01 01 8a 02 07 80 8b 07 60 85 74 05 08 02 01
     ac 07 80 05 68 65 6c 6c 6f be 10 04 0e 01 00
     00 00 06 5f 1f 04 00 00 1f 1f ff ff
     e7 41 7e



    -------------------------------------------
    performance monitoring:

    iostat -x -c -d -t 1
    mytop -umeshnet -pmeshnet sma
    while [ true ]; do mytop -umeshnet -pmeshnet -b sma && sleep 1; done

    /etc/mysql/mysql.conf.d/mysqld.cnf
    slow_query_log_file = /var/log/mysql/mysql-slow.log
    slow_query_log =1
    long_query_time = 1
    log-queries-not-using-indexes


    ----------------------------------------------------

    grep -oP "Query_time: \K[\.0-9]+" | gnuplot -p -e 'set term pdf;set output "out.pdf";plot "/dev/stdin"'

    grep -oP "Query_time: \K[\.0-9]+" mysql-slow.log | gnuplot -p -e 'set term pdf;set output "out.pdf";set title "query duration";plot "-" with points ps 0.5 '

    grep -oP "Rows_sent: \K[\.0-9]+" mysql-slow.log | gnuplot -p -e 'set term pdf;set output "out.pdf";set title "rows sent";plot "-" with points ps 0.5 '

    cat cpuStats.log | tr -s ' ' | cut -d ' ' -f 3

    cat sda.log | tr -s ' ' | cut -d ' ' -f 8  | gnuplot -p -e 'set term pdf;set output "out.pdf";set title "avgrq-sz";plot "-" with points ps 0.5 '

    cat sda.log | tr -s ' ' | cut -d ' ' -f 7  | gnuplot -p -e 'set term pdf;set output "out.pdf";set title "rwkB/s";plot "-" with points ps 0.5 '

    cat cpuStats.log | tr -s ' ' | cut -d ' ' -f 5 | gnuplot -p -e 'set term pdf;set output "out.pdf";set title "iowait";plot "-" with points ps 0.5 '
    cat cpuStats.log | tr -s ' ' | cut -d ' ' -f 4 | gnuplot -p -e 'set term pdf;set output "out.pdf";set title "system cpu usage";plot "-" with points ps 0.5 '
    cat cpuStats.log | tr -s ' ' | cut -d ' ' -f 2 | gnuplot -p -e 'set term pdf;set output "out.pdf";set title "user cpu usage";plot "-" with points ps 0.5 '

    grep -oP "Rows_sent: \K[\.0-9]+" mysql-slow.log | gnuplot -p -e 'set term pdf;set output "out.pdf";set title "rows sent";plot "-" with points ps 0.5 '
    grep -oP "Lock_time: \K[\.0-9]+" mysql-slow.log | gnuplot -p -e 'set term pdf;set output "out.pdf";set title "lock time";plot "-" with points ps 0.5 '
    grep -oP "Rows_examined: \K[\.0-9]+" mysql-slow.log | gnuplot -p -e 'set term pdf;set output "out.pdf";set title "rows examined";plot "-" with points ps 0.5 '
    grep -oP "Query_time: \K[\.0-9]+" mysql-slow.log | gnuplot -p -e 'set term pdf;set output "out.pdf";set title "query duration";plot "-" with points ps 0.5 '



    select devices0_.device_profile_id as device_p1_9_0_, devices0_.device_id as device_i2_5_0_, device1_.id as id1_2_1_, device1_.create_time as create_t2_2_1_, device1_.entity_version as entity_v3_2_1_, de
    vice1_.update_time as update_t4_2_1_, device1_.add_ons as add_ons5_2_1_, device1_.device_alarm_profile_id as device_10_2_1_, device1_.device_id as device_i6_2_1_, device1_.device_node_id as device_11_2_1
    _, device1_.device_type as device_12_2_1_, device1_.dns_updated as dns_upda7_2_1_, device1_.profiles_hash as profiles8_2_1_, device1_.vendor as vendor9_2_1_ from device_device_profile devices0_ inner joi
    n device device1_ on devices0_.device_id=device1_.id where devices0_.device_profile_id=9;



    243126 * 4 = 972504 (high point).

     # Time: 2019-02-22T12:05:34.641576Z
     # User@Host: meshnet[meshnet] @ localhost [127.0.0.1]  Id:   646
     # Query_time: 0.375120  Lock_time: 0.000084 Rows_sent: 17954  Rows_examined: 50622
     SET timestamp=1550837134;
     select devices0_.device_profile_id as device_p1_9_0_, devices0_.device_id as device_i2_5_0_,


    Next high point.

    # Time: 2019-02-22T17:31:31.207473Z
    # User@Host: meshnet[meshnet] @ localhost [127.0.0.1]  Id:    58
    # Query_time: 0.293978  Lock_time: 0.000173 Rows_sent: 29599  Rows_examined: 79833
    SET timestamp=1550856691;
    select devices0_.device_profile_id as device_p1_9_0_, devices0_.device_id as device_i2_5_0_, device1_.id as id1_2_1_, device1


     use smc;
     SET timestamp=1550857023;
     SELECT version FROM db_version;
     # Time: 2019-02-22T17:37:03.965202Z
     # User@Host: meshnet[meshnet] @ localhost [127.0.0.1]  Id:    65
     # Query_time: 0.001423  Lock_time: 0.001304 Rows_sent: 1  Rows_examined: 1
     use sma;
     SET timestamp=1550857023;
     SELECT version FROM db_version;


    # Time: 2019-02-22T14:06:40.332966Z

    # Time: 2019-02-22T17:37:03.965167Z

    --------------------------------------------------------------

    SMIP CRT056 (RLL key support) analysis

    Agent has low-level multiple rll-key support (mac_security), also with CoAP interface to set/get the keys/index/preferredIndex.
    Interface is defined (/rll-key & RllKeyMessage).
    Server has generated code for RllKey protobufs, but no application-level support either in UI or API.
    Tests do not exist for this functionality.

    Changes required:
    - Agent needs to read a table of keys and a preferred key index from the CH instead of a single key.
    - Agent needs robustness here, possibly a roll-back operation if no comms? That might not be secure, possible fallback
    - Agent needs to send event to C4 server on key-change operations.
    - Agent-side library integration API documentation.

    - CH needs mods to store table instead of single-key and we need updated code to be able to test against this.

    - Regression tests for existing functionality given the current (untested) state.
    - Test case for first use of key after manufacture.
    - Test case for update of software from pre-mod to post-mod. Must maintain preferred key usage.
    - Test case for refurbished/sanitised CH.
    - Test case for key update test case.
    - Test case for messages from unknown index to be dropped.
    - Test case(s) for interrupted key update and recovery.
    - Fuzz testing on agent (software).
    - Fuzz testing of radio interface (CPA will want this with this change).
    - Test for events received on server for key update.
    - Test for end-to-end behaviour when update process interrupted at various points, in-transit, on Agent, loss of update events in transit?
    - What level of testing have we currently done on C4 server regards CPA? Dont want to pull a thread here.
    - Test effect on RPL with changing keys.
    - Test effect on RPL with changing keys while mesh hopping (could be dragons here?).

    - Interface protos need to have a key-config message. Should contain up to 8 keys/indices and a preferred key index.

    - Server needs a new API (SOAP) endpoint to allow get/set of key-table. This needs to be restricted to a specific user-role (RllKeyProtos.java).
    - Server needs a corresponding UI mod to provide ability to set/get key-table (upload/download file? no, file-get doesn't exist).
    - Server needs to perform action on key-change event? not specified tho.
    - Server-side API documentation.

    - System Documentation. What do we currently have? For CPA AMP requirements, we need to justify all diffs. Failure scenarios
    and recovery documentation. Test evidence, etc.

    All data to be sent as one to maintain atomic-update/rollback.  to default key? or always leave default key in table? never overwrite?

    RPL implications of multiple RLL key usage.

    --------------------------------------------------------

    2019-02-26 10:52:46.042 #1   001bc50c6001df12 <log> 0:38:44.348 [debug] [        hdlc] {   device}: tx: (1/1): 7e



     7e a0 21 41 02 01 73
    > 2019/02/26 13:03:36.432381  length=14 from=16835 to=16848
     e8 fb 81 80 14 05 02 01 00 06 02 01 00 07
    > 2019/02/26 13:03:36.448487  length=14 from=16849 to=16862
     04 00 00 00 01 08 04 00 00 00 01 69 6d 7e

    < 2019/02/26 13:03:36.607558  length=14 from=8995 to=9008
     7e a0 21 02 01 41 93 9e 86 81 80 14 05 02
    < 2019/02/26 13:03:36.623486  length=16 from=9009 to=9024
     01 5e 06 02 01 5e 07 04 00 00 00 01 08 04 00 00

    > 2019/02/26 13:03:36.624278  length=14 from=16863 to=16876
     7e a1 21 02 01 41 93 9e 86 81 80 14 05 02

    < 2019/02/26 13:03:36.639425  length=5 from=9025 to=9029
     00 01 51 af 7e

    > 2019/02/26 13:03:36.640203  length=14 from=16877 to=16890
     01 5e 06 0a 21 5e 07 04 00 00 00 01 48 04
    > 2019/02/26 13:03:36.658572  length=7 from=16891 to=16897
     00 00 00 01 51 af 7e
    > 2019/02/26 13:03:36.704195  length=6 from=16898 to=16903
     7e a0 21 41 02 01
    > 2019/02/26 13:03:36.720177  length=14 from=16904 to=16917
     73 e8 fb 81 80 14 05 02 01 00 06 02 01 00
    > 2019/02/26 13:03:36.735938  length=14 from=16918 to=16931
     07 04 00 00 00 01 08 04 00 00 00 01 69 6d
    > 2019/02/26 13:03:36.751919  length=1 from=16932 to=16932
     7e



     7e a0 21 02 01 41 93 9e 86 81 80 14 05 02
     01 5e 06 02 01 5e 07 04 00 00 00 01 08 04 00 00
     00 01 51 af 7e

     7e a1 21 02 01 41 93 9e 86 81 80 14 05 02
     01 5e 06 0a 21 5e 07 04 00 00 00 01 48 04
     00 00 00 01 51 af 7e

    New:
    7ea01f410201520a7ee6e700c4018100
    090c07e3021a020c1a39ff003c007e1a
    7e
    Got time: 2019-02-26T12:26:57.000+01:00 0
    Meter local timezone offset 60


    Old:
    7ea01f410201520a7ee6e700c4018100
    090c07e3021a020e121fff8000007a44
    7e
    Got time: 2019-02-26T14:18:31.000-00:00 0


    from old meter:
    06040111 / 06010066
    Got time: 2019-02-26T11:20:44.000-00:00 0       <--- Note the "-00".
    Setting time: 2019-02-26T11:20:46.000+01:00 0

    from new meter:
    06040115 / 06010002
    Got time: 2019-02-26T12:51:47.000+01:00 0
    Setting time: 2019-02-26T14:51:50.000+01:00 0


    Central European Time, 1 hour east from Greenwich, daylight saving starts
    on  the  last  Sunday  in  March  at  2 AM and ends on the last Sunday in
    October at 3 AM:

              TZ='CET-1CEST,M3.5.0/2,M10.5.0/3'


    ---------------------------------------------------------------

     Hsch DV0 @49b5c L4a6c7 S2000c7a8
    vListInsert crash.



    --------------------------------------------------------

    16919 2019-02-28 10:33:57.749 #1   001bc50c6004fdd6 <log> 0:13:53.887 [debug] [meter/time_synch] {timeSynch}:  s_timeOfMeterGetRequest = 1551350032

    CET-1CEST,M3.5.0/2,M10.5.0/3

    Standard time:
    CET = UTC+1
    CET-1 = UTC+2

    SummerTime:
    CEST


    (gdb) p s_tzinfo->rule[0]
    $2 = {ch = 77 'M', m = 3, n = 5, d = 0, s = 7200, change = 1553994000, offset = -3600}
    (gdb) p s_tzinfo->rule[1]
    $3 = {ch = 77 'M', m = 10, n = 5, d = 0, s = 10800, change = 1572138000, offset = -7200}

    07E3 02 1C 04 0E 0A 0E FF FFC4 00


    --------------------------------------------

    7e a0 1d 02 01 41 54 cc 97 e6 e6 00 c1 01 81 00 08 00 00 01 00 00 ff 03 00 10 00 3c 21 13 7e

    <HDLC len="28" >
    <TargetAddress Value="128" />
    <SourceAddress Value="32" />
    <!--I frame.-->
    <FrameType Value="54" />
    <PDU>
    <SetRequest>
      <SetRequestNormal>
        <InvokeIdAndPriority Value="129" />
        <AttributeDescriptor>
          <!--CLOCK-->
          <ClassId Value="8" />
          <!--0.0.1.0.0.255-->
          <InstanceId Value="0000010000FF" />
          <AttributeId Value="3" />
        </AttributeDescriptor>
        <Value>
          <Int16 Value="60" />
        </Value>
      </SetRequestNormal>
    </SetRequest>
    </PDU>
    </HDLC>


    ---------------------------------------------------------------

    tObisCode (format=<optimized out>, value=<optimized out>, writer=<optimized out>)
        at src/platform/core/jprintf.c:262
    262     formatUnsignedLongLongDecimal(writer, value[0], format);
    (gdb) where
    #0  formatObisCode (format=<optimized out>, value=<optimized out>, writer=<optimized out>)
        at src/platform/core/jprintf.c:262
    #1  jvsprintf (args=..., formatString=0x701cb "On demand response failed for profile %po: %s",
        writer=0x2000a454 <s_deviceStack+2716>) at src/platform/core/jprintf.c:534
    #2  jvsnprintf (buf=buf@entry=0x2000e555 <s_logBuf> "On demand response failed for profile  B/entry)",
        bufSize=bufSize@entry=200, formatString=0x701cb "On demand response failed for profile %po: %s",
        formatString@entry=0x20012198 "", args=..., args@entry=...) at src/platform/core/jprintf.c:579
    #3  0x000453d4 in logFormatted (level=level@entry=cnd_LogLevelDebug,
        module=module@entry=0x6ff67 "meter/dlms",
        format=0x701cb "On demand response failed for profile %po: %s") at src/platform/core/log.c:194
    #4  0x000308ae in onDemandResponseRegesterFillError (
        message=0x701f9 "Response is timeout on OnDemandRequest", msg=0x20013190)
        at src/device/drivers/dlms/device-dlms.c:1369
    #5  dropMessage (msg=0x20013190) at src/device/drivers/dlms/device-dlms.c:715
    #6  0x0003094c in requestCompleted (drop=drop@entry=true) at src/device/drivers/dlms/device-dlms.c:801
    #7  0x00032796 in deviceTask (arg=<optimized out>) at src/device/drivers/dlms/device-dlms.c:4308
    #8  0x0005b920 in pvTaskIncrementMutexHeldCount () at build/3pp/freertos/FreeRTOS/Source/tasks.c:4251
    Backtrace stopped: previous frame identical to this frame (corrupt stack?)


    ---------------------------------------------------------

    ./tools/c4-tools/coap_request.py --logmatch 1 "mac_tx" ""
    ./tools/c4-tools/coap_request.py --log


    or from server:

    ./tools/c4-tools/coap_request.py --server localhost:8080 --agent <ipv6> --logmatch 1 "mac_tx" ""
    ./tools/c4-tools/coap_request.py --server localhost:8080 --agent <ipv6> --log


    --------------------------

    extend display

    xrandr --output HDMI-1 --auto --right-of eDP-1

    -----------------------------------------------

    File distribution improvements:

    - more broadcast, less fill-in
    - order by hop? inside->out or outside->in? attempt to minimise mesh disturbance.
    - timed/synchronised activation.
    - Drip-feed broadcast to minimise disturbance of upstream traffic.
    - "per-gateway" timing parameters. The optimal will be different in every environment & topology.
    - On NMS, per-gateway concurrency, not per-node.
    - Putting a limit on max nodes per-gateway also limits the efficiency, instead we should strictly control the
    reboot ordering.
    -


    ------------------------

    Sniffer

    make host-agent
    builds CONFIG_EXAMPLE_APPS
    sniffer in:
    src/c4-examples/sniffer/
    build/hw1/bin/sniffer.elf

    New ipa3-sniffer or ipa1-sniffer:
    ./build/host-ctrlporthub/bin/ctrlporthub -controllerport 4001 -serial /dev/serial/by-id/usb-FTDI_TTL232R_FTG4DKEY-if00-port0 -loglevel debug -radiocapture radio.pcap -loglevel debug -inetcapture inet.bin

    use WireShark to open radio.pcap


    ---------------------------------


    2019-03-06 11:12:48.228 #1   001bc50c6001df12 <log> 41:36:29.544 [debug] [        dlms] {timeSynch}: Get 0-0:1.0.0*255 ic 8 attr 2 normal access
    2019-03-06 11:12:48.310 #1   001bc50c6001df12 <log> 41:36:29.603 [debug] [        hdlc] {timeSynch}: tx: (1/1): 7e
    2019-03-06 11:12:48.310 #1   001bc50c6001df12 <log> 41:36:29.609 [debug] [        hdlc] {timeSynch}: tx: (1/1): a01a
    2019-03-06 11:12:48.310 #1   001bc50c6001df12 <log> 41:36:29.616 [debug] [        hdlc] {timeSynch}: tx: (1/1): 0201
    2019-03-06 11:12:48.310 #1   001bc50c6001df12 <log> 41:36:29.622 [debug] [        hdlc] {timeSynch}: tx: (1/1): 41
    2019-03-06 11:12:48.310 #1   001bc50c6001df12 <log> 41:36:29.629 [debug] [        hdlc] {timeSynch}: tx: (1/1): 32
    2019-03-06 11:12:48.310 #1   001bc50c6001df12 <log> 41:36:29.635 [debug] [        hdlc] {timeSynch}: tx: (1/1): 20a1
    2019-03-06 11:12:48.353 #1   001bc50c6001df12 <log> 41:36:29.662 [debug] [        hdlc] {timeSynch}: tx: (1/1): e6e600
    2019-03-06 11:12:48.353 #1   001bc50c6001df12 <log> 41:36:29.669 [debug] [        hdlc] {timeSynch}: tx: (1/1): c0018100080000010000ff0200
    2019-03-06 11:12:48.353 #1   001bc50c6001df12 <log> 41:36:29.677 [debug] [        hdlc] {timeSynch}: tx: (1/1): 65d7
    2019-03-06 11:12:48.380 #1   001bc50c6001df12 <log> 41:36:29.684 [debug] [        hdlc] {timeSynch}: tx: (1/1): 7e
    2019-03-06 11:12:48.380 #1   001bc50c6001df12 <log> 41:36:29.697 [debug] [meter/time_synch] {timeSynch}: s_timeOfMeterGetRequest = 1554545201
    2019-03-06 11:12:48.446 #1   001bc50c6001df12 <log> 41:36:29.739 [debug] [        hdlc] {     hdlc}: ** giveCause = 3, 1 **
    2019-03-06 11:12:48.446 #1   001bc50c6001df12 <log> 41:36:29.746 [debug] [        hdlc] {     hdlc}: rx: (1/3): 7ea01f410201520a7ee6e700c4018100
    2019-03-06 11:12:48.446 #1   001bc50c6001df12 <log> 41:36:29.755 [debug] [        hdlc] {     hdlc}: rx: (2/3): 090c07e30406060b0928ff00788016c8
    2019-03-06 11:12:48.446 #1   001bc50c6001df12 <log> 41:36:29.764 [debug] [        hdlc] {     hdlc}: rx: (3/3): 7e
    2019-03-06 11:12:48.446 #1   001bc50c6001df12 <log> 41:36:29.771 [debug] [        hdlc] {     hdlc}: ** Waiting for HDLC event (60000ms) **
    2019-03-06 11:12:48.500 #1   001bc50c6001df12 <log> 41:36:29.779 [debug] [        dlms] {     dlms}: DLMS result is 14 bytes with code 0


    <HDLC len="30" >
    <TargetAddress Value="32" />
    <SourceAddress Value="128" />
    <!--I frame.-->

    <PDU>
    <GetResponse>
    <GetResponseNormal>
    <InvokeIdAndPriority Value="129" />
    <Result>
      <Data>
        <!--2019-04-06 11:09:40-->
        <OctetString Value="07E30406060B0928FF007880" />
      </Data>
    </Result>
    </GetResponseNormal>
    </GetResponse>
    </PDU>
    </HDLC>

    07E30406060B0928FF007880


    2019-03-06 11:12:48.500 #1   001bc50c6001df12 <log> 41:36:29.788 [debug] [meter/time_synch] {     dlms}: dlmsReceiveCb called with s_rxRes=0 from time synch
    2019-03-06 11:12:48.500 #1   001bc50c6001df12 <log> 41:36:29.798 [debug] [meter/time_synch] {timeSynch}:  s_timeOfMeterGetRequest = 1554545381
    2019-03-06 11:12:48.500 #1   001bc50c6001df12 <log> 41:36:29.807 [ info] [meter/common] {timeSynch}: Got time: 2019-04-06T11:09:40.000+02:00 0
    2019-03-06 11:12:48.500 #1   001bc50c6001df12 <log> 41:36:29.816 [debug] [meter/common] {timeSynch}: Meter local timezone offset 120

    2019-03-06 11:12:49.267 #1   001bc50c6001df12 <log> 41:36:30.550 [debug] [meter/time_synch] {     dlms}: dlmsReceiveCb called with s_rxRes=0 from time synch
    2019-03-06 11:12:49.267 #1   001bc50c6001df12 <log> 41:36:30.560 [debug] [meter/time_synch] {timeSynch}: localDeviation = -7200 meterDeviation=7200
    2019-03-06 11:12:49.267 #1   001bc50c6001df12 <log> 41:36:30.570 [debug] [meter/time_synch] {timeSynch}: localNow = 1554552582 meterNow = 1554541780 diff=10802 utc=1554545382
    2019-03-06 11:12:49.267 #1   001bc50c6001df12 <log> 41:36:30.582 [debug] [meter/time_synch] {timeSynch}: s_timeOfMeterSetRequest = 1554545382
    2019-03-06 11:12:49.267 #1   001bc50c6001df12 <log> 41:36:30.591 [debug] [meter/time_synch] {timeSynch}: timeBetweenGetAndSet = 1
    2019-03-06 11:12:49.304 #1   001bc50c6001df12 <log> 41:36:30.599 [debug] [meter/time_synch] {timeSynch}: Clock drift is 3601 seconds

    localNow = 1554552582
    meterNow = 1554541780
    diff=10802
    utc = 1554545382

    meterNow - utcNow = 10802
    localNow - utcNow = 7200
    meterNow - localNow = 3602


    (gdb) p s_meterTime
    $2 = {time = 1554541780, timeDeviation = 120, isTimeOk = true}

    (gdb) p *dateTime
    $8 = {date = {year = 2019, month = 4 '\004', dom = 6 '\006', dow = 6 '\006'}, time = {hour = 11 '\v', min = 9 '\t', sec = 40 '(',
        hund = 0 '\000'}, dev = 120, clockStatus = 128 '\200'}

    32          meterTime->time = dlmsGetEpochTime(&tsMeter);
    (gdb) p tsMeter
    $10 = {date = {year = 2019, month = 4 '\004', dom = 6 '\006', dow = 6 '\006'}, time = {hour = 11 '\v', min = 9 '\t', sec = 40 '(',
        hund = 0 '\000'}, dev = 120, clockStatus = 128 '\200'}



    2019-03-06 11:12:49.369 #1   001bc50c6001df12 <log> 41:36:30.681 [debug] [        hdlc] {timeSynch}: tx: (1/1): 7e
    2019-03-06 11:12:49.369 #1   001bc50c6001df12 <log> 41:36:30.688 [debug] [        hdlc] {timeSynch}: tx: (1/1): a028
    2019-03-06 11:12:49.369 #1   001bc50c6001df12 <log> 41:36:30.694 [debug] [        hdlc] {timeSynch}: tx: (1/1): 0201
    2019-03-06 11:12:49.412 #1   001bc50c6001df12 <log> 41:36:30.701 [debug] [        hdlc] {timeSynch}: tx: (1/1): 41
    2019-03-06 11:12:49.412 #1   001bc50c6001df12 <log> 41:36:30.707 [debug] [        hdlc] {timeSynch}: tx: (1/1): 32
    2019-03-06 11:12:49.412 #1   001bc50c6001df12 <log> 41:36:30.714 [debug] [        hdlc] {timeSynch}: tx: (1/1): 7963
    2019-03-06 11:12:49.412 #1   001bc50c6001df12 <log> 41:36:30.721 [debug] [        hdlc] {timeSynch}: tx: (1/1): e6e600
    2019-03-06 11:12:49.412 #1   001bc50c6001df12 <log> 41:36:30.728 [debug] [        hdlc] {timeSynch}: tx: (1/2): c1018100080000010000ff0200090c07
    2019-03-06 11:12:49.412 #1   001bc50c6001df12 <log> 41:36:30.737 [debug] [        hdlc] {timeSynch}: tx: (2/2): e30406060c092aff007880
    2019-03-06 11:12:49.433 #1   001bc50c6001df12 <log> 41:36:30.745 [debug] [        hdlc] {timeSynch}: tx: (1/1): 17d2
    2019-03-06 11:12:49.433 #1   001bc50c6001df12 <log> 41:36:30.751 [debug] [        hdlc] {timeSynch}: tx: (1/1): 7e




     len="39" >
    <TargetAddress Value="128" />
    <SourceAddress Value="32" />
    <!--I frame.-->
    <FrameType Value="32" />
    <PDU>
    <SetRequest>
      <SetRequestNormal>
        <InvokeIdAndPriority Value="129" />
        <AttributeDescriptor>
          <!--CLOCK-->
          <ClassId Value="8" />
          <!--0.0.1.0.0.255-->
          <InstanceId Value="0000010000FF" />
          <AttributeId Value="2" />
        </AttributeDescriptor>
        <Value>
          <!--2019-04-06 12:09:42-->
          <OctetString Value="07E30406060C092AFF007880" />
        </Value>
      </SetRequestNormal>
    </SetRequest>
    </PDU>
    </HDLC>



    2019-03-06 11:12:48.500 #1   001bc50c6001df12 <log> 41:36:29.807 [ info] [meter/common] {timeSynch}: Got time: 2019-04-06T11:09:40.000+02:00 0

    time from meter = 11:09 + 2     (local)
                    =  9:09         (UTC)


    2019-03-06 11:12:49.267 #1   001bc50c6001df12 <log> 41:36:30.570 [debug] [meter/time_synch] {timeSynch}: localNow = 1554552582 meterNow = 1554541780 diff=10802 utc= 1554545382
    (Saturday, 6 April 2019 10:09:42)

    Time on node (truth)    = 12:09 (local)
                            = 10:09 (UTC)


    Therefore meter has drift of 12:09->11:09 = -3600 (its gone back 1 hr).

    So, relative difference = -3600 (for adjust operation)
    or  absolute value      = 12:09 + 2     (local)

    Set operation was:
    2019-03-06 11:12:49.304 #1   001bc50c6001df12 <log> 41:36:30.607 [ info] [meter/common] {timeSynch}: Setting time: 2019-04-06T12:09:42.000+02:00 0








    --------------------------------------

    unit test

    b testRecordFailure



    ---------------------------------

    Kaifa HW1
    ~/node83.log
    019-03-08 10:16:52.698 #1   001bc50c6004fdd6 <log> 0:38:19.920 [debug] [meter/kaifaMa304] {     hdlc}: dlmsReceiveCb called with s_rxRes=0
    2019-03-08 10:16:52.746 #1   001bc50c6004fdd6 <log> 0:38:19.929 [debug] [meter/kaifaMa304] {     hdlc}: dlmsReceiveCb called with s_rxRes=0
    2019-03-08 10:16:52.746 #1   001bc50c6004fdd6 <log> 0:38:19.938 [debug] [        hdlc] {     hdlc}: ** Waiting for HDLC event (60000ms) **
    2019-03-08 10:16:52.746 #1   001bc50c6004fdd6 <log> 0:38:19.946 [debug] [meter/kaifaMa304] {   device}: Received Alarm Indication Mask 83910853
    2019-03-08 10:16:52.746 #1   001bc50c6004fdd6 <log> 0:38:19.956 [debug] [device_alarms] {   device}: Alarms state changed for device 7340157030078388
    2019-03-08 10:16:52.746 #1   001bc50c6004fdd6 <log> 0:38:19.970 [debug] [      fs_api] {   device}: fsOpen (/mq/009.mq, mode=3, fd=4)
    2019-03-08 10:16:52.790 #1   001bc50c6004fdd6 <log> 0:38:19.979 [ WARN] [        uffs] {   device}: pbuf: parent or serial in dirty pages buffer are not the same ?
    2019-03-08 10:16:52.790 #1   001bc50c6004fdd6 <log> 0:38:19.989 [ WARN] [        uffs] {   device}: fs  : write inter data fail!
    2019-03-08 10:16:52.790 #1   001bc50c6004fdd6 <log> 0:38:19.997 [ WARN] [        uffs] {   device}: pbuf: parent or serial in dirty pages buffer are not the same ?
    2019-03-08 10:16:52.790 #1   001bc50c6004fdd6 <log> 0:38:20.008 [debug] [      fs_api] {   device}: fsClose (fd=4)
    2019-03-08 10:16:52.790 #1   001bc50c6004fdd6 <log> 0:38:20.015 [ERROR] [   mqstorage] {   device}: Failed to write m# 2285340 of size 44 to /mq/009.mq
    2019-03-08 10:16:52.833 #1   001bc50c6004fdd6 <log> 0:38:20.025 [debug] [    hdlclock] {   device}: -- unlocking HDLC --
    2019-03-08 10:16:52.833 #1   001bc50c6004fdd6 <log> 0:38:20.032 [debug] [        hdlc] {   device}: disconnectLink 0x0
    2019-03-08 10:16:52.833 #1   001bc50c6004fdd6 <log> 0:38:20.039 [debug] [        hdlc] {   device}: Disconnect HDLC link
    2019-03-08 10:16:52.833 #1   001bc50c6004fdd6 <log> 0:38:20.046 [debug] [    hdlclock] {   device}: -- HDLC locked --
    2019-03-08 10:16:52.833 #1   001bc50c6004fdd6 <log> 0:38:20.053 [debug] [        hdlc] {   device}: Connect HDLC link
    2019-03-08 10:16:52.833 #1   001bc50c6004fdd6 <log> 0:38:20.060 [debug] [        hdlc] {   device}: tx: (1/1): 7e
    2019-03-08 10:16:52.876 #1   001bc50c6004fdd6 <log> 0:38:20.066 [debug]

    --------------------------------------------------

    (gdb) where
    #0  0x0806f294 in memcmp ()
    #1  0x08048966 in dlmsGetDateTime (payload=payload@entry=0x0, payloadLen=payloadLen@entry=0, dateTime=dateTime@entry=0x2000d51c <s_timeSynchStack+2988>) at src/device/communication/dlms/dlms.c:2021
    #2  0x08046546 in handleMeterTime (data=0x0, dataLen=0, meterTime=meterTime@entry=0x2000c938 <s_meterTime>) at src/device/drivers/dlms-common/device-dlms-common.c:30
    #3  0x0804635e in processDlmsPayload () at src/device/drivers/dlms/time-synch/time_synch.c:324
    #4  timeSynchTask (arg=<optimized out>) at src/device/drivers/dlms/time-synch/time_synch.c:398
    #5  0x08065a38 in pvTaskIncrementMutexHeldCount () at build/3pp/freertos/FreeRTOS/Source/tasks.c:4251
    Backtrace stopped: previous frame identical to this frame (corrupt stack?)



    <HDLC len="35" >
    <TargetAddress Value="128" />
    <SourceAddress Value="32" />
    <!--I frame.-->
    <FrameType Value="54" />
    <NextFrame Value="6215800100BE10040E01000000065F1F0400001F1FFFFF" />
    </HDLC>

    <HDLC len="35" >
    <TargetAddress Value="32" />
    <SourceAddress Value="128" />
    <!--I frame.-->
    <FrameType Value="74" />
    <PDU>
    <ReleaseResponse>
      <Reason Value="Normal" />
      <InitiateResponse>
        <NegotiatedDlmsVersionNumber Value="6" />
        <ProposedConformance>
          <ConformanceBit Name="SelectiveAccess" />
          <ConformanceBit Name="Set" />
          <ConformanceBit Name="Get" />
          <ConformanceBit Name="BlockTransferWithGetOrRead" />
        </NegotiatedConformance>
        <NegotiatedMaxPduSize Value="512" />
        <VaaName Value="7" />
      </InitiateResponse>
    </ReleaseResponse>
    </PDU>
    </HDLC>

    <HDLC len="31" >
    <TargetAddress Value="0" />
    <SourceAddress Value="0" />
    <!--SNRM frame.-->
    <FrameType Value="93" />
    <PDU>
    <Snrm>
      <MaxInfoTX Value="256" />
      <MaxInfoRX Value="256" />
      <WindowSizeTX Value="1" />
      <WindowSizeRX Value="1" />
    </Snrm>
    </PDU>
    </HDLC>

    <HDLC len="31" >
    <TargetAddress Value="0" />
    <SourceAddress Value="0" />
    <!--UA frame.-->
    <FrameType Value="73" />
    <PDU>
    <Ua>
      <MaxInfoTX Value="256" />
      <MaxInfoRX Value="256" />
      <WindowSizeTX Value="1" />
      <WindowSizeRX Value="1" />
    </Ua>
    </PDU>
    </HDLC>

    <HDLC len="9" >
    <TargetAddress Value="0" />
    <SourceAddress Value="0" />
    <!--S frame.-->
    <FrameType Value="13" />
    <Command Value="NextFrame" />
    </HDLC>


    requestAlarmsMask();



    -----------------------------------------------------------

    [meter/time_synch] {timeSynch}: ** Setting DST daylight_savings_end **
    [        dlms] {timeSynch}: Set 0-0:1.0.0*255 ic 8 attr 6 valueLen 14 B
    [        hdlc] {timeSynch}: tx: (1/1): 7e
    [        hdlc] {timeSynch}: tx: (1/1): a028
    [        hdlc] {timeSynch}: tx: (1/1): 0201
    [        hdlc] {timeSynch}: tx: (1/1): 41
    [        hdlc] {timeSynch}: tx: (1/1): ba
    [        hdlc] {timeSynch}: tx: (1/1): 396b
    [        hdlc] {timeSynch}: tx: (1/1): e6e600
    [        hdlc] {timeSynch}: tx: (1/2): c1018100080000010000ff0600090cff
    [        hdlc] {timeSynch}: tx: (2/2): ff0afe07030000ff800000
    [        hdlc] {timeSynch}: tx: (1/1): 2257
    [        hdlc] {timeSynch}: tx: (1/1): 7e
    [meter/time_synch] {timeSynch}: (out) s_clockState = 5
    [        hdlc] {     hdlc}: ACTION_WAIT_FOR_RESPONSE
    [        hdlc] {     hdlc}: rx: (1/2): 7ea011410201daf217e6e700c5018100
    [        hdlc] {     hdlc}: rx: (2/2): 36cf7e
    [        hdlc] {     hdlc}: HDLC_TYPE_I
    [        hdlc] {     hdlc}: Passing IFrame up the stack to the DLMS task.
    [        hdlc] {     hdlc}: !! Result == ResultOK !!
    [        hdlc] {     hdlc}: ** Waiting for HDLC event (60000ms) **
    [        dlms] {     dlms}: DLMS result is 0 bytes with code 0
    [meter/time_synch] {     dlms}: dlmsReceiveCb called with s_rxRes=0 from time synch (0b 0x0)
    [meter/time_synch] {timeSynch}: Previous step was ok, continuing with sequence.
    [meter/time_synch] {timeSynch}: ** Time sync complete **

    At this point, everything is good, time-sync has just finished, so we disconnect the link.

    [    modemdrv] {    modem}: Not present
    [       modem] {    modem}: Unknown -> Unknown
    [    modemdrv] {    modem}: Not present
    [        dlms] {timeSynch}: Disconnect HDLC link
    [        hdlc] {timeSynch}: tx: (1/1): 7e
    [        hdlc] {timeSynch}: tx: (1/1): a008
    [        hdlc] {timeSynch}: tx: (1/1): 0201
    [        hdlc] {timeSynch}: tx: (1/1): 41
    [        hdlc] {timeSynch}: tx: (1/1): 53
    [        hdlc] {timeSynch}: tx: (1/1): 6771
    [        hdlc] {timeSynch}: tx: (1/1): 7e

    Disconnect request sent
    We now expect a UA from the meter in response.

    [meter/time_synch] {timeSynch}: (out) s_clockState = 0
    [        hdlc] {     hdlc}: ACTION_WAIT_FOR_RESPONSE
    [        hdlc] {     hdlc}: rx: (1/3): 7ea02141020173e8fb81801405020100
    [        hdlc] {     hdlc}: rx: (2/3): 06020100070400000001080400000001
    [        hdlc] {     hdlc}: rx: (3/3): 696d7e
    [        hdlc] {     hdlc}: HDLC_TYPE_UA
    [        hdlc] {     hdlc}: HDLC link disconnected

    UA received from meter, we're now disconnected.

    [        hdlc] {     hdlc}: !! Result == ResultOK !!
    [        hdlc] {     hdlc}: ** Waiting for HDLC event (60000ms) **
    [        dlms] {     dlms}: DLMS result is 0 bytes with code 0
    [meter/time_synch] {     dlms}: dlmsReceiveCb called with s_rxRes=0 from time synch (0b 0x0)
    [    hdlclock] {timeSynch}: -- unlocking HDLC --
    [        hdlc] {timeSynch}: disconnectLink 0x0
    [        hdlc] {   device}: disconnectLink 0x0

    duplicate disconnectLink here.

    [        hdlc] {   device}: Connect HDLC link
    [        hdlc] {   device}: tx: (1/1): 7e
    [        hdlc] {   device}: tx: (1/1): a020
    [        hdlc] {   device}: tx: (1/1): 01
    [        hdlc] {   device}: tx: (1/1): 01
    [        hdlc] {   device}: tx: (1/1): 93
    [        hdlc] {   device}: tx: (1/1): f64f
    [        hdlc] {   device}: tx: (1/2): 81801405020100060201000704000000
    [        hdlc] {   device}: tx: (2/2): 01080400000001
    [        hdlc] {   device}: tx: (1/1): 696d
    [        hdlc] {   device}: tx: (1/1): 7e

    SNRM sent.

    [        hdlc] {     hdlc}: ACTION_WAIT_FOR_RESPONSE
    [        hdlc] {     hdlc}: rx: (1/3): 7ea020010173f8a88180140502010006
    [        hdlc] {     hdlc}: rx: (2/3): 02010007040000000108040000000169
    [        hdlc] {     hdlc}: rx: (3/3): 6d7e
    [        hdlc] {     hdlc}: HDLC_TYPE_UA

    UA received, we're now disconnected.

    [        hdlc] {     hdlc}: tx: (1/1): 7e
    [        hdlc] {     hdlc}: tx: (1/1): a007
    [        hdlc] {     hdlc}: tx: (1/1): 01
    [        hdlc] {     hdlc}: tx: (1/1): 01
    [        hdlc] {     hdlc}: tx: (1/1): 13
    [        hdlc] {     hdlc}: tx: (1/1): 8c13
    [        hdlc] {     hdlc}: tx: (1/1): 7e


    We sent the special frame to retrieve the push data.

    <HDLC len="9" >
    <TargetAddress Value="0" />
    <SourceAddress Value="0" />
    <!--S frame.-->
    <FrameType Value="13" />
    <Command Value="NextFrame" />
    </HDLC>


    [        hdlc] {     hdlc}: !! Result == ResultOK !!
    [        hdlc] {     hdlc}: ** Waiting for HDLC event (60000ms) **
    [        hdlc] {     hdlc}: ACTION_WAIT_FOR_RESPONSE
    [        hdlc] {     hdlc}: rx: (1/1): 7ea00c01011002e1e6e7009eb47e
    [        hdlc] {     hdlc}: HDLC_TYPE_I

    In response to the special message, we get this packet, presumably the push data.
    7e a00c 01 011002e1 e6e700 9eb4 7e

    ./HDLCToPDU.py 7ea00c01011002e1e6e7009eb47e
    <HDLC>
      <controlField value="10" />
      <frameFormat value="a000,12" />
      <src value="1" />
      <dst value="1" />
      <LLC value="e6" />
      <HCS value="2e1" />
      <PDU value="" />
      <FCS value="9eb4" />
    </HDLC>

    [        hdlc] {     hdlc}: Passing IFrame up the stack to the DLMS task.
    [meter/kaifaMa304] {     hdlc}: dlmsReceiveCb called with s_rxRes=0 from dev dlms (0b 0x0)
    [meter/kaifaMa304] {     hdlc}: previous message *NOT* processed, *NOT* ok to proceed.



    ---------------

     !! (probably) ISR triggered hdlcSend  !!

    SNRM->
    <-UA

    NextFrame->
    <-PushData




    7ea020010173f8a88180140502010006 02010007040000000108040000000169 6d7e

    at receiveCb when previous message has not been processed:

    #0  receiveCb (payload=0x20019d88 "\017@", len=34, res=<optimized out>) at src/device/drivers/kaifa_ma304/device-kaifa_ma304.c:584
    #1  0x08047510 in processHdlcUAFrame (header=<optimized out>) at src/device/communication/hdlc/hdlc.c:1077
    #2  processHdlcMacFrame (header=0x2000dbc8 <s_hdlcStack+1136>) at src/device/communication/hdlc/hdlc.c:1178
    #3  parseMac (bb=0x20019de8) at src/device/communication/hdlc/hdlc.c:1356
    #4  processRxMessage () at src/device/communication/hdlc/hdlc.c:1377
    #5  hdlcReaderTask (arg=<optimized out>) at src/device/communication/hdlc/hdlc.c:1452
    #6  0x080660b4 in pvTaskIncrementMutexHeldCount () at build/3pp/freertos/FreeRTOS/Source/tasks.c:4251

    -----------------------------------


    void test()
    {
        ASSERT( timeIsNearDSTBoundary( 1552126538, 100 ) == false );
        ASSERT( timeIsNearDSTBoundary( 1572145200, 100 ) == true );
        ASSERT( timeIsNearDSTBoundary( 1554001200, 100 ) == true );

        ASSERT( timeIsNearDSTBoundary( 1572145200-101, 100 ) == false );
        ASSERT( timeIsNearDSTBoundary( 1554001200-101, 100 ) == false );

        ASSERT( timeIsNearDSTBoundary( 1572145200+101, 100 ) == false );
        ASSERT( timeIsNearDSTBoundary( 1554001200+101, 100 ) == false );

        ASSERT( timeIsNearDSTBoundary( 1572145200-99, 100 ) == true );
        ASSERT( timeIsNearDSTBoundary( 1554001200-99, 100 ) == true );

        ASSERT( timeIsNearDSTBoundary( 1572145200+99, 100 ) == true );
        ASSERT( timeIsNearDSTBoundary( 1554001200+99, 100 ) == true );
    }




    -------------------------------------

    2019-03-11 17:40:30.040 #4   001bc50c6001df12 <log> 2:46:15.911 [debug] [        dlms] {     dlms}: COSEM AA with LLS setup is accepted
    2019-03-11 17:40:30.040 #4   001bc50c6001df12 <log> 2:46:15.919 [debug] [        dlms] {     dlms}: extracted server max pdu size is 512
    2019-03-11 17:40:30.041 #4   001bc50c6001df12 <log> 2:46:15.928 [debug] [        dlms] {     dlms}: DLMS result is 0 bytes with code 0
    2019-03-11 17:40:30.083 #4   001bc50c6001df12 <log> 2:46:15.936 [debug] [meter/time_synch] {     dlms}: dlmsReceiveCb called with s_rxRes=0 from time synch (0 bytes 0x0)
    2019-03-11 17:40:30.084 #4   001bc50c6001df12 <log> 2:46:15.947 [debug] [meter/time_synch] {timeSynch}: localDeviation = -3600 meterDeviation=3600
    2019-03-11 17:40:30.084 #4   001bc50c6001df12 <log> 2:46:15.957 [debug] [meter/time_synch] {timeSynch}: localNow = 1553993602 meterNow = 1553983237 diff=10365 utc=1553990002
    2019-03-11 17:40:30.084 #4   001bc50c6001df12 <log> 2:46:15.969 [debug] [meter/time_synch] {timeSynch}: s_timeOfMeterSetRequest = 1553990002
    2019-03-11 17:40:30.125 #4   001bc50c6001df12 <log> 2:46:15.978 [debug] [meter/time_synch] {timeSynch}: timeBetweenGetAndSet = 1
    2019-03-11 17:40:30.126 #4   001bc50c6001df12 <log> 2:46:15.986 [debug] [meter/time_synch] {timeSynch}: Clock drift is -6764 seconds
    2019-03-11 17:40:30.126 #4   001bc50c6001df12 <log> 2:46:15.994 [ info] [meter/common] {timeSynch}: Setting time: 2019-03-31T00:53:22.000+01:00 0
    2019-03-11 17:40:30.126 #4   001bc50c6001df12 <log> 2:46:16.004 [debug] [        dlms] {timeSynch}: Set 0-0:1.0.0*255 ic 8 attr 2 valueLen 14 B
    2019-03-11 17:40:30.206 #4   001bc50c6001df12 <log> 2:46:16.063 [debug] [        hdlc] {timeSynch}: tx: (1/1): 7e
    2019-03-11 17:40:30.206 #4   001bc50c6001df12 <log> 2:46:16.069 [debug] [        hdlc] {timeSynch}: tx: (1/1): a028
    2019-03-11 17:40:30.206 #4   001bc50c6001df12 <log> 2:46:16.076 [debug] [        hdlc] {timeSynch}: tx: (1/1): 0201
    2019-03-11 17:40:30.206 #4   001bc50c6001df12 <log> 2:46:16.082 [debug] [        hdlc] {timeSynch}: tx: (1/1): 41
    2019-03-11 17:40:30.206 #4   001bc50c6001df12 <log> 2:46:16.089 [debug] [        hdlc] {timeSynch}: tx: (1/1): 32
    2019-03-11 17:40:30.206 #4   001bc50c6001df12 <log> 2:46:16.095 [debug] [        hdlc] {timeSynch}: tx: (1/1): 7963
    2019-03-11 17:40:30.253 #4   001bc50c6001df12 <log> 2:46:16.102 [debug] [        hdlc] {timeSynch}: tx: (1/1): e6e600
    2019-03-11 17:40:30.254 #4   001bc50c6001df12 <log> 2:46:16.109 [debug] [        hdlc] {timeSynch}: tx: (1/2): c1018100080000010000ff0200090c07
    2019-03-11 17:40:30.254 #4   001bc50c6001df12 <log> 2:46:16.118 [debug] [        hdlc] {timeSynch}: tx: (2/2): e3031f00003516ff003c00
    2019-03-11 17:40:30.254 #4   001bc50c6001df12 <log> 2:46:16.126 [debug] [        hdlc] {timeSynch}: tx: (1/1): a187
    2019-03-11 17:40:30.254 #4   001bc50c6001df12 <log> 2:46:16.133 [debug] [        hdlc] {timeSynch}: tx: (1/1): 7e
    2019-03-11 17:40:30.269 #4   001bc50c6001df12 <log> 2:46:16.150 [debug] [meter/time_synch] {timeSynch}: (out) s_clockState = 1
    2019-03-11 17:40:30.322 #4   001bc50c6001df12 <log> 2:46:16.178 [debug] [        hdlc] {     hdlc}: rx: (1/2): 7ea01141020152b21fe6e700c50181fa
    2019-03-11 17:40:30.322 #4   001bc50c6001df12 <log> 2:46:16.187 [debug] [        hdlc] {     hdlc}: rx: (2/2): e3977e
    2019-03-11 17:40:30.322 #4   001bc50c6001df12 <log> 2:46:16.194 [debug] [        hdlc] {     hdlc}: ** Waiting for HDLC event (60000ms) **
    2019-03-11 17:40:30.322 #4   001bc50c6001df12 <log> 2:46:16.203 [ WARN] [        dlms] {     dlms}: Data access result: other reason
    2019-03-11 17:40:30.322 #4   001bc50c6001df12 <log> 2:46:16.211 [ WARN] [        dlms] {     dlms}: processXDlmsApdu(4 B): failed
    2019-03-11 17:40:30.369 #4   001bc50c6001df12 <log> 2:46:16.219 [debug] [        dlms] {     dlms}: DLMS result is 0 bytes with code 12
    2019-03-11 17:40:30.369 #4   001bc50c6001df12 <log> 2:46:16.228 [debug] [meter/time_synch] {     dlms}: dlmsReceiveCb called with s_rxRes=12 from time synch (0 bytes 0x0)
    2019-03-11 17:40:30.369 #4   001bc50c6001df12 <log> 2:46:16.239 [ WARN] [meter/time_synch] {timeSynch}: Broken response: check failed
    2019-03-11 17:40:30.370 #4   001bc50c6001df12 <log> 2:46:16.247 [ WARN] [meter/time_synch] {timeSynch}: Time-sync step 1 failed (check failed)
    2019-03-11 17:40:30.450 #4   001bc50c6001df12 <log> 2:46:16.307 [debug] [        dlms] {timeSynch}: Disconnect HDLC link
    2019-03-11 17:40:30.450 #4   001bc50c6001df12 <log> 2:46:16.314 [debug] [        hdlc] {timeSynch}: tx: (1/1): 7e
    2019-03-11 17:40:30.450 #4   001bc50c6001df12 <log> 2:46:16.320 [debug] [        hdlc] {timeSynch}: tx: (1/1): a008


    <HDLC len="39" >
    <TargetAddress Value="128" />
    <SourceAddress Value="32" />
    <!--I frame.-->
    <FrameType Value="32" />
    <PDU>
    <SetRequest>
      <SetRequestNormal>
        <InvokeIdAndPriority Value="129" />
        <AttributeDescriptor>
          <!--CLOCK-->
          <ClassId Value="8" />
          <!--0.0.1.0.0.255-->
          <InstanceId Value="0000010000FF" />
          <AttributeId Value="2" />
        </AttributeDescriptor>
        <Value>
          <!--2019-03-31 00:53:22-->
          <OctetString Value="07E3031F00003516FF003C00" />
        </Value>
      </SetRequestNormal>
    </SetRequest>
    </PDU>

    </HDLC>
    <HDLC len="16" >
    <TargetAddress Value="32" />
    <SourceAddress Value="128" />
    <!--I frame.-->
    <FrameType Value="52" />
    <PDU>
    <SetResponse>
      <SetResponseNormal>
        <InvokeIdAndPriority Value="129" />
        <Result Value="OtherReason" />
      </SetResponseNormal>
    </SetResponse>
    </PDU>
    </HDLC>

    07E3 03 1F 00 00 35 16 FF 003C 00
    07e3 03 1f 00 00 35 16 ff 003c 00

    07e3 03 0b 01 0c 2f 16 ff 003c 00

    bbWriteU8(bb, t.tm_wday);
    time_t tm_wday
    should be 0xff;

    should be:
    Setting time: 2019-03-31T00:53:22.000+01:00 0
                  2019-03-31T00:53:22.000+01:00 0


    (gdb) p localNowTm
    $1 = {tm_sec = 22, tm_min = 53, tm_hour = 23, tm_mday = 30, tm_mon = 2, tm_year = 119, tm_wday = 6,
      tm_yday = 88, tm_isdst = 0, tm_gmtoff = 0, tm_zone = 0x0}

    (gdb) p t
    $2 = {tm_sec = 22, tm_min = 53, tm_hour = 0, tm_mday = 31, tm_mon = 2, tm_year = 119, tm_wday = 0,
      tm_yday = 89, tm_isdst = 0, tm_gmtoff = 0, tm_zone = 0x0}


    ------------------------------------------

    Profile read from Kaifa meter:

    [ cndfs/utils] {   device}: Found metadata #0 for /mq/002.mq: id=19 st=320 sz=11053 refs=0
    [   mqstorage] {   device}: Wrote m# 16284 of size 74 to file /mq/002.mq size 11053
    [meter/kaifaMa304] {   device}: Profile 1-0:99.1.0*255: Fetching row 1827
    [        hdlc] {   device}: tx: (1/1): 7e
    [        hdlc] {   device}: tx: (1/1): a02d
    [        hdlc] {   device}: tx: (1/1): 0201
    [        hdlc] {   device}: tx: (1/1): 41
    [        hdlc] {   device}: tx: (1/1): 76
    [        hdlc] {   device}: tx: (1/1): 0d41
    [        hdlc] {   device}: tx: (1/1): e6e600
    [        hdlc] {   device}: tx: (1/2): c0018100070100630100ff0201020204
    [        hdlc] {   device}: tx: (2/2): 06000007230600000723120000120000
    [        hdlc] {   device}: tx: (1/1): c04f
    [        hdlc] {   device}: tx: (1/1): 7e
    [        hdlc] {     hdlc}: rx: (1/4): 7ea039410201962ba5e6e700c4018100
    [        hdlc] {     hdlc}: rx: (2/4): 01010206090c07e3030c020e1e00ff00
    [        hdlc] {     hdlc}: rx: (3/4): 3c001100060000000006000000000600
    [        hdlc] {     hdlc}: rx: (4/4): 000000060000000000bb7e
    [meter/kaifaMa304] {     hdlc}: dlmsReceiveCb called with s_rxRes=0
    [meter/kaifaMa304] {     hdlc}: dlmsReceiveCb called with s_rxRes=0
    [        hdlc] {     hdlc}: ** Waiting for HDLC event (60000ms) **
    [meter/kaifaMa304] {   device}: Profile 1-0:99.1.0*255: Timestamp: 2019-03-12 14:30:00 at row 1827
    [ dataProfile] {   device}: New data profile sample from 7340157030078388
    [ cndfs/utils] {   device}: Found metadata #0 for /mq/002.mq: id=19 st=320 sz=11053 refs=0
    [ cndfs/utils] {   device}: Found metadata #0 for /mq/002.mq: id=19 st=320 sz=11053 refs=0
    [      fs/api] {   device}: fsOpen (/mq/002.mq, mode=3, fd=0)
    [       cndfs] {   device}: Committing 76 B at 11053 (filesize 11053)
    [  fs/service] {   device}: flashopProgram 323:0x0 40 B
    [  fs/service] {   device}: flashopProgram 323:0xbaf 76 B
    [ cndfs/utils] {   device}: Found metadata #0 for /mq/002.mq: id=19 st=320 sz=11129 refs=0
    [   mqstorage] {   device}: Wrote m# 16285 of size 74 to file /mq/002.mq size 11129


    --------------------------------------


    // EM-DTR pin(PA4) is Meter output signal. When it is high level voltage, then
    // Alarm Push is ready. Driver must request Alarm Mask from Meter on that.


    // EM-CTS pin(PB0) is Driver output signal. When it is low level voltage, then Meter can
    // trigger Alarm Push, otherwise Meter must postpone Alarm Push.



    gpioSetInput(desc->ctsPin);
    gpioSetOutput(desc->rtsPin, false);

    void uartSetRts(int port, bool value)
    bool uartGetCts(int port)

    UART0:
    rts = { gpioPortA, 5 }, cts = { gpioPortA, 4 }

    UART1:


    GPIO5 on dev board == alarm pin.

    ----------------------------------------

    sudo mount -t cifs -o guest,vers=1.0  //192.168.2.1/RouterUSBDisk /mnt/RouterUSBDisk


    ----------------------------

           hdlc] {     hdlc}: rx: (1/3): 7ea02e0101102757e6e7000f40000000
    [        hdlc] {     hdlc}: rx: (2/3): 090c07e3030d03111331ff8000000202
    [        hdlc] {     hdlc}: rx: (3/3): 09060000616200ff06050060c574c97e


    7ea02e0101102757e6e7000f40000000090c07e3030d03111331ff800000020209060000616200ff06050060c574c97e

    ubuntu@ubuntu-VirtualBox:/Data/Projects/DLMSPlayground$ ./HDLCToPDU.py 7ea02e0101102757e6e7000f40000000090c07e3030d03111331ff800000020209060000616200ff06050060c574c97e
    <HDLC>
      <controlField value="10" />
      <frameFormat value="a000,46" />
      <src value="1" />
      <dst value="1" />
      <LLC value="e6" />
      <HCS value="2757" />
      <PDU value="0f40000000090c07e3030d03111331ff800000020209060000616200ff06050060c5" />
      <FCS value="74c9" />
    </HDLC>

    Paste 0f40000000090c07e3030d03111331ff800000020209060000616200ff06050060c5 into a text file "t"

    ubuntu@ubuntu-VirtualBox:/Data/Projects/DLMSPlayground$ python ParseAXDR.py t
       <Data>
         <Int8 offset="1">40</Int8>
         <OctetString offset="6" datetime="17:19:49:255 13/3/2019">07e3030d03111331ff800000</OctetString>
         <Structure length="2" offset="20">
         <Field index="0" offset="21">
           <OctetString offset="22">0000616200ff</OctetString>
         </Field>
         <Field index="1" offset="29">
           <Uint32 offset="30">050060c5</Float32>
         </Field>
         </Structure>
       </Data>

    ---------------------------------------------

    Agent downsizing reduce size space

    https://confluence.cyco.io/display/ENG/C4+Agent+downsizing

    - remove log-ring
    - ctrlport allocation of buffers (2x1280)? still there?
    - WolfSSL uses around 14KB during handshake but settles down to ~2KB
    - Removal of callbacks and their storage.
    - RPL route storage.
    - MAC neighbour table.
    - Remove CoAP-BlockWise support.

    --------------------------------------------

    Wireshark encryption key:
    https://confluence.cyco.io/display/ENG/flash+and+config+agent+on+hw1+and+ipa1?preview=/44007800/44007814/Screenshot%20from%202017-06-21%2017-22-57.png


    Wireshark IEEE 802.15.4 preferences:
    - Decryption key: c4:2a:c6:f7:5e:bc:3a:ff:5e:f3:db:91:8e:3d:69:0c
    - TI CC24xx FCS format


    DTR=C8=s_interruptPin=GPIO5
    CTS=C9=s_alarmPushAllowPin=GPIO6



    ----------------------------------------------------------
    git log v140..v148.1

    P=PanMesh, O=OmniMesh

    - P/O Time sync with Kafa MA304 with DST & timezone.
    - P   Alarm polling for Kaifa on IPA3b.
    - P/O HDLC/DLMS race condition in time sync fix.
    - P/O No timesync in DST changeover window.
    - P   Meter-upgrade protection against multiple simultaneous jobs.
    - P/O Debugging improvements for filesystem issues.
    -   O HPL driver implementation.
    - P/O Prevent retries during time-sync to improve accuracy.
    -   O Meter-upgrade events for job success.
    - P   Node boot event on login shouldnt be repeated.
    -   O Activity calendar on L&T LT/CT meters.
    - P   Improve DLMS timeout mechanism.
    - P/O Enter filesystem-safe-mode around known reset points.
    - P/O Enable time-sync in pipe-mode.
    -   O L&T LT/CT meters load-curtailment fix.
    - P   HDLC inter-byte timing improvement for Kaifa.
    -   O Synthesize first-breath without discovery crash fix.
    -   O Meter-upgrade robustness improvements.
    -   O Improved error reporting for meter-upgrade.
    - P/O Fix for cron event around time-sync-adjustment causing extra sample reading.
    - P/O Allow DLMS-pipe source-port changes in-session for compatibility with Kalkitech.
    -   O L&T alarm fixes.
    -   O Atomic payment display update.
    -   O Add GET&SET current-limit configuration.
    - P/O DLMS-pipe mode timeout changes to support push-association.
    -   O Fix crash when DTLS times out during registration.
    -   O Factory-mode writing of ipv6 address into meter.
    -   O Load-curtailment on L&T 3ph meters.
    -   O Prevent double samplings of IS.
    -   O Fix week-profile parsing on L&T.
    - P/O Fix filedl metadata parsing.
    -   O Alarm-filter mask set with invalid bit.
    - P/O Add pointer checks.
    - P   Add support for IPA3b LEDs.
    - P/O Prevent filesystem corruption with hard-power-off.
    -   O Profile sampling improvements.
    -   O L&T rate-calendar fixes.
    -   O Change sampling from relative to absolute (cron) timing.
    - P/O Enforce single in-flight request handling.
    -   O Support for extended security on DLMS-side.
    -   O Meter-configuuration get/set improvements.





    - P/O Time sync with Kafa MA304 with DST & timezone. (CND-9058)
    - P   Alarm polling for Kaifa on IPA3b (CND-9331).
    - P/O HDLC/DLMS race condition in time sync fix (CND-9332).
    - P/O No timesync in DST changeover window (CND-9333).
    - P/O Prevent retries during time-sync to improve accuracy (CND-9285).
    - P   Node boot event on login shouldnt be repeated (HMP-15).
    - P/O Enable time-sync in pipe-mode (CND-9334).
    - P   HDLC inter-byte timing improvement for Kaifa (CND-9232).
    - P   Add support for IPA3b LEDs (CND-9335).
    - P/O Prevent filesystem corruption with hard-power-off (CND-9266).



    --------------------------------------

    MA304H4 pinout.

    EM-CTS = pin 7  ('allow event' signal from node)
    EM-DTR = pin 11 (event interrupt from meter)



    print('<HDLC>')
    print('  <controlField value=\"%x\" />'%(controlField))
    print('  <frameFormat value=\"%x,%d\" />'%(frameType,length))
    print('  <src value=\"%x\" />'%(srcAddress))
    print('  <dst value=\"%x\" />'%(dstAddress))
    print('  <LLC value=\"%x\" />'%(LLC))
    print('  <HCS value=\"%x\" />'%(HCS))
    print('  <PDU value=\"%s\" />'%(binascii.hexlify(pdu)))
    print('  <FCS value=\"%x\" />'%(FCS))
    print('</HDLC>')

    --------------------------------------


    7ea03e0361327b46e6e600cb3030003e93820bc1d201afdda618d580dac69f0f236e0239fc85b8126ffffaad3e2a9d9ced9a19d14efaddb5e82534738c244e7e

    7ea0376103520e3ae6e700cf293000016cea5846745b476df36cd700029f407edb6b66edb92ac6a256064aed0fa46404912b646e7be5cef27e

    7ea0190341323abde6e600c0018100080000010000ff020065d77e

    7ea01e410352054fe6e700c4018100090c07e3020105103728ff014a0009257e


    7ea02d020141760d41e6e600c0018100070100630100ff02010202040600000eff0600000eff120000120000ac6d7e

    7ea039410201962ba5e6e700c401810001010206090c07e30201050a0000ff800000110006000000000600000000060000000006000000000e597e


    #7ea0376103520e3ae6e700   cf29 3000016cea5846745b476df36cd700029f407edb6b66edb92ac6a256064aed0fa46404912b646e7be5 cef2 7e
    #7ea03e0361327b46e6e600   cb30 30003e93820bc1d201afdda618d580dac69f0f236e0239fc85b8126ffffaad3e2a9d9ced9a19d14efaddb5e82534738c 244e 7e
    #7ea0190341323abde6e600   c001 81 00 08 0000010000ff 02 00 65d7 7e
    #7ea02d020141760d41e6e600 c001 81 00 07 0100630100ff 02 01 02 0204 0600000eff 0600000eff 120000 120000 ac6d 7e


    7ea02c03617cd617e6e600c81e30003ce8410f840010464cee62c2b453ef4641373bb230e34717b84322faf6097e

    7ea8896103f6de4ce6e700cc81953000009439489b85f2144831dfe4bdb190fc99f5d00e7a07c79aa5145e2eef17188bf10c066f68a3c73757a905278e664e89df56df7ecce58b8fd5d4211ff3522f42501249af937b31b5929082eb3f5e1539cf369c63c42c8c32dfd0c21fa8bba2e6627212c081aaeaf380e9c048f5617e36afa300cdc4799bdf46397e



    7ea8896103f6de4c e6e7 00 cc81953000 009439489b85f2144831dfe4bdb190fc 99f5d00e7a07c79aa5145e2eef17188b f10c066f68a3c73757a905278e664e89 df56df7ecce58b8fd5d4211ff3522f42 501249af937b31b5929082eb3f5e1539 cf369c63c42c8c32dfd0c21fa8bba2e6 627212c081aaeaf380e9c048f5617e36 afa300cdc4799bdf46397e


    <HDLC len="136" >
    <TargetAddress Value="48" />
    <SourceAddress Value="1" />
    <!--I frame.-->
    <FrameType Value="F6" />
    <NextFrame Value="CC81953000009439489B85F2144831DFE4BDB190FC99F5D00E7A07C79AA5145E2EEF17188BF10C066F68A3C73757A905278E664E89DF56DF7ECCE58B8FD5D4211FF3522F42501249AF937B31B5929082EB3F5E1539CF369C63C42C8C32DFD0C21FA8BBA2E6627212C081AAEAF380E9C048F5617E36AFA300CDC4799BDF" />
    </HDLC>




    7ea0200361931b9f8180140502008006020080070400000001080400000001ce6a7e
    <HDLC len="31" >
    <TargetAddress Value="1" />
    <SourceAddress Value="48" />
    <!--SNRM frame.-->
    <FrameType Value="93" />
    <PDU>
    <Snrm>
      <MaxInfoTX Value="128" />
      <MaxInfoRX Value="128" />
      <WindowSizeTX Value="1" />
      <WindowSizeRX Value="1" />
    </Snrm>
    </PDU>
    </HDLC>

    7ea01e610373b57c818012050180060180070400000001080400000001533b7e7e
    <HDLC len="29" >
    <TargetAddress Value="48" />
    <SourceAddress Value="1" />
    <!--UA frame.-->
    <FrameType Value="73" />
    <PDU>
    <Ua>
      <MaxInfoTX Value="128" />
      <MaxInfoRX Value="128" />
      <WindowSizeTX Value="1" />
      <WindowSizeRX Value="1" />
    </Ua>
    </PDU>
    </HDLC>


    7ea00703215303c77e
    7e a007 03 2153 03c7 7e
    <HDLC len="9" >
    <TargetAddress Value="1" />
    <SourceAddress Value="16" />
    <!--S frame.-->
    <FrameType Value="53" />
    <DisconnectRequest>
    </DisconnectRequest>
    </HDLC>


    7ea01e210373c37a818012050180060180070400000001080400000001533b7e

    7ea00703215303c77e
    <HDLC len="9" >
    <TargetAddress Value="1" />
    <SourceAddress Value="16" />
    <!--S frame.-->
    <FrameType Value="53" />
    <DisconnectRequest>
    </DisconnectRequest>
    </HDLC>



    ---------------------------------------------------

    gateway crash: receipt of packet with unknown indexes prior to s_mutex being setup, causing hard-fault.

    Yen Hiew [2:39 PM]
    (gdb) where
    #0  0x0004a870 in vListInsert (pxList=pxList@entry=0x2000abcc <s_mutex+36>, pxNewListItem=0x2000c4bc <s_scheduleTask+24>) at build/3pp/freertos/FreeRTOS/Source/list.c:192
    #1  0x0004b3da in vTaskPlaceOnEventList (pxEventList=pxEventList@entry=0x2000abcc <s_mutex+36>, xTicksToWait=120000) at build/3pp/freertos/FreeRTOS/Source/tasks.c:2860
    #2  0x0004ad24 in xQueueGenericReceive (xQueue=xQueue@entry=0x2000aba8 <s_mutex>, pvBuffer=pvBuffer@entry=0x0, xTicksToWait=<optimized out>, xTicksToWait@entry=120000, xJustPeeking=xJustPeeking@entry=0)
       at build/3pp/freertos/FreeRTOS/Source/queue.c:1397
    #3  0x0003965a in OS_mutexTake (m=m@entry=0x2000aba8 <s_mutex>) at src/platform/osal/osal-freertos/osal_freertos.c:365
    #4  0x0002ca66 in mqStorageWrite (data=data@entry=0x20011260, size=17) at src/management/messagequeue/mqstorage.c:80
    #5  0x0002d4a6 in mqCreateAtTime (type=type@entry=10, fields=fields@entry=0x66058 <MqEvent_fields>, msg=msg@entry=0x2000ca28 <s_scheduleTaskStack+1320>, time=837, timeUncertain=timeUncertain@entry=true)
       at src/management/messagequeue/mq.c:44
    #6  0x0002d4f6 in mqCreate (type=type@entry=10, fields=0x66058 <MqEvent_fields>, msg=msg@entry=0x2000ca28 <s_scheduleTaskStack+1320>) at src/management/messagequeue/mq.c:64
    #7  0x00028e14 in eventStore (event=event@entry=0x2000ca48 <s_scheduleTaskStack+1352>) at src/management/events/events.c:83
    #8  0x0001cf7c in reportUnknownIndexes (id=<optimized out>, data=<optimized out>) at src/communication/mac/mac_security.c:475
    #9  0x00032a3c in scheduleTask (arg=<optimized out>) at src/services/schedule/schedule_service.c:193
    #10 0x0004b77c in pvTaskIncrementMutexHeldCount () at build/3pp/freertos/FreeRTOS/Source/tasks.c:4251
    Backtrace stopped: previous frame identical to this frame (corrupt stack?)
    (gdb) p event
    $7 = {code = EVENT_MAC_UNKNOWNKEY, arg = {{string = 0x0, integer = 0, ipv6 = 0x0}, {string = 0x0, integer = 0, ipv6 = 0x0}, {string = 0x0, integer = 0, ipv6 = 0x0}}}

    -------------------------------

    Kaifa_ma304 -> ipa3b-kaifa


    kaifa_ma304 v97.3 -> kaifa_ma304 v148.1


    These deprecated items have been removed:

    prod.terminal.id
    prod.terminal.type
    prod.iid.lowpan

    terminal.version.fw
    terminal.version.hw
    terminal.latitude
    terminal.longitude

    amr.reading.interval
    amr.powerswitch.admstate


    These have been added:

    rpl.routes.max
    rpl.dao.deferred_ack

    lowpan.channelplan

    modem.uplink.gracetime
    modem.username
    modem.password
    modem.authmethod
    modem.pin
    modem.uplink.max_failures_before_reset

    monitor.profile.modem.enabled
    monitor.profile.modem.sample.interval

    device.dlms.data_profiles
    device.time.set.enabled
    device.instant.default_period
    device.time.min_deviation
    device.time.max_deviation
    device.time.sync_timer
    device.dlms.pipe_enabled
    device.capabilities.dlmspipe.push
    device.dataprofile.polling_period
    device.dataprofile.polling_max_entries

    node.power_fail.gracetime
    node.node.production.rssisource.enabled
    node.production.rssisource.power
    node.production.rssisource.period
    node.production.meter_update_period

    capabilities.meter.reverse_ESW
    capabilities.meter.device_testing
    capabilities.meter.supports_Ipv6_setup
    capabilities.meter.supports_payment_management
    capabilities.dlmspipe.session_close_detection
    capabilities.dlmspipe.session.source_port_change_allowed
    capabilities.meter.time_update
    capabilities.meter.timezone_set
    capabilities.meter.dst_set


    -------------------------------------------------------------

    rpl.dis.trickle.doublings 4
    rpl.br.dio.k 6
    rpl.instance_id 0
    rpl.br.routelife 1200
    rpl.routes.max 10000
    rpl.dao.deferred_ack 1
    rpl.probe.doublings 6
    rpl.dis.trickle.min.ms 10000
    rpl.probe.interval.min.ms 1500
    rpl.br.dio.imin 12
    rpl.dag_switch.time 7200
    rpl.dag_switch.hysteresis 150
    rpl.br.ocp 1
    rpl.mrhof.pp_hysteresis 75
    rpl.br.dio.imax 8
    rpl.etx.weight_factor 64
    rpl.enabled 1
    rpl.netsize_penalty 64


    -----------------------------------------------------------------

    In general, maintain existing high-level interfaces to maintain working IPA1/HW1 boards functionality.
    Get interfaces in place and in-RAM functionality working quickly to enable early removal of CNDFS and SPI-FLASH drivers for RF testing.
    Due to impact of changes, attempt to test/integrate-early.


    - mqram (replacement for mqstorage). Quick win, immediate test for impact of resource-limited mq, frees up higher-level mods. Better model to base mq_internal_flash_storage on.

    - Create Internal FLASH BlockDevice abstraction with partition table (FLASHPartition). (pgmflash.h, devicekeys_efr32, bl_fwimage).
    - Make internal-FLASH driver usable concurrently with UART/Radio (Make executable region in SRAM for ISRs).
    - Make mq_internal_flash using mqram as a model but using FLASHPartition as a backing-store.
    - Make PersistentCircularBuffer as a simple circular buffer backed by FLASHPartition. CRC checked elements.
    - Create a new config_backend to use a PersistentCircularBuffer in internal FLASH (2x2KB elements (currently 560b each), config_backend_pb variant that uses circ-buf).

    - Move miscellaneous small files into config-storage (dlms_state/activity_report/dp_config/macsec_state).
    - Move key storage into config-storage (agent_cert.der agent_key.der ca_cert.der mac_1 mac_2)... or is separate partition a better bet? Atomic configuration is good reason to have all in config.

    - Create FileDistributionStorage on top of FLASHPartition (replacement for filedl_storage). Use a random starting point for a trivial wear-levelling mechanism.
    - Make Bootloader read from FileDistributionStorage (bl_fwimage_fs) during upgrade.
    - Make meter-upgrade read from FileDistributionStorage during image-transfer.
    - Filedl will have to decrypt blocks during write to FLASH rather than current decrypt-file operation.
    - NMS to encrypt blocks rather than file.

    - Utility operations from ctrlporthub modified to restrict the 'erase' command, FLASH test, etc.

    - Add server->agent message to set last-read-timestamp for each profile.
    - SMA to determine last-read-timestamp from database.
    - SMA to inform agent of last-read-timestamp for each profile during registration.
    - SMA to perform sanity checks of samples prior to insertion in database. Number-of-fields, type of fields, sensible time-range etc.

    - Cleanup. removal of cndfs, spi, flash-test, etc.

    - (Optional) Move metrics to an unreliable model to reduce load on the (now resource limited) mq.
    - (Optional) NMS to add metrics CoAP endpoint.

    - (optional) Make FLASHEncryptedPartition from FLASHPartition (take a view on this, everything is on-device now so no external-bus access, keys already stored in internal-flash, devicekeys/fs_crypto).

    - (optional) Add bad-block-management to FileDistributionStorage by making it a circular-buffer and CRC-checked elements.

    - (optional) On-demand feature to use 'push-back' mechanism (i.e. set last-read-timestamp for profile) and let the normal operation take its course.


    -----------------------------------------------------------------------------

    gateway RPL improvement.

    A gateways "attractiveness" to nodes should be reduced based on available cellular bandwidth.
    Similar to the netsize_penalty confgurable which reduces the attractiveness of a gateway based
    on the number of nodes, this would attempt to keep the node-load to a level that is actually
    servicable by the mesh/uplink combination.
    This was probably the intention behind the netsize_penalty in the first place but I'm not
    convinced it would work that well in some cases, such as when a gateway has good mesh conditions
    but bad cellular. This would in effect be a honey-pot situation where we're attracting all the
    nodes to local-minimum. It may very well be that a neighbouring gateway may be able to service
    the nodes better due to a better uplink despite a bad-mesh.


    -------------------------------------------------------------

    root@playground:~# certbot certonly --standalone -d tickle.email
    Saving debug log to /var/log/letsencrypt/letsencrypt.log
    Plugins selected: Authenticator standalone, Installer None
    Obtaining a new certificate
    Performing the following challenges:
    http-01 challenge for tickle.email
    Waiting for verification...
    Cleaning up challenges

    IMPORTANT NOTES:
     - Congratulations! Your certificate and chain have been saved at:
       /etc/letsencrypt/live/tickle.email/fullchain.pem
       Your key file has been saved at:
       /etc/letsencrypt/live/tickle.email/privkey.pem
       Your cert will expire on 2019-06-21. To obtain a new or tweaked
       version of this certificate in the future, simply run certbot
       again. To non-interactively renew *all* of your certificates, run
       "certbot renew"
     - If you like Certbot, please consider supporting our work by:

       Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate
       Donating to EFF:                    https://eff.org/donate-le

    root@playground:~#


    --------------------------------------------------------------------------

    update sequence number on server.

    select id from terminal where terminal_id="00-00-00-00-00-00-00-01";
    update message_queue_state set start_seq_no=last_received_seq_no+1, receive_bit_set="", entity_version=entity_version+1 where node_id=<from above>

    update message_queue_state set start_seq_no=1, last_received_seq_no=1, receive_bit_set="", entity_version=entity_version+1 where node_id=433;
    update message_queue_state set entity_version=entity_version+1 where node_id=433;

    update message_queue_state set start_seq_no=1, last_received_seq_no=1, receive_bit_set="", entity_version=entity_version+1 where node_id=4

    -----------------------------------

    MBus:

    - To read a meter, the master issues a REQ_UD2 command string to the slave. The slave replies in a RSP_UD data
    string, with the information previously selected by the master.

    The REQ_UD2 data string (Request for User Data type 2) is a data string of the type “short -frame”, sent by the
    master. It is composed of 5 bytes, by which the master asks the slave to send the previously selected information.
    The structure of the data string is:
    M®S: $10 $5B ADR CHK $16 where ADR = Primary address, CHK = ADR + $5B.
    The ADR byte depend on address mode:
    · Primary address: ADR specifies the bus number (between 1 and 250).
    · Secondary address: ADR = $FD. The meter that is addressed must have been selected previously by a
    SND_UD communication in which its secondary address has been specified.
    · Point-to-point address: ADR=$FE. (See the limitations on usage given in section 5).
    · Broadcast addressing within REQ_UD2 message is a nonsense.
    For primary and point -to-point addressing, sending first a SND_UD is unnecessary. If no parameter has been explicitly
    selected in a SND_UD communication, the slave will send at minimum the contents of its energy counter.
    The receipt of a REQ_UD2 provokes a response from the slave in the form of a data string of type RSP_UD in which
    the requested parameters are coded - see the following section.

    Example:
    Grouped reading of temperatures, power, flow rat e, date and hours in service for meter no. 03543109.
    M>S: $68 $1D $1D $68 $53 $FD $51 $09 $31 $54 $03 $B4 $05 $FF $FF $FF $FF $FF $FF
    $08 $2E $08 $3D $08 $5B $08 $5F $08 $63 $08 $22 $08 $6D $34 $16 (SND_UD)
    S>M: $E5 (ACK)
    M>S: $10 $5B $FD $58 $16 (REQ_UD2)
    S>M: $68 $38 $38 $68 $08 $C8 $72 $09 $31 $54 $03 $B4 $05 $B0 $04 $C9 $10 $FF $FF $03 $22 $9A $00
    $00 $05 $2E $A0 $C8 $51 $46 $05 $3E $B4 $E3 $D7 $42 $05 $5B $90 $D3 $07 $43 $05 $5F $0E $AA $E7 $41
    $05 $63 $9C $BC $D5 $42 $04 $6D $10 $09 $05 $C5 $77 $16

    The above RSP_UD data string, which contains neither DIFEs nor VIFEs, decodes as follows:
    · Bus number: 200, manufacturer's number: 03543109.
    · It concerns a Calec -MB, option Tariff (VER = 10110000b)
    · There is no alarm state, but the lock -bit is not set (STAT = 00010000b)
    · Hours in service (coded in binary in 3 bytes. DIF/VIF = $03/$22) = 154 ($00009A)
    · Power (in kW, coded in floating point. DIF/VIF=$05/$2E) = 13426.2
    · Flow rate (in m³/h, coded in floating point) = 107.945
    · Warm side temperature (in °C, bytes $4307D390, coded in floating point) = 135.82
    · Cold side temperature (°C) = 28.95
    · Temperature difference (K) = 106.87
    · Date/time (coded with F format): 5 May 96, 09h 16 mn.


    ----------------------------------------------

    Laptop setup.

    Install:
    - Get latest coap_tools from Jenkins (https://jenkins.cyco.io/view/Terminal/job/Omnimesh_Terminal_Release/lastSuccessfulBuild/artifact/terminal/build/tools/release)
    - Use a USB stick to copy c4-agent-tools to target machine home directory.
    - Open terminal.
    - "cd"
    - "tar jxvf ~/c4-agent-tools.tar.bz2"
    - "sudo apt install python3-pip libasan2"
    - "pip3 install serial"


    Running:
    In one terminal, run one instance of "ctrlporthub" using USB-serial thats on "/dev/ttyUSB0":
    - "cd c4-agent-tools"
    - "./ctrlporthub -serial /dev/ttyUSB0"


    In another terminal:
    - "cd c4-agent-tools"
    - "./coap_request --config-list"
    - Then use whatever coap_request you like ("./coap_request --help")

    Examples:
    - "./coap_request.py --radio-test-id 7 --radio-send --radio-test-iid 02-1b-c5-0c-60-00-bc-2e --radio-test-power 54"
    - "./coap_request.py --ctrlporthub localhost:4000 --config prod.lowpan.eui64 00-1B-C5-0C-60-00-01-84"


    ---------------------------

    08f2af04122108f2aee5e4055a190a0708828010108d140a060883801010000a06088080241000123908f2aee5e4055a190a0708828010108d140a060883801010000a0608808024100008f2aee5e4055a310a0608848010100b0a07088580101099124008f2aee5e4055a190a0708828010108d140a060883801010000a0608808024100008f2aee5e4055a310a0608848010100b0a07088580101099040a0608868010123908f2aee5e4055a190a0708828010108d140a060883801010000a0608808024100008f2aee5e4055a310a0608848010100b0a07088580101099123908f2aee5e4055a190a0708828010108d140a060883801010000a0608808024100008f2aee5e4055a310a0608848010100b0a07088580101099124008f2aee5e4055a190a0708828010108d140a060883801010000a0608808024100008f2aee5e4055a310a0608848010100b0a07088580101099040a0608868010123908f2aee5e4055a190a0708828010108d140a060883801010000a0608808024100008f2aee5e4055a310a0608848010100b0a07088580101099122108f2aee5e4055a190a0708828010108d140a060883801010000a06088080241000123908f2aee5e4055a190a0708828010108d140a060883801010000a0608808024100008f2aee5e4055a310a0608848010100b0a07088580101099123908f2aee5e4055a190a0708828010108d140a060883801010000a0608808024100008f2aee5e4055a310a0608848010100b0a07088580101099124008f2aee5e4055a190a0708828010108d140a060883801010000a0608808024100008f2aee5e4055a310a0608848010100b0a07088580101099040a0608868010123908f2aee5e4055a190a0708828010108d140a060883801010000a0608808024100008f2aee5e4055a310a0608848010100b0a07088580101099124008f2aee5e4055a190a0708828010108d140a060883801010000a0608808024100008f2aee5e4055a310a0608848010100b0a07088580101099040a0608868010123908f2aee5e4055a190a0708828010108d140a060883801010000a0608808024100008f2aee5e4055a310a0608848010100b0a07088580101099122108f2aee5e4055a190a0708828010108d140a060883801010000a06088080241000123908f2aee5e4055a190a0708828010108d140a060883801010000a0608808024100008f2aee5e4055a310a0608848010100b0a07088580101099123908f2aee5e4055a190a0708828010108d140a060883801010000a0608808024100008f2aee5e4055a310a0608848010100b0a070885801010991801


    ----------------------------------------------------------------


    EN13757 m-bus.com
    http://www.m-bus.com/
    EN 13757-2 physical and link layer,
    EN 13757-3 application layer for the remote reading of gas or electricity meters
    EN1434-3 Data structures, data types, actions
    IEC 870 transmission parameters, telegram formats, addressing, data integrity

    libmbus: http://www.rscada.se/libmbus/ https://github.com/rscada/libmbus/tree/master/mbus
    License: free to use, but must give attribution.
    BSD 3-Clause License

    https://github.com/rscada/libmbus/blob/master/mbus/mbus-protocol.c

    http://www.m-bus.com/files/w4b21021.pdf

    HMP/MBus work:

    - targetting a PanMesh server to be compatible with Kaifa driver? Omni will be significantly different.
    - Multiple devices (4) per agent.
    - New protocol (MBus) to obtain data from meters.
    - Scan for attached meters on startup.
    - Server side must handle multiple devices per node. NMS will see one node, SMA will see many.
    - sample data format in HMP format/special? dataProfileSampleCreate() sampleNextDataProfile() readProfileNEntries()
    - Sending at saveDataProfileSample();
    - Device abstraction is not properly abstracted, most methods dont take a deviceId.
    - Discovery becomes a scan of the bus.
    - Kaifa meter doesn't support profiles hash.
    - MqDataProfileSample has deviceId field.
    - Sample format is AXDR format structure from meter.
    - deviceId in mq-message is taken from deviceId field in DataProfileSample.
    - coapSendNodeRegistration()
    - NodeRegistrationMessage: deviceHash could be hash over all detected meters, deviceAlarmHash tho is more device-specific as is globalProfileHash.
    therefore use individual NodeRegistrationMessage messages, rather than one for all, should be renamed DeviceRegistrationMessage.
    - Configuration needs to be split into node-specific and meter-specific. getParam-like calls such as getDeviceParam which take a deviceId.
    - Configuration-UI work to split into node-specific and device-specific. Is this reflected in schema also?
    - MaxDemand calculation.
    - Single profile retrieval.
    - Antenna switch control via configuration.
    - On-demand request for data should be functional.
    - licensing/activity is currently per-node, not per-meter?
    - Rreset of billing, instantaneous, simple and enhanced billing possible.
    - Read of serial number, identification number, version, fabrication number and manufacturer for name-plate.
    - MBus types will generally map to AXDR types, BCD will need to be converted.
    - Generally, use libmbus to read mbus format, translate into a DLMS/AXDR format profile structure using axdr fns, transfer up in normal dataprofile manner.
    - Configuration: baud-rate,
    - selective access can be done? maybe. may have to read all and filter internally.
    - OBIS === DIF?
    - Special parsing of BCD values (special codes for rollover, etc) that we need to parse into AXDR.
    - Polling of alarms is time-critical.
    - Translation of alarms into node-alarms.
    - Time sync? DST, time zones?
    - Need to allocate appropriate OBIS codes for MBus fields. There is some standardisation through EN1434 (I think).
    - security? password field exists in doc.
    - selective access performed by "storage number" in cyclic storage (index into circular buffer).
    - "storage interval" == "capture period"
    - Process of reading profile is to select DIFEs (one of which should be time) to read at a given storage-number (this is the unifying point).
    - Need to define which parameters/DIFEs they want in a profile.
    - reading of capture-period from meter.






    PanMesh:
    https://confluence.cyco.io/display/ENG/%5BDesignSpec%5D+C4+-+Device+management+add-on

    Device discovery
    The following outlines the device discovery procedure for the Connode server

    A node sends the devices hash message to the server in about 3 minutes after login.
    The server reads out the device hash property from the devices message.
    If the device hash sent from the node is different from the hash stored by the server for the node.
    The server sends a device list request to the node.
    The node responds with a list of attached devices to the server together with the hash for those devices.
    The server does the following for each device already stored in the database and associated with the node
    If a device with the same device id is not found in the device list returned by the node
    The device is disassociated from the node.
    The server does the following for each device returned in the list
    If a device with the same device id does not exist in the server database.
    The server creates the device in the database and associates it with the node
    Otherwise
    If any of the properties received from the node does not match device properties in the database
    The server updates the device in the database with the properties received from the node.
    If the device is not associated with the node
    The server associates the device with the node.
    The server stores the device hash reported by the node in the database.

    ---------------------------------------

    SMIP RLL Key estimation

    - Table storage via CH API
    - Table extraction from configuration
    - Message from NMS to Agent to set the preferred key index?
    - Send of KeyTableHash to server on login.

    -   Agent needs to read a table of keys and a preferred key index from the CH instead of a single key. (Agent 3d when CH has support).
    -   The process of distribution of the key-table and the application pf a key-table shall be separate operations.
    Key-tables shall be identified by a hash (of their contents) in order to avoid application of inappropriate keys.
    Use of configuration to distribute key-table & preferred key. Key-table hash separate from configuration-hash (3d).
    -   Agent needs a timed activation of key-table to allow coordination of change-over (?).
    -   Agent needs to send event to C4 server on key-change operations (1d).
    -   Agent-side library integration API documentation (2d).
    -   CH code will need updates to support key-table, and we need new code to integrate with (2d integration time for new code drop from Tosh).







    Name    File_name   Comment
    CA certificate  ca_demo-poc.crt.crt Import to Server DTLS domain/"Issuer Certificate" and Node DTLS domain/Trusted certificates
    CA private key  ca_demo-poc.crt.key Optional, Import to Node DTLS domain/CA private key, only csr renew require this
    Server certificate  omnitube-demo-poc.crt.pem   Import to Server DTLS domain/Certificate
    Server private key  omnitube-demo-poc.key.pem   Import to Server DTLS domain/Private key
    RSA private key rsa.priv    Import to Server Security Pair/Private key
    RSA public key  rsa.pub Import to Server Security Pair/Public key
    RSA private key password    rsa_pass.txt    Copy the content to Server Security Pair/Password


    -----------------------------------------------

    pgmflashWrite( MemBlock* )
    pgmflashRead( MemBlock* )


    mqramstorage->blockdevice->flashblockdevice
    mqramstorage->blockdevice->flashpartitionblockdevice->flashblockdevice


    --------------------------------------------------------

    60000   bootloader
    480000  running fw
    480000  filedl
        2   activity_report
      438   configuration-1.pb
      133   device_alarms_profiles
        4   dlms_state
      197   dp_config
      786   dtls_state      (-CONFIG_DTLS_PERSISTENT_CACHE will remove this)
        4   macsec_state
      142   metering_profiles

      390   agent_cert.der
      121   agent_key.der
      554   ca_cert.der
       26   mac_1


    CONFIG_DTLS_PERSISTENT_CACHE will remove dtls_state


    ---------------------------------------------------

    ls build/ipa3-lnt-dlms-insecure/release/*.image

    478344 agent-ipa3-lnt-dlms-insecure-v143-22-gd5957f567.image

    454088 Apr  1 18:14 agent.bin*
     42440 Apr  1 18:14 bootloader.bin*


    LTO saves 24KB firmaware & 11KB bootloader.

    --- a/config/arch/arm-none-eabi-cortex_m3.mk
    +++ b/config/arch/arm-none-eabi-cortex_m3.mk
    @@ -14,6 +14,7 @@ execsuffix := .elf
     ARCH_CFLAGS += -mcpu=cortex-m3 -mthumb
     ARCH_CFLAGS += -mno-unaligned-access
     ARCH_CFLAGS += -Os
    +ARCH_CFLAGS += -flto  -fverbose-asm

     # Use a non-semihosted C library
     ARCH_LDFLAGS += --specs=nosys.specs
    @@ -21,6 +22,7 @@ ARCH_LDFLAGS += --specs=nosys.specs
     ARCH_LDFLAGS += --specs=nano.specs

     ARCH_LDFLAGS += -mcpu=cortex-m3 -mthumb -Lsrc/hw/cortex-m3
    +ARCH_LDFLAGS += -flto  -fverbose-asm -save-temps

     # Add the Definition for FreeRTOS ARM Cortex M3
     ARCH_CPPFLAGS += -DGCC_ARMCM3
    diff --git a/src/hw/cortex-m3/startup.c b/src/hw/cortex-m3/startup.c
    index d1ae06a1f..7d0076792 100644
    --- a/src/hw/cortex-m3/startup.c
    +++ b/src/hw/cortex-m3/startup.c
    @@ -69,7 +69,7 @@ static uint8_t stack[__STACK_SIZE] __attribute__ ((aligned(8), used, section(".s
     /*----------------------------------------------------------------------------
       Reset Handler called on controller reset
      *----------------------------------------------------------------------------*/
    -void Reset_Handler(void)
    +void __attribute__((__used__)) Reset_Handler(void)
     {
       // First, copy data from read only memory to RAM.
       uint32_t* pDest = &__data_start__;


    -----------------------------------

    Removing DTLS session cache:

    CONFIG_DTLS_PERSISTENT_CACHE=n

    452808 Apr  1 18:34 agent.bin*


    --------------------------------

    No change.
    CONFIG_STRIP_BINARIES=y


    452808 Apr  1 18:42 agent.bin*
     42440 Apr  1 18:42 bootloader.bin*



    ---------------------------

    (Good change)

    CONFIG_FS_SECURE=n
    CONFIG_REMOTE_MEMORY=n

     449464 Apr  1 18:45 agent.bin*
      34516 Apr  1 18:45 bootloader.bin*


    -------------------------------------

    Secure and no flash-test/erase in prodmode-common.c

    446900 Apr  1 19:23 agent.bin*
     34516 Apr  1 19:23 bootloader.bin*

    ------------------------------------------------

    -fwhole-program (No change).
    -ffunction-sections, --fdata-sections and --gc-sections no change.

    446900 Apr  1 19:27 agent.bin*
     34516 Apr  1 19:27 bootloader.bin*

    -----------------------------------------

    CONFIG_BUILD_AGENTLIB=n

    445612 Apr  1 20:53 agent.bin*
     34516 Apr  1 20:53 bootloader.bin*


    ----------------------------------------------

     ARCH_CFLAGS += -flto  -fverbose-asm -fwhole-program  -fno-exceptions  -Xlinker -Map=output.map
     18
     19 # Use a non-semihosted C library
     20 ARCH_LDFLAGS += --specs=nosys.specs
     21 # Use Newlib-nano, which leaves out support for float printf and other features
     22 ARCH_LDFLAGS += --specs=nano.specs
     23
     24 ARCH_LDFLAGS += -mcpu=cortex-m3 -mthumb -Lsrc/hw/cortex-m3
     25 ARCH_LDFLAGS += -flto  -fverbose-asm -save-temps -fwhole-program -Xlinker -Map=output.map
     26

    -------------------------------------------------

    Things to remove:

    - cndfs
    - CONFIG_FLASH_SPI
    - CONFIG_FLASH_SPI25
    - CONFIG_STORAGE_FLASH
    - CONFIG_FS_CNDFS
    - CONFIG_FS_SECURE
    - CONFIG_POWERSWITCH
    - PanMesh
    - debug text (68KB)


    --------------------------------------------

    message queue in flash:
    dd if=/dev/zero of=pgmFlash.bin bs=1024 count=1024
    od -j 983040 -A x -v -t x1 pgmFlash.bin
    od -j 0x000f2000 -A x -v -t x1 pgmFlash.bin

    ------------------------------------------------------------

    Configuration:
    - from server, write-only from server.

    LocalState:
    - from node, writeable from node, not readable from server.
    - keys.
    - DTLS state.
    - profile state
    - frame counters



    -------------------------------------------------------------------

    config backend flash
    - takes config-struct and writes it to one of 3 slots.
    - slots are 4KB in size.


        2 activity_report
      438 configuration-1.pb
      438 configuration-2.pb
      133 device_alarms_profiles
        4 dlms_state
      197 dp_config
      786 dtls_state
     4096 keys/
        4 macsec_state
      142 metering_profiles
        0 metering_series

    typical config size (all-in) of ~4KB. Allow 8KB x2 = 16KB.


    ------------------------------------------------------------------

    NIC7 Issues:
    - MAX Size of firmware us 448KB
    - Does bootloader erase top half of FLASH??? yes... up to 896KB!!!!
    - There is another FLASH at 0x0FE10000 that is normally used for a
    bootloader that we could use to install a new bootloader.
    - May want to increase size of internal mq for wear-levelling reasons (spread over more blocks).
    - What happens when server wants to read earlier than we have history for? ignore?
    - Approach of saving everything to config worked until config-size was > 1024 then CoAP-BlockWise bugs
    hit when transferred to server (server exception). Avoided by not sending "hidden" config.
    - Unit test breakage. Will be fixed when appropriate.
    - Need a small 1st-stage bootloader followed by full-fat 2nd stage to do upgrade. 2nd stage would be replacable.
    - Transition process, copy external to internal. Need fs available.
    - Due to 8bit->16bit transition for nanopb, we can't downgrade firmware now. Its a one-way transition.



    ----------------------------------------------

    b3040a2120002a0032003a1730302d30302d30302d30302d30302d30302d30302d303142001a320801180c2008280630b009400148904e500470dc0b7806800100880140a0014ba8019601b001a038b801904ec00101c80140222708141020180330e00338a6ffffffffffffffff01400150a2ffffffffffffffff0168007020780032131207666430303a3a3118b42c6801701e78d8043a381a0b34672e74656c65322e736522093132372e302e302e3128f23e320e7768617473666f7264696e6e657238840742004a0052005a0060054a0408281014520e180320082814300a38e80740fd015a0b1808207f30901c38784004621a10011880a305200028901c300038901c400048901c500058901ca2012c0a1c4345542d31434553542c4d332e352e302f322c4d31302e352e302f33101e18880e20901c28c0d102301eaa0106080a103c1803b201020801c201ae0108a03810001a083643364537343331222033303330333033303330333033303330333033313330333333353338333233302a2033313332333333343335333633373338333933303331333233333334333533363220333133323333333433353336333733383339333033313332333333343335333638014001480f500a58b401600168007000780f8001328a01203330333033303330333033303330333033303330333033303330333033303330ca011310001800200a288cfcffffffffffffff013005d20118100018012001280030007801800100880101900100980100da01021001c5aff2ffffffffffffffff



    ---------------------------------------


    Why is the framecounter different for each requester? it should not depend on who is requesting it, just what security level the request is for.
    LLS shouldn't have a framecounter anyway, what two security levels are we switching between that need different framecounters?

    -----------------------------------------------------

    ./tools/c4-tools/coap_request.py --ctrlporthub localhost:4002 --load-key client-key /Data/Temp/KeysAndCertsOmnireltest/00-1B-C5-0C-60-00-01-84/node.key.der
    ./tools/c4-tools/coap_request.py --ctrlporthub localhost:4002 --load-key client-cert /Data/Temp/KeysAndCertsOmnireltest/00-1B-C5-0C-60-00-01-84/node.crt.der
    ./tools/c4-tools/coap_request.py --ctrlporthub localhost:4002 --load-key root-cert /Data/Temp/KeysAndCertsOmnireltest/00-1B-C5-0C-60-00-01-84/ca.crt.der
    ./tools/c4-tools/coap_request.py --ctrlporthub localhost:4002 --rll-key /Data/Temp/KeysAndCertsOmnireltest/00-1B-C5-0C-60-00-01-84/mac_keys.txt
    ./tools/c4-tools/coap_request.py --ctrlporthub localhost:4002 --config prod.lowpan.eui64 00-1B-C5-0C-60-00-01-84

    ----------------------------------------

    pip install jupyter
    pip install jupyter-c-kernel
    install_c_kernel --user
    apt install pandoc xelatex

    jupyter notebook

    -------------------------------------------------

    Same rules apply for tx as for rx.
    getEntryByDst():
    1) keyIndex for encryption is always s_preferredKeyIndex.
    2) If dst is not broadcast and dst has specific key in table, that is used instead.
    3) If dst is broadcast, s_preferredKeyIndex is used.
    4) If keyIndex is restricted and dst is on mesh, packet is not forwarded.

    5) On receipt of a packet, if frameSecurityKeyMode == 0 (i.e. disabled) then frameSecurityKeyIndex is taken as zero.
    6) On transmit, if the keyIndex is not zero, we set keyIndex mode.
    7) On transmit, if the keyIndex *is* zero, we set implicit mode.
    8) On receipt, if implicit-key mode is set (i.e. transmitted on key-zero) then key-zero is always used.

    9) (8) & (7) imply that key zero always needs to be the same on all nodes as this will not allow the table to be used on receipt.


    - RPL uses broadcasts (using preferred key) if that preferred key is *zero* then implicit-key-mode will be used. This would allow
    a virgin-node with a matching key-zero to join the mesh.
    - RPL uses broadcasts (using preferred key) if that preferred key is *non-zero* then key-index-mode will be used. This would not
    allow a virgin-node with a matching key-zero to join the mesh.
    - If a node without a key-table attempts to join a mesh with a key-table then it will be using key-zero and hence implicit-key
    mode. This means that the receiving node on the mesh will interpret its packets using *its* key-zero which *must* match.
    - If the above is a problem we could potentially initialise the nodes with a key-table with a non-zero-index preferred  key
    that matches the others. This would cause indexed-key-mode to be used and allows the flexibility of putting the preferred key
    anywhere in the table. Effectively we stop using implicit-key-mode, packets will always be encrypted and in indexed-key-mode and
    can never use key-zero.

    ---------------------------------------------------------

    test server
    ssh ubuntu@hw-test-server
    pw ubuntu




    now: 2019-04-12T18:00:34.000+05:30 0
    Profile 1-0:99.1.0*255: 648 entries in the profile buffer
    Selective read: by range
    Selective read: by range - read range for sampling
    Last sample was very long ago, to read all filled entries: 648
    Read limited (20) entries each time.
    Get 1-0:99.1.0*255 ic 7 attr 2 by range:
    Profile Block load: From time: 2019-04-06 00:00:34
    Profile Block load: To time: 2019-04-06 05:00:33


    648 * 900 = 583200 = 162 hourso

    now = 1555092034
    1555092034 - 583200


    Ok, if you look in the CSV file you supplied, the data is actually there in the meter.
    The first sample in the spreadsheet is:
     08/04/2019 12:15:__ AM
    and the time that is searched for is:
    From time: 2019-04-08 00:01:32
    To time: 2019-04-08 05:01:31

    (Note 12:15am == 00:15)

    The range for our search *should* give us the data starting at that point in time (i.e. the earliest sample).
    What seems to be happening is that the meter is noting that our start-time is prior to its earliest sample and rejecting the selective-access-request.
    This is not correct behaviour, our search *starts* outside its range and *finishes* inside the range.
    The range therefore contains valid data and the meter should return as such.
    The meter is instead responding with a "ReadWriteDenied" error which is not correct.

    Because the search ended with an error (ReadWriteDenied), we do not move forward with the search and we're therefore stuck repeating this.

    The root cause of the problem is the bad result from the meter for a valid search-range.

    We can handle it by calculating our "from" timestamp more accurately (i.e. exactly on the earliest timestamp) or by ignoring the earliest element.
    Ignoring the ealiest element is not advisable obviously as we would just shift the problem.
    Or, we can ignore the error and continue, but this is unadvisable.
    Or we can calculate the earliest sample time by doing a reverse search (if sort_object works on this meter).




    --------------------------------------------

    Ok, this sequence shows the node attempting to catch up on the readings by determining
    how many entries are in the meter and attempting to start its retrieval by starting at
    the earliest and working forward.
    the search range does in fact contain samples with data, so we expect to get a non-empty
    set back from the meter.
    What seems to be happening is that in order to ensure we obtain the earliest sample, we
    start the search at a position prior to that element.
    This is still a valid search, but the result from the meter is a "ReadWriteDenied" error
    rather than a set of samples.

    As a general point, if a search for a range of data lies outside of the data contained
    in the meter, the result should be an empty set, not an error.

    As a result of this error, we abort the process and do not move forward (this is correct
    behaviour as we need to retry on error).
    This results in a continuing issue where we retry the process from the same point as we
    consider this a failure rather than a 'no data'.


    Get 1-0:99.1.0*255 ic 7 attr 7 normal access

    <GetRequest>
      <GetRequestNormal>
        <!--Priority: HIGH ServiceClass: UN_CONFIRMED invokeID: 1-->
        <InvokeIdAndPriority Value="81" />
        <AttributeDescriptor>
          <!--PROFILE_GENERIC-->
          <ClassId Value="0007" />
          <!--1.0.99.1.0.255-->
          <InstanceId Value="0100630100FF" />
          <AttributeId Value="07" />
        </AttributeDescriptor>
      </GetRequestNormal>
    </GetRequest>

    before encryption:
    c0018100070100630100ff0700

    output:
    02c
    03
    41
    32
    9f9f
    e6e600
    c81e3000002c1ec9204257f6e3a7f47c
    f85c295f0afc8941c7ca9f2cf59b46dc
    6201
    7e

    response:
    7ea0284103526d48e6e700cc1a300000
    3b8bc4e9fcc1b8b119c3bba15bb80f95
    7c8dd38db9daf2bd8d7e

    Decrypted:
    c4018100060000026c

    <GetResponse>
      <GetResponseNormal>
        <!--Priority: HIGH ServiceClass: UN_CONFIRMED invokeID: 1-->
        <InvokeIdAndPriority Value="81" />
        <Result>
          <Data>
            <UInt32 Value="0000026C" />
          </Data>
        </Result>
      </GetResponseNormal>
    </GetResponse>



    Last sample was very long ago, to read all filled entries: 620
    Read limited (20) entries each time.
    Get 1-0:99.1.0*255 ic 7 attr 2 by range:
    Profile Block load: From time: 2019-04-06 00:00:34
    Profile Block load: To time: 2019-04-06 05:00:33


    <GetRequest>
      <GetRequestNormal>
        <!--Priority: HIGH ServiceClass: UN_CONFIRMED invokeID: 1-->
        <InvokeIdAndPriority Value="81" />
        <AttributeDescriptor>
          <!--PROFILE_GENERIC-->
          <ClassId Value="0007" />
          <!--1.0.99.1.0.255-->
          <InstanceId Value="0100630100FF" />
          <AttributeId Value="02" />
        </AttributeDescriptor>
        <AccessSelection>
          <AccessSelector Value="01" />
          <AccessParameters>
            <Structure Qty="04" >
              <Structure Qty="04" >
                <UInt16 Value="0008" />
                <!--0.0.1.0.0.255-->
                <OctetString Value="0000010000FF" />
                <Int8 Value="02" />
                <UInt16 Value="0000" />
              </Structure>
              <!--2019-04-06 00:00:34-->
              <OctetString Value="07E3040606000022FF014A00" />
              <!--2019-04-06 05:00:33-->
              <OctetString Value="07E3040606050021FF014A00" />
              <Array Qty="00" >
              </Array>
            </Structure>
          </AccessParameters>
        </AccessSelection>
      </GetRequestNormal>
    </GetRequest>

    before encryption:
    c0018100070100630100ff0201010204
    020412000809060000010000ff0f0212
    0000090c07e3040606000022ff014a00
    090c07e3040606050021ff014a000100

    after encryption:
    7e
    a05f
    03
    41
    54
    27e6
    e6e600
    c8513000002c1fef51b333bb4f59df03
    001c1aa3ae8ff6f18d70453616489a98
    f2e244dbb71dfc510b0c033232cc5df9
    1a953506483685aab1bd8097fa89f99e
    81ecb77a2e7af5dd37d92de2a6467d37
    c1fe47
    683f
    7e

    response:
    7ea0244103746d9be6e700cc16300000
    3b8c62396d9eab3b6d92454e5e0a9b5e
    cc298543667e

    After decryption:
    c401810103

    <GetResponse>
      <GetResponseNormal>
        <!--Priority: HIGH ServiceClass: UN_CONFIRMED invokeID: 1-->
        <InvokeIdAndPriority Value="81" />
        <Result>
          <DataAccessError Value="ReadWriteDenied" />
        </Result>
      </GetResponseNormal>
    </GetResponse>


    ---------------------------------------------------------------------
    node setup
    Omnireltest2 setup:

    ./tools/c4-tools/coap_request.py --ctrlporthub :4002  --config prod.lowpan.eui64  00-1B-C5-0C-60-04-FD-D6
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002  --config prod.prodtime 1
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config lowpan.channel 7
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config lowpan.channelplan 2
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --rll-key /Data/Temp/mpwz_key.txt
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002  --config server.ip fd00::1
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --load-key client-key /Data/Temp/00-1B-C5-0C-60-04-FD-D6/node.key.der
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --load-key client-cert /Data/Temp/00-1B-C5-0C-60-04-FD-D6/node.crt.der
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --load-key root-cert /Data/Temp/00-1B-C5-0C-60-04-FD-D6/ca.crt.der
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config rpl.instance_id 0

    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config device.dlms.lls_password lnt1
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config device.dlms.authentication_key 31323334353637383930313233343536
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config device.dlms.encryption_key 31323334353637383930313233343536
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config device.dlms.hls_key 30303030303030303031303335383230

    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config server.mq.push_now 1
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config server.mq.push_delay 120

    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config capabilities.meter.device_testing 0

    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config lowpan.txpower.max 20

    ----------------------------------

    L&T time set:

    c1018100080000010000ff0200090c07e30410ff131b2dff014a00
    <SetRequest>
      <SetRequestNormal>
        <!--Priority: HIGH ServiceClass: UN_CONFIRMED invokeID: 1-->
        <InvokeIdAndPriority Value="81" />
        <AttributeDescriptor>
          <!--CLOCK-->
          <ClassId Value="0008" />
          <!--0.0.1.0.0.255-->
          <InstanceId Value="0000010000FF" />
          <AttributeId Value="02" />
        </AttributeDescriptor>
        <Value>
          <!--2019-04-16 19:27:45-->
          <OctetString Value="07E30410FF131B2DFF014A00" />
        </Value>
      </SetRequestNormal>
    </SetRequest>


    DLMS DIRECTOR (SUCCESS)

    C101C100080000010000FF0200090C07E3041305081A39FFFFC480
    <SetRequest>
      <SetRequestNormal>
        <!--Priority: HIGH ServiceClass: CONFIRMED invokeID: 1-->
        <InvokeIdAndPriority Value="C1" />
        <AttributeDescriptor>
          <!--CLOCK-->
          <ClassId Value="0008" />
          <!--0.0.1.0.0.255-->
          <InstanceId Value="0000010000FF" />
          <AttributeId Value="02" />
        </AttributeDescriptor>
        <Value>
          <!--2019-04-19 08:26:57-->
          <OctetString Value="07E3041305081A39FFFFC480" />
        </Value>
      </SetRequestNormal>
    </SetRequest>



    bad:  07E3 04 10 FF 131B2DFF014A00
    good: 07E3 04 13 05 081A39FFFFC480



    n differences i can see are
     # The Invoke ID and Priority differ between the two requests : AGENT sends 0x81 . DIRECTOR sends 0xC1
     # The AGENT is sending an unspecified Day of the week in the DLMS time string value (0xFF) and it is possible that the LnT meter (incorrectly) requires this to be set.

    ---------------------------------------------------

    DTLS <--> CoAP <--> login
                   <--> RegisterWithSMA
                   <--> SamplesToSMA <--> AppendToFile


    ----------------------------------------------------------------

    - filedl
    - meter-upgrade
    - Split config into write-rate sections.
    - make configpart flip buffers on every write, also increase time and maybe number of buffers?
    - refactor configpart to use commonalities with mq.
    - remove spi, flash and fs drivers to make it usable without FLASH being present.
    - code-size reduction?
    - Rename config as KeyValueStore... not just for config but for all application-state.

    -------------------------------------------------

    BIS review:
    - (88) Timing requirements, 5ms<latency<1ms. Why? this is application-dependent... (responsedelay & tAck)
    - We don't do ACK frame addresses standard requires it.
    - (150->160) A few options need to be reflected from the received frame into the ack frame. Need to make sure we do this.
    - 6LoWPAN fragmentation is mandatory.
    - FCS is 32-bit, we have 16-bit (SUN-PHY) Currently we offload CRC calc to the radio-device. The
    RAIL API supports CRC_32Q and ANSIX366_1979 32-bit crc algs. Which? ANSIX366_1979 is 802.15.4g.
    - We disable data-whitening, need it enabled.
    - We don't process IEs, we may have to put effort in to ignore them.
    - We need to use security-mode 1 (enabled), we currently don't enforce this.
    - (219) We currently use MAC_SECURITY_LEVEL_ENC_MIC32(5). We need to use MAC_SECURITY_LEVEL_ENC-MIC-64(6)
    - (225) "a. Key Source field MUST be omitted". (111,153) "...KeySource and KeyIndex fields MUST echo the corresponding fields of the frame being acknowledged". Which one?
    - (238) "...is the CCM* nonce, which is composed of the source address of the transmitter, the transmitter’s frame counter for the *specific key* used, "
    We currently have one frame-counter for all security levels, not *per* level.
    - (243) "A node MUST maintain a frame counter for each Key"

    - How do we roll out this change? only for new networks? Can't easily rollback as the config will be in the image.
    - Make it compatible with old? the frames *may* be compatible if flags are taken into account (i.e. parse both?).





    -------------------------------------------------------

    gcc GCC arm-none-eabi-gcc toolchain

    "sudo add-apt-repository ppa:team-gcc-arm-embedded/ppa"
    "sudo apt-get update"
    "sudo apt-get install gcc-arm-embedded"


    -----------------------------------------

    Ethernet PHY ENC424J6000

    Power down
    - Modular exponentiation engine
    - AES engine
    - packet reception
    - power down PHY (PSLEEP)
    - power down eth interface
    - disable LED stretching

    -----------------------------------------------

    DLT645:
    Gareths Cornflake.zip

    - If we need to add meters dynamically, may need to do slow background scan continuously.


    --------------------------------------

    Agent/Meter combo (OmniMeter)

    - Add HSM & FLASH (8MB) for meter-data + metrology
    - No display needed or buttons/UI on the meter.
    - Opto and DLMS stack & pipe could be optional add-ons, not necessary.
    - Handheld-node for p2p local comms instead of Opto.
    - One thing to upgrade.
    - No DLMS translations, no requirement for DLMS certification.
    - Add metrology driver, accumulations in blocks, ToU calendar, etc.
    - Prepayment? maybe not initially.
    - Configurable elec/gas/water metrology front-ends.



    --------------------------------------------------------------------

        <module id="25" name="capabilities">
            <param id="1" name="meter.reverse_ESW" type="boolean">
              <desc>To handle as per bit orientation of ESW if reversed form meter as in UGVCL(1-Bit Reversed, 0-Bit As per standard).</desc>
    #if defined(CONFIG_DEVICE_GENUS_DLMS)
              <default>1</default>
    #else
              <default>0</default>
    #endif
            </param>
            <param id="2" name="meter.device_testing" type="boolean">
              <desc>To handle Manufacture Feature enable and disable(1-Feature enabled, 0-Feature disabled).</desc>
    #if defined(CONFIG_DEVICE_GENUS_DLMS)
              <default>0</default>
    #else
              <default>1</default>
    #endif
            </param>
            <param id="3" name="meter.supports_Ipv6_setup" type="boolean">
              <desc>To specify meters which support ipv6 setup class 48 configuration.</desc>
    #if defined(CONFIG_DEVICE_GENUS_DLMS)
              <default>0</default>
    #else
              <default>1</default>
    #endif
            </param>
            <param id="4" name="meter.supports_payment_management" type="boolean">
              <desc>To specify meters which support Payment management configuration.</desc>
              <default>0</default>
            </param>
            <param id="5" name="meter.MeterUpgradeRequiresUpgradeCredentials" type="boolean">
              <desc>To handle Meter Upgrade in FU assosiation or HLS (1-Meter Upgrade in FU , 0-Meter Upgrade in HLS).</desc>
              <default>0</default>
            </param>
            <param id="14" name="dlmspipe.session_close_detection" type="boolean">
              <desc>Enable/Disable the detection of UDP session end via RLRQ</desc>
    #if defined(CONFIG_DEVICE_KAIFA_MA304)
              <default>0</default>
    #else
              <default>1</default>
    #endif
            </param>

    #if defined(CONFIG_DEVICE_KAIFA_MA304) || defined(CONFIG_DEVICE_DLMS)
            <param id="15" name="dlmspipe.session.source_port_change_allowed" type="boolean">
              <desc>Allow/disallow the dropping of packets if the source-port of the UDP packet changes</desc>
              <default>0</default>
            </param>
    #endif

            <param id="16" name="meter.time_update" type="boolean">
              <desc>Enable/Disable the use of time-update operations when setting meter time.</desc>
    #if defined(CONFIG_DEVICE_KAIFA_MA304)
              <default>0</default>
    #else
              <default>1</default>
    #endif
            </param>


           <param id="17" name="meter.timezone_set" type="boolean">
             <desc>Enable/Disable the use of time-zone set operations.</desc>
    if defined(CONFIG_DEVICE_GENUS_DLMS) || defined(CONFIG_DEVICE_LNT_DLMS)
             <default>0</default>
    else
             <default>1</default>
    endif
           </param>

           <param id="18" name="meter.dst_set" type="boolean">
             <desc>Enable/Disable the use of DST set operations.</desc>
    if defined(CONFIG_DEVICE_KAIFA_MA304)
             <default>1</default>
    else
             <default>0</default>
    endif
           </param>




    ---------------------------------------------------------


    Start of LSAP issue.

     Request to retrieve time from meter
     -- HDLC locked --
     disconnectLink 0x0
     Setup AA with No Security
     Connect HDLC link
     tx: (1/1): 7e
     tx: (1/1): a020
     tx: (1/1): 03
     tx: (1/1): 21
     tx: (1/1): 93
     tx: (1/1): 7dd9
     tx: (1/2): 8180140502015e0602015e0704000000
     tx: (2/2): 01080400000001
     tx: (1/1): 51af
     tx: (1/1): 7e
      -- waiting on s_dlmsSemaphore for 100000ms --
     ACTION_WAIT_FOR_RESPONSE
     rx: (1/2): 7ea01e210373c37a8180120501800601
     rx: (2/2): 80070400000001080400000001533b7e
     HDLC_TYPE_UA
     tx: (1/1): 7e
     tx: (1/1): a02b
     tx: (1/1): 03
     tx: (1/1): 21
     tx: (1/1): 10
     tx: (1/1): fbaf
     tx: (1/1): e6e600
     tx: (1/2): 601da109060760857405080101be1004
     tx: (2/2): 0e01000000065f1f0400001f1fffff
     tx: (1/1): c64d
     tx: (1/1): 7e
     !! Result == ResultOK !!
     ** Waiting for HDLC event (60000ms) **
     ACTION_WAIT_FOR_RESPONSE
     rx: (1/4): 7ea03e2103300f85e63300613ca10906
     rx: (2/4): 0760857405080103a203020101a305a1
     rx: (3/4): 0302010dbe17041528132000016392f3
     rx: (4/4): 14268a3910c1f2a5c5d189d8765ad77e
     HDLC_TYPE_I
     Incorrect HDLC src LSAP 33
      (Bad result) Passing 0 bytes up the chain.
     ** Waiting for HDLC event (60000ms) **
     Broken HDLC (or timeout receiving response): (14) not found
     Retry: send timed-out on an AARQ, requesting again




    End of LSAP issue is a timeout while sending an AARQ. After the timeout, its fine.

    --------------------------------------

    Disabling watchdog:

    //WDOGn_Enable(WDOG_TypeDef *wdog, bool enable);

    WDOGn_Enable( DEFAULT_WDOG, false );

    ---------------------------------------------

    read profile selective access

    ./coap_request.py --server 127.0.0.1:8080 --agent fdfc:2378:7b6c:0:21b:c50c:6001:a2a1 --device 20022002 --device-op GET 7 1.0.99.1.0.255 2 \
    010204020412000809060000010000ff0f02120000090c07e30418ff06000000014a00090c07e30418ff060a0000014a000100


    01
     02 04
      02 04
       12 0008                          // class
       09 06 0000010000ff               // OBIS
       0f 02                            // attribute
       12 0000
     09 0c 07e30418ff06000000014a00     // from
     09 0c 07e30418ff060a0000014a00     // to
     01 00



    for reference, the hex string is the value part from a PDU such as below:

    c0018100070100630100ff0201 010204020412000809060000010000ff0f02120000090c07e304060600001dff007800090c07e304060605001cff0078000100

    You can form a full APDU that can be decoded and re-encoded from GuruX Translator like below:
    c0018100070100630100ff0201 010204020412000809060000010000ff0f02120000090c07e30418ff06000000014a00090c07e30418ff060a0000014a000100
                               ^
                            Make the split here
    <GetRequest>
      <GetRequestNormal>
        <!--Priority: HIGH ServiceClass: UN_CONFIRMED invokeID: 1-->
        <InvokeIdAndPriority Value="81" />
        <AttributeDescriptor>
          <!--PROFILE_GENERIC-->
          <ClassId Value="0007" />
          <!--1.0.99.1.0.255-->
          <InstanceId Value="0100630100FF" />
          <AttributeId Value="02" />
        </AttributeDescriptor>
        <AccessSelection>
          <AccessSelector Value="01" />
          <AccessParameters>
            <Structure Qty="04" >
              <Structure Qty="04" >
                <UInt16 Value="0008" />
                <!--0.0.1.0.0.255-->
                <OctetString Value="0000010000FF" />
                <Int8 Value="02" />
                <UInt16 Value="0000" />
              </Structure>
              <!--2019-04-06 00:00:29-->
              <OctetString Value="07E304060600001DFF007800" />
              <!--2019-04-06 05:00:28-->
              <OctetString Value="07E304060605001CFF007800" />
              <Array Qty="00" >
              </Array>
            </Structure>
          </AccessParameters>
        </AccessSelection>
      </GetRequestNormal>
    </GetRequest>

    ------------------------------------------------------------

    steve@steveslaptop:~/Projects/DTLS-Examples/src$ ./MakeMe.sh
    steve@steveslaptop:~/Projects/DTLS-Examples/src$ ./dtls_udp_echo -V -L fd00::1 -p 5684
    Received Record
    Header:
      Version = DTLS 1.2 (0xfefd)
      epoch=0, sequence_number=000000000000
      Content Type = Handshake (22)
      Length = 103
        ClientHello, Length=91
        message_seq=0, fragment_offset=0, fragment_length=91
          client_version=0xfefd (DTLS 1.2)
          Random:
            gmt_unix_time=0xE903B8AE
            random_bytes (len=28): CB0B219A2E2504C5ABD5E39FE5A62B5A814AEC8F5B3192C82F407AD4
          session_id (len=0):
          cookie (len=0):
          cipher_suites (len=2)
            {0xC0, 0xAE} TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8
          compression_methods (len=1)
            No Compression (0x00)
          extensions, length = 47
            extension_type=signature_algorithms(13), length=4
              ecdsa_secp256r1_sha256 (0x0403)
            extension_type=trusted_ca_keys(3), length=21
              0000 - 00 aa aa aa aa aa aa aa-aa aa aa aa aa aa aa   ...............
              000f - aa aa aa aa aa aa                              ......
            extension_type=ec_point_formats(11), length=2
              uncompressed (0)
            extension_type=supported_groups(10), length=4
              secp256r1 (P-256) (23)

    Sent Record
    Header:
      Version = DTLS 1.2 (0xfefd)
      epoch=0, sequence_number=000000000000
      Content Type = Handshake (22)
      Length = 103
    Received Record
    Header:
      Version = DTLS 1.2 (0xfefd)
      epoch=0, sequence_number=000000000001
      Content Type = Handshake (22)
      Length = 123
        ClientHello, Length=111
        message_seq=1, fragment_offset=0, fragment_length=111
          client_version=0xfefd (DTLS 1.2)
          Random:
            gmt_unix_time=0xE903B8AE
            random_bytes (len=28): CB0B219A2E2504C5ABD5E39FE5A62B5A814AEC8F5B3192C82F407AD4
          session_id (len=0):
          cookie (len=20): 0E0F2E2EC359E0FB826CC9D1C912926BBF81E7CB
          cipher_suites (len=2)
            {0xC0, 0xAE} TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8
          compression_methods (len=1)
            No Compression (0x00)
          extensions, length = 47
            extension_type=signature_algorithms(13), length=4
              ecdsa_secp256r1_sha256 (0x0403)
            extension_type=trusted_ca_keys(3), length=21
              0000 - 00 aa aa aa aa aa aa aa-aa aa aa aa aa aa aa   ...............
              000f - aa aa aa aa aa aa                              ......
            extension_type=ec_point_formats(11), length=2
              uncompressed (0)
            extension_type=supported_groups(10), length=4
              secp256r1 (P-256) (23)

        ClientHello, Length=111
        message_seq=1, fragment_offset=0, fragment_length=111
          client_version=0xfefd (DTLS 1.2)
          Random:
            gmt_unix_time=0xE903B8AE
            random_bytes (len=28): CB0B219A2E2504C5ABD5E39FE5A62B5A814AEC8F5B3192C82F407AD4
          session_id (len=0):
          cookie (len=20): 0E0F2E2EC359E0FB826CC9D1C912926BBF81E7CB
          cipher_suites (len=2)
            {0xC0, 0xAE} TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8
          compression_methods (len=1)
            No Compression (0x00)
          extensions, length = 47
            extension_type=signature_algorithms(13), length=4
              ecdsa_secp256r1_sha256 (0x0403)
            extension_type=trusted_ca_keys(3), length=21
              0000 - 00 aa aa aa aa aa aa aa-aa aa aa aa aa aa aa   ...............
              000f - aa aa aa aa aa aa                              ......
            extension_type=ec_point_formats(11), length=2
              uncompressed (0)
            extension_type=supported_groups(10), length=4
              secp256r1 (P-256) (23)

    Sent Record
    Header:
      Version = DTLS 1.2 (0xfefd)
      epoch=0, sequence_number=000000000001
      Content Type = Alert (21)
      Length = 2
        Level=fatal(2), description=handshake failure(40)

    SSL_accept: Success
    error:1417A0C1:SSL routines:tls_post_process_client_hello:no shared cipher
    Thread 7f7789699700: done, connection closed.


    ------------------------------------

    mysql> describe data_profile_sample;
    +-------------+------------+------+-----+---------+----------------+
    | Field       | Type       | Null | Key | Default | Extra          |
    +-------------+------------+------+-----+---------+----------------+
    | id          | bigint(20) | NO   | PRI | NULL    | auto_increment |
    | create_time | datetime   | NO   |     | NULL    |                |
    | profile     | tinyblob   | NO   |     | NULL    |                |
    | samples     | longblob   | YES  |     | NULL    |                |
    | device_id   | bigint(20) | YES  | MUL | NULL    |                |
    | message_id  | bigint(20) | NO   | UNI | NULL    |                |
    | node_id     | bigint(20) | NO   | MUL | NULL    |                |
    +-------------+------------+------+-----+---------+----------------+
    7 rows in set (0.00 sec)

    mysql> select id,create_time,HEX(samples) from data_profile_sample;


    30169 | 2019-05-21 11:17:17 | 000000260206090C07E30515020C0F00FF003C0011000600000000060000000006000000000600000000



    000000260206090C07E30515020C0F00FF003C0011000600000000060000000006000000000600000000





    0206090C07E30515020B1E00FF003C0011000600000000060000000006000000000600000000

    02 06                           # Structure of 6 fields
     09 0C 07E30515020C1E00FF003C00 # Octet string of 12 bytes
     11 00                          # uint8
     06 00000000                    # uint32
     06 00000000                    # uint32
     06 00000000                    # uint32
     06 00000000                    # uint32


    --------------------------------------

    General mesh formation and routing:
    - IE parsing from packets.
    - Cleartext PAN-join frame forwarding to gateway.
    - Gateway to listen for local PAN-ids and choose a unique id for itself (PAN-solicit and PAN-advertisement frames).
    - Choice of PAN with lowest "cost" from available PAN-advertisements.
    - Configuration and transmission of PAN information. Interaction with new security model.
    - PANs can form a tree-of-PANs, i.e. multiple PANs per mesh (https://tools.ietf.org/id/draft-heile-lpwan-wisun-overview-00.html).
    This has implications for how nodes hop onto adjacent meshes (?) "cluster tree".
    - Non-storing mode RPL.
    - Source-routing RFC6554. Construction of source-routes on gw, usage of source-routes on all nodes (RFC 6554, not 6997). Loop detection in source-routes.
    - "If the SRH only specifies a subset of the path from source to destination, the router uses IPv6-in-IPv6 tunneling [RFC2473]
    and places the SRH in the outer IPv6 header." All our packets to/from the server will need to use IPv6-in-IPv6 tunnelling.
    - Issue: packets in transit during a mesh-hop will get lost due to address-prefix compression assuming they're the same (maybe).
    - Path MTU discovery may be needed to avoid fragmentation of packets along the length of the route (RFC8201).
    - "However, it is expected that much of the traffic on these types of networks consists of much smaller messages than the MTU, so performance
       degradation through fragmentation would be limited." (Wrong optimisation for us?, we have relatively large data packets indeed, we attempt to form
    larger packets through aggregation of readings for example).
    - MTU of 2047b
    - "The Wi-SUN MAC MTU is 2047 bytes as defined in IEEE802.15.4g, satisfying the IPv6 packet length requirement". 6LoWPAN fragmentation may not be needed.

    Frequency hopping:
    - time sync, periodic packet, populated using cycle counter at point of transmit and RTC value. Receipt of
    packet maintains delta between receivedCycleCounter and ownCycleCounter for RTC offset. Transmit of BTIE
    in packets, receipt of BTIE and passing up the stack.
    - Schedule parsing and maintenance on a node-basis, parsing of IEs from packets. Implementation of scheduled
    transmit from MAC layer, implementation of modes (specified by IE) for interaction with frequency-hopping.
    - Configuration, distribution and parsing of channel-blacklists (IEs).

    Security:
    - 802.1x (EAPOL, EAP-Over-Lans)
    - EAP-TLS (RFC5216) overlap with DTLS regarding authentication, but not encryption. Do we use both? EAPTLS to get onto mesh,
    - EAP-TLS can be extended to transfer application-level packets over the TLS connection? (i.e. replace DTLS?)
    - Customers will want RADIUS/AAA server under their control?
    - 802.1fi
    - ETSI-TS-102-887-2
    - "groups". Group-Transient-Keys (GTKs)
    - After selecting an EAPOL target node, the node is in Join State 2. It MUST perform the 802.1x/802.11i security flow via the
    selected EAPOL target node, to authenticate itself to the network and obtain its GTKs (group transient keys) from the PAN Border Router.
    - Group keys & pairwise-keys, not just mesh-keys (as we have now) or pairwise keys (as SMIP want).
    - Frame counter must be maintained per-group.

    ---------------------------------------------------------

    prod.prodtime                            : 1548845655
    prod.alias.id                            :
    prod.ethernet.macaddr                    :
    prod.lowpan.eui64                        : 00-1B-C5-0C-60-05-A2-83
    prod.hw.version                          : gw200
    rpl.enabled                              : 1
    rpl.br.dio.imin                          : 12
    rpl.br.dio.imax                          : 8
    rpl.br.dio.k                             : 6
    rpl.br.routelife                         : 1200
    rpl.br.ocp                               : 1
    rpl.dis.trickle.min.ms                   : 10000
    rpl.dis.trickle.doublings                : 4
    rpl.probe.interval.min.ms                : 1500
    rpl.probe.doublings                      : 6
    rpl.instance_id                          : 0
    rpl.etx.weight_factor                    : 64
    rpl.mrhof.pp_hysteresis                  : 75
    rpl.dag_switch.hysteresis                : 150
    rpl.dag_switch.time                      : 7200
    rpl.routes.max                           : 10000
    rpl.dao.deferred_ack                     : 1
    rpl.netsize_penalty                      : 64
    lowpan.txpower.max                       : 17
    lowpan.hop_limit                         : 32
    lowpan.frame_retries                     : 3
    lowpan.powercontrol.interval             : 480
    lowpan.powercontrol.target               : -90
    lowpan.powercontrol                      : 1
    lowpan.cca.threshold                     : -94
    lowpan.channelplan                       : 2
    lowpan.channel                           : 7
    lowpan.autochannel                       : 0
    ip.eth.ipv4.4in6.endpoint                :
    ip.eth.ipv4.mtu                          : 0
    ip.eth.ipv4.dns_servers                  :
    ip.eth.ipv4.lease_time                   : 600
    ip.eth.ipv6.dns_server                   :
    ip.eth.ipv4.up.ip                        :
    ip.eth.ipv4.up.gw                        :
    ip.eth.ipv4.up.dns                       :
    server.ip                                : fd00::1
    server.port                              : 5684
    server.mq.push_now                       : 0
    server.mq.push_delay                     : 3600
    server.mq.more_delay                     : 600
    modem.apn                                : airtel.com
    modem.tun6.ip                            : lnt-prep.dev.cyanconnode.com
    modem.tun6.port                          : 8050
    modem.tun6.secret                        : lnt-integration
    modem.uplink.gracetime                   : 900
    modem.username                           :
    modem.password                           :
    modem.authmethod                         : NONE
    modem.pin                                :
    modem.uplink.max_failures_before_reset   : 5
    mac.lbt.min.be                           : 3
    mac.lbt.max.be                           : 8
    mac.lbt.max.backoffs                     : 20
    mac.dutycycle.limit                      : 10
    mac.dutycycle.buffer                     : 1000
    mac.frame_size                           : 253
    dtls.timeout.initial.s                   : 8
    dtls.timeout.max.s                       : 127
    dtls.heartbeat.period.s                  : 3600
    dtls.heartbeat.retry.s                   : 120
    dtls.heartbeat.max.retries               : 4
    monitor.profile.default.enabled          : 1
    monitor.profile.default.sample.interval  : 3600
    monitor.profile.radio.enabled            : 0
    monitor.profile.radio.sample.interval    : 3600
    monitor.profile.network.enabled          : 0
    monitor.profile.network.sample.interval  : 3600
    monitor.profile.ip.enabled               : 0
    monitor.profile.ip.sample.interval       : 3600
    monitor.profile.modem.enabled            : 0
    monitor.profile.modem.sample.interval    : 3600
    monitor.profile.environment.enabled      : 0
    monitor.profile.environment.sample.interval : 3600
    time.tz                                  : CET-1CEST,M3.5.0/2,M10.5.0/3
    time.max.diff                            : 30
    time.mesh.fail.event.interval            : 1800
    time.mesh.period                         : 3600
    time.ref.period                          : 43200
    time.ref.rtt.max                         : 30
    coap.retry.timeout                       : 10
    coap.session.timeout                     : 60
    coap.attempts                            : 3
    activity.report.enabled                  : 1
    node.power_fail.gracetime                : 60
    node.production.rssisource.enabled       : 0
    node.production.rssisource.power         : 10
    node.production.rssisource.period        : -500
    node.production.meter_update_period      : 5
    node.power_fail.lowpowermode.recoverytime : 60
    node.power_fail.lowpowermode.entry.delay : 120
    node.power_fail.lowpowermode.entry.event.waittime : 60
    node.power_fail.lowpowermode.exit.delay  : 300
    node.power_fail.lowpowermode.powerfailure.count : 5
    node.power_fail.lowpowermode.powerfailure.waittime : 30
    capabilities.meter.reverse_ESW           : 0
    capabilities.meter.device_testing        : 1
    capabilities.meter.supports_Ipv6_setup   : 1
    capabilities.meter.supports_payment_management : 0
    capabilities.meter.MeterUpgradeRequiresUpgradeCredentials : 0
    capabilities.dlmspipe.session_close_detection : 1
    capabilities.meter.time_update           : 1
    capabilities.meter.timezone_set          : 1
    capabilities.meter.dst_set               : 0


    -------------------------------------------

    ARM non eabi gcc

    #https://developer.arm.com/tools-and-software/open-source-software/developer-tools/gnu-toolchain/gnu-rm/downloads
    https://developer.arm.com/-/media/Files/downloads/gnu-rm/8-2019q3/RC1.1/gcc-arm-none-eabi-8-2019-q3-update-linux.tar.bz2?revision=c34d758a-be0c-476e-a2de-af8c6e16a8a2?product=GNU%20Arm%20Embedded%20Toolchain,64-bit,,Linux,8-2019-q3-update


    ---------------------------------------------

    ./tools/c4-tools/coap_request.py --ctrlporthub :4002  --radio-test-id 7 --radio-send --radio-test-iid 02-1B-C5-0C-60-05-A2-83 --radio-test-power 54 --radio-test-count 100000

    -----------------------------------------

    ssh cyanconnode@cyan-emng104
    Sundbyb3rg

    -------------------------------------------

    2019-06-04 10:52:23.862                       <HUB> 0:00:00.000 Logging level: debug
    2019-06-04 10:52:23.862                       <HUB> 0:00:00.000 Log file: /Data/Logs/node114.log
    2019-06-04 10:52:23.866                       <HUB> 0:00:00.000 Node port was not opened because -listen was not specified.
    2019-06-04 10:52:23.866                       <HUB> 0:00:00.000 Waiting for controllers on port 4002...
    2019-06-04 10:52:23.867 #1   0000000000000000 <hub> 0:00:00.000 [ info] Serial port /dev/serial/by-id/usb-FTDI_TTL232R_FTG4DKEY-if00-port0 opened
    2019-06-04 10:52:27.159 #1   0000000000000000 <hub> 0:01:36.849 [ info] <MISSING 86 MESSAGES> expected msg# 1 got 87
    2019-06-04 10:52:27.159 #1   0000000000000000 <hub> 0:01:36.849 [ info] Missing many (86) messages so hub will send new settings
    2019-06-04 10:52:27.159 #1   0000000000000000 <log> 0:01:36.849 [ info] [    prodmode] { terminal}: Production mode. fw: ipa3-lnt-dlms-insecure:v149.5-2-g1094917, hw: ipa3, debug unlocked
    2019-06-04 10:52:27.159 #1   0000000000000000 <hub> 0:01:36.849 [ info] Received msg# 87 from node, sending settings
    2019-06-04 10:52:27.159 #1   0000000000000000 <hub> 0:00:00.000 [ info] Setting up node. Loglevel: debug, ignore tasks: none, ignore modules: none
    2019-06-04 10:52:27.159 #1   0000000000000000 <hub> 0:00:00.000 [debug] Writing message of type 145 size 27 bootloaderState: 0
    2019-06-04 10:52:27.159 #1   0000000000000000 <hub> 0:00:00.000 [ info] Giving lowpan prefix :: to node
    2019-06-04 10:52:27.159 #1   0000000000000000 <log> 0:01:36.862 [ info] [    prodmode] { terminal}: EUI-64: , UID: 000d6fff:fea86f7f
    2019-06-04 10:52:27.175 #1   0000000000000000 <hub> 0:01:36.886 [debug] Got ack
    2019-06-04 10:52:27.175 #1   0000000000000000 <hub> 0:00:00.000 [debug] Writing message of type 144 size 77 bootloaderState: 0
    2019-06-04 10:52:27.191 #1   0000000000000000 <hub> 0:01:36.906 [debug] Got ack
    2019-06-04 10:52:32.178 #1   0000000000000000 <log> 0:01:41.870 [ info] [    prodmode] { terminal}: Production mode. fw: ipa3-lnt-dlms-insecure:v149.5-2-g1094917, hw: ipa3, debug unlocked
    2019-06-04 10:52:32.178 #1   0000000000000000 <log> 0:01:41.883 [ info] [    prodmode] { terminal}: EUI-64: , UID: 000d6fff:fea86f7f
    2019-06-04 10:52:37.198 #1   0000000000000000 <log> 0:01:46.891 [ info] [    prodmode] { terminal}: Production mode. fw: ipa3-lnt-dlms-insecure:v149.5-2-g1094917, hw: ipa3, debug unlocked
    2019-06-04 10:52:37.198 #1   0000000000000000 <log> 0:01:46.904 [ info] [    prodmode] { terminal}: EUI-64: , UID: 000d6fff:fea86f7f
    2019-06-04 10:52:42.220 #1   0000000000000000 <log> 0:01:51.912 [ info] [    prodmode] { terminal}: Production mode. fw: ipa3-lnt-dlms-insecure:v149.5-2-g1094917, hw: ipa3, debug unlocked
    2019-06-04 10:52:42.220 #1   0000000000000000 <log> 0:01:51.925 [ info] [    prodmode] { terminal}: EUI-64: , UID: 000d6fff:fea86f7f
    2019-06-04 10:52:47.240 #1   0000000000000000 <log> 0:01:56.933 [ info] [    prodmode] { terminal}: Production mode. fw: ipa3-lnt-dlms-insecure:v149.5-2-g1094917, hw: ipa3, debug unlocked
    2019-06-04 10:52:47.240 #1   0000000000000000 <log> 0:01:56.946 [ info] [    prodmode] { terminal}: EUI-64: , UID: 000d6fff:fea86f7f
    2019-06-04 10:52:51.481 #1   0000000000000000 <log> 0:02:01.180 ======== Hard fault ========
    2019-06-04 10:52:51.481 #1   0000000000000000 <log> 0:02:01.180 schedule
    2019-06-04 10:52:51.481 #1   0000000000000000 <log> 0:02:01.180 Hsch DV0@5b670L5c237S2000e688
    2019-06-04 10:53:17.052 #1   0000000000000000 <hub> 0:00:00.004 [ info] Expected message# 102 but got 1, node restarted?
    2019-06-04 10:53:17.052 #1   0000000000000000 <log> 0:00:00.004 [ info] [       cndfs] { terminal}: Mounting with 1024 x 4096 KiB sectors = 4096 KiB
    2019-06-04 10:53:17.215 #1   0000000000000000 <log> 0:00:00.125 [ info] [       cndfs] { terminal}: Mounted: 14 sectors used, 14 files
    2019-06-04 10:53:17.215 #1   0000000000000000 <log> 0:00:00.134 [ info] [       cndfs] { terminal}: Flash map:
    2019-06-04 10:53:17.215 #1   0000000000000000 <log> 0:00:00.146 [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
    2019-06-04 10:53:17.215 #1   0000000000000000 <log> 0:00:00.165 [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- ------1- --------
    2019-06-04 10:53:17.284 #1   0000000000000000 <log> 0:00:00.183 [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
    2019-06-04 10:53:17.284 #1   0000000000000000 <log> 0:00:00.201 [ info] [       cndfs] { terminal}:   -------- -------- =>------ -------- -------- -------- -------- --------
    2019-06-04 10:53:17.284 #1   0000000000000000 <log> 0:00:00.219 [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
    2019-06-04 10:53:17.284 #1   0000000000000000 <log> 0:00:00.237 [ info] [       cndfs] { terminal}:   -------- -------- -------- ---:---- -------- -------- -------- --------
    2019-06-04 10:53:17.346 #1   0000000000000000 <log> 0:00:00.256 [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
    2019-06-04 10:53:17.346 #1   0000000000000000 <log> 0:00:00.274 [ info] [       cndfs] { terminal}:   -------9 -------- -------- -------- -------- -------- -------- --------
    2019-06-04 10:53:17.346 #1   0000000000000000 <log> 0:00:00.292 [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
    2019-06-04 10:53:17.415 #1   0000000000000000 <log> 0:00:00.310 [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- ----45-6 78--23-- -------- <-------
    2019-06-04 10:53:17.415 #1   0000000000000000 <log> 0:00:00.329 [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
    2019-06-04 10:53:17.415 #1   0000000000000000 <log> 0:00:00.347 [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
    2019-06-04 10:53:17.415 #1   0000000000000000 <log> 0:00:00.365 [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
    2019-06-04 10:53:17.475 #1   0000000000000000 <log> 0:00:00.383 [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
    2019-06-04 10:53:17.475 #1   0000000000000000 <log> 0:00:00.401 [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- ------;- -------- --------
    2019-06-04 10:53:17.476 #1   0000000000000000 <log> 0:00:00.420 [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
    2019-06-04 10:53:17.476 #1   0000000000000000 <log> 0:00:00.431 [ info] [       cndfs] { terminal}:
    2019-06-04 10:53:17.476 #1   0000000000000000 <hub> 0:00:00.431 [ info] Received msg# 20 from node, sending settings
    2019-06-04 10:53:17.476 #1   0000000000000000 <hub> 0:00:00.000 [ info] Setting up node. Loglevel: debug, ignore tasks: none, ignore modules: none
    2019-06-04 10:53:17.476 #1   0000000000000000 <hub> 0:00:00.000 [debug] Writing message of type 145 size 27 bootloaderState: 0
    2019-06-04 10:53:17.476 #1   0000000000000000 <hub> 0:00:00.000 [ info] Giving lowpan prefix :: to node
    2019-06-04 10:53:17.492 #1   0000000000000000 <hub> 0:00:00.451 [debug] Got ack
    2019-06-04 10:53:17.492 #1   0000000000000000 <hub> 0:00:00.000 [debug] Writing message of type 144 size 77 bootloaderState: 0
    2019-06-04 10:53:17.508 #1   0000000000000000 <hub> 0:00:00.472 [debug] Got ack
    2019-06-04 10:53:17.549 #1   0000000000000000 <log> 0:00:00.500 [debug] [       cndfs] { terminal}: Found file /configuration-1.pb at sector 621
    2019-06-04 10:53:17.660 #1   0000000000000000 <log> 0:00:00.611 [debug] [      fs/api] { terminal}: fsOpen (/configuration-1.pb, mode=1, fd=0)
    2019-06-04 10:53:17.733 #1   0000000000000000 <log> 0:00:00.685 [debug] [       cndfs] { terminal}: Found file /configuration-2.pb at sector 620
    2019-06-04 10:53:17.869 #1   0000000000000000 <log> 0:00:00.795 [debug] [      fs/api] { terminal}: fsOpen (/configuration-2.pb, mode=1, fd=0)
    2019-06-04 10:53:17.870 #1   0000000000000000 <log> 0:00:00.808 [ info] [   config/pb] { terminal}: Config generations: 10, 9
    2019-06-04 10:53:17.870 #1   0000000000000000 <log> 0:00:00.815 [debug] [ cndfs/utils] { terminal}: Found metadata #0 for /configuration-1.pb: id=3 st=621 sz=551 refs=0
    2019-06-04 10:53:17.870 #1   0000000000000000 <log> 0:00:00.827 [debug] [      fs/api] { terminal}: fsOpen (/configuration-1.pb, mode=1, fd=0)
    2019-06-04 10:53:17.870 #1   0000000000000000 <log> 0:00:00.836 [debug] [       cndfs] { terminal}: Rewinding
    2019-06-04 10:53:17.955 #1   0000000000000000 <log> 0:00:00.883 [ info] [   config/pb] { terminal}: Read slot 0, generation 10
    2019-06-04 10:53:17.955 #1   0000000000000000 <log> 0:00:00.891 [debug] [      module] { terminal}: Starting srcRestrictedCfgService
    2019-06-04 10:53:17.955 #1   0000000000000000 <log> 0:00:00.899 [debug] [      module] { terminal}: Starting timeService
    2019-06-04 10:53:17.955 #1   0000000000000000 <log> 0:00:00.906 [ info] [    timezone] { terminal}: New TZ = CET-1CEST,M3.5.0/2,M10.5.0/3
    2019-06-04 10:53:17.999 #1   0000000000000000 <log> 0:00:00.916 [ info] [        time] { terminal}: Uptime: 916, local time: 1970-01-01  1:02:26.615, UTC: 146.615, status: 0
    2019-06-04 10:53:17.999 #1   0000000000000000 <log> 0:00:00.928 [ info] [    log_ring] { terminal}: Filter level: WARN, module: (null), task: (null), fw: ipa3-lnt-dlms-insecure:v149.5-2-g1094917 on ipa3
    2019-06-04 10:53:17.999 #1   0000000000000000 <log> 0:00:00.942 [event] [    terminal] { terminal}: Starting version ipa3-lnt-dlms-insecure:v149.5-2-g1094917 on hardware ipa3
    2019-06-04 10:53:17.999 #1   0000000000000000 <log> 0:00:00.954 [debug] [      module] { terminal}: Initing communication
    2019-06-04 10:53:17.999 #1   0000000000000000 <log> 0:00:00.961 [debug] [      module] { terminal}: Initing mac
    2019-06-04 10:53:18.052 #1   001bc50c6004fdd6 <log> 0:00:00.968 [ info] [         mac] { terminal}: Using IID 02-1b-c5-0c-60-04-fd-d6 from EUI-64 00-1b-c5-0c-60-04-fd-d6
    2019-06-04 10:53:18.052 #1   001bc50c6004fdd6 <log> 0:00:00.979 [debug] [      module] { terminal}: Initing macDutycycle
    2019-06-04 10:53:18.052 #1   001bc50c6004fdd6 <log> 0:00:00.986 [debug] [      module] { terminal}: Initing macTx
    2019-06-04 10:53:18.052 #1   001bc50c6004fdd6 <log> 0:00:00.993 [debug] [      module] { terminal}: Initing macReceive
    2019-06-04 10:53:18.052 #1   001bc50c6004fdd6 <log> 0:00:01.000 [debug] [      module] { terminal}: Initing macDeviceTable
    2019-06-04 10:53:18.052 #1   001bc50c6004fdd6 <log> 0:00:01.007 [debug] [      module] { terminal}: Initing macSecurity
    2019-06-04 10:53:18.123 #1   001bc50c6004fdd6 <log> 0:00:01.075 [debug] [       cndfs] { terminal}: Found file /keys/mac_1 at sector 612
    2019-06-04 10:53:18.241 #1   001bc50c6004fdd6 <log> 0:00:01.185 [debug] [      fs/api] { terminal}: fsOpen (/keys/mac_1, mode=1, fd=0)
    2019-06-04 10:53:18.241 #1   001bc50c6004fdd6 <log> 0:00:01.196 [ info] [mac_security] { terminal}: Keys loaded: 0p
    2019-06-04 10:53:18.263 #1   001bc50c6004fdd6 <log> 0:00:01.214 [debug] [       cndfs] { terminal}: Found file /macsec_state at sector 118
    2019-06-04 10:53:18.396 #1   001bc50c6004fdd6 <log> 0:00:01.325 [debug] [      fs/api] { terminal}: fsOpen (/macsec_state, mode=0, fd=0)
    2019-06-04 10:53:18.396 #1   001bc50c6004fdd6 <log> 0:00:01.333 [ info] [mac_security] { terminal}: Read frame counter 692011
    2019-06-04 10:53:18.396 #1   001bc50c6004fdd6 <log> 0:00:01.341 [debug] [ cndfs/utils] { schedule}: Found metadata #3 for /macsec_state: id=1 st=118 sz=4 refs=0
    2019-06-04 10:53:18.396 #1   001bc50c6004fdd6 <log> 0:00:01.352 [debug] [ cndfs/utils] { schedule}: Found metadata #3 for /macsec_state: id=1 st=118 sz=4 refs=0
    2019-06-04 10:53:18.444 #1   001bc50c6004fdd6 <log> 0:00:01.362 [debug] [      fs/api] { schedule}: fsOpen (/macsec_state, mode=2, fd=0)
    2019-06-04 10:53:18.444 #1   001bc50c6004fdd6 <log> 0:00:01.371 [debug] [       cndfs] { schedule}: Committing 4 B at 0 (filesize 4)
    2019-06-04 10:53:18.444 #1   001bc50c6004fdd6 <log> 0:00:01.379 [debug] [       cndfs] { schedule}: Rewinding
    2019-06-04 10:53:18.444 #1   001bc50c6004fdd6 <log> 0:00:01.385 [debug] [      module] { terminal}: Initing macRadio
    2019-06-04 10:53:18.444 #1   001bc50c6004fdd6 <log> 0:00:01.392 [debug] [  fs/service] { schedule}: flashopProgram 119:0x28 13 B
    2019-06-04 10:53:18.444 #1   001bc50c6004fdd6 <log> 0:00:01.400 [debug] [      module] { terminal}: Initing radioDriver
    2019-06-04 10:53:18.483 #1   001bc50c6004fdd6 <log> 0:00:01.407 [debug] [  fs/service] { schedule}: flashopProgram 119:0x35 4 B
    2019-06-04 10:53:18.483 #1   001bc50c6004fdd6 <log> 0:00:01.415 [debug] [      module] { terminal}: Initing radiotest
    2019-06-04 10:53:18.483 #1   001bc50c6004fdd6 <log> 0:00:01.422 [debug] [      module] { terminal}: Initing lowpan
    2019-06-04 10:53:18.483 #1   001bc50c6004fdd6 <log> 0:00:01.429 [debug] [  fs/service] { schedule}: flashopProgram 119:0x0 40 B
    2019-06-04 10:53:18.483 #1   001bc50c6004fdd6 <log> 0:00:01.437 [debug] [      module] { terminal}: Initing ipCore
    2019-06-04 10:53:18.483 #1   001bc50c6004fdd6 <log> 0:00:01.443 [debug] [  fs/service] { schedule}: flashopErase 118:0x0 4096 B
    2019-06-04 10:53:18.527 #1   001bc50c6004fdd6 <log> 0:00:01.451 [debug] [      module] { terminal}: Initing cndNet
    2019-06-04 10:53:18.527 #1   001bc50c6004fdd6 <log> 0:00:01.458 [debug] [      module] { terminal}: Initing coap
    2019-06-04 10:53:18.527 #1   001bc50c6004fdd6 <log> 0:00:01.464 [debug] [      module] { terminal}: Initing coapLocal
    2019-06-04 10:53:18.527 #1   001bc50c6004fdd6 <log> 0:00:01.471 [debug] [      module] { terminal}: Initing rpl
    2019-06-04 10:53:18.527 #1   001bc50c6004fdd6 <log> 0:00:01.478 [debug] [rpl/routelist] { terminal}: Init list with IID context 02-1b-c5-0c-60-04-fd-d6
    2019-06-04 10:53:18.527 #1   001bc50c6004fdd6 <log> 0:00:01.488 [debug] [      module] { terminal}: Initing conman
    2019-06-04 10:53:18.570 #1   001bc50c6004fdd6 <log> 0:00:01.495 [debug] [       cndfs] { schedule}: Cloned s118 -> s119g2 (size=57, full=0)
    2019-06-04 10:53:18.570 #1   001bc50c6004fdd6 <log> 0:00:01.503 [ info] [mac_security] { schedule}: Wrote frame counter 693011
    2019-06-04 10:53:18.570 #1   001bc50c6004fdd6 <log> 0:00:01.511 [debug] [      module] { terminal}: Initing icmp
    2019-06-04 10:53:18.570 #1   001bc50c6004fdd6 <log> 0:00:01.517 [debug] [      module] { terminal}: Starting communication
    2019-06-04 10:53:18.570 #1   001bc50c6004fdd6 <log> 0:00:01.525 [debug] [      module] { terminal}: Starting mac
    2019-06-04 10:53:18.570 #1   001bc50c6004fdd6 <log> 0:00:01.531 [debug] [      module] { terminal}: Starting macDutycycle
    2019-06-04 10:53:18.620 #1   001bc50c6004fdd6 <log> 0:00:01.538 [debug] [      module] { terminal}: Starting macReceive
    2019-06-04 10:53:18.620 #1   001bc50c6004fdd6 <log> 0:00:01.546 [debug] [      module] { terminal}: Starting macRadio
    2019-06-04 10:53:18.620 #1   001bc50c6004fdd6 <log> 0:00:01.552 [debug] [      module] { terminal}: Starting radioDriver
    2019-06-04 10:53:18.620 #1   001bc50c6004fdd6 <log> 0:00:01.560 [ info] [       radio] {    radio}: RAIL version 1 5 0
    2019-06-04 10:53:18.620 #1   001bc50c6004fdd6 <log> 0:00:01.568 [ info] [       radio] {    radio}: Channel plan 2, channel 9 (866665 kHz)
    2019-06-04 10:53:18.744 #1   001bc50c6004fdd6 <log> 0:00:01.673 [debug] [      module] { terminal}: Starting radiotest
    2019-06-04 10:53:18.744 #1   001bc50c6004fdd6 <log> 0:00:01.680 [debug] [   radiotest] { terminal}: ** Starting rssi packet source **
    2019-06-04 10:53:18.744 #1   001bc50c6004fdd6 <log> 0:00:01.688 [debug] [   radiotest] { terminal}: production mode RSSISource task *NOT* enabled.
    2019-06-04 10:53:18.744 #1   001bc50c6004fdd6 <log> 0:00:01.698 [debug] [      module] { terminal}: Starting lowpan
    2019-06-04 10:53:18.744 #1   001bc50c6004fdd6 <log> 0:00:01.705 [debug] [      module] { terminal}: Starting coap
    2019-06-04 10:53:18.765 #1   001bc50c6004fdd6 <log> 0:00:01.711 [debug] [      module] { terminal}: Starting dtls
    2019-06-04 10:53:18.765 #1   001bc50c6004fdd6 <log> 0:00:01.718 [debug] [  dtls/cache] { terminal}: dtlsSessionCacheLoad: Loading 784 bytes
    2019-06-04 10:53:18.796 #1   001bc50c6004fdd6 <log> 0:00:01.748 [debug] [       cndfs] { terminal}: Found file /dtls_state at sector 208
    2019-06-04 10:53:18.948 #1   001bc50c6004fdd6 <log> 0:00:01.858 [debug] [      fs/api] { terminal}: fsOpen (/dtls_state, mode=1, fd=0)
    2019-06-04 10:53:18.948 #1   001bc50c6004fdd6 <log> 0:00:01.872 [ info] [  dtls/cache] { terminal}: DTLS session restored
    2019-06-04 10:53:18.948 #1   001bc50c6004fdd6 <log> 0:00:01.881 [debug] [      module] { terminal}: Starting rpl
    2019-06-04 10:53:18.948 #1   001bc50c6004fdd6 <log> 0:00:01.893 [debug] [      module] { terminal}: Starting powercontrol
    2019-06-04 10:53:18.948 #1   001bc50c6004fdd6 <log> 0:00:01.903 [debug] [      module] { terminal}: Starting transportSwitch
    2019-06-04 10:53:18.993 #1   001bc50c6004fdd6 <log> 0:00:01.913 [debug] [      module] { terminal}: Starting conman
    2019-06-04 10:53:18.993 #1   001bc50c6004fdd6 <log> 0:00:01.922 [ info] [      conman] { terminal}: Going to mesh mode
    2019-06-04 10:53:18.993 #1   001bc50c6004fdd6 <log> 0:00:01.930 [ info] [    rpl/task] {      rpl}: 0: Trying to get to attached (currently disabled)
    2019-06-04 10:53:18.993 #1   001bc50c6004fdd6 <log> 0:00:01.940 [debug] [    rpl/task] {      rpl}: 0: Change state disabled->soliciting
    2019-06-04 10:53:18.993 #1   001bc50c6004fdd6 <log> 0:00:01.948 [debug] [ rpl/trickle] {      rpl}: create timer DIS, imin=10000, imax=4, k=1
    2019-06-04 10:53:19.048 #1   001bc50c6004fdd6 <log> 0:00:01.957 [debug] [ rpl/trickle] {      rpl}: create timer probe, imin=1500, imax=6, k=0
    2019-06-04 10:53:19.048 #1   001bc50c6004fdd6 <log> 0:00:01.966 [debug] [       cndfs] {     dtls}: Found file /keys/ca_cert.der at sector 617
    2019-06-04 10:53:19.048 #1   001bc50c6004fdd6 <log> 0:00:01.976 [debug] [      module] { terminal}: Starting icmp
    2019-06-04 10:53:19.048 #1   001bc50c6004fdd6 <hub> 0:00:01.986 [ info] Node registering: firmware ipa3-lnt-dlms-insecure:v149.5-2-g1094917, hardware ipa3.
    2019-06-04 10:53:19.048 #1   001bc50c6004fdd6 <hub> 0:00:00.000 [ info] Setting up node. Loglevel: debug, ignore tasks: none, ignore modules: none
    2019-06-04 10:53:19.048 #1   001bc50c6004fdd6 <hub> 0:00:00.000 [debug] Writing message of type 145 size 27 bootloaderState: 0
    2019-06-04 10:53:19.048 #1   001bc50c6004fdd6 <hub> 0:00:00.000 [ info] Giving lowpan prefix :: to node
    2019-06-04 10:53:19.048 #1   001bc50c6004fdd6 <log> 0:00:01.996 [debug] [      module] { terminal}: Initing management
    2019-06-04 10:53:19.048 #1   001bc50c6004fdd6 <log> 0:00:02.005 [debug] [      module] { terminal}: Initing ping
    2019-06-04 10:53:19.104 #1   001bc50c6004fdd6 <log> 0:00:02.014 [debug] [      module] { terminal}: Initing login
    2019-06-04 10:53:19.104 #1   001bc50c6004fdd6 <log> 0:00:02.023 [debug] [      module] { terminal}: Initing configuration
    2019-06-04 10:53:19.104 #1   001bc50c6004fdd6 <hub> 0:00:02.023 [debug] Got ack
    2019-06-04 10:53:19.104 #1   001bc50c6004fdd6 <hub> 0:00:00.000 [debug] Writing message of type 144 size 77 bootloaderState: 0
    2019-06-04 10:53:19.104 #1   001bc50c6004fdd6 <log> 0:00:02.033 [debug] [      module] { terminal}: Initing datarate
    2019-06-04 10:53:19.104 #1   001bc50c6004fdd6 <log> 0:00:02.043 [debug] [      module] { terminal}: Initing restart
    2019-06-04 10:53:19.104 #1   001bc50c6004fdd6 <log> 0:00:02.052 [debug] [      module] { terminal}: Initing mqstorage
    2019-06-04 10:53:19.104 #1   001bc50c6004fdd6 <log> 0:00:02.061 [debug] [      module] { terminal}: Initing mqcoap
    2019-06-04 10:53:19.154 #1   001bc50c6004fdd6 <log> 0:00:02.070 [debug] [      module] { terminal}: Initing monitor
    2019-06-04 10:53:19.154 #1   001bc50c6004fdd6 <log> 0:00:02.078 [debug] [      module] { terminal}: Initing status
    2019-06-04 10:53:19.154 #1   001bc50c6004fdd6 <hub> 0:00:02.084 [debug] Got ack
    2019-06-04 10:53:19.154 #1   001bc50c6004fdd6 <log> 0:00:02.085 [debug] [      fs/api] {     dtls}: fsOpen (/keys/ca_cert.der, mode=1, fd=0)
    2019-06-04 10:53:19.154 #1   001bc50c6004fdd6 <log> 0:00:02.096 [debug] [      module] { terminal}: Initing statusapi
    2019-06-04 10:53:19.154 #1   001bc50c6004fdd6 <log> 0:00:02.104 [ info] [        dtls] {     dtls}: Loaded /keys/ca_cert.der, size: 568, md5: 62f9c241...
    2019-06-04 10:53:19.154 #1   001bc50c6004fdd6 <log> 0:00:02.116 [debug] [      module] { terminal}: Initing readings
    2019-06-04 10:53:19.198 #1   001bc50c6004fdd6 <log> 0:00:02.125 [debug] [      module] { terminal}: Initing device
    2019-06-04 10:53:19.198 #1   001bc50c6004fdd6 <log> 0:00:02.134 [debug] [      module] { terminal}: Initing hdlc
    2019-06-04 10:53:19.198 #1   001bc50c6004fdd6 <log> 0:00:02.142 [debug] [      module] { terminal}: Initing hdlcLocker
    2019-06-04 10:53:19.198 #1   001bc50c6004fdd6 <log> 0:00:02.151 [debug] [      module] { terminal}: Initing dlms
    2019-06-04 10:53:19.225 #1   001bc50c6004fdd6 <log> 0:00:02.176 [debug] [       cndfs] {     dtls}: Found file /keys/agent_cert.der at sector 616
    2019-06-04 10:53:19.396 #1   001bc50c6004fdd6 <log> 0:00:02.348 [debug] [       cndfs] {     dtls}: Found file /keys/agent_key.der at sector 615
    2019-06-04 10:53:19.721 #1   001bc50c6004fdd6 <log> 0:00:02.661 [debug] [ cndfs/utils] {     dtls}: Found metadata #5 for /keys/agent_cert.der: id=7 st=616 sz=444 refs=0
    2019-06-04 10:53:19.721 #1   001bc50c6004fdd6 <log> 0:00:02.673 [debug] [      fs/api] {     dtls}: fsOpen (/keys/agent_cert.der, mode=1, fd=0)
    2019-06-04 10:53:19.766 #1   001bc50c6004fdd6 <log> 0:00:02.718 [debug] [       cndfs] { terminal}: Found file /dlms_state at sector 455
    2019-06-04 10:53:19.918 #1   001bc50c6004fdd6 <log> 0:00:02.829 [debug] [      fs/api] { terminal}: fsOpen (/dlms_state, mode=0, fd=1)
    2019-06-04 10:53:19.918 #1   001bc50c6004fdd6 <log> 0:00:02.840 [ info] [        dtls] {     dtls}: Loaded /keys/agent_cert.der, size: 396, md5: e96b08dc...
    2019-06-04 10:53:19.918 #1   001bc50c6004fdd6 <log> 0:00:02.852 [ info] [        dlms] { terminal}: Read frame counter 4406988
    2019-06-04 10:53:19.918 #1   001bc50c6004fdd6 <log> 0:00:02.863 [debug] [      module] { terminal}: Initing deviceConfig
    2019-06-04 10:53:19.918 #1   001bc50c6004fdd6 <log> 0:00:02.872 [debug] [      module] { terminal}: Initing deviceDlms
    2019-06-04 10:53:19.972 #1   001bc50c6004fdd6 <log> 0:00:02.884 [debug] [      module] { terminal}: Initing timeSynch
    2019-06-04 10:53:19.972 #1   001bc50c6004fdd6 <log> 0:00:02.893 [debug] [      module] { terminal}: Initing cron
    2019-06-04 10:53:19.972 #1   001bc50c6004fdd6 <log> 0:00:02.902 [debug] [      module] { terminal}: Initing filedl
    2019-06-04 10:53:19.972 #1   001bc50c6004fdd6 <log> 0:00:02.911 [debug] [      module] { terminal}: Initing netinfo
    2019-06-04 10:53:19.972 #1   001bc50c6004fdd6 <log> 0:00:02.918 [debug] [       cndfs] {     dtls}: Found file /keys/agent_key.der at sector 615
    2019-06-04 10:53:19.972 #1   001bc50c6004fdd6 <log> 0:00:02.929 [debug] [      module] { terminal}: Initing activity
    2019-06-04 10:53:20.032 #1   001bc50c6004fdd6 <log> 0:00:02.937 [debug] [      module] { terminal}: Initing powerSwitch
    2019-06-04 10:53:20.032 #1   001bc50c6004fdd6 <log> 0:00:02.947 [debug] [      module] { terminal}: Initing deviceAlarms
    2019-06-04 10:53:20.032 #1   001bc50c6004fdd6 <log> 0:00:02.956 [debug] [      module] { terminal}: Initing preferredParent
    2019-06-04 10:53:20.032 #1   001bc50c6004fdd6 <log> 0:00:02.966 [debug] [      module] { terminal}: Initing logCoap
    2019-06-04 10:53:20.032 #1   001bc50c6004fdd6 <log> 0:00:02.975 [debug] [      module] { terminal}: Initing dlmsPipe
    2019-06-04 10:53:20.032 #1   001bc50c6004fdd6 <log> 0:00:02.984 [debug] [      module] { terminal}: Initing dataProfile
    2019-06-04 10:53:20.101 #1   001bc50c6004fdd6 <log> 0:00:03.029 [debug] [      fs/api] {     dtls}: fsOpen (/keys/agent_key.der, mode=1, fd=0)
    2019-06-04 10:53:20.101 #1   001bc50c6004fdd6 <log> 0:00:03.039 [debug] [ cndfs/utils] { schedule}: Found metadata #3 for /dlms_state: id=9 st=455 sz=4 refs=0
    2019-06-04 10:53:20.101 #1   001bc50c6004fdd6 <log> 0:00:03.049 [debug] [ cndfs/utils] { schedule}: Found metadata #3 for /dlms_state: id=9 st=455 sz=4 refs=0
    2019-06-04 10:53:20.101 #1   001bc50c6004fdd6 <log> 0:00:03.060 [debug] [      fs/api] { schedule}: fsOpen (/dlms_state, mode=2, fd=1)
    2019-06-04 10:53:20.117 #1   001bc50c6004fdd6 <log> 0:00:03.069 [ info] [        dtls] {     dtls}: Loaded /keys/agent_key.der, size: 121, md5: c77eaadd...
    2019-06-04 10:53:20.176 #1   001bc50c6004fdd6 <log> 0:00:03.127 [debug] [       cndfs] { terminal}: Found file /dp_config at sector 632
    2019-06-04 10:53:20.316 #1   001bc50c6004fdd6 <log> 0:00:03.237 [debug] [       cndfs] { schedule}: Committing 4 B at 0 (filesize 4)
    2019-06-04 10:53:20.316 #1   001bc50c6004fdd6 <log> 0:00:03.245 [debug] [       cndfs] { schedule}: Rewinding
    2019-06-04 10:53:20.316 #1   001bc50c6004fdd6 <log> 0:00:03.252 [debug] [      fs/api] { terminal}: fsOpen (/dp_config, mode=0, fd=0)
    2019-06-04 10:53:20.316 #1   001bc50c6004fdd6 <log> 0:00:03.260 [debug] [  fs/service] { schedule}: flashopProgram 456:0x28 11 B
    2019-06-04 10:53:20.316 #1   001bc50c6004fdd6 <log> 0:00:03.269 [debug] [  fs/service] { schedule}: flashopProgram 456:0x33 4 B
    2019-06-04 10:53:20.337 #1   001bc50c6004fdd6 <log> 0:00:03.284 [debug] [  fs/service] { schedule}: flashopProgram 456:0x0 40 B
    2019-06-04 10:53:20.337 #1   001bc50c6004fdd6 <log> 0:00:03.292 [debug] [  fs/service] { schedule}: flashopErase 455:0x0 4096 B
    2019-06-04 10:53:20.413 #1   001bc50c6004fdd6 <log> 0:00:03.341 [debug] [       cndfs] { schedule}: Cloned s455 -> s456g3 (size=55, full=0)
    2019-06-04 10:53:20.414 #1   001bc50c6004fdd6 <log> 0:00:03.350 [ info] [        dlms] { schedule}: Wrote frame counter 4407988
    2019-06-04 10:53:20.414 #1   001bc50c6004fdd6 <log> 0:00:03.357 [debug] [       cndfs] { terminal}: Rewinding
    2019-06-04 10:53:20.414 #1   001bc50c6004fdd6 <log> 0:00:03.365 [debug] [ dataProfile] { terminal}: Data profile config restored
    2019-06-04 10:53:20.414 #1   001bc50c6004fdd6 <log> 0:00:03.373 [debug] [      module] { terminal}: Initing keyload
    2019-06-04 10:53:20.445 #1   001bc50c6004fdd6 <log> 0:00:03.379 [debug] [      module] { terminal}: Initing remoteMemory
    2019-06-04 10:53:20.445 #1   001bc50c6004fdd6 <log> 0:00:03.386 [debug] [      module] { terminal}: Starting management
    2019-06-04 10:53:20.445 #1   001bc50c6004fdd6 <log> 0:00:03.393 [debug] [      module] { terminal}: Starting login
    2019-06-04 10:53:20.445 #1   001bc50c6004fdd6 <log> 0:00:03.400 [debug] [      module] { terminal}: Starting mqstorage
    2019-06-04 10:53:20.490 #1   001bc50c6004fdd6 <log> 0:00:03.442 [debug] [       cndfs] { terminal}: Found file /mq/000.mq at sector 347
    2019-06-04 10:53:20.622 #1   001bc50c6004fdd6 <log> 0:00:03.551 [debug] [      fs/api] { terminal}: fsOpen (/mq/000.mq, mode=0, fd=0)
    2019-06-04 10:53:20.622 #1   001bc50c6004fdd6 <log> 0:00:03.560 [debug] [ cndfs/utils] { terminal}: Found metadata #3 for /mq/000.mq: id=10 st=347 sz=3600 refs=0
    2019-06-04 10:53:20.622 #1   001bc50c6004fdd6 <log> 0:00:03.571 [debug] [   mqstorage] { terminal}: /mq/000.mq: First m#: 1, size: 3600
    2019-06-04 10:53:20.728 #1   001bc50c6004fdd6 <log> 0:00:03.681 [ info] [      fs/api] { terminal}: open /mq/001.mq failed (mode=0): 0xe
    2019-06-04 10:53:20.839 #1   001bc50c6004fdd6 <log> 0:00:03.790 [ info] [      fs/api] { terminal}: open /mq/002.mq failed (mode=

    --------------------------------

    node unauthorized:

    DTLSConnectionRegistry - License id in DTLS node certificate does not match node id or previous node id or alias id for node with
    address=/fd51:3c22:ee1f:2:21b:c50c:6000:18b:5684, licenseId=00-1B-C5-0C-60-00-00-AB, nodeId=00-1b-c5-0c-60-00-01-8b, previousNodeId=null, aliasId=null

    use alias to license id value:
    coap_request.py --ctrlporthub :4003 --config prod.alias.id   00-1B-C5-0C-60-00-00-AB

    -------------------------------------------------

    gateway performance:
    - From powerup, all nodes must form mesh with gw within 2(?) minutes.
    - From powerup, all nodes must login to server within 5(?) minutes.
    - No "send failed" messages

    ---------------------------------------------------

    Deadlock:
    - Kaifa_ma304 v121 (mac_rx)
    - SMIP-26 similar (crypto/dtls)
    - gw200 v149 (mac_rx)
    - ipa3-genus-dlms-insecure:v142.3

    After reproducing the problem with 18 nodes continuously pinging the gw200 for a few hours, it turns out that:

    macSecuritySetTxKey() is the owner of s_keysMutex.
    setKeyByIndex() wants to take s_keysMutex but can't.
    Given the code within those two fns, a likely failure mode would be for aesCcmSetKey() within macSecuritySetTxKey() to have itself blocked for longer than the deadlock-detect time (2 min).

    wc_AesCcmSetKey() does nothing but call wc_AesSetKey() which calls wc_AesSetKeyLocal().
    wc_AesSetKeyLocal has a number while(1) loops that break out based on configuration values.
    aes->rounds
    aes->keylen

    OR:

    getEntryByDst() calls macDeviceTableFindDevice() which has to lock the MAC device table, this could be blocking.



    -----------------------------------------------------

    mac_rx:
    - processReceivedDataFrame() -> macDeviceTableFindDevice() followed by macSecurityDecryptFrame() -> setKeyByIndex() -> OS_mutexTake(&s_keysMutex) -> blocked.

    lowpan_tx:
    - processSend() -> sendLowpanFrag() -> macTx() -> encodeFrame() -> macEncodeDataFrame() -> macSecuritySetTxKey() -> OS_mutexTake(&s_keysMutex), followed by a getEntryByDst() ->
    macDeviceTableFindDevice() -> OS_mutexTake(&s_macTableMutex);

    Deadlock
    - lowpan_tx owns the s_keysMutex and wants s_macTableMutex.
    - mac_rx holds s_macTableMutex and wants s_keysMutex.

    Analysis:
    - Both mac_rx and lowpan_tx want s_macTableMutex and s_keysMutex.
    - mac_rx takes s_macTableMutex and then s_keysMutex
    - lowpan_tx takes s_keysMutex followed by s_macTableMutex.
    - The differing order means each is held by the other task causing the deadlock.

    Solution:
    - Both these tasks are wanting data at roughly the same architectural level at roughly the same frequency. Make them use the same mutex.


    2239996:2019-06-07 15:34:07.139 #1   001bc50c6005a283 <log> 3:55:19.268 [panic] osal_freertos:387, in task mac_rx: Deadlock 0x200071a8 0x1da4b
    2375263:2019-06-07 16:23:49.186 #1   001bc50c6005a283 <log> 0:27:16.840 [panic] osal_freertos:388, in task mac_rx: Deadlock 0x200071f0 0x1db21 (194, 441)
    3858273:2019-06-07 21:41:40.305 #1   001bc50c6005a283 <log> 4:28:55.234 [panic] osal_freertos:390, in task mac_rx: Deadlock 0x20007194 0x1db21 (194, 426, 0, 68)
    4225906:2019-06-07 23:16:19.797 #1   001bc50c6005a283 <log> 1:20:25.493 [panic] osal_freertos:391, in task mac_rx: Deadlock 0x20007194 0x1db21 (194, 442, 0, 68)
    7186547:2019-06-08  9:40:45.241 #1   001bc50c6005a283 <log> 2:11:26.688 [panic] osal_freertos:392, in task mac_rx: Deadlock 0x200071bc 0x1db21 (194, 442, 0, 68, lowpan_tx, mac_rx)
    7284287:2019-06-08 10:08:24.132 #1   001bc50c6005a283 <log> 0:27:12.525 [panic] osal_freertos:392, in task mac_rx: Deadlock 0x200071bc 0x1db21 (194, 442, 0, 68, lowpan_tx, mac_rx)
    7772136:2019-06-08 11:53:33.633 #1   001bc50c6005a283 <log> 1:44:41.752 [panic] osal_freertos:392, in task mac_rx: Deadlock 0x200071bc 0x1db21 (194, 442, 0, 68, lowpan_tx, mac_rx)
    8058244:2019-06-08 13:05:38.829 #1   001bc50c6005a283 <log> 0:27:54.271 [panic] osal_freertos:392, in task mac_rx: Deadlock 0x200071bc 0x1db21 (194, 442, 0, 68, lowpan_tx, mac_rx)
    8271758:2019-06-08 14:11:05.499 #1   001bc50c6005a283 <log> 1:04:58.909 [panic] osal_freertos:392, in task mac_rx: Deadlock 0x200071bc 0x1db21 (194, 442, 0, 68, lowpan_tx, mac_rx)
    8673086:2019-06-08 15:37:21.536 #1   001bc50c6005a283 <log> 1:26:11.891 [panic] osal_freertos:392, in task mac_rx: Deadlock 0x200071bc 0x1db21 (194, 442, 0, 68, lowpan_tx, mac_rx)
    9224350:2019-06-08 17:45:58.616 #1   001bc50c6005a283 <log> 2:08:09.320 [panic] osal_freertos:392, in task mac_rx: Deadlock 0x200071bc 0x1db21 (194, 442, 0, 68, lowpan_tx, mac_rx)
    10535009:2019-06-08 22:21:09.568 #1   001bc50c6005a283 <log> 4:34:47.043 [panic] osal_freertos:392, in task mac_rx: Deadlock 0x200071bc 0x1db21 (194, 442, 0, 68, lowpan_tx, mac_rx)
    10926494:2019-06-08 23:47:59.643 #1   001bc50c6005a283 <log> 1:26:23.949 [panic] osal_freertos:392, in task mac_rx: Deadlock 0x200071bc 0x1db21 (194, 442, 0, 68, lowpan_tx, mac_rx)
    11060317:2019-06-09  0:23:20.483 #1   001bc50c6005a283 <log> 0:34:53.050 [panic] osal_freertos:392, in task mac_rx: Deadlock 0x200071bc 0x1db21 (194, 442, 0, 68, lowpan_tx, mac_rx)
    11727202:2019-06-09  2:57:51.758 #1   001bc50c6005a283 <log> 1:52:20.418 [panic] osal_freertos:392, in task mac_rx: Deadlock 0x200071bc 0x1db21 (194, 442, 0, 68, lowpan_tx, mac_rx)

    From: Friday, 7 June 2019, 15:34:07
    To: Sunday, 9 June 2019, 02:57:51
    Result: 1 day, 11 hours, 23 minutes and 44 seconds
    = 35h 23 min 44 sec
    = 126000 + 2640 + 44 = 128684

    number of deadlocks: 15

    Deadlock rate = 128684 / 15
    = 8578s
    = 2.3 hrs
    = 2h 20mins

    ------------------------------------------------------------

    Before change:
    07E3060BFF0E3230FF007800

    After change:
    07E3060BFF0E370BFFFF8800

    ------------------------------------------------------------

    gateway testing:

    Note: Although it seems superfluous at the minute, the mesh and all the relevant protocols
    do need proper testing as we have Wi-SUN coming up which will change all of these yet we will
    still need to support the current standard. To do this in the transitional period will require
    us to have tests setup.
    Note2: Security will also come under more scrutiny with SMIP and Wi-SUN, hence the fuzzing and
    known-exploit testing.

    Gateway functionality:
    - Cellular interface (PPP)
        - packet encoding/decoding (wireshark).
        - fuzzing
    - Mesh radio interface (MAC, PHY)
        - packet encoding/decoding (wireshark).
        - fuzzing
    - ethernet interface (IP)
        - packet encoding/decoding (wireshark).
        - fuzzing
    - IP stack (6LoWPAN, IP, UDP, CoAP)
        - fuzzing
    - DTLS
        - fuzzing
        - known exploits (e.g. https://unit42.paloaltonetworks.com/dtls-vulnerabilities-cve-2014-6321/, https://www.cvedetails.com/cve/CVE-2014-0160/)
        - timeouts & heartbeat
    - Mesh management (RPL)
        - 1-node, 10-nodes, 100-node performance and time-to-settle at each.
        - Disturb in various ways; reset some nodes, reset inner nodes
        - Topologies, chain, star, star-of-stars.
        - Use network simulator to simulate bad uplink.
        - fuzzing.
        - versioning, network isolation (RPL-id, PAN-id, etc).
        - Max. supported nodes (1000).
    - Key update
        - groups
        - interaction
        - silent-dropping.
    - Routing.
        - routing loops
        - non-existant nodes.
        - broadcast
        - unicast
        - multicast
    - uplink ipv6 network managemen
        - neighbour discovery
        - gateway solicitation
    - uplink ipv4 network management (DHCP)
        - neighbour discovery / ARP
        - gateway solicitationA DHCP
    - ethernet downlink management
        - DHCP6
    - tunnel (tun6d)
    - file distribution.
    - low power mode.
    - Time sync.
        - accuracy.
        - accuracy in disturbed mesh situations.
    - Modem
        - stability
        - recovery (reset)
        - upgradability

    General:
    - Filesystem (CndFS)
       - bad-blocks (obviously will fail here).
       - wear-levelling
       - encryption
    - stability, mesh, cellular
       - long duration tests.
       - mesh reform without power-cycle.
       - mesh reform with power-cycle.
       -
    - stress, overload
    - Throughput, CPU & I/O loading tests.


    ---------------------------------------------------------

    - At ~2.1V, processor starts up without Flash. Causes entry to prodmode.
    - At ~2.4V, processor starts up in run-mode with Flash, but after a few seconds packet tx causes reboot and prodmode is entered (Flash is inactive at this point).
    - At ~2.7V, processor srarts up in run-mode with Flash, first packet tx causes reboot into run-mode (Flash is semi-active).
    - At ~2.9V, processor starts up in run-mode with Flash, seems stable but incorrect framecounter has been read:
    2019-06-12 13:41:26.964 #18  001bc50c6000018f <log> 22:20:39.171 [ info] [mac_security] {   mac_rx}: Possible replay attack: 02-1b-c5-0c-60-04-fd-d6 counter 42000 expected > 730057
    this means no mesh!



    -----------------------------------------------------

    Change email and author in git

    git clone -b add-mbus-2 git@gitlab.cyco.io:JasonWebb/terminal.git terminalJason

    git add remote gerrit <gerrit-repo-URL>

    https://help.github.com/en/articles/changing-author-info

    do a commit push as usual to the new branch (created in gerrit).


    ------------------------------------------------

    heap size:
    heap is controlled by newlib which uses HeapLimit symbols.
    HeapLimit is defined in flex library ld scripts.

    startup_efr32fg12p.c
    3pp/flex/src/platform/Device/SiliconLabs/EFR32FG12P/Source/GCC/startup_efr32fg12p.c

    static uint8_t heap[__HEAP_SIZE]   __attribute__ ((aligned(8), used, section(".heap")));

    gcc_arm.ld:

        .heap (COPY):
        {
            __HeapBase = .;
            __end__ = .;
            end = __end__;
        } > RAM

    _HeapLimit is dynamically set via the linker to whatever is left in RAM.

    --------------------------------------

    debugging on Cortex m3

    Flash patching unit allows up to 3 addresses that read as 0xbebe for debugging. This allows
    FLASh code to have effective breakpoints put in without writing to the flash itself.
    FPB flash patch and breakpoint unit.

    https://developer.arm.com/docs/100166/latest/debug/flash-patch-and-breakpoint-unit-fpb/fpb-programmers-model


    ------------------------------------

    fwVersion: 12110403   (new)
    fwVersion: 06010066   (old)

    ------------------------------------------------------------------------------

    power issue:

    Version: ipa3-genus-dlms-insecure:v146-7-gddde399 on hw ipa3

    2019-06-20 14:39:38.258 #1   0000000000000000 <log> 0:00:00.597 [ info] [       cndfs] {       bl}:   --DDDDDD DDDDDDDD DDD-EEEE EEEE-E-E EEEEEEE- -------- -------- --------
    2019-06-20 14:39:38.258 #1   0000000000000000 <hub> 0:00:00.604 [debug] Got ack
    2019-06-20 14:39:38.258 #1   0000000000000000 <hub> 0:00:00.000 [debug] Writing message of type 144 size 77 bootloaderState: 0
    2019-06-20 14:39:38.259 #1   0000000000000000 <log> 0:00:00.615 [ info] [       cndfs] {       bl}:   567----- -------- -------- -------- -------- -------- =------- --------
    2019-06-20 14:39:38.260 #1   0000000000000000 <log> 0:00:00.633 [ info] [       cndfs] {       bl}:   -------- -------- -------- -------- -------- -------- -------- --------
    2019-06-20 14:39:38.260 #1   0000000000000000 <log> 0:00:00.645 [ info] [       cndfs] {       bl}:
    2019-06-20 14:39:38.274 #1   0000000000000000 <hub> 0:00:00.671 [debug] Got ack
    2019-06-20 14:39:38.374 #1   0000000000000000 <log> 0:00:00.753 [ info] [      fs/api] {       bl}: open /bl_request failed (mode=1): 0xe
    2019-06-20 14:39:38.374 #1   0000000000000000 <hub> 0:00:00.761 [ info] Node registering
    2019-06-20 14:39:38.374 #1   0000000000000000 <hub> 0:00:00.000 [ info] Setting up node. Loglevel: debug, ignore tasks: none, ignore modules: none
    2019-06-20 14:39:38.374 #1   0000000000000000 <hub> 0:00:00.000 [debug] Writing message of type 145 size 27 bootloaderState: 0
    2019-06-20 14:39:38.374 #1   0000000000000000 <hub> 0:00:00.000 [ info] Giving lowpan prefix :: to node
    2019-06-20 14:39:38.390 #1   0000000000000000 <hub> 0:00:00.782 [debug] Got ack
    2019-06-20 14:39:38.390 #1   0000000000000000 <hub> 0:00:00.000 [debug] Writing message of type 144 size 77 bootloaderState: 0
    2019-06-20 14:39:38.406 #1   0000000000000000 <hub> 0:00:00.802 [debug] Got ack
    2019-06-20 14:39:40.396 #1   0000000000000000 <log> 0:00:02.763 [ info] [  bootloader] {       bl}: Jumping to firmware
    2019-06-20 14:39:40.641 #1   0000000000000000 <hub> 0:00:00.007 [ info] Expected message# 32 but got 1, node restarted?
    2019-06-20 14:39:40.641 #1   0000000000000000 <log> 0:00:00.007 [ info] [       cndfs] { terminal}: Mounting with 1024 x 4096 KiB sectors = 4096 KiB
    2019-06-20 14:39:40.991 #1   0000000000000000 <log> 0:00:00.315 [ info] [       cndfs] { terminal}: Mounted: 279 sectors used, 31 files
    2019-06-20 14:39:40.991 #1   0000000000000000 <log> 0:00:00.323 [ info] [       cndfs] { terminal}: Flash map:
    2019-06-20 14:39:40.991 #1   0000000000000000 <log> 0:00:00.336 [ info] [       cndfs] { terminal}:   -------- -------- -------- -----<-- -------- -------- -------- --------
    2019-06-20 14:39:40.991 #1   0000000000000000 <log> 0:00:00.354 [ info] [       cndfs] { terminal}:   -------- -------- -------- -FFFFF-F FFFFFFFF FFF-GGGG GGGGGGGG GGGGG-HH
    2019-06-20 14:39:41.070 #1   0000000000000000 <log> 0:00:00.372 [ info] [       cndfs] { terminal}:   HHHHHHHH HHHHHHH- :::::::I :::::::: ::-@@@@@ @@@@@@@@ -@@@@--- J-2-----
    2019-06-20 14:39:41.070 #1   0000000000000000 <log> 0:00:00.390 [ info] [       cndfs] { terminal}:   -------- -------- L------- -------- -------- -------- -------- --------
    2019-06-20 14:39:41.070 #1   0000000000000000 <log> 0:00:00.409 [ info] [       cndfs] { terminal}:   -------- -------- -------- -9------ -------- -------- -------- --------
    2019-06-20 14:39:41.070 #1   0000000000000000 <log> 0:00:00.427 [ info] [       cndfs] { terminal}:   -------- -------- AAAA-AA- O------- A--A-AAA AAAA-AA- ---B-B-B BBBB-BBB
    2019-06-20 14:39:41.128 #1   0000000000000000 <log> 0:00:00.445 [ info] [       cndfs] { terminal}:   BBBBBBB- -------- ------>- >>>>>>>> ->>>>>>> >->>>>>> >>->>>>> >>>->>>>
    2019-06-20 14:39:41.128 #1   0000000000000000 <log> 0:00:00.463 [ info] [       cndfs] { terminal}:   >>>>->>> >>>>>->> ?;------ -------- N------- --8----- -------- ----34--
    2019-06-20 14:39:41.128 #1   0000000000000000 <log> 0:00:00.481 [ info] [       cndfs] { terminal}:   ------KK KKKKKKKK KKKKKKKK KKKKKKKK KKKKKKKK KKKKKKKK KKKKKKKK K-------
    2019-06-20 14:39:41.128 #1   0000000000000000 <log> 0:00:00.500 [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- C------- M-----M-
    2019-06-20 14:39:41.190 #1   0000000000000000 <log> 0:00:00.518 [ info] [       cndfs] { terminal}:   ----M--- ---MM--- -------- -------- -------- -------- -------- --------
    2019-06-20 14:39:41.190 #1   0000000000000000 <log> 0:00:00.536 [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
    2019-06-20 14:39:41.191 #1   0000000000000000 <log> 0:00:00.554 [ info] [       cndfs] { terminal}:   -------- -------- -------- -----1-- -------- -------- -------- --------
    2019-06-20 14:39:41.251 #1   0000000000000000 <log> 0:00:00.572 [ info] [       cndfs] { terminal}:   --DDDDDD DDDDDDDD DDD-EEEE EEEE-E-E EEEEEEE- -------- -------- --------
    2019-06-20 14:39:41.252 #1   0000000000000000 <log> 0:00:00.591 [ info] [       cndfs] { terminal}:   567----- -------- -------- -------- -------- -------- =------- --------
    2019-06-20 14:39:41.252 #1   0000000000000000 <log> 0:00:00.609 [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
    2019-06-20 14:39:41.252 #1   0000000000000000 <log> 0:00:00.620 [ info] [       cndfs] { terminal}:
    2019-06-20 14:39:41.252 #1   0000000000000000 <hub> 0:00:00.620 [ info] Received msg# 20 from node, sending settings
    2019-06-20 14:39:41.252 #1   0000000000000000 <hub> 0:00:00.000 [ info] Setting up node. Loglevel: debug, ignore tasks: none, ignore modules: none
    2019-06-20 14:39:41.252 #1   0000000000000000 <hub> 0:00:00.000 [debug] Writing message of type 145 size 27 bootloaderState: 0
    2019-06-20 14:39:41.252 #1   0000000000000000 <hub> 0:00:00.000 [ info] Giving lowpan prefix :: to node
    2019-06-20 14:39:41.267 #1   0000000000000000 <hub> 0:00:00.645 [debug] Got ack
    2019-06-20 14:39:41.267 #1   0000000000000000 <hub> 0:00:00.000 [debug] Writing message of type 144 size 77 bootloaderState: 0
    2019-06-20 14:39:41.283 #1   0000000000000000 <hub> 0:00:00.665 [debug] Got ack
    2019-06-20 14:39:41.307 #1   0000000000000000 <log> 0:00:00.676 [debug] [       cndfs] { terminal}: Found file /configuration-1.pb at sector 490
    2019-06-20 14:39:41.437 #1   0000000000000000 <log> 0:00:00.787 [debug] [      fs/api] { terminal}: fsOpen (/configuration-1.pb, mode=1, fd=0)
    2019-06-20 14:39:41.437 #1   0000000000000000 <log> 0:00:00.798 [ WARN] [    fs/crypt] { terminal}: closeRead: HMAC failed
    2019-06-20 14:39:41.437 #1   0000000000000000 <log> 0:00:00.806 [ERROR] [   config/pb] { terminal}: Failed close check
    2019-06-20 14:39:41.463 #1   0000000000000000 <log> 0:00:00.832 [debug] [       cndfs] { terminal}: Found file /configuration-2.pb at sector 186
    2019-06-20 14:39:41.599 #1   0000000000000000 <log> 0:00:00.942 [debug] [      fs/api] { terminal}: fsOpen (/configuration-2.pb, mode=1, fd=0)
    2019-06-20 14:39:41.599 #1   0000000000000000 <log> 0:00:00.954 [ WARN] [    fs/crypt] { terminal}: closeRead: HMAC failed
    2019-06-20 14:39:41.599 #1   0000000000000000 <log> 0:00:00.961 [ERROR] [   config/pb] { terminal}: Failed close check
    2019-06-20 14:39:41.599 #1   0000000000000000 <log> 0:00:00.968 [ info] [   config/pb] { terminal}: Config generations: 0, 0
    2019-06-20 14:39:41.599 #1   0000000000000000 <log> 0:00:00.976 [debug] [      module] { terminal}: Starting srcRestrictedCfgService
    2019-06-20 14:39:41.653 #1   0000000000000000 <log> 0:00:00.984 [debug] [      module] { terminal}: Starting timeService
    2019-06-20 14:39:41.653 #1   0000000000000000 <log> 0:00:00.991 [ info] [    timezone] { terminal}: New TZ = CET-1CEST,M3.5.0/2,M10.5.0/3
    2019-06-20 14:39:41.653 #1   0000000000000000 <log> 0:00:01.001 [ info] [        time] { terminal}: Uptime: 1001, local time: 1970-01-01  1:19:12.486, UTC: 1152.486, status: 0
    2019-06-20 14:39:41.653 #1   0000000000000000 <log> 0:00:01.013 [panic] ======== Panic ========
    2019-06-20 14:39:41.653 #1   0000000000000000 <log> 0:00:01.013 [panic] terminal:98, in task terminal: LoWPAN EUI-64 is missing, set prod.lowpan.eui64




    - running fine on full power.

    - turn off mains to run at 2.33V from cap.
    - runs fine until attempt to transmit. This causes a reboot as below:
    2019-06-20 15:34:16.138 #1   001bc50c6000d3ca <log> 0:02:17.304 [debug] [        hdlc] {   device}: disconnectLink 0x20012c70
    2019-06-20 15:34:16.138 #1   001bc50c6000d3ca <log> 0:02:17.311 [debug] [  meter/dlms] {   device}: -- waiting on the userQueue for 60000ms --
    2019-06-20 15:34:16.138 #1   001bc50c6000d3ca <log> 0:02:17.320 [debug] [    hdlclock] {   device}: -- HDLC locked --
    2019-06-20 15:34:16.138 #1   001bc50c6000d3ca <log> 0:02:17.327 [debug] [  meter/dlms] {   device}: Setup AA using LLS without ciphering, without fw upgrade
    2019-06-20 15:34:16.150 #1   001bc50c6000d3ca <log> 0:02:17.338 [debug] [        dlms] {   device}: Setup AA with LLS
    2019-06-20 15:34:16.232 #1   001bc50c6000d3ca <log> 0:02:17.394 [debug] [        hdlc] {   device}: Connect HDLC link
    2019-06-20 15:34:16.232 #1   001bc50c6000d3ca <log> 0:02:17.401 [debug] [        hdlc] {   device}: tx: (1/1): 7e
    2019-06-20 15:34:16.232 #1   001bc50c6000d3ca <log> 0:02:17.407 [debug] [        hdlc] {   device}: tx: (1/1): a020
    2019-06-20 15:34:16.232 #1   001bc50c6000d3ca <log> 0:02:17.414 [debug] [        hdlc] {   device}: tx: (1/1): 03
    2019-06-20 15:34:16.232 #1   001bc50c6000d3ca <log> 0:02:17.420 [debug] [        hdlc] {   device}: tx: (1/1): 41
    2019-06-20 15:34:16.232 #1   001bc50c6000d3ca <log> 0:02:17.427 [debug] [        hdlc] {   device}: tx: (1/1): 93
    2019-06-20 15:34:16.263 #1   001bc50c6000d3ca <log> 0:02:17.433 [debug] [        hdlc] {   device}: tx: (1/1): 28bc
    2019-06-20 15:34:16.263 #1   001bc50c6000d3ca <log> 0:02:17.440 [debug] [        hdlc] {   device}: tx: (1/2): 8180140502015e0602015e0704000000
    2019-06-20 15:34:16.263 #1   001bc50c6000d3ca <log> 0:02:17.449 [debug] [        hdlc] {   device}: tx: (2/2): 01080400000001
    2019-06-20 15:34:16.310 #1   001bc50c6000d3ca <log> 0:02:17.478 [debug] [        hdlc] {   device}: tx: (1/1): 51af
    2019-06-20 15:34:16.310 #1   001bc50c6000d3ca <log> 0:02:17.484 [debug] [        hdlc] {   device}: tx: (1/1): 7e
    2019-06-20 15:34:16.310 #1   001bc50c6000d3ca <log> 0:02:17.491 [debug] [  meter/dlms] {   device}:  -- waiting on s_dlmsSemaphore for 100000ms --
    2019-06-20 15:34:17.338 #1   001bc50c6000d3ca <log> 0:02:18.502 [debug] [    rpl/core] {      rpl}: 0: transmit DIS
    2019-06-20 15:34:17.338 #1   001bc50c6000d3ca <log> 0:02:18.509 [debug] [        icmp] {      rpl}: ICMPv6 multicast to ff02::1a, RPL control message (DIS), 23 B
    2019-06-20 15:34:17.338 #1   001bc50c6000d3ca <log> 0:02:18.519 [debug] [          ip] {      rpl}: Send IP on lowpan, 27 B, type 58, ttl 32: fe80::21b:c50c:6000:d3ca -> ff02::1a      <-------- transmit
    2019-06-20 15:34:17.430 #1   0000000000000000 <hub> 0:00:00.003 [ info] Expected message# 752 but got 1, node restarted?
    2019-06-20 15:34:17.430 #1   0000000000000000 <log> 0:00:00.003 [debug] [      module] {       bl}: Starting ctrlportService
    2019-06-20 15:34:17.430 #1   0000000000000000 <log> 0:00:00.010 [ info] [  bootloader] {       bl}: Bootloader starting. Version ipa3-bl:v112
    2019-06-20 15:34:17.431 #1   0000000000000000 <log> 0:00:00.019 [debug] [      module] {       bl}: Initing fsService
    2019-06-20 15:34:17.431 #1   0000000000000000 <log> 0:00:00.026 [debug] [      module] {       bl}: Starting fsService
    2019-06-20 15:34:17.431 #1   0000000000000000 <log> 0:00:00.034 [ info] [       cndfs] {       bl}: Mounting with 1024 x 4096 KiB sectors = 4096 KiB
    2019-06-20 15:34:17.780 #1   0000000000000000 <log> 0:00:00.341 [ info] [       cndfs] {       bl}: Mounted: 279 sectors used, 31 files
    2019-06-20 15:34:17.780 #1   0000000000000000 <log> 0:00:00.350 [ info] [       cndfs] {       bl}: Flash map:
    2019-06-20 15:34:17.780 #1   0000000000000000 <log> 0:00:00.362 [ info] [       cndfs] {       bl}:   -------- -------- -------- -----<-- -------- -------- -------- --------
    2019-06-20 15:34:17.780 #1   0000000000000000 <log> 0:00:00.380 [ info] [       cndfs] {       bl}:   -------- -------- -------- -FFFFF-F FFFFFFFF FFF-GGGG GGGGGGGG GGGGG-HH
    2019-06-20 15:34:17.849 #1   0000000000000000 <log> 0:00:00.398 [ info] [       cndfs] {       bl}:   HHHHHHHH HHHHHHH- :::::::I :::::::: ::-@@@@@ @@@@@@@@ -@@@@--- J-2-----
    2019-06-20 15:34:17.849 #1   0000000000000000 <log> 0:00:00.416 [ info] [       cndfs] {       bl}:   -------- -------- L------- -------- -------- -------- -------- --------
    2019-06-20 15:34:17.849 #1   0000000000000000 <log> 0:00:00.434 [ info] [       cndfs] {       bl}:   -------- -------- -------- -9------ -------- -------- -------- --------
    2019-06-20 15:34:17.849 #1   0000000000000000 <log> 0:00:00.452 [ info] [       cndfs] {       bl}:   -------- -------- AAAA-AA- ---O---- A--A-AAA AAAA-AA- ---B-B-B BBBB-BBB
    2019-06-20 15:34:17.911 #1   0000000000000000 <log> 0:00:00.470 [ info] [       cndfs] {       bl}:   BBBBBBB- -------- ------>- >>>>>>>> ->>>>>>> >->>>>>> >>->>>>> >>>->>>>
    2019-06-20 15:34:17.911 #1   0000000000000000 <log> 0:00:00.488 [ info] [       cndfs] {       bl}:   >>>>->>> >>>>>->> ?;------ -------- ---N---- --8----- -------- ----34--
    2019-06-20 15:34:17.911 #1   0000000000000000 <log> 0:00:00.506 [ info] [       cndfs] {       bl}:   ------KK KKKKKKKK KKKKKKKK KKKKKKKK KKKKKKKK KKKKKKKK KKKKKKKK K-------
    2019-06-20 15:34:17.980 #1   0000000000000000 <log> 0:00:00.524 [ info] [       cndfs] {       bl}:   -------- -------- -------- -------- -------- -------- C------- M-----M-
    2019-06-20 15:34:17.980 #1   0000000000000000 <log> 0:00:00.543 [ info] [       cndfs] {       bl}:   ----M--- ---MM--- -------- -------- -------- -------- -------- --------
    2019-06-20 15:34:17.980 #1   0000000000000000 <log> 0:00:00.561 [ info] [       cndfs] {       bl}:   -------- -------- -------- -------- -------- -------- -------- --------
    2019-06-20 15:34:17.980 #1   0000000000000000 <log> 0:00:00.579 [ info] [       cndfs] {       bl}:   -------- -------- -------- -----1-- -------- -------- -------- --------

    - on power up, we try to read the config-files.
    - Flash seems to be returning corrupted data for some data reads, but identifier read
    and metadata read seem ok, enough to 'find' the file anyway.

    Found file /configuration-1.pb at sector 490
    fsOpen (/configuration-1.pb, mode=1, fd=0)
    closeRead: HMAC failed
    Failed close check
    Found file /configuration-2.pb at sector 186
    fsOpen (/configuration-2.pb, mode=1, fd=0)
    closeRead: HMAC failed
    Failed close check
    Config generations: 0, 0  <------ 0 == INVALID_GENERATION



    Another fault:
    slowly wind-up from below reset to 2.35V
    - bootloader cannot detect FLASH.
    - firmware does not run.

    2019-06-20 16:09:57.069 #1   0000000000000000 <hub> 0:00:00.055 [ info] Node registering
    2019-06-20 16:09:57.069 #1   0000000000000000 <hub> 0:00:00.000 [ info] Setting up node. Loglevel: debug, ignore tasks: none, ignore modules: none
    2019-06-20 16:09:57.069 #1   0000000000000000 <hub> 0:00:00.000 [debug] Writing message of type 145 size 27 bootloaderState: 0
    2019-06-20 16:09:57.069 #1   0000000000000000 <hub> 0:00:00.000 [ info] Giving lowpan prefix :: to node
    2019-06-20 16:09:57.085 #1   0000000000000000 <hub> 0:00:00.073 [debug] Got ack
    2019-06-20 16:09:57.085 #1   0000000000000000 <hub> 0:00:00.000 [debug] Writing message of type 144 size 77 bootloaderState: 0
    2019-06-20 16:09:57.101 #1   0000000000000000 <hub> 0:00:00.093 [debug] Got ack
    2019-06-20 16:09:59.096 #1   0000000000000000 <log> 0:00:02.057 [ info] [  bootloader] {       bl}: Jumping to firmware
    2019-06-20 16:09:59.353 #1   0000000000000000 <hub> 0:00:00.003 [ info] Expected message# 12 but got 1, node restarted?
    2019-06-20 16:09:59.353 #1   0000000000000000 <log> 0:00:00.003 [debug] [      module] {       bl}: Starting ctrlportService
    2019-06-20 16:09:59.353 #1   0000000000000000 <log> 0:00:00.010 [ info] [  bootloader] {       bl}: Bootloader starting. Version ipa3-bl:v112
    2019-06-20 16:09:59.353 #1   0000000000000000 <log> 0:00:00.019 [ERROR] [       flash] {       bl}: Unsupported flash id: 00 00 00
    2019-06-20 16:09:59.353 #1   0000000000000000 <log> 0:00:00.027 [debug] [      module] {       bl}: Initing fsService
    2019-06-20 16:09:59.353 #1   0000000000000000 <log> 0:00:00.034 [debug] [      module] {       bl}: Starting fsService
    2019-06-20 16:09:59.379 #1   0000000000000000 <log> 0:00:00.041 [ERROR] [  fs/service] {       bl}: No flash
    2019-06-20 16:09:59.379 #1   0000000000000000 <log> 0:00:00.047 [ info] [      fs/api] {       bl}: open /bl_request failed (mode=1): 0xe
    2019-06-20 16:09:59.379 #1   0000000000000000 <hub> 0:00:00.055 [ info] Node registering
    2019-06-20 16:09:59.379 #1   0000000000000000 <hub> 0:00:00.000 [ info] Setting up node. Loglevel: debug, ignore tasks: none, ignore modules: none
    2019-06-20 16:09:59.379 #1   0000000000000000 <hub> 0:00:00.000 [debug] Writing message of type 145 size 27 bootloaderState: 0
    2019-06-20 16:09:59.379 #1   0000000000000000 <hub> 0:00:00.000 [ info] Giving lowpan prefix :: to node
    2019-06-20 16:09:59.394 #1   0000000000000000 <hub> 0:00:00.074 [debug] Got ack
    2019-06-20 16:09:59.394 #1   0000000000000000 <hub> 0:00:00.000 [debug] Writing message of type 144 size 77 bootloaderState: 0
    2019-06-20 16:09:59.411 #1   0000000000000000 <hub> 0:00:00.094 [debug] Got ack
    2019-06-20 16:10:01.404 #1   0000000000000000 <log> 0:00:02.057 [ info] [  bootloader] {       bl}: Jumping to firmware




    - another fault (2.41V):
    - gets config but fails check on cert file






    ----------------------------------

    time issue... ensure the time set uses deviation from tz, not from get time operation.

    ------------------------------------------------

    Bootlaoder upgrade:
    - EFR32 reference, section 7.3.4
    - "...the system can be redirected to boot from this area by setting bit 1 in config lock word 0 (CLW0) at word 122 of the lockbit (LB) page."
    - The lockbits page is writable by software, but only erasable by the debugger.

    CONFIG_READ_PROTECT

    Or... use bank switching.

    --------------------------------------------

    mesh network id

    CND-1469: implies PARAM_LOWPAN_NETWORK_ID was used in the same manner as RPL instance ID, unique per mesh.


    94763       =
    160878      =
    1980243     =
    8271844     =
    19885289    =
    43828250    =
    44798455    =
    49969021    =


    94763        = '0001722b'
    160878       = '0002746e'
    1980243      = '001e3753'
    8271844      = '007e37e4'
    19885289     = '012f6ce9'
    43828250     = '029cc41a'
    44798455     = '02ab91f7'
    49969021     = '02fa777d'


    SMIP config:

    In order for a CH to be used, it must first be provisioned with a set of unique
    files which are generated by Connode:

    - connode/agent.conf.json
    - connode/agent.crt.der
    - connode/agent.key.der
    - connode/ca.crt.der

    Note that the terminal ID which is part of the configuration may not be changed
    because it is bound to the agent certificate.

    --------------------------------------------------------

    lockup on partial power.

    Cap supply @2.22V, Main supply @3.82V == lockup Only power cycle revived it.


    2019-06-28 13:59:55.344 #1   0000000000000000 <log> 0:00:00.120 [ info] [      fs/api] {       bl}: open /bl_request failed (mode=1): 0xe
    2019-06-28 13:59:55.344 #1   0000000000000000 <hub> 0:00:00.128 [ info] Node registering
    2019-06-28 13:59:55.344 #1   0000000000000000 <hub> 0:00:00.000 [ info] Setting up node. Loglevel: debug, ignore tasks: none, ignore modules: none
    2019-06-28 13:59:55.344 #1   0000000000000000 <hub> 0:00:00.000 [debug] Writing message of type 145 size 27 bootloaderState: 0
    2019-06-28 13:59:55.344 #1   0000000000000000 <hub> 0:00:00.000 [ info] Giving lowpan prefix :: to node
    2019-06-28 13:59:55.360 #1   0000000000000000 <hub> 0:00:00.145 [debug] Got ack
    2019-06-28 13:59:55.360 #1   0000000000000000 <hub> 0:00:00.000 [debug] Writing message of type 144 size 77 bootloaderState: 0
    2019-06-28 13:59:55.376 #1   0000000000000000 <hub> 0:00:00.165 [debug] Got ack
    2019-06-28 13:59:57.372 #1   0000000000000000 <log> 0:00:02.131 [ info] [  bootloader] {       bl}: Jumping to firmware
    2019-06-28 13:59:58.112 #1   0000000000000000 <hub> 0:00:00.505 [ info] Expected message# 13 but got 1, node restarted?
    2019-06-28 13:59:58.113 #1   0000000000000000 <log> 0:00:00.505 [ info] [       cndfs] { terminal}: Mounting with 1024 x 4096 KiB sectors = 4096 KiB
    2019-06-28 13:59:58.182 #1   0000000000000000 <log> 0:00:00.575 [ WARN] [       cndfs] { terminal}: Erasing sector 588: bad file start
    2019-06-28 13:59:58.526 #1   0000000000000000 <log> 0:00:00.878 [ info] [       cndfs] { terminal}: Mounted: 348 sectors used, 31 files
    2019-06-28 13:59:58.526 #1   0000000000000000 <log> 0:00:00.886 [ info] [       cndfs] { terminal}: Flash map:
    2019-06-28 13:59:58.526 #1   0000000000000000 <log> 0:00:00.899 [ info] [       cndfs] { terminal}:   >>->>>>> >>>->>>> >>>>=>>> >>>>>->> >>>>>>-> >>>>>>>- >>>>>>>> ->>>>>>>
    2019-06-28 13:59:58.526 #1   0000000000000000 <log> 0:00:00.917 [ info] [       cndfs] { terminal}:   >->>>>>> >>->>>>> >>>>->>> >FFFFF>F FFFFFFFF FFF-GGGG GGGGGGGG GGGGG-HH
    2019-06-28 13:59:58.594 #1   0000000000000000 <log> 0:00:00.935 [ info] [       cndfs] { terminal}:   HHHHHHHH HHHHHHH? :::::::- :::::::: ::-@@@@@ @@@@@@@@ -@@@@--- J-------
    2019-06-28 13:59:58.594 #1   0000000000000000 <log> 0:00:00.953 [ info] [       cndfs] { terminal}:   -------- -------- L------- -------- -------- -------- -------- --------
    2019-06-28 13:59:58.594 #1   0000000000000000 <log> 0:00:00.972 [ info] [       cndfs] { terminal}:   -------- 2------- -------- -9------ -------- -------- -------- --------
    2019-06-28 13:59:58.594 #1   0000000000000000 <log> 0:00:00.990 [ info] [       cndfs] { terminal}:   ------83 4567---- AAAA-AA- -------- A--A-AAA AAAA-AA- ---B-B-B BBBB-BBB
    2019-06-28 13:59:58.656 #1   0000000000000000 <log> 0:00:01.008 [ info] [       cndfs] { terminal}:   BBBBBBB- -------- -------- -------- -------- -------- -------- --------
    2019-06-28 13:59:58.656 #1   0000000000000000 <log> 0:00:01.026 [ info] [       cndfs] { terminal}:   -------- -------- -;------ -------- -------- -------- -------- --------
    2019-06-28 13:59:58.656 #1   0000000000000000 <log> 0:00:01.044 [ info] [       cndfs] { terminal}:   ------KK KKKKKKKK KKKKKKKK KKKKKKKK KKKKKKKK KKKKKKKK KKKKKKKK K-------
    2019-06-28 13:59:58.725 #1   0000000000000000 <log> 0:00:01.063 [ info] [       cndfs] { terminal}:   -------- ---O0--- -------- -------- -------- -------- C------- M-----M-
    2019-06-28 13:59:58.725 #1   0000000000000000 <log> 0:00:01.081 [ info] [       cndfs] { terminal}:   ----M-N- ---M---M -M------ -------- -------- -------- -------- --------
    2019-06-28 13:59:58.725 #1   0000000000000000 <log> 0:00:01.099 [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
    2019-06-28 13:59:58.725 #1   0000000000000000 <log> 0:00:01.117 [ info] [       cndfs] { terminal}:   -------- -------- -------- -----1-- -------- -------- -------- --------
    2019-06-28 13:59:58.786 #1   0000000000000000 <log> 0:00:01.135 [ info] [       cndfs] { terminal}:   --DDDDDD DDDDDDDD DDD-EEEE EEEE-E-E EEEEEEE- -------- -------- --------
    2019-06-28 13:59:58.786 #1   0000000000000000 <log> 0:00:01.154 [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
    2019-06-28 13:59:58.786 #1   0000000000000000 <log> 0:00:01.172 [ info] [       cndfs] { terminal}:   -------- -------- --<I>->> >>>>>>-> >>>>>>>- >>>>>>>> ->>>>>>> >->>>>>>
    2019-06-28 13:59:58.786 #1   0000000000000000 <hub> 0:00:01.172 [ info] Received msg# 20 from node, sending settings
    2019-06-28 13:59:58.786 #1   0000000000000000 <hub> 0:00:00.000 [ info] Setting up node. Loglevel: debug, ignore tasks: none, ignore modules: none
    2019-06-28 13:59:58.786 #1   0000000000000000 <hub> 0:00:00.000 [debug] Writing message of type 145 size 27 bootloaderState: 0
    2019-06-28 13:59:58.786 #1   0000000000000000 <hub> 0:00:00.000 [ info] Giving lowpan prefix :: to node
    2019-06-28 13:59:58.786 #1   0000000000000000 <log> 0:00:01.183 [ info] [       cndfs] { terminal}:
    2019-06-28 13:59:58.802 #1   0000000000000000 <hub> 0:00:01.203 [debug] Got ack
    2019-06-28 13:59:58.802 #1   0000000000000000 <hub> 0:00:00.000 [debug] Writing message of type 144 size 77 bootloaderState: 0
    2019-06-28 13:59:58.835 #1   0000000000000000 <log> 0:00:01.223 [debug] [       cndfs] { terminal}: Found file /configuration-1.pb at sector 326
    2019-06-28 13:59:58.835 #1   0000000000000000 <hub> 0:00:01.224 [debug] Got ack
    2019-06-28 13:59:58.960 #1   0000000000000000 <log> 0:00:01.334 [debug] [      fs/api] { terminal}: fsOpen (/configuration-1.pb, mode=1, fd=0)
    2019-06-28 13:59:58.960 #1   0000000000000000 <log> 0:00:01.346 [ WARN] [    fs/crypt] { terminal}: closeRead: HMAC failed
    2019-06-28 13:59:58.960 #1   0000000000000000 <log> 0:00:01.353 [ERROR] [   config/pb] { terminal}: Failed close check
    2019-06-28 13:59:58.997 #1   0000000000000000 <log> 0:00:01.387 [debug] [       cndfs] { terminal}: Found file /configuration-2.pb at sector 264
    2019-06-28 13:59:59.129 #1   0000000000000000 <log> 0:00:01.498 [debug] [      fs/api] { terminal}: fsOpen (/configuration-2.pb, mode=1, fd=0)
    2019-06-28 13:59:59.130 #1   0000000000000000 <log> 0:00:01.510 [ WARN] [    fs/crypt] { terminal}: closeRead: HMAC failed
    2019-06-28 13:59:59.130 #1   0000000000000000 <log> 0:00:01.517 [ERROR] [   config/pb] { terminal}: Failed close check
    2019-06-28 13:59:59.130 #1   0000000000000000 <log> 0:00:01.524 [ info] [   config/pb] { terminal}: Config generations: 0, 0
    2019-06-28 13:59:59.130 #1   0000000000000000 <log> 0:00:01.532 [debug] [      module] { terminal}: Starting srcRestrictedCfgService
    2019-06-28 13:59:59.145 #1   0000000000000000 <log> 0:00:01.540 [debug] [      module] { terminal}: Starting timeService
    2019-06-28 14:00:00.206 #1   0000000000000000 <log> 0:00:02.571 [ info] [    timezone] { terminal}: New TZ = CET-1CEST,M3.5.0/2,M10.5.0/3
    2019-06-28 14:00:00.206 #1   0000000000000000 <log> 0:00:02.580 [ info] [        time] { terminal}: Uptime: 2580, local time: 1970-01-01  1:00:00.009, UTC: 0.9, status: 0
    2019-06-28 14:00:00.206 #1   0000000000000000 <log> 0:00:02.592 [panic] ======== Panic ========
    2019-06-28 14:00:00.206 #1   0000000000000000 <log> 0:00:02.592 [panic] terminal:107, in task terminal: LoWPAN EUI-64 is missing, set prod.lowpan.eui64
    2019-06-28 14:00:27.350 #1   0000000000000000 <hub> 0:00:00.004 [ info] Expected message# 39 but got 1, node restarted?
    2019-06-28 14:00:27.350 #1   0000000000000000 <log> 0:00:00.004 [debug] [      module] {       bl}: Starting ctrlportService
    2019-06-28 14:00:27.350 #1   0000000000000000 <log> 0:00:00.011 [ info] [  bootloader] {       bl}: Bootloader starting. Version ipa3-bl:v112
    2019-06-28 14:00:27.350 #1   0000000000000000 <log> 0:00:00.020 [debug] [      module] {       bl}: Initing fsService
    2019-06-28 14:00:27.351 #1   0000000000000000 <log> 0:00:00.027 [debug] [      module] {       bl}: Starting fsService
    2019-06-28 14:00:27.351 #1   0000000000000000 <log> 0:00:00.035 [ info] [       cndfs] {       bl}: Mounting with 1024 x 4096 KiB sectors = 4096 KiB
    2019-06-28 14:00:27.436 #1   0000000000000000 <log> 0:00:00.105 [ WARN] [       cndfs] {       bl}: Bad sector 588: bad file start
    2019-06-28 14:00:27.436 #1   0000000000000000 <log> 0:00:00.113 [ERROR] [  fs/service] {       bl}: Failed to mount filesystem
    2019-06-28 14:00:27.436 #1   0000000000000000 <log> 0:00:00.121 [ info] [      fs/api] {       bl}: open /bl_request failed (mode=1): 0xe
    2019-06-28 14:00:27.436 #1   0000000000000000 <hub> 0:00:00.129 [ info] Node registering
    2019-06-28 14:00:27.436 #1   0000000000000000 <hub> 0:00:00.000 [ info] Setting up node. Loglevel: debug, ignore tasks: none, ignore modules: none
    2019-06-28 14:00:27.436 #1   0000000000000000 <hub> 0:00:00.000 [debug] Writing message of type 145 size 27 bootloaderState: 0
    2019-06-28 14:00:27.436 #1   0000000000000000 <hub> 0:00:00.000 [ info] Giving lowpan prefix :: to node
    2019-06-28 14:00:27.452 #1   0000000000000000 <hub> 0:00:00.146 [debug] Got ack
    2019-06-28 14:00:27.452 #1   0000000000000000 <hub> 0:00:00.000 [debug] Writing message of type 144 size 77 bootloaderState: 0
    2019-06-28 14:00:27.468 #1   0000000000000000 <hub> 0:00:00.165 [debug] Got ack
    2019-06-28 14:00:29.464 #1   0000000000000000 <log> 0:00:02.131 [ info] [  bootloader] {       bl}: Jumping to firmware
    2019-06-28 14:00:30.203 #1   0000000000000000 <hub> 0:00:00.505 [ info] Expected message# 13 but got 1, node restarted?
    2019-06-28 14:00:30.204 #1   0000000000000000 <log> 0:00:00.505 [ info] [       cndfs] { terminal}: Mounting with 1024 x 4096 KiB sectors = 4096 KiB
    2019-06-28 14:00:30.272 #1   0000000000000000 <log> 0:00:00.575 [ WARN] [       cndfs] { terminal}: Erasing sector 588: bad file start
    2019-06-28 14:00:35.325 #1   0000000000000000 <log> 0:00:05.627 [ WARN] [       cndfs] { terminal}: Erasing sector 0: non-file data
    2019-06-28 14:00:40.332 #1   0000000000000000 <log> 0:00:10.635 [ WARN] [       cndfs] { terminal}: Erasing sector 1: non-file data
    2019-06-28 14:00:45.341 #1   0000000000000000 <log> 0:00:15.643 [ WARN] [       cndfs] { terminal}: Erasing sector 3: non-file data
    2019-06-28 14:00:50.348 #1   0000000000000000 <log> 0:00:20.651 [ WARN] [       cndfs] { terminal}: Erasing sector 4: non-file data
    2019-06-28 14:00:55.356 #1   0000000000000000 <log> 0:00:25.659 [ WARN] [       cndfs] { terminal}: Erasing sector 5: non-file data
    2019-06-28 14:01:00.364 #1   0000000000000000 <log> 0:00:30.667 [ WARN] [       cndfs] { terminal}: Erasing sector 6: non-file data
    2019-06-28 14:01:05.372 #1   0000000000000000 <log> 0:00:35.675 [ WARN] [       cndfs] { terminal}: Erasing sector 7: non-file data
    2019-06-28 14:01:10.380 #1   0000000000000000 <log> 0:00:40.683 [ WARN] [       cndfs] { terminal}: Erasing sector 8: non-file data
    2019-06-28 14:01:15.388 #1   0000000000000000 <log> 0:00:45.691 [ WARN] [       cndfs] { terminal}: Erasing sector 9: non-file data
    2019-06-28 14:01:20.395 #1   0000000000000000 <log> 0:00:50.699 [ WARN] [       cndfs] { terminal}: Erasing sector 10: non-file data
    2019-06-28 14:01:25.403 #1   0000000000000000 <log> 0:00:55.707 [ WARN] [       cndfs] { terminal}: Erasing sector 12: non-file data
    2019-06-28 14:01:30.411 #1   0000000000000000 <log> 0:01:00.715 [ WARN] [       cndfs] { terminal}: Erasing sector 13: non-file data
    2019-06-28 14:01:35.420 #1   0000000000000000 <log> 0:01:05.723 [ WARN] [       cndfs] { terminal}: Erasing sector 14: non-file data
    2019-06-28 14:01:40.428 #1   0000000000000000 <log> 0:01:10.731 [ WARN] [       cndfs] { terminal}: Erasing sector 15: non-file data
    2019-06-28 14:01:45.436 #1   0000000000000000 <log> 0:01:15.739 [ WARN] [       cndfs] { terminal}: Erasing sector 16: non-file data
    2019-06-28 14:01:50.443 #1   0000000000000000 <log> 0:01:20.747 [ WARN] [       cndfs] { terminal}: Erasing sector 17: non-file data
    2019-06-28 14:01:55.452 #1   0000000000000000 <log> 0:01:25.755 [ WARN] [       cndfs] { terminal}: Erasing sector 18: non-file data
    2019-06-28 14:02:00.460 #1   0000000000000000 <log> 0:01:30.763 [ WARN] [       cndfs] { terminal}: Erasing sector 19: non-file data
    2019-06-28 14:02:00.460 #1   0000000000000000 <hub> 0:01:30.763 [ info] Received msg# 20 from node, sending settings
    2019-06-28 14:02:00.460 #1   0000000000000000 <hub> 0:00:00.000 [ info] Setting up node. Loglevel: debug, ignore tasks: none, ignore modules: none
    2019-06-28 14:02:00.460 #1   0000000000000000 <hub> 0:00:00.000 [debug] Writing message of type 145 size 27 bootloaderState: 0
    2019-06-28 14:02:00.460 #1   0000000000000000 <hub> 0:00:00.000 [ info] Giving lowpan prefix :: to node
    2019-06-28 14:02:00.475 #1   0000000000000000 <hub> 0:01:30.787 [debug] Got ack
    2019-06-28 14:02:00.476 #1   0000000000000000 <hub> 0:00:00.000 [debug] Writing message of type 144 size 77 bootloaderState: 0
    2019-06-28 14:02:00.491 #1   0000000000000000 <hub> 0:01:30.807 [debug] Got ack
    2019-06-28 14:02:00.709 #1   0000000000000000 <log> 0:01:31.004 [debug] [       flash] { schedule}: ** Taking FLASH out of low-power mode **
    2019-06-28 14:02:00.709 #1   0000000000000000 <log> 0:01:31.012 [debug] [       flash] { schedule}: ** periodic FLASH reset done **
    2019-06-28 14:02:05.474 #1   0000000000000000 <log> 0:01:35.771 [ WARN] [       cndfs] { terminal}: Erasing sector 21: non-file data
    2019-06-28 14:02:05.474 #1   0000000000000000 <log> 0:01:35.780 [debug] [  fs/service] { terminal}: flashopErase 21:0x0 4096 B
    2019-06-28 14:02:10.211 #1   0000000000000000 <log> 0:01:40.504 [debug] [       flash] { schedule}: ** periodic FLASH reset **
    2019-06-28 14:02:10.211 #1   0000000000000000 <log> 0:01:40.511 [debug] [       flash] { schedule}: ** Putting FLASH into low-power mode **
    2019-06-28 14:02:10.493 #1   0000000000000000 <log> 0:01:40.787 [ WARN] [       cndfs] { terminal}: Erasing sector 22: non-file data
    2019-06-28 14:02:10.493 #1   0000000000000000 <log> 0:01:40.795 [debug] [  fs/service] { terminal}: flashopErase 22:0x0 4096 B
    2019-06-28 14:02:10.728 #1   0000000000000000 <log> 0:01:41.020 [debug] [       flash] { schedule}: ** Taking FLASH out of low-power mode **
    2019-06-28 14:02:10.728 #1   0000000000000000 <log> 0:01:41.028 [debug] [       flash] { schedule}: ** periodic FLASH reset done **
    2019-06-28 14:02:15.506 #1   0000000000000000 <log> 0:01:45.803 [ WARN] [       cndfs] { terminal}: Erasing sector 23: non-file data
    2019-06-28 14:02:15.506 #1   0000000000000000 <log> 0:01:45.811 [debug] [  fs/service] { terminal}: flashopErase 23:0x0 4096 B
    2019-06-28 14:02:20.211 #1   0000000000000000 <log> 0:01:50.504 [debug] [       flash] { schedule}: ** periodic FLASH reset **
    2019-06-28 14:02:20.211 #1   0000000000000000 <log> 0:01:50.511 [debug] [       flash] { schedule}: ** Putting FLASH into low-power mode **
    2019-06-28 14:02:20.525 #1   0000000000000000 <log> 0:01:50.819 [ WARN] [       cndfs] { terminal}: Erasing sector 24: non-file data
    2019-06-28 14:02:20.525 #1   0000000000000000 <log> 0:01:50.827 [debug] [  fs/service] { terminal}: flashopErase 24:0x0 4096 B
    2019-06-28 14:02:20.726 #1   0000000000000000 <log> 0:01:51.020 [debug] [       flash] { schedule}: ** Taking FLASH out of low-power mode **
    2019-06-28 14:02:20.726 #1   0000000000000000 <log> 0:01:51.028 [debug] [       flash] { schedule}: ** periodic FLASH reset done **
    2019-06-28 14:02:25.537 #1   0000000000000000 <log> 0:01:55.835 [ WARN] [       cndfs] { terminal}: Erasing sector 25: non-file data
    2019-06-28 14:02:25.537 #1   0000000000000000 <log> 0:01:55.843 [debug] [  fs/service] { terminal}: flashopErase 25:0x0 4096 B
    2019-06-28 14:02:30.212 #1   0000000000000000 <log> 0:02:00.504 [debug] [       flash] { schedule}: ** periodic FLASH reset **
    2019-06-28 14:02:30.212 #1   0000000000000000 <log> 0:02:00.511 [debug] [       flash] { schedule}: ** Putting FLASH into low-power mode **
    2019-06-28 14:02:30.557 #1   0000000000000000 <log> 0:02:00.851 [ WARN] [       cndfs] { terminal}: Erasing sector 26: non-file data
    2019-06-28 14:02:30.557 #1   0000000000000000 <log> 0:02:00.859 [debug] [  fs/service] { terminal}: flashopErase 26:0x0 4096 B
    2019-06-28 14:02:30.727 #1   0000000000000000 <log> 0:02:01.020 [debug] [       flash] { schedule}: ** Taking FLASH out of low-power mode **
    2019-06-28 14:02:30.727 #1   0000000000000000 <log> 0:02:01.028 [debug] [       flash] { schedule}: ** periodic FLASH reset done **
    2019-06-28 14:02:35.569 #1   0000000000000000 <log> 0:02:05.867 [ WARN] [       cndfs] { terminal}: Erasing sector 27: non-file data
    2019-06-28 14:02:35.569 #1   0000000000000000 <log> 0:02:05.875 [debug] [  fs/service] { terminal}: flashopErase 27:0x0 4096 B
    2019-06-28 14:02:40.211 #1   0000000000000000 <log> 0:02:10.504 [debug] [       flash] { schedule}: ** periodic FLASH reset **
    2019-06-28 14:02:40.211 #1   0000000000000000 <log> 0:02:10.511 [debug] [       flash] { schedule}: ** Putting FLASH into low-power mode **
    2019-06-28 14:02:40.589 #1   0000000000000000 <log> 0:02:10.883 [ WARN] [       cndfs] { terminal}: Erasing sector 28: non-file data
    2019-06-28 14:02:40.589 #1   0000000000000000 <log> 0:02:10.891 [debug] [  fs/service] { terminal}: flashopErase 28:0x0 4096 B
    2019-06-28 14:02:40.727 #1   0000000000000000 <log> 0:02:11.020 [debug] [       flash] { schedule}: ** Taking FLASH out of low-power mode **
    2019-06-28 14:02:40.727 #1   0000000000000000 <log> 0:02:11.028 [debug] [       flash] { schedule}: ** periodic FLASH reset done **
    2019-06-28 14:02:45.600 #1   0000000000000000 <log> 0:02:15.899 [ WARN] [       cndfs] { terminal}: Erasing sector 30: non-file data
    2019-06-28 14:02:45.600 #1   0000000000000000 <log> 0:02:15.907 [debug] [  fs/service] { terminal}: flashopErase 30:0x0 4096 B
    2019-06-28 14:02:50.211 #1   0000000000000000 <log> 0:02:20.504 [debug] [       flash] { schedule}: ** periodic FLASH reset **
    2019-06-28 14:02:50.211 #1   0000000000000000 <log> 0:02:20.511 [debug] [       flash] { schedule}: ** Putting FLASH into low-power mode **
    2019-06-28 14:02:50.620 #1   0000000000000000 <log> 0:02:20.915 [ WARN] [       cndfs] { terminal}: Erasing sector 31: non-file data
    2019-06-28 14:02:50.620 #1   0000000000000000 <log> 0:02:20.923 [debug] [  fs/service] { terminal}: flashopErase 31:0x0 4096 B
    2019-06-28 14:02:50.726 #1   0000000000000000 <log> 0:02:21.020 [debug] [       flash] { schedule}: ** Taking FLASH out of low-power mode **
    2019-06-28 14:02:50.726 #1   0000000000000000 <log> 0:02:21.028 [debug] [       flash] { schedule}: ** periodic FLASH reset done **
    2019-06-28 14:02:55.633 #1   0000000000000000 <log> 0:02:25.931 [ WARN] [       cndfs] { terminal}: Erasing sector 32: non-file data
    2019-06-28 14:02:55.633 #1   0000000000000000 <log> 0:02:25.939 [debug] [  fs/service] { terminal}: flashopErase 32:0x0 4096 B
    2019-06-28 14:03:00.211 #1   0000000000000000 <log> 0:02:30.504 [debug] [       flash] { schedule}: ** periodic FLASH reset **
    2019-06-28 14:03:00.211 #1   0000000000000000 <log> 0:02:30.511 [debug] [       flash] { schedule}: ** Putting FLASH into low-power mode **
    2019-06-28 14:03:00.653 #1   0000000000000000 <log> 0:02:30.947 [ WARN] [       cndfs] { terminal}: Erasing sector 33: non-file data
    2019-06-28 14:03:00.654 #1   0000000000000000 <log> 0:02:30.955 [debug] [  fs/service] { terminal}: flashopErase 33:0x0 4096 B
    2019-06-28 14:03:00.726 #1   0000000000000000 <log> 0:02:31.020 [debug] [       flash] { schedule}: ** Taking FLASH out of low-power mode **
    2019-06-28 14:03:00.726 #1   0000000000000000 <log> 0:02:31.028 [debug] [       flash] { schedule}: ** periodic FLASH reset done **
    2019-06-28 14:03:05.665 #1   0000000000000000 <log> 0:02:35.963 [ WARN] [       cndfs] { terminal}: Erasing sector 34: non-file data
    2019-06-28 14:03:05.665 #1   0000000000000000 <log> 0:02:35.971 [debug] [  fs/service] { terminal}: flashopErase 34:0x0 4096 B
    2019-06-28 14:03:10.212 #1   0000000000000000 <log> 0:02:40.504 [debug] [       flash] { schedule}: ** periodic FLASH reset **
    2019-06-28 14:03:10.212 #1   0000000000000000 <log> 0:02:40.511 [debug] [       flash] { schedule}: ** Putting FLASH into low-power mode **
    2019-06-28 14:03:10.684 #1   0000000000000000 <log> 0:02:40.979 [ WARN] [       cndfs] { terminal}: Erasing sector 35: non-file data
    2019-06-28 14:03:10.684 #1   0000000000000000 <log> 0:02:40.987 [debug] [  fs/service] { terminal}: flashopErase 35:0x0 4096 B
    2019-06-28 14:03:10.727 #1   0000000000000000 <log> 0:02:41.020 [debug] [       flash] { schedule}: ** Taking FLASH out of low-power mode **
    2019-06-28 14:03:10.727 #1   0000000000000000 <log> 0:02:41.028 [debug] [       flash] { schedule}: ** periodic FLASH reset done **
    2019-06-28 14:03:15.697 #1   0000000000000000 <log> 0:02:45.995 [ WARN] [       cndfs] { terminal}: Erasing sector 36: non-file data
    2019-06-28 14:03:15.697 #1   0000000000000000 <log> 0:02:46.003 [debug] [  fs/service] { terminal}: flashopErase 36:0x0 4096 B
    2019-06-28 14:03:20.211 #1   0000000000000000 <log> 0:02:50.504 [debug] [       flash] { schedule}: ** periodic FLASH reset **
    2019-06-28 14:03:20.211 #1   0000000000000000 <log> 0:02:50.511 [debug] [       flash] { schedule}: ** Putting FLASH into low-power mode **
    2019-06-28 14:03:20.733 #1   0000000000000000 <log> 0:02:51.011 [ WARN] [       cndfs] { terminal}: Erasing sector 37: non-file data
    2019-06-28 14:03:20.733 #1   0000000000000000 <log> 0:02:51.019 [debug] [  fs/service] { terminal}: flashopErase 37:0x0 4096 B


    [debug] [  fs/service] { terminal}: flashopErase 85:0x0 4096 B
    [ WARN] [       cndfs] { terminal}: Erasing sector 86: non-file data
    [debug] [  fs/service] { terminal}: flashopErase 86:0x0 4096 B
    [debug] [       flash] { schedule}: ** periodic FLASH reset **
    [debug] [       flash] { schedule}: ** Putting FLASH into low-power mode **
    [debug] [       flash] { schedule}: ** Taking FLASH out of low-power mode **
    [debug] [       flash] { schedule}: ** periodic FLASH reset done **
    [ WARN] [       cndfs] { terminal}: Erasing sector 87: non-file data
    [debug] [  fs/service] { terminal}: flashopErase 87:0x0 4096 B
    [ WARN] [       cndfs] { terminal}: Erasing sector 88: non-file data
    [debug] [  fs/service] { terminal}: flashopErase 88:0x0 4096 B
    [debug] [       flash] { schedule}: ** periodic FLASH reset **
    [debug] [       flash] { schedule}: ** Putting FLASH into low-power mode **
    [debug] [       flash] { schedule}: ** Taking FLASH out of low-power mode **
    [debug] [       flash] { schedule}: ** periodic FLASH reset done **
    [ WARN] [       cndfs] { terminal}: Erasing sector 94: non-file data
    [debug] [  fs/service] { terminal}: flashopErase 94:0x0 4096 B
    [ info] [       cndfs] { terminal}: Mounted: 184 sectors used, 22 files
    [ info] [       cndfs] { terminal}: Flash map:
    [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
    [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
    [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
    [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
    [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
    [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
    [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
    [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
    [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
    [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
    [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
    [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
    [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
    [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
    [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
    [ info] [       cndfs] { terminal}:   -------- -------- -------- -------- -------- -------- -------- --------
    [ info] [       cndfs] { terminal}:
    [debug] [      module] { terminal}: Starting configService
    [ info] [      fs/api] { terminal}: open /configuration-1.pb failed (mode=1): 0xe
    [ info] [      fs/api] { terminal}: open /configuration-2.pb failed (mode=1): 0xe
    [ info] [   config/pb] { terminal}: Config generations: 0, 0
    [debug] [      module] { terminal}: Starting srcRestrictedCfgService
    [debug] [      module] { terminal}: Starting timeService
    [ info] [    timezone] { terminal}: New TZ = CET-1CEST,M3.5.0/2,M10.5.0/3
    [ info] [        time] { terminal}: Uptime: 407460, local time: 1970-01-01  1:07:16.974, UTC: 436.974, status: 0
    [panic] ======== Panic ========
    [panic] terminal:107, in task terminal: LoWPAN EUI-64 is missing, set prod.lowpan.eui64
    [ info] Expected message# 302 but got 1, node restarted?
    [debug] [      module] {       bl}: Starting ctrlportService
    [ info] [  bootloader] {       bl}: Bootloader starting. Version ipa3-bl:v112
    [ERROR] [       flash] {       bl}: Unsupported flash id: 00 00 00
    [debug] [      module] {       bl}: Initing fsService
    [debug] [      module] {       bl}: Starting fsService
    [ERROR] [  fs/service] {       bl}: No flash
    [ info] [      fs/api] {       bl}: open /bl_request failed (mode=1): 0xe
    [ info] Node registering
    [ info] Setting up node. Loglevel: debug, ignore tasks: none, ignore modules: none
    [debug] Writing message of type 145 size 27 bootloaderState: 0
    [ info] Giving lowpan prefix :: to node
    [debug] Got ack
    [debug] Writing message of type 144 size 77 bootloaderState: 0
    [debug] Got ack
    [ info] [  bootloader] {       bl}: Jumping to firmware
    [ info] Expected message# 12 but got 1, node restarted?
    [ERROR] [       flash] { terminal}: Unsupported flash id: 00 00 00
    [ERROR] [     storage] { terminal}: FLASH init failed
    [ERROR] [  fs/service] { terminal}: No flash
    [ info] [      fs/api] { terminal}: open /configuration-1.pb failed (mode=1): 0xe
    [ info] [      fs/api] { terminal}: open /configuration-2.pb failed (mode=1): 0xe
    [ info] [   config/pb] { terminal}: Config generations: 0, 0
    [ info] [    timezone] { terminal}: New TZ = CET-1CEST,M3.5.0/2,M10.5.0/3
    [ info] [        time] { terminal}: Uptime: 1084, local time: 1970-01-01  1:00:00.009, UTC: 0.9, status: 0
    [panic] ======== Panic ========
    [panic] terminal:107, in task terminal: LoWPAN EUI-64 is missing, set prod.lowpan.eui64
    [ info] Expected message# 11 but got 1, node restarted?
    [debug] [      module] {       bl}: Starting ctrlportService
    [ info] [  bootloader] {       bl}: Bootloader starting. Version ipa3-bl:v112
    [ERROR] [       flash] {       bl}: Unsupported flash id: 00 00 00
    [debug] [      module] {       bl}: Initing fsService
    [debug] [      module] {       bl}: Starting fsService
    [ERROR] [  fs/service] {       bl}: No flash
    [ info] [      fs/api] {       bl}: open /bl_request failed (mode=1): 0xe
    [ info] Node registering
    [ info] Setting up node. Loglevel: debug, ignore tasks: none, ignore modules: none
    [debug] Writing message of type 145 size 27 bootloaderState: 0
    [ info] Giving lowpan prefix :: to node
    [debug] Got ack
    [debug] Writing message of type 144 size 77 bootloaderState: 0
    [debug] Got ack
    [ info] [  bootloader] {       bl}: Jumping to firmware
    [ info] Expected message# 12 but got 1, node restarted?
    [ERROR] [       flash] { terminal}: Unsupported flash id: 00 00 00
    [ERROR] [     storage] { terminal}: FLASH init failed
    [ERROR] [  fs/service] { terminal}: No flash
    [ info] [      fs/api] { terminal}: open /configuration-1.pb failed (mode=1): 0xe
    [ info] [      fs/api] { terminal}: open /configuration-2.pb failed (mode=1): 0xe
    [ info] [   config/pb] { terminal}: Config generations: 0, 0
    [ info] [    timezone] { terminal}: New TZ = CET-1CEST,M3.5.0/2,M10.5.0/3
    [ info] [        time] { terminal}: Uptime: 61, local time: 1970-01-01  1:00:29.507, UTC: 29.507, status: 0
    [panic] ======== Panic ========
    [panic] terminal:107, in task terminal: LoWPAN EUI-64 is missing, set prod.lowpan.eui64
    [ info] Expected message# 11 but got 1, node restarted?
    [debug] [      module] {       bl}: Starting ctrlportService
    [ info] [  bootloader] {       bl}: Bootloader starting. Version ipa3-bl:v112
    [ERROR] [       flash] {       bl}: Unsupported flash id: 00 00 00
    [debug] [      module] {       bl}: Initing fsService
    [debug] [      module] {       bl}: Starting fsService
    [ERROR] [  fs/service] {       bl}: No flash
    [ info] [      fs/api] {       bl}: open /bl_request failed (mode=1): 0xe
    [ info] Node registering
    [ info] Setting up node. Loglevel: debug, ignore tasks: none, ignore modules: none



    Conclusion... Flash soft-reset doesn't recover the device.


    ---------------------------------------------

    run ctrlporthub & blfwupload to upgrade fw.

    ./build/host-ctrlporthub/bin/ctrlporthub -controllerport 4002 -serial /dev/serial/by-id/usb-FTDI_TTL232R-3V3_FTE6CGWM-if00-port0 -loglevel debug -logfile /Data/Logs/node123.log
    ./build/host-lnt-insecure/bin/blfwupload -ctrlport 4002 -loglevel debug -image ./build/ipa3-genus-dlms-insecure/release/agent-ipa3-genus-dlms-insecure-v149.5-21-gb23a7f0M.image -dev /dev/serial/by-id/usb-FTDI_TTL232R-3V3_FTE6CGWM-if00-port0


    ---------------------------------------------

    Kaifa time sync.
    - revert CND-9457 (tz inversion)
    - Make sure dev has same sign as tz.

    ----------------------------------------------------

    mosh is an ssh type terminal-server that uses UDP.
    run "sudo mosh-server" on OrangePi, "mosh omni@<ip>" on client.

    ----------------------------------------------

    Release lifecycle & testability:
    - requirements
    - implementation
    - release formation / CI build.
    - testing
    - node-production
    - meter-production
    - in-field / commisioning / configuration.

    ---------------------------------------------------

    GW7 notes:
    - No Flash as in NIC7. No brainer.
    - Battery charge management in Agent allows removing equivalent functionality from PSU board.
    - Higher power on mesh radio (i.e. IPA3b style with the CC1190) == less gateways for same coverage / density tradoff. Obvious saving if it can be managed.
    - Does it have to be a single device? Can we have higher-power gw with a small, low-power fill-in gw? network-planning issues?
    - Maybe a high-power modem-less gw (i.e. a mesh-extender) that can route to a more expensive gw-with-modem? Similar idea for in-meter-mesh-extender.
    - SMIP-model processing, i.e. gateway on modem as application, controlling a CC1200.
    - Optimising software power-usage would result in lower battery capacity requirement, could also involve a low-power-mesh "mode" to improve that significantly.
    - Debugging-gw for overall cost-of-ownership reduction, help to optmise mesh. Fights inefficient gw usage & positioning.

    ------------------------------------------------------

    Polite spectrum access timing parameters

    static uint32_t getRandomDelayMsec(int numPreviousTries)
    {
        const int maxPeriods = 8
        const int numPeriods = rnd16() % 8;
        const int unitBackoffPeriodUs = 200us
        const int delayus = numPeriods * 200us;

        // Round down to milliseconds, but enforce a lower limit of 1 ms to
        // satisfy RED compliance (ETSI EN 300 220-1 v3.1.1 section 5.21.3.1
        // minimum deferral period).
        const int delayms = MAX(1, delayus / 1000);

        return delayms;
    }


    mactx.c: ccaSendLoop()
    macRadioGetUnitBackoffUs = 200us.

    deferral period = getRandomDelayMsec()

    macGetCSMACAMaxDelayPeriods = (1 << MIN(3+numTrys, 8) ) = 8

    MAX_RADIO_PAYLOAD_SIZE(253) & mac.frame_size(253)
    SUN_PHY_FRAME_PHR_SIZE(2) + MAX_RADIO_PAYLOAD_SIZE(253) + preamble(4) + sync(2) + CRC(2)
    max= 2+253+4+2+2 = 263bytes max.
    min= 2+0+4+2+2 = 10bytes minimum

    airtimeMax = (263 * 8 * 1000) / 50000 = 42ms.
    airtimeMax = (10 * 8 * 1000) / 50000 = 1.6ms

    OFF_PERIOD_MS = 100ms

    Minimum CCA interval:                               5 ms  (defined in code)
    Minimum deferral period:                            5.2 ms  (CCA period + mindeferral period)
    Minimum unit of deferral period:                    0.2 ms (defined in code effectively as MIN(1ms,200us) )
    Dead Time:                                          < 1 ms (no explicit delay, just execution time)
    Minimum Transmission Duration Ton Max:              1.6 ms (min size 10b packet @ 50Kb/s)
    Maximum Transmission Duration Ton Maxi:             42 ms (max size 263b packet @ 50Kb/s)
    Max Tcum_on over 1 hour:                            360 sec (DutyCycle=10%
    Minimum Toff_min on the same Operating Frequency:   105ms (dead time + min CCA time)

    ----------------------------------------------------------------------

    Gateway typical upstream/downstream thoughput for ~200 nodes:
    - modem-tx-bytes = ~400KB/hour  = 2KB/hour/node
    - modem-rx-bytes = ~67KB/hour   = 0.4KB/hour/node

    per-day upload = 400*12 = 5MByte/day

    typical rates:
    2G upload rate      = 0.02 Mb/sec   = 2.5KB/sec = 9000 KB/hour      = 4500 nodes
    3G upload rate      = 0.4 Mb/sec    = 5KB/sec   = 18000 KB/hour     = 9000 nodes
    4G upload rate      = 10 Mb/sec     = 1MB/sec   = 360000 KB/hour    = 180000 nodes

    https://www.4g.co.uk/how-fast-is-4g/

    ----------------------------------------------------------------------



    SMIP RLL-key breakdown.
    - First drop (show ability to change keys from command-line). Its existing functionality, so buys us an easy-win.
    - second drop (distribution of key-tables and generation of key-tables from UI)
    - third drop ().
    - forth drop (complete functionality?)


    -   Nodes will report their current key-table-hash on startup to the server.
    -   The server will, on detection of a mismatch in key-table configuration, send the current key-table configuration down to the node to update.
    -   Nodes will receive their key-table in the configuration protobuf.
    -   Server will treat the additional key-table field as a normal additional field for communication purposes.
    -   Server UI will hide the key-table field from the normal UI configuration mechanism.
    -   Server UI will provide ability to generate key-tables and preferred indexes.
    -   Server will maintain multiple (small number?) of key-tables to be inserted into configuration protobuf during selection of groups.
    -   Server will use the existing configuration job API to distribute the configuration.
    -   Key-table shall be stored securely in the configuration data by utilising a wrapped format.


    Agent changes required
    -   Agent needs to read a table of keys and a preferred key index from the CH instead of a single key. (Agent 3d when CH has support).
    -   The process of distribution of the key-table and the application pf a key-table shall be separate operations. Key-tables shall be identified by a hash (of their contents) in order to avoid application of inappropriate keys. Use of configuration to distribute key-table & preferred key. Key-table hash separate from configuration-hash (3d).
    -   Agent needs a timed activation of key-table to allow coordination of change-over (?).
    -   Agent needs to send event to C4 server on key-change operations (1d).
    -   Agent-side library integration API documentation (2d).
    -   CH code will need updates to support key-table, and we need new code to integrate with (2d integration time for new code drop from Tosh).



    Tickets:
    - Make a development setup for CommsHubs (as opposed to test).
    - Get new drop of CH code with key-table support.
    - Make configuration capable of taking large values (16-bit length).
    - definition of protobuf for key-table.
    - Add configuration-item for key-table, add mechanism from CoAP-request to set it.
    - Populate MAC-layer table from configuration at boot.
    - Add logging events for all key-table actions.
    - Per-node framecounter into device table.



    - cndkeystore used by DTLS and mac-security.
    - only used on CONFIG_SMIP
    - remove cndkeystore, store keys in config.
    - add ability for config to store large BLOBs (NIC7,IPA).
    - on SMIP, config of keys is intercepted and rerouted to CH callbacks.

    ---------------------------------------------

    CND-9426 1d743ffef238bcc4f62ade0fe3093522dc6170b4 (bad timesstamp)
    CND-9450 688239e5d4f5f914df6297e37dcbdf441dc8ecf1 (friendCom emulator)
    CND-9536 39d9133faeb511076927af4b74f5cd96882f6249 (future activate meter-upgrade)

    ---------------------------------------------

    v148.y branch is missing:
    CND-9506 kaifa disconnect
    CND-9450 friendcom
    CND-9436 Get tz/deviation working on Kaifa
    future firmware activation time support.
    CND-9514 Fixups for nic7b kaifa build
    CND-9515 Fix incorrect channel plan 7 definition
    CND-9514 build targets for IPA3B with (single LED + 8mBit)
    CND-9444 Enable overriding TX frequency in EFR
    CND-9449 AGENT: Hard fault in production mode




    git log --pretty=oneline --abbrev-commit --no-merges > t
    diff -y t ../terminalMaster/t

    f3aa469 CND-9506 New Kaifa meter firmware fails to produce a    | Need this. x
    688239e CND-9450 : Friendcom - Real Node with Meter emulator    |
    4c973e0 CND-9436 Get tz/deviation working on Kaifa              | Need this. x
    3a7221d Revert "CND-9515 Fix incorrect channel plan 7 definit   |
    39d9133 future firmware activation time support. Meter firmwa   |
    0aff416 CND-9514 Fixups for nic7b kaifa build                   |
    83637b4 CND-9515 Fix incorrect channel plan 7 definition Chan   |
    Oe3399ff CND-9514 build targets for IPA3B with (single LED + 8  <
    30e3c77 CND-9504 Create ipa3b LNT build targets                 <
    692ced2 CND-9498 NIC7 Phase 1: Create nic7 build targets and    <
    c07c9c8 CND-9457 Kaifa RTC tz offset inversion                  < Need this. x
    a6d77b7 CND-9237, CND-8786 deadlock in mac_rx                   <
    d0acd02 CND-9444 Enable overriding TX frequency in EFR          <
    e70887b CND-9457 Kaifa - rtc sync inversion and DLMS SET supp   < Need this. x
    07194f2 CND-9449 AGENT: Hard fault in production mode           <
    1094917 CND-8977 duty cycle supports decimal values             <
    daf1285 CND-9426 ignore sample with bad time stamp              <
    c270e11 LNT-148 Disconnect all HDLC sessions on startup         <
    1d743ff CND-9426 ignore sample with bad time stamp              <
    2d5e5eb CND-9425 Read/Write Deny Error from L&T 3Ph Meter       <
    93e9476 CND-9415 LNT meter crash during association at onInvo   <
    d2d1919 CND-9414 Make L&T builds default time_update to off     <
    a84a45e CND-9264 DLMS timeouts on large multi-part responses    <
    2ed5475 GW batery management remove modem driver power off to   <
    3556e03 GW batery management [CND-9346] : fix report event wh   <
    cde81c3 CND-9408 TimeSync is being called every 60s             < Need this. x
    a6a1445 GW battery management [CND-9347] fix - disable ethern   <
    179bf1b CND-9410 setAlarmsFilter on L&T needs length field ch   <
    5ceb724 CND-9400 Fix possible missing sample cause by CND-802   <
    8a14c34 CND-9399 : Fix reboot in LPM reenter LPM.               <
    43587a2 CND-9397 Fix restart issue in low power mode            <
    b4f3e10 LNT-143 : node is crashing during uploaded new Node F   <
    3af744b LNT-141 Setting time on L&T fails                       <
    9759e2e LNT-138 : Issue found for 'Invocation counter was mis   <
    9b0a4d0 LNT-135 : Disconnect/connect causes meter to not comm   <
    3ff9004 CND-9305 - GW Battery management - Fix multiple event   <
    0a3cfb2 CND-9366 GW Battery Management - enter lpm if power c   <
    1036b3c CND-9346 GW Battery management: Set state to normal m   <
    e9c92f2 CND-9347: GW Battery Management: low power mode         <
    8ef3b94 CND-9346 GW Battery Management: Exit low power mode     <
    62ca652 LNT-134 : Issues observed in on-demand reading on met   <
    9de56d1 CND-9315 GW Battery Management: Enter low power mode    <
    0a2a64e CND-9326 GW Battery Management: Report power recovery   <
    617f2f7 CND-9307 GW Battery Management: Add configurable reco   <
    7334a04 CND-9305 GW Battery Management: Report failure events   <
    c9f086c CND-9298 GW Battery Management:  Add configurable gra   <
    8b56fc0 SMIPDEV-45: Fix problems with upload_smip.              <
    8dc0fd6 LNT-130: Fix for "Queue full, dropping msg"             <
    e9dfcee HPL-3 : HPL driver implementation-Update                <
    f704fac CND-8770: remove empty buffer messages from WARNING l   <
    1e1987d LNT-70: Add HLS for Fw Upgrade AA                       <
    6d5d808 JVVNL-4 : Meter FW upgrade Association using 80 clien   <



    fwVersion: 12110403   (new)
    fwVersion: 06010066   (old)
    06010003
    12110406
    06010002

     2177  git reset --hard origin/v148.y
     2178  git cherry-pick cde81c3
     2179  git cherry-pick e70887b
     2180  git cherry-pick c07c9c8
     2181  git status
     2182  git mergetool
     2183  git status
     2184  git cherry-pick --continue
     2185  git status
     2186  git cherry-pick 4c973e0
     2187  git cherry-pick f3aa469


    ----------------------------------------

    MBus risk
    - autoscaling scalers.
    - choice of unit(s) for energy/power
    - choice of unit(s) for volume/flow.

    possibly add scalers (if dynamic) into fixed format.



    --------------------------------

    downlink:
    - plug omnibox into downlink port
    - can ping from server->omnibox and omnibox->server. ICMP pings ok.
    - can use "nc -6lu"

    TCP also works for nc, but not for telnet.


    telnetd needs to be installed for IPv6, but DOES work.

    ----------------------------------------------------------
    SMIP

    https://confluence.cyco.io/display/SMIP/SMIP+tools

    ./tools/c4-tools/upload_smip.py -p /dev/ttyACM3 --get-connode-settings --slot 8


    b=01000000
    monitor.profile.network.sample.interval           : int=120       , string=x                                    , blob=78000000
    monitor.profile.radio.enabled                     : int=1         , string=
                                        , blob=01000000
    monitor.profile.radio.sample.interval             : int=120       , string=x                                    , blob=78000000
    prod.alias.id                                     : int=None      , string=88-73-84-53-00-00-08-48                 , blob=38382d37332d38342d35332d30302d30302d30382d3438
    prod.hw.version                                   : int=None      , string=B3PRIME_SKU3                           , blob=42335052494d455f534b553300
    prod.lowpan.eui64                                 : int=None      , string=8a-73-84-53-00-00-08-48                 , blob=38612d37332d38342d35332d30302d30302d30382d3438
    server.ip                                         : int=None      , string=2001:9b0:192:8::115                    , blob=323030313a3962303a3139323a383a3a31313500
    server.mesh.token.timeout                         : int=1083      , string=;                                    , blob=3b040000
    server.mq.push_delay                              : int=527       , string=                                    , blob=0f020000
    time.max.diff                                     : int=55        , string=7                                    , blob=37000000
    time.mesh.period                                  : int=1269      , string=None                                    , blob=f5040000
    time.ref.period                                   : int=25409     , string=Ac                                    , blob=41630000
    time.ref.rtt.max                                  : int=55        , string=7                                    , blob=37000000



    ./tools/c4-tools/upload_smip.py -p /dev/ttyACM0 --set-setting connode_settings server.ip 2001:db8:1::8

    --> AT

    OK
    --> ATE1

    OK
    --> AT#PORTCFG?
    AT#PORTCFG?
    #PORTCFG: 8,8

    OK
    --> AT#PORTCFG=8
    AT#PORTCFG=8
    OK
    --> AT+GMR
    AT+GMR
    12.00.926-B054

    OK
    --> AT#M2MCHDIR="/fileservice/database/slot8"
    AT#M2MCHDIR="/fileservice/database/slot8"
    OK
    --> AT#M2MLIST
    Warning: Starting with clean database
    Setting string server.ip=2001:db8:1::8 in connode_settings
    --> AT#M2MCHDIR?

    #M2MLIST: <.>
    #M2MLIST: <..>
    #M2MLIST: "slot8.slt",22560
    #M2MLIST: free bytes: 28567552

    OK
    AT#M2MCHDIR?
    #M2MCHDIR: "/fileservice/database/slot8"

    OK
    --> AT#M2MCHDIR="/fileservice/database/slot8"
    AT#M2MCHDIR="/fileservice/database/slot8"
    OK
    --> AT#M2MWRITE="slot8.slt",3104,0
    AT#M2MWRITE="slot8.slt",3104,0
    .
    File of size 3104 written, waiting for modem to confirm with OK...
    >>>
    OK
    --> AT#M2MCHDIR="/fileservice/database/slot8"
    AT#M2MCHDIR="/fileservice/database/slot8"
    OK







    ./tools/c4-tools/upload_smip.py -p ${DEV} --set-setting connode_settings server.ip 2001:9b0:192:8::115 --set-setting connode_settings dtls.heartbeat.period.s 60 --set-setting connode_settings time.ref.period 60 --set-setting connode_settings rpl.instance_id 46
    ./tools/c4-tools/upload_smip.py -p ${DEV} --set-setting connode_settings server.ip 2001:9b0:192:8::115 --set-setting connode_settings dtls.heartbeat.period.s 60

    ./tools/c4-tools/upload_smip.py -p /dev/ttyACM3 --reboot0

    ./tools/c4-tools/upload_smip.py -p /dev/ttyACM3 -r m2mapz.bin

    AT+M2M=1

    -----------------------------------------

    DTLS error -313 FATAL_ERROR

    contained in:
    3pp/wolfssl/src/wolfssl/error-ssl.h




    ---------------------------------------

    debug rate:
    start = 9:19:55
    end   = 10:29:04
    is 1h 9m 9s = 3600+(9*60)+9 = 4149sec

    cat t | awk '{ print length($0)-72;total+=(length($0)-72);count++ } END {print "average=" total/count "total=" total}'

    average bytes per debug line (without 72 bytes of metadata) is: 64.3
    total debug in 4149s is 3164300 bytes.
    debug text rate is: (3164300 / 4149) = 762 bytes/sec


    ------------------------------------------------------

    OBIS codes for MBus (From Blue Book).

    Thermal Energy : A==5 or A==6 (heating=5, cooling=6)

    no channel     : B == 0
    Channel 1->64  : B == 1..64
    Mfg specific   : B == 128..199

    Energy         : C = 1
    Volume         : C = 2
    Power          : C = 8
    Flow rate      : C = 9
    Inlet Flow temp: C = 10
    Outlet temp    : C = 11

    If A == 0 and C is 94, then D is the country-specifier.
    country-specific:C = 94

    for heating systems, flow == inlet, return == outlet.
    current value  : D = 0
    instantaneous  : D = 7
    current avg    : D = 10
    last avg       : D = 11

    if C==04, D = country calling code (46 for sweden).


    field E is typically used for tariff identifier, i.e. rate 1 == E of 1.
    When not needed, E == 0

    F is typically for identification of billing-period, so we're not using it so F == 0

    So for example:

    heating,Energy,currentvalue : 5.128.1.0.0.255
    heating,Flowrate,currentvalue : 5.128.9.0.0.255
    Measurement period, peak values, period 1(short) 5.b.0.8.11


    --------------------------------

    prodpack prodpak

    ubuntu@ubuntu-VirtualBox:/Data/Temp/ProdPack$ /Data/Projects/ipa_prod/make_prod_package.py --name ProdPak1K_b --bootloader bootloader-ipa3-bl-insecure-v151.2.elf  --image agent-ipa3b-genus-dlms-insecure-v151.2.elf  --order TEST_INTERNAL_IPA3_x1000_02_20190711131959.562.tar.gz --hw-variant ipa3b
    INFO:prodpak:Creating production package ProdPak1K_b.prodpak.tbz2
    INFO:order:Found 1000 EUI-64s in the range 00-1B-C5-0C-60-06-73-D1 to 00-1B-C5-0C-60-06-77-B8
    INFO:prodpak:Finished creating ProdPak1K_b.prodpak.tbz2

    ----------------------------------------

    SMIP estimates:
    - SMIPDEV-61: 4d
    - SMIPDEV-56, testing method:3d
    - SMIPDEV-55, remove old CoAP API: 1d
    - SMIPDEV-54, hash of key-table: 3d
    - SMIPDEV-53: frameCounter per device: 5d
    - SMIPDEV-52: events for key-table events: 2d
    - SMIPDEV-51: configured key-table into mac-security: 3d
    - CND-9565: 1d
    - SMIPDEV-50: new drop of code: 2d
    - SMIPDEV-49: SMIP dev setup: 4d
    - SMIPDEV-49: use of keys by MAC layer: 3d
    - SMIPDEV-63: key restriction conditions: 1d
    - SMIPDEV-64: single-key fallback: 1d
    - SMIPDEV-65: removal of change API for RLL key: 1d
    total: 34d

    Reimplement:
    CND-7896: Track and report unknown key indexes
    CND-6233: Remove PacketSecurity from MAC code
    CND-6233: Decrypt frame with Key Identifier Mode 1
    CND-7896: Filter IPv6 packets if restricted.
    CND-6233: Support multiple MAC keys in cndkeystore
    CND-7902: Re-encode RllKeyMessage before storing
    - CND-6233: Add /rll-key CoAP resource


    ----------------------------------------------------

    GW7:
    - Based on GW200.
    - Software-wise, no change other than already-planned NIC7 modifications (i.e. LED & FLASH removal).

    GW7-high-density:
    - Primary node based on GW200.
    - Secondary node based on GW200.
    - Software additions for communication using SLIP across UART (4 weeks?) (SLIP/Mesh bridge mode).
    - Software addition for 'slave' mode that can use SLIP interface as uplink (2 weeks?).

    GW7-satellite:
    - Based on IPA3b with no meter-driver.
    - No additional s/w effort, would work out-of-box.


    -------------------------------------------------------

     Merge changes from topic 'rll-key'

     * changes:
       CND-6233: Simplify macSecuritySetKey()
       CND-6233: Evict broadcast MAC device entries first
       CND-6233: Support rll-key in coap_request.py
       CND-6233: Generate event when RLL keys are stored
       CND-6233: Support multiple MAC keys in cndkeystore
       CND-6233: Support multiple keys in -mackey option
       CND-6233: Include key index in net/topology
       CND-6233: Read keys from storage during init
       CND-6233: Write keys to storage when set
       CND-6233: Remove mac-key slot from prod/keyfile
       CND-6233: Add /rll-key CoAP resource
       CND-6233: Use unicast DIO when key mismatch
       CND-6233: Pass packetinfo by reference in RPL core
       CND-6233: Propagate if preferred MAC key was used
       CND-6233: Remove macSecurityLevel from packetInfo
       CND-6233: TX packets with key for neighbor
       CND-6233: Keep track of MAC keyIndex of peers
       CND-6233: Decrypt frame with Key Identifier Mode 1
       CND-6233: Expose mutex with macDeviceTableUnlock()
       CND-6233: Remove PacketSecurity from MAC code
       CND-6233: Simplify ACK sending
       CND-6233: Simplify ASSERT in mac_tx encodeFrame()
       CND-6233: Improve 802.15.4 frame macros


    Merge changes from topic 'e2e-dao'

    * changes:
      CND-5678: Make autochannel work better with end-to-end DAO-ACKs
      CND-5678: Check retvalue before changing DAG
      CND-5678: Send less DIS messages when not in a hurry to join
      Python 3.5 support in inttest.py scripts
      Simulation scenario for overfull network
      CND-5678: Unit tests for DAO-ACKs
      CND-5678: Update via if we get a DAO with same seq
      CND-5678: Include DAG penalty when considering to swith DAG
      CND-5678: Add penalty for bad DAGs, cool-off time before retry
      CND-5678: Send error status in DAO-ACKs
      CND-5678: Remove the delay before logging in if using E2E DAO-ACK
      CND-5678: Deferred DAO-ACKs, forward DAO information immediately
      CND-5678: Keep track of in-flight DAOs awaiting DAO-ACK
      CND-5678: Update and spell fix RPL documentation
      CND-5678: Config param to limit route list size
      CND-5678: Refactor RPL code (mostly DAO)
      CND-5678: Break out DAO code

    Merge changes from topic 'restricted_rll_keys'

    * changes:
      CND-7896: Move multiple UDP defines to single .h
      CND-7995: Use correct proto for GET /rll-key
      CND-7994: Plug memory leak in PUT /rll-key
      CND-7902: Re-encode RllKeyMessage before storing
      CND-7987: Extract keyIndex properly from MAC frame



    Also:
    CND-7896: Track and report unknown key indexes
    CND-6233: Remove PacketSecurity from MAC code
    CND-6233: Decrypt frame with Key Identifier Mode 1
    CND-7896: Filter IPv6 packets if restricted.
    CND-6233: Support multiple MAC keys in cndkeystore
    CND-7902: Re-encode RllKeyMessage before storing
    CND-6233: Expose mutex with macDeviceTableUnlock()
    - CND-6233: Add /rll-key CoAP resource
    Set pathControl in RPL Target Option As required by RFC6550 9.9 point 3
    CND-5295: IEEE 802.15.4-2015 frame parsing
    CND-5295: Simplify code for encoding ACKs
    Support loading keys from the command line in coap_request.py
    Add MAC fuzz call to coap_request.py
    Actually parse the FuzzMacMessage message Oops.
    Do no set PAN ID compression bit on ACKs
    Ignore NULL packets in EFR32 driver
    CND-6576: Fix for Set/Action Response Processing
    Parse Metric Container properly in DIO
    Properly iterate RPL packets during decode
    Properly handle PAD1 RPL option
    Cleanup in RPL msg parsing code
    Improve rpl_msg unittest
    Keep track of DAO/DAO-ACK optional DODAGID
    Don't include DODAGID in DAO-ACK
    Improve RPL length checking
    Log less when failing to decrypt a radio frame
    Fix minor memory leak
    CND-6543: Make frame counter for aes encryption to survive node restart
    Use WPC (India) compliant channel plan on 865-867 MHz band
    Add 433 MHz configuration for EFR32 (IPA3)
    Fix int-in-bool-context warning from new GCC
    CND-6836: Update WolfSSL to 3.12.0
    Mark all proto files proto2
    CND-6233: Improve 802.15.4 frame macros
    CND-6233: Simplify ASSERT in mac_tx encodeFrame()
    CND-6233: Simplify ACK sending
    CND-6233: Remove PacketSecurity from MAC code
    CND-6233: Expose mutex with macDeviceTableUnlock()
    CND-6233: TX packets with key for neighbor
    CND-6233: Remove macSecurityLevel from packetInfo
    CND-6233: Propagate if preferred MAC key was used
    CND-6233: Pass packetinfo by reference in RPL core
    CND-6233: Use unicast DIO when key mismatch
    CND-6233: Read keys from storage during init
    CND-6233: Include key index in net/topology
    CND-6233: Support multiple MAC keys in cndkeystore
    CND-6233: Generate event when RLL keys are stored
    CND-6233: Evict broadcast MAC device entries first
    CND-6233: Simplify macSecuritySetKey()
    CND-6964: Ensure strings end with a null terminator
    CND-7024: Don't create rll-key event in prodmode
    Add dutycycle metric
    - Remove the deprecated config parameter lowpan.frequency
    CND-6871: Cosmetic refactoring in CC1200 driver
    CND-6871: Noise metric implementation for CC1200
    Log less when transmitting frames over radio
    CND-6547: tun6 failover for Ethernet & Cellular
    Remove arraySize from DISPATCH_ADD
    Remove ipHaveRouteTo()
    CND-7518: Fix deadlock when switching to MeshOnly
    Remove faulty ASSERT in uplink_tun6_failover
    Don't send RA with unspecified src address
    CND-6547: Log tun6 state changes
    CND-6547: Restart IPv4 interface if tun6 fails
    CND-7606: Add a 100 ms off-period after transmitting
    Do not log broadcast packets we fail to decrypt
    CND-7684 Reset tun6 badLinkCount on interface up
    Consider UPLINK_GRACETIME in conmanIsConnected()
    Differentiate between DNS timeout and not found
    Rename tun6 failures to helloFailures
    Remove unused variable in mac_radio.c
    CND-7729: Timeout network registration properly
    CND-5678: Document more in RPL route list code
    CND-5678: Remove config options for RPL min hop rank increase
    Send unicast DIS to neighbor that is about to time out
    CND-5678: Break out DAO code
    CND-5678: Refactor RPL code (mostly DAO)
    CND-5678: Config param to limit route list size
    CND-5678: Config param to limit route list size
    CND-5678: Keep track of in-flight DAOs awaiting DAO-ACK
    CND-5678: Deferred DAO-ACKs, forward DAO information immediately
    CND-5678: Send error status in DAO-ACKs
    CND-5678: Add penalty for bad DAGs, cool-off time before retry
    CND-5678: Include DAG penalty when considering to swith DAG
    CND-5678: Update via if we get a DAO with same seq
    CND-5678: Unit tests for DAO-ACKs
    CND-5678: Send less DIS messages when not in a hurry to join
    CND-5678: Check retvalue before changing DAG
    CND-5678: Make autochannel work better with end-to-end DAO-ACKs
    CND-5334: Gateway rank penalty based on down-routes
    CND-7681: Add RPL HopCount change callback
    CND-7987: Extract keyIndex properly from MAC frame
    CND-7902: Re-encode RllKeyMessage before storing
    CND-7994: Plug memory leak in PUT /rll-key
    CND-8093: Check link after reset in DHCPv6 client
    CND-8166: Disable support for PEM certificates
    CND-8166: Disable support for AES-192 and AES-256
    CND-7896: Support restricted flag in file for host
    CND-7896: Include indexes in RLL keyChange event
    CND-7896: Filter IPv6 packets if restricted
    CND-7896: RLL restricted keys restriction in RPL
    CND-7896: Track and report unknown key indexes
    Fix minor race in GW rank inflation
    Handle reset of rpl.netsize_penalty
    CND-8621 fuzzable needs to build for smip
    CND-8718: support new European 870 channel
    CND-8740 Support additional European 870 Modes
    CND-8408: Increase uplink grace period to 15 min
    CND-7465: Feed watchdog once during CSR generation
    CND-8978 All channel plans start from channel 0 except WPCIndia
    CND-8979 Codification of new channel plan
    CND-8977 duty cycle supports decimal values
    CND-9237, CND-8786 deadlock in mac_rx


    --------------------------------------------------------

    SMIP:

    m2mb_os.h:

    m2mb_os_getSysTicks()
    m2mb_os_setSysTicks()
    m2mb_os_getSysTickDuration_ms();
    m2mb_os_isrCtrl() < interrupt enable/disable.

    m2m_os_lock_info(M2M_T_OS_LOCK lock, INT32* sem_count,  INT32* count_suspended);
    M2M_API M2M_API_RESULT m2m_os_mtx_info(M2M_T_OS_MTX mtx, INT32* mtx_count,  INT32* count_suspended);

    m2mb_spi_ioctl( INT32 fd, INT32 request, ... );


    -------------------------------------------

    SMIP backport of MAC key table onto v98:

    modified:   config/smip.mk
    modified:   src/communication/cndkeystore/cndkeystore.c
    modified:   src/communication/cndkeystore/cndkeystore.h
    modified:   src/communication/conman/conman.c
    modified:   src/communication/lowpan/lowpan_tx.c
    modified:   src/communication/mac/802_15_4.h
    modified:   src/communication/mac/Makefile
    modified:   src/communication/mac/mac.c
    modified:   src/communication/mac/mac.h
    modified:   src/communication/mac/mac_device_table.c
    modified:   src/communication/mac/mac_device_table.h
    modified:   src/communication/mac/mac_dutycycle.c
    deleted:    src/communication/mac/mac_encode.c
    deleted:    src/communication/mac/mac_encode.h
    modified:   src/communication/mac/mac_radio.c
    modified:   src/communication/mac/mac_radio.h
    modified:   src/communication/mac/mac_rx.c
    modified:   src/communication/mac/mac_rx.h
    modified:   src/communication/mac/mac_security.c
    modified:   src/communication/mac/mac_security.h
    modified:   src/communication/mac/mac_tx.c
    modified:   src/communication/mac/mac_tx.h
    modified:   src/communication/radiotest/radiotest.c
    modified:   src/communication/types.h
    modified:   src/config/events_config_types.xml
    modified:   src/connode/cndkeystore.h
    modified:   src/platform/osal/osal-smip/osal_smip.c
    modified:   src/platform/osal/osal.h
    modified:   tools/buildsys/config-directives.mk




    ------------------------------------------------------------

    Gateway to node ratio:
    - Dual/triple node gateway for high density areas.
    - Satellite node gateways for normal-density areas.
    - Reduce contention by TDMA-like scheme between nodes. Makes more efficient use of medium. This
    could be as simple as an appliction-level protocol to send data on a schedule (determined by
    gateway).
    - Multiple CC1200 tranceivers per processor? would this be cheaper? (more s/w cost, less h/w cost).
    - Better transmit power management to reuce contention.
    - range and density is a question to be asked? no point having high-density gateways when we
    need support over more area.
    - Is 'average hops' a good 'stariness' metric for a nmesh?
    - Use mesh-simulator for large nodes? can we get that to work?




    Problem:
    Root node is the bottleneck for radio:

    Solutions:
    - Have multiple roots (i.e. multiple nodes on multiple channels).
    - Don't shout so loudly (better transmit power-managent).
    - Don't shout at the same time (scheduled transmissions).
    - Have physical separation via the satellite or in-meter-satellite gateways.
    - Make the mesh more 'bursty' with larger packets, to take advantage of the LBT dead-time?
    Can application coalesce packets?
    - All the above.


    -----------------------------------------------

    https://www.kalkitech.com/products/syncnet/


    ---------------------------------------------------

    dtls test with openssl:

    Generate keys&certs:
    openssl ecparam -out key.pem -name prime256v1 -genkey
    openssl req -new -sha256 -key key.pem -out server.csr
    openssl x509 -req -sha256 -days 365 -in server.csr -signkey key.pem -out cert.pem

    server:
    openssl s_server -dtls1_2 -cert cert.pem -key key.pem -accept 4444

    client:
    openssl s_client -dtls1_2 -connect 127.0.0.1:4444 -debug -cert cert.pem -key key.pem -cipher ECDHE-ECDSA-AES128-GCM-SHA256

    from:
    https://github.com/pion/dtls





    openssl genpkey -out key.pem -algorithm ec -pkeyopt ec_paramgen_curve:P-256
    #openssl ecparam -out key.pem -name prime256v1 -genkey
    openssl req -new -sha256 -key key.pem -out server.csr
    openssl x509 -req -sha256 -days 365 -in server.csr -signkey key.pem -out cert.pem



    --------------------------------------------------------


    --> AT#M2MREAD="slot8.slt"
    AT#M2MREAD="slot8.slt"
    <<<
    OK
    dtls.heartbeat.period.s                           : int=60        , string=<                                    , blob=3c000000
    lowpan.channel                                    : int=15        , string=                                    , blob=0f000000
    lowpan.channelplan                                : int=0         , string=                                    , blob=00000000
    prod.alias.id                                     : int=None      , string=88-73-84-53-00-00-09-2c                 , blob=38382d37332d38342d35332d30302d30302d30392d3263
    prod.hw.version                                   : int=None      , string=B3PRIME_SKU3_REV24                     , blob=42335052494d455f534b55335f524556323400
    prod.lowpan.eui64                                 : int=None      , string=8a-73-84-53-00-00-09-2c                 , blob=38612d37332d38342d35332d30302d30302d30392d3263
    rpl.instance_id                                   : int=9         , string=                                     , blob=09000000
    server.ip                                         : int=None      , string=2001:db8:1::4                           , blob=323030313a6462383a313a3a34
    time.ref.period                                   : int=60        , string=<                                    , blob=3c000000


    ----------------------------------------------------

    CH logs:


    ./tools/c4-tools/readport.py -p /dev/ttyACM3 > /Data/Logs/ch1.log
    tail -f /Data/Logs/ch1.log | rg -v "Ezsp|ASH|^$"


    --------------------------------------------------------


    import re
    import csv
    data=[]
    for line in open('t').read().splitlines():
        d=re.compile('lat:([0-9\.]*),lon:([0-9\.]*),name:\'(.*?)\',.*?color:\'(.*)\',icon:\'(.*)\'\}').findall(line)
        data.append(d[0])

    f=open('t.csv','w')
    writer=csv.writer(f)
    writer.writerows(data)
    f.close()


    -------------------------------------------------

    TOBY-L210:
    - [CA-040611 / u-blox ID 2-2701] UDP packet might not sent out with TOBY-L210
    - [CA-042553 / u-blox ID 2-2990, 2-3064, 2-3065, 2-3259] Unexpected behavior of the module
    TOBY-L210 in P3 testing (M2M_009, M2M_011, M2M_012, M2M_068, M2M_072)
    - [u-blox ID 1-2030] During PPP startup some unexpected strings may be sent by the module.
    Workaround: ignore these strings
    - [u-blox ID 1-1906] Downloading a file in the file system at high baudrate (921600 b/s) can lead
    to data corruption. Workaround: decrease the UART baudrate to 115200 b/s.


    --------------------------------------

    SMIP AT commands:

    file:///C:/Users/SteveTickle/Documents/Telit_UE910_SMIP_CH/telit_appzone_c_user-guide_r1.pdf

    Enter the command below to reboot the module.
    AT+M2M=1


    make smip smip_ctrlporthub
    make -j2 -C scimitar_ch/CommsHubFramework TARGET=telit_apz OSTYPE=cygwin ARMLMD_LICENSE_FILE= ARMROOT= C4LIB=../../build/smip_ctrlporthub/release/libc4.a
    ./tools/c4-tools/upload_smip.py -p /dev/ttyACM4 ./scimitar_ch/CommsHubFramework/bin/target/telit_apz/m2mapz.bin

    reboot using AT+M2M=1


    ------------------------------------

    Getting started:

    new machine:

    apt install build-essential
    apt install silversearcher-ag
    sudo apt install net-tools
    sudo apt install openssh-server
    pip install git-review
    apt-get install virtualbox-guest-dkms

    git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
    ~/.fzf/install

    .vimrc
    set expandtab
    set nowrap
    set tabstop=4
    set shiftwidth=4
    set number



    https://developer.arm.com/tools-and-software/open-source-software/developer-tools/gnu-toolchain/gnu-rm/downloads
    wget https://developer.arm.com/-/media/Files/downloads/gnu-rm/8-2019q3/RC1.1/gcc-arm-none-eabi-8-2019-q3-update-linux.tar.bz2?revision=c34d758a-be0c-476e-a2de-af8c6e16a8a2?product=GNU%20Arm%20Embedded%20Toolchain,64-bit,,Linux,8-2019-q3-update

    tar jxvf ~/Downloads/gcc-arm-none-eabi-8-2019-q3-update-linux.tar.bz2 -C ~/
    export PATH=$PATH:$install_dir/gcc-arm-none-eabi-*/bin



    git config --global user.email "steve.tickle@cyanconnode.com"
    git config --global user.name "Steve Tickle"


    apt install python3-pip libjansson4 libasan2 libjansson-dev
    pip3 install serial

    # note: python2
    pip install protobuf
    pip install pyserial

    git clone ssh://stevetickle@gerrit.cyco.io:222/omnimesh
    git clone ssh://stevetickle@gerrit.cyco.io:222/terminal

    cd terminal && git remote add gerrit ssh://stevetickle@gerrit.cyco.io:222/terminal

    apt install quilt protobuf-compiler pkg-config


    wget https://confluence.cyco.io/display/ENG/2015/05/25/Toshiba+escrow?preview=%2F14155968%2F60227589%2Farm_compiler.tar.gz
    tar zxvf ~/Downloads/arm_compiler.tar.gz -C ~/
    https://confluence.cyco.io/display/ENG/2014/09/04/How+to+get+the+ancient+ARM+compiler+for+SMIP
    sudo dpkg --add-architecture i386
    sudo apt update
    sudo apt-get install libc6:i386 libncurses5:i386 libstdc++6:i386
    sudo apt install multiarch-support

    add to .bashrc
    export ARMLMD_LICENSE_FILE=8224@172.16.32.179


    need a ~/.flexlmrc containing:
    ARMLMD_LICENSE_FILE=8224@flexlm.cyco.io

    --------------------------------------------------

    CH task priorities (1=high, 32=low)

    'cc1200',       priority 2, taskId 19, taskId_CH 22, stack 1
    'mac_rx',       priority 3, taskId 18, taskId_CH 21, stack 1
    'ctrlport',     priority 4, taskId 17, taskId_CH 20, stack 1
    'lowpan_tx',    priority 4, taskId 20, taskId_CH 23, stack 1
    'coap',         priority 4, taskId 21, taskId_CH 24, stack 1
    'rpl',          priority 4, taskId 23, taskId_CH 26, stack 1
    'uplink_rx',    priority 4, taskId 24, taskId_CH 27, stack 1
    'uplink_tx',    priority 4, taskId 25, taskId_CH 28, stack 1
    'dtls',         priority 5, taskId 22, taskId_CH 25, stack 3
    'schedule',     priority 5, taskId 16, taskId_CH 19, stack 1
    'terminal',     priority 6, taskId 15, taskId_CH 18, stack 1
    'filedl',       priority 10, taskId 26, taskId_CH 29, stack 3

    Diagnostics     priority 12

    error is:
    The CH has rebooted once due to Task 'Diagnostics' failed to lock 'Crypto', held by ': dtls'.

    Suspect that cc1200 may be in a priority-inversion situation with the dtls task. The dtls task
    needs access to the random number generator, which shares the bus with the radio.
    If dtls is in middle of transaction with VaultIC (at low priority, but owns the bus) and the
    high priority radio task (cc1200) tries to lock the bus, the low priority task does not get
    run-time to release the lock, therefore the high-priority cc1200 task will be blocked
    indefinitely on the low-priority dtls task.
    Solution would be to enable priority-inheritance on the SPI mutex (if possible).

    - DTLS locks crypto for rng transaction. It locks spi to perform this.
    - cc1200 wants spi but is blocked on DTLS for this.

    --------------------------------------------

    This will create a client and server certificate and private key file.
    https://chris-wood.github.io/2016/05/06/OpenSSL-DTLS.html

    openssl req -x509 -newkey rsa:2048 -days 3650 -nodes -keyout client-key.pem -out client-cert.pem
    openssl req -x509 -newkey rsa:2048 -days 3650 -nodes -keyout server-key.pem -out server-cert.pem

    openssl s_server -dtls -port 1069 -key server-key.pem -cert server-cert.pem
    openssl s_client -dtls -connect localhost:1069

    cipher: ECDHE-RSA-AES256-GCM-SHA384


    -cipher ECDHE-ECDSA-AES128-GCM-SHA256

    openssl genpkey -out key.pem -algorithm ec -pkeyopt ec_paramgen_curve:P-256
    openssl req -new -sha256 -key key.pem -out server.csr
    openssl x509 -req -sha256 -days 365 -in server.csr -signkey key.pem -out cert.pem


    ------------------------------------------


    git push ssh://stevetickle@gerrit.cyco.io:222/terminal HEAD:refs/for/master

    -------------------------------------------------


    git@gitlab.cyco.io:CA/ca.git

    ---------------------------------------------------

    [22815.650682] xhci_hcd 0000:00:0c.0: WARN Cannot submit Set TR Deq Ptr
    [22815.650687] xhci_hcd 0000:00:0c.0: A Set TR Deq Ptr command is pending.
    [22816.193293] xhci_hcd 0000:00:0c.0: ERROR mismatched command completion event
    [22816.193462] usb 1-4: USB disconnect, device number 66
    [22816.194093] xhci_hcd 0000:00:0c.0: ERROR mismatched command completion event
    [22821.372699] xhci_hcd 0000:00:0c.0: xHCI host not responding to stop endpoint command.
    [22821.373353] xhci_hcd 0000:00:0c.0: xHCI host controller not responding, assume dead
    [22821.373401] xhci_hcd 0000:00:0c.0: HC died; cleaning up
    [22821.373487] cdc_acm 1-4:1.6: failed to set dtr/rts
    [22821.374083] xhci_hcd 0000:00:0c.0: Slot 4 endpoint 2 not removed from BW list!
    [22821.374086] xhci_hcd 0000:00:0c.0: Slot 4 endpoint 6 not removed from BW list!
    [22821.374088] xhci_hcd 0000:00:0c.0: Slot 4 endpoint 10 not removed from BW list!
    [22821.374091] xhci_hcd 0000:00:0c.0: Slot 4 endpoint 14 not removed from BW list!
    [22821.374094] xhci_hcd 0000:00:0c.0: Slot 4 endpoint 18 not removed from BW list!
    [22821.374097] xhci_hcd 0000:00:0c.0: Slot 4 endpoint 22 not removed from BW list!
    [22821.374109] usb 1-1: USB disconnect, device number 2
    [22821.436304] xhci_hcd 0000:00:0c.0: Slot 1 endpoint 2 not removed from BW list!

    ---------------------------------------------------

    CA:

    Download https://artifactory.cyco.io/pypi-dev/ca/13003/ca-13003-py2.py3-none-any.whl
    pip install ~/Downloads/ca-13003-py2.py3-none-any.whl

    ------------------------------------------------------------------

    docker-compose -f .buildenv-compose run --rm -v $(PWD):/project -w /project -u build buildenv /bin/sh -c "${ARGS}"

    docker-compose -f .buildenv-compose run flexlm

    flexlm armcc
    docker run --mac-address="00:50:56:ba:54:5c" --hostname="flexlm" --expose 8200-50000 smip/flexlm
    docker inspect -f "{{ .NetworkSettings.IPAddress }}" <containerId>
    get IP address
    export ARMLMD_LICENSE_FILE=8224@172.18.0.2




    make smip smip_ctrlporthub
    rsync -av --delete --exclude Makefile src/connode/ scimitar_ch/CommsHubFramework/3rdParty/Connode/c4_bin-smip_lg/include/connode/
    make -C scimitar_ch/CommsHubFramework TARGET=telit_apz OSTYPE=cygwin ARMLMD_LICENSE_FILE= ARMROOT= C4LIB=$PWD/build/smip_ctrlporthub/release/libc4.a

    ./tools/c4-tools/upload_smip.py -p /dev/ttyACM0 -r scimitar_ch/CommsHubFramework/bin/target/telit_apz/m2mapz.bin


    Telit modem detected as modem by Linux and ModemManager attempts to take it....
    add the following to udev rules to prevent this:

    in /lib/udev/rules.d/77-mm-usb-device-blacklist.rules

    # Toshiba SMIP CommsHub
    ATTRS{idVendor}=="1bc7", ATTRS{idProduct}=="0021", ENV{ID_MM_DEVICE_IGNORE}="1"


    Make sure no flow control on terminal, reset/power cycle CH, type in:
    AT+M2M=4,10

    now you can use upload_smip to update code.

    ./tools/c4-tools/upload_smip.py -p /dev/ttyACM0 -r scimitar_ch/CommsHubFramework/bin/target/telit_apz/m2mapz.bin

    monitor with:
    stty -F /dev/ttyACM3 -ixon -ixoff -crtscts
    ./tools/c4-tools/readport.py -p /dev/ttyACM3 | ag -v "Ezsp|ASH|^$"

    # to enable debug:
    change "C4_logSetLevel(cnd_LogLevelInfo);" to "C4_logSetLevel(cnd_LogLevelDebug);" in C4_task.c


    -------------------------------------------------------

    server Performance test blog:

    https://confluence.cyco.io/display/ENG/2015/01/27/Server+Performance+Test+Results

    ----------------------------------------------------------


    coap request thru server:

    ./tools/c4-tools/coap_request.py  --server venus.uk.cyanconnode.com:38082 --agent  fd72:9df8:bda5:286:21b:c50c:6004:3621 --log

    ------------------------------------------------

    ppGet crash:

    Hdev DV35@ 35f54 L 40469 S 2000a450

    -----------------------------------------------------------

    manual server installation:

    mkdir /opt/omnimesh
    chmod a+rw /opt/omnimesh
    From Jenkins, download: server-ws.tgz, server.tgz, sma.tgz tund-8.tar.gz
    mkdir -p /opt/omnimesh/v63.3
    mkdir -p /opt/omnimesh/v63.3/nms
    mkdir -p /opt/omnimesh/v63.3/sma
    ln -s /opt/omnimesh/v63.3 /opt/omnimesh/current
    tar zxvf ~/Downloads/server.tar.gz -C /opt/omnimesh/v63.3/nms
    tar zxvf ~/Downloads/server-ws.tar.gz -C /opt/omnimesh/v63.3/nms
    tar zxvf ~/Downloads/sma.tar.gz -C /opt/omnimesh/v63.3/sma
    tar zxvf ~/Downloads/tund-8.tar.gz -C /opt/omnimesh

    sudo apt install default-jre

    # Get mysql root pw and user (look at the [client] section): BgmDZmOFJog90xwm
    sudo cat /etc/mysql/debian.cnf

    mysql -u debian-sys-maint -p -e "create user 'meshnet'@'localhost' identified by 'meshnet';"
    mysql -u debian-sys-maint -p -e "create database sma; grant all on sma.* to 'meshnet'@'localhost'; flush privileges;"
    mysql -u debian-sys-maint -p -e "create database smc; grant all on smc.* to 'meshnet'@'localhost'; flush privileges;"

    mysql -umeshnet -pmeshnet sma < /opt/omnimesh/current/sma/db/mysql-ddl.sql
    mysql -umeshnet -pmeshnet smc < /opt/omnimesh/current/nms/db/mysql-ddl.sql

    change nms/bin/server.sh to use "#!/usr/bin/env bash" (not sh)
    change sma/bin/server.sh to use "#!/usr/bin/env bash" (not sh)

    sudo /opt/omnimesh/current/nms/bin/server.h
    sudo /opt/omnimesh/current/sma/bin/server.h
    sudo TUN6D_SECRET=whatsfordinner /usr/bin/tun6d --loglevel debug


    -----------------------------------------------------------------------

    #include "m2m_hw_api.h"
    uint32_t    start   = 0;
    uint32_t    end     = 0;
    M2M_T_SPI_RESULT m2m_result;
    m2m_hw_get_ms_count( &start );
    LOG_ERROR("start is %u n is %d ",start,n);
    m2m_result = m2m_spi_write(C_CH_HAL_SPI_USIF_NUM, tx_buf, rx_buf, n, NULL);
    m2m_hw_get_ms_count( &end );
    LOG_ERROR("end is %u diff = %u ",end,end-start);

    CRYPTOIF_Random

    ----------------------------------------------------

    smipdev-66:
    - Code for unicast retrieval is there in both: getBlockWithCoap() && handleMsgGetNextBlock().
    - If a gateway changes mode, it will not serve data from the nodes despite it having the file.
    - FiledlMsgGetNextBlock
    - FiledlMsgCheckFileAndSendFinished

    3387: <----- Left DAG partway thru download. DAG is 2a03:dd00:800:4002:8873:8456:2:d411, myIP is 2a03:dd00:800:4002:8873:8455:2:d3dc preferred parent is 2a03:dd00:800:4002:8873:8455:2:d3b6
    3651:<----- new preferred parent is 2a03:dd00:800:4002:8873:8455:2:d3b6, DAG is 2a03:dd00:800:4002:8873:8456:2:d411, myIP is 2a03:dd00:800:4002:8873:8455:2:d3dc, resumes download of file on block 1397.

    3387: <----- Left DAG partway thru download. DAG is 2a03:dd00:800:4002:8873:8456:2:d411, myIP is 2a03:dd00:800:4002:8873:8455:2:d3dc preferred parent is 2a03:dd00:800:4002:8873:8455:2:d3b6
    3651:<----- new preferred parent is 2a03:dd00:800:4002:8873:8455:2:d3b6, DAG is 2a03:dd00:800:4002:8873:8456:2:d411, myIP is 2a03:dd00:800:4002:8873:8455:2:d3dc, resumes download of file on block 1397.

    1) 2a03:dd00:800:4002:8873:8456:2:d411 2a03:dd00:800:4002:8873:8455:2:d3dc 2a03:dd00:800:4002:8873:8455:2:d3b6
    2) 2a03:dd00:800:4002:8873:8456:2:d411 2a03:dd00:800:4002:8873:8455:2:d3dc 2a03:dd00:800:4002:8873:8455:2:d3b6

    Finished downloading file /firmwares/5281f097-fb4d, downloadOnly: 0


    ----------------------------------------------------------

    SMIPDEV-26: ch10.log

    79476 [  17233.484][2019-08-01 19:54:30][ERROR][Supervisor        ]SUPERVISOR_Task.c,2152:Supervisor Task failed to send Task State message id=65542 to "Diagnostics" Task
    19155 [   8170.118][2019-08-01 22:27:08][FATAL][Diagnostics       ]CH_osal_lock.c,1039:Task 'Diagnostics' failed to lock 'Crypto', held by 'c:schedule'
    2649 [    276.258][2019-08-01 20:34:17][FATAL][Diagnostics       ]CH_osal_lock.c,1039:Task 'Diagnostics' failed to lock 'Crypto', held by 'c:schedule'
     79472 [  17233.461][2019-08-01 19:54:30][FATAL][Diagnostics       ]CH_osal_lock.c,1039:Task 'Diagnostics' failed to lock 'Crypto', held by 'c:schedule'


    VltGenerateRandom() never returns!
    SPI is still able to be used (CC1200 has no problems).

    ------------------------------------------------------------

    MBUS review:

    mbus: Initial add of driver
    mbus: move non-task mainloop functions to own modules

    General:
    - File headers non standard.
    - interface documention in header files.
    - bracketing style
    - no camelCase.
    - no whitespace between functions.
    - check_range_is_readwritable. macros should be upper-case. Suggest using CHECK_STRUCT_IS_READABLE(v) which will check the range of sizeof(*v) bytes. One less parameter in lots of places.
    - Dont need enter/exit tracing, e.g. TRACE_LOG_DEBUG("%s", "enter"); ... can be done by compiler if needed but don't need commented out code for this.

    mbus/dataprofilesample.c:
    -

    mbus/device-mbus-axdr.c:
    -

    mbus/device-mbus.c:
    - 346: "goto exit" skips functionality intended?
    - devmbus_uart_start() need to use MODULE_ functionality?
    - deviceMBusTask should probably cause a restart if it drops out rather than just shutting down.

    mbus/device-mbus-devicedata.c:
    -

    mbus/device-mbus-maxdemand.c:
    - 114: 'exit1' & 'exit2'... maybe 'exit' and 'exitNoDestroy'??
    - 96: #define MAX_ELEMS_IN_READING 128 ??
    - 204,215,228: odd LOG text format... why? just put text in string... this isn't searchable as-is.
    - 265: Variable Length Arrays are not allowed. robustness/security/MISRA/etc.
    - 278: commented out code.
    - 294: "if 0" code.
    - 540: #if 0 code.

    mbus/device-mbus-mbus.c:
    - 144,151,158,166: Probably don't want to PANIC based on malformed input. We should PANIC if internal state is bad, but be resilient to malformed input.
    - 238, 582, 678: Commented out code.
    - 824: Possibly use ptrdiff_t to more portably do pointer position comparisons.
    - 1153: Possibly put _memswap into utilities?
    - 1161: No need for a separate function to hide _memswap behind.
    - reverse_copy: Can this be replaced by memove? should it be in utilities?
    - MBUS_Value_as_int24/48: non-functional code? Shouldn't they just be returning the next-largest native-sized value?
    - time_is_valid: we have checkTmLimits which is performing a very similar operation I think but more complete.

    mbus/device-mbus-mdreading.c:
    mbus/device-mbus-ondemand.c:
    - 41,142 "#if 0" code
    - 136, exit1, exit2, exit3, exit4 need more descriptive names... normalExit?, errorExit?
    - 237 LOG_DEBUG format not searchable and confusing.
    mbus/device-mbus-readout.c:
    - no file header.
    - min_uint32() Lets use standard MIN/MAX.
    mbus/device-mbus-register.c:
    mbus/device-mbus-uart.c:
    - 500, debug code not needed.
    - 510: "while (in_isr)" not needed. it can't be executing while in the ISR.
    mbus/device-mbus-watchdog.c:
    - Not clear why we need a watchdog module. We should just have watchdogFeed() calls at critical points.
    - LOG_DEBUG("%s%s%s %s", "", "start", "ing", "watchdog schedule"); (and others).
    - 76, 43 Commented out debug code.
    mbus/mbus-utils.c:

    jprintf.c
    - Unnecessary change that affects all builds.

    axdr.c:
    - DLMS_Date_create style() and others is wrong doesn't fit.
    - 810 commented out code. Also looks like we already have this, check dlms.c.
    - Also, DLMS_Date_to_tm may be duplicated.

    -----------------------------------------

    radio-simulator:

    - model in radio_simulator_server.c
    - python wrapper and runner in inttest/
    - CCA, inverse-square, bitrate, receiver-sensitivity all modelled.


    --------------------------------------

    1ph UGVCL
    sequenceNumber,numericCode,textCode,type,metricTime,value
    88279,4.2,ip.tx.bytes,Delta,24/07/19 20:17:14,165239
    88475,4.2,ip.tx.bytes,Delta,25/07/19 20:17:14,127391
    88669,4.2,ip.tx.bytes,Delta,26/07/19 20:17:14,193879
    88863,4.2,ip.tx.bytes,Delta,27/07/19 20:17:15,175977
    89057,4.2,ip.tx.bytes,Delta,28/07/19 20:17:15,161950
    89251,4.2,ip.tx.bytes,Delta,29/07/19 20:17:16,210717
    89449,4.2,ip.tx.bytes,Delta,30/07/19 20:17:16,198978
    89648,4.2,ip.tx.bytes,Delta,31/07/19 20:17:16,191794
    89843,4.2,ip.tx.bytes,Delta,01/08/19 20:17:16,148274
    90037,4.2,ip.tx.bytes,Delta,02/08/19 20:17:16,154996
    90231,4.2,ip.tx.bytes,Delta,03/08/19 20:17:15,168833
    90427,4.2,ip.tx.bytes,Delta,04/08/19 20:17:17,222517
    90621,4.2,ip.tx.bytes,Delta,05/08/19 20:17:16,159487


    another 1ph UGVCL:
    sequenceNumber,numericCode,textCode,type,metricTime,value
    83213,4.2,ip.tx.bytes,Delta,24/07/19 14:17:13,130660
    83534,4.2,ip.tx.bytes,Delta,26/07/19 08:33:14,329391
    83730,4.2,ip.tx.bytes,Delta,27/07/19 08:33:14,129696
    83928,4.2,ip.tx.bytes,Delta,28/07/19 08:33:15,114967
    84126,4.2,ip.tx.bytes,Delta,29/07/19 08:33:15,103111
    84328,4.2,ip.tx.bytes,Delta,30/07/19 08:33:16,187171
    84530,4.2,ip.tx.bytes,Delta,31/07/19 08:33:16,158075
    84732,4.2,ip.tx.bytes,Delta,01/08/19 08:33:16,200445
    84928,4.2,ip.tx.bytes,Delta,02/08/19 08:33:17,150767
    85126,4.2,ip.tx.bytes,Delta,03/08/19 08:33:17,164721
    85320,4.2,ip.tx.bytes,Delta,04/08/19 08:33:18,119691
    85514,4.2,ip.tx.bytes,Delta,05/08/19 08:33:17,110675
    85708,4.2,ip.tx.bytes,Delta,06/08/19 08:33:18,122226



    yet another 1ph UGVCL:
    sequenceNumber,numericCode,textCode,type,metricTime,value
    76111,4.2,ip.tx.bytes,Delta,25/07/19 02:28:22,79915
    76307,4.2,ip.tx.bytes,Delta,26/07/19 02:28:24,146542
    76503,4.2,ip.tx.bytes,Delta,27/07/19 02:28:25,89344
    77020,4.2,ip.tx.bytes,Delta,29/07/19 16:09:16,99196
    77218,4.2,ip.tx.bytes,Delta,30/07/19 16:09:23,109379
    77414,4.2,ip.tx.bytes,Delta,31/07/19 16:09:18,117226
    77612,4.2,ip.tx.bytes,Delta,01/08/19 16:09:19,143567
    77806,4.2,ip.tx.bytes,Delta,02/08/19 16:09:20,111112
    78000,4.2,ip.tx.bytes,Delta,03/08/19 16:09:20,106535
    78194,4.2,ip.tx.bytes,Delta,04/08/19 16:09:22,120733
    78390,4.2,ip.tx.bytes,Delta,05/08/19 16:09:23,110648


    ----------------------------------------------

    routing table size:

    CONFIG_ROUTELIST_SIZE in rpl_routelist.c

    Should be enought for ~240 mesh nodes.




    ----------------------------------------

    release 151.3

    +- CND-8918 - Agent - node is performing redundant local filtering of alarms.      : 814fe3e6c33a80867439b5fc71c8fdf20d6a327f
    +- CND-9388 - UGVCL meter reporting time issue on scheduled IS sample collection.  : e187d59e43f0a2a97705753f9183207bd9f8df1c
    ++- CND-9454 - Get Prepayment configuration use case                                : 47fc715d307b5fb2c3d3519b394cb6c52f3872ec 215b9b876268e37321ffc149c9560a1795571581
    +- CND-9491 - Agent - LNT D2 MD RESET failing consistently                         : bcca766d1c3be3faf5b2962bcca06f257336ba84
    +- CND-9539 - Agent - COSEM time conversion wrong on Sunday                        : 8e8315e0f13bb82467bac27b2d96ae6ed444af3b already there
    +- CND-9499 - Agent - LNT D2 Load Curtailment SET Failing                          : 630e1a3b9761f0172a479ab3d21fcfd78b1bb4fc


    newest:
    215b9b876268e37321ffc149c9560a1795571581
    bcca766d1c3be3faf5b2962bcca06f257336ba84
    814fe3e6c33a80867439b5fc71c8fdf20d6a327f
    e187d59e43f0a2a97705753f9183207bd9f8df1c
    47fc715d307b5fb2c3d3519b394cb6c52f3872ec
    630e1a3b9761f0172a479ab3d21fcfd78b1bb4fc +
    8e8315e0f13bb82467bac27b2d96ae6ed444af3b already there.
    oldest:

    -------------------------------------------

    configure kdiff3
    git config --global --add merge.tool kdiff3
    git config --global --add diff.guitool kdiff3
    git config --global --add mergetool.kdiff3.path `which kdiff3`
    git config --global --add difftool.kdiff3.path `which kdiff3`
    git config --global --add mergetool.kdiff3.trustExitCode false
    git config --global --add difftool.kdiff3.trustExitCode false


    -------------------------------------------------------------------------



    SMIPDEV-51 Implement ability to configure a key table and preferred key

    (1) Configuration: support binary data (new Bytes type)
    (2) Configuration: support secure parameter for keystore (new Secure
    flag and securedId)
    (3) SMIP configuration backend: store secure parameter to keystore
    (4) Add new parameter "key.keytable" (Bytes type, Secure).
    It contains key table and preferred key. For SMIP, it is stored in
    keystore KeyTable.
    (5) Add keytable to mac_security and ready for multiple keys support
    (6) Add smip mock code for configuration and keystore storage
    (7) Add ipa1-smip-insecure target to test smip code on ipa1 node

    -----------------------------------------------------------

    radio overhead:
    https://confluence.cyco.io/display/ENG/%5BFuncSpec%5D+C4+-+Radio+Mesh+Performance+Model


    data packet:
    (assuming 3xlowpan packets).

    PHY                 - 24 = 3*8  = (Preamble + SFD + PHR)
    MAC                 - 69 = 3*23
    6LoWPAN (ipv6+udp)  - 58 = 48+5+5
    DTLS                - 49  = 13 + 36 (seq num, IV and hash)
    CoAP                - 11
    Protobuf            - 28
    AXDR                - 24
    app metadata        - 36
    readingdata         - 90

    Total   - 389

    Response packet to above is approx:

    PHY                 - 8 = 1*8  = (Preamble + SFD + PHR)
    MAC                 - 23 = 1*23
    6LoWPAN (ipv6+udp)  - 48 = 48
    DTLS                - 49  = 13 + 36 (seq num, IV and hash)
    CoAP                - 11

    Total   - 139

    total transferred 389+139 = 528

    = 17% efficient.



    new:

    (assuming 2xlowpan packets).

    PHY                 - 16 = 2*8  = (Preamble + SFD + PHR)
    MAC                 - 46 = 2*23
    6LoWPAN (ipv6+udp)  - 53 = 48+5
    readingdata         - 90

    Total   - 205

    = 43% efficient.

    !! but only point-to-point encryption on mesh, no end-to-end !!

    --------------------------
    SMIP sftp

    sftp.cyco.io
    /home/toshiba/data/New_Build_Libraries/

    /Data/Temp/SMIPDrop1

    sftp smip@sftp.cyco.io
    /home/toshiba/upload

    ------------------------------------------------------

    2G
    2G EDGE
    3G HSPA
    3G HSUPA
    3G HSPA+
    LTE

    -----------------------------

    CoAP timeouts.

    handlePiggybackedTimeouts()
    handleRetransmissions();

    "session %d (%s): sending message, try #%d of %d, next in %d ms"
    "session %d (%s): sending message, try #%d of %d"


    gateway proxy
    - Nodes send mq elements to mq-proxy running on gw.
    - mq-proxy then packages them for transmission over uplink to server.
    - mq-proxy handles the ACKs and retransmissions.
    - Failures are handled by retransmission (over uplink) and subsequent dropping of message in same way as happens on originating node.
    - Removes ACK-load from mesh, reducing contention and allowing more meters on mesh.
    - packets on mesh get ACKs without contention (due to ETSI & LBT). CoAP responses/ACKs come with contention.
    - In theory also allows nodes to not put samples in mq for NIC7.
    - Packing would be more optimal, tuned for cellular packet-sizes and able to take multiple readings from multiple nodes at every
    sampling interval.


    ----------------------------------------------------

    /tools/c4-tools/upload_smip.py -r /Data/Temp/m2m_v98-7_apz.bin -p /dev/serial/by-id/usb-Telit_6_CDC-ACM_004678058002915-if08



    ----------------------------

    Gateway Recommendations:
    - Increase table size to not be route-list-limited (10KB should hold 500).
    - Allow a duty-cycle-reserve so RPL packets can never be duty-cycle limited.
    - Prioritise RPL packets over data packets to hold the mesh together.
    - Implement a proxy-mq to half the number of mq-generated packets on the mesh (Increase FLASH?).
    - Compress and coalesce packets in the proxy-mq to make better use of uplink-bandwidth (increase RAM?).
    - Increase modem-uart bandwidth to remove this as a bottleneck.
    - Reduce data overhead by removing AXDR, protobuf, CoAP and application metadata overhead (move to discovery phase).
    - Implement an application-level transmit scheduling scheme on gateway.
    - Implement frequency-agility in network-planning (currently enabled but not used as gws need to be assigned static channels).
    - Scheduled uplink-network-agility to make better use of cellular. Can we do this without reforming mesh on network-change?



    ----------------------------------

    Kaifa response:
    1. For transfer of a data-item *into* the node, the node polls the register periodically to detect changes and uses the item when changed.
    For transfer *out* of the node, the node writes the value to the register. The test-equipment can then read the value from the register (polling).

    2. The "128.x" is chosen to due to it being a manufacturer-specific OBIS code in the schema.

    3. The CCMTRFD can be supplied.

    4. The node has no way of performing radiated power test. It can only report what it is configured to try. This value will be as configured.
    The RSSI of the ping packets from the CCMTRFD is written into a register in the meter periodically. The test-equipment can read it from the meter.

    5. PFAIL and EVENT lines need to be triggered by the test-equipment. The node detects this and toggle the LED lines at specific rates.
    The test-equipment shall detect this indication.

    The manufacturing-test software is the PC running ctrlporthub & coap_request. This is for testing *modules* via the debug port, not within meters.

    6. the sense of the nEVENT line is different for Kaifa meters. This is for compatibility reasons.


    --------------------------------------------------

    radio specs and performance:

    https://confluence.cyco.io/display/ENG/%5BFuncSpec%5D+C4+-+Radio+Mesh+Performance+Model

    - PHY supports up to 2048 byte frames.
    -

    ------------------------------------------

    rack of nodes 16 nodes
    ./RunRack.sh
    cat serialPortsToMonitor
    cat /tmp/RunCtrlporthub

    tail -f /tmp/ctrlporthub.log
    ~/ForEach.sh --restart

    ----------------------------------------------------

    Upgrade NCP


    stop CH booting up app:
    AT#M2MRUN=0


    utilities folder in scimitar_ch/CommsHubFramework/utils/target_binary_download.py

    NCP_FIRMWARE_DIR ='/fileservice/special/slot2'
    NCP_FIRMWARE_FILENAME = 'slot2.slt'

    /fileservice/special/slot2/slot2.slt for NCP OTA image.

    python target_binary_download.py m2mapz.bin /dev/ttyACM0 8 -CID 8873845300000856 -GID 887384FF00000856 --settings_path Device_SKU1.txt --ncp_firmware_path em357-FW_4_5_0_7.ota -run

    python target_binary_download.py /Data/Temp/m2m_v98-3_apz.bin /dev/ttyACM0 8 --ncp_firmware_path /Data/Temp/em357-SingleB-FW_6_3_2_37.ota


    ./tools/c4-tools/upload_smip.py -p /dev/ttyACM0 --ls /

    ./tools/c4-tools/upload_smip.py -p /dev/ttyACM0 --ls /fileservice/special/slot2


    --> AT#M2MCHDIR="/fileservice/"
    AT#M2MCHDIR="/fileservice/"
    OK
    --> AT#M2MLIST
    AT#M2MLIST
    #M2MLIST: <.>
    #M2MLIST: <..>
    #M2MLIST: <firmware>
    #M2MLIST: <database>
    #M2MLIST: <certificate>
    #M2MLIST: <selftest>
    #M2MLIST: <connode>
    #M2MLIST: free bytes: 19142656


    ubuntu@stevesworklaptop:/Data/Projects/ScimitarUtils$ python target_binary_download.py /Data/Temp/m2m_v98-3_apz.bin /dev/ttyACM0 8
    > AT+M2M?
    +M2M: 4,10,0
    OK
    > AT+M2M=0
    OK
    Forcing hardware reset using watchdog
    > AT+M2M?
    +M2M: 0,10,0
    OK
    > AT#M2MCHDRIVE?
    #M2MCHDRIVE: 0
    OK
    > AT#PORTCFG?
    #PORTCFG: 8,8
    OK
     ....going to delete_settings_file
    deleting filename: slot0.slt
    deleting filename: slot1.slt
    deleting filename: slot2.slt
    deleting filename: slot3.slt
    deleting filename: slot4.slt
    deleting filename: slot6.slt
    deleting filename: m2mapz.bin
    deleting filename: slot8.slt
     ....going to delete_certificate_files
    deleting filename: slot0.slt
    deleting filename: slot1.slt
    deleting filename: slot4.slt
    deleting filename: slot5.slt
    deleting filename: slot25.slt
    deleting filename: slot29.slt
     ....going to delete_certificate_file_connode
     ... Downloading file m2mapz.bin to target.
    > AT#M2MWRITE="m2mapz.bin",1739620,1
    >>>


    OK

    > AT#M2MRUN=2,"m2mapz.bin"
    OK
     ... The application m2mapz.bin should be downloaded on target.
     ....setting modem configuration for WANMGR
    > AT+CFUN=1
    OK
    > AT#SIMDET=1
    OK
    > AT+CGREG=1
    OK
    > AT+CGEREP=2,0
    OK
    > AT#NITZ=0
    OK
    > AT+CGCLASS=CG
    OK
    > AT#AUTOATT=1
    OK
    > AT#ICMP=2
    OK
    > AT#PSNT=1
    OK
    > AT+CFUN=4
    OK
    > AT&P
    #PSNT: 4
    OK
    > AT&W
    OK
    Adding hash to target for binary /Data/Temp/m2m_v98-3_apz.bin
    > AT#M2MWRITE="slot4.slt",32
    >>>
    OK
    >file write of tempHash.txt on \fileservice\firmware\slot4\slot4.slt Done

    ---------------------------------------------------------

    In order to upgrade zigbee NCP firmware:

    Note that Linux will hangup the line on /dev/ttyACMx after the last close, causing the AT parser
    on the modem to die.
    To prevent this, open python and do "f=open("/dev/ttyACM0")" and leave that open. With that device
    open (but not being read) the following script(s) can complete ok.


    ubuntu@stevesworklaptop:/Data/Projects/ScimitarUtils$ python target_binary_download.py m2mapz.bin /dev/ttyACM0 8 --ncp_firmware_path em357-SingleB-FW_6_3_2_37.ota
    > AT+M2M?
    +M2M: 0,10,0
    OK
    > AT#M2MCHDRIVE?
    #M2MCHDRIVE: 0
    OK
    > AT#PORTCFG?
    #PORTCFG: 8,8
    OK
     ....going to delete_settings_file
     ....going to delete_certificate_files
     ....going to delete_certificate_file_connode
     ... Downloading file m2mapz.bin to target.
    > AT#M2MWRITE="m2mapz.bin",1759568,1
    >>>


    > AT#M2MRUN=2,"m2mapz.bin"
    OK
     ... The application m2mapz.bin should be downloaded on target.
     ....setting modem configuration for WANMGR
    > AT+CFUN=1
    OK
    > AT#SIMDET=1
    OK
    > AT+CGREG=1
    OK
    > AT+CGEREP=2,0
    OK
    > AT#NITZ=0
    OK
    > AT+CGCLASS=CG
    OK
    > AT#AUTOATT=1
    OK
    > AT#ICMP=2
    OK
    > AT#PSNT=1
    OK
    > AT+CFUN=4
    OK
    > AT&P
    OK
    > AT&W
    OK
    Adding hash to target for binary m2mapz.bin
    > AT#M2MWRITE="slot4.slt",32
    >>>
    OK
    >file write of tempHash.txt on \fileservice\firmware\slot4\slot4.slt Done
    Adding NCP firmware update OTA image to target.
    > AT#M2MWRITE="slot2.slt",155684
    >>>
    OK
    >file write of em357-SingleB-FW_6_3_2_37.ota on \fileservice\special\slot2\slot2.slt Done


    ----------------------------------------------

    SMIPDEV-26:
    - with rebuilt code with new CH code & same library that caused demo-failure (ie. SPI lockup)
    - ch15.log
    - "C4_Task.c,760: MESH Radio chip failure"
    - Suspect this is due to SPI contention between RNG and Radio.

      563 [     42.341][yyyy-mm-dd hh:mm:ss][ info][HANmanager        ]HANMGR_HANInterface.c,693: HAN Interface Enabled/Disabled status = 1
      564 [     42.347][yyyy-mm-dd hh:mm:ss][ info][CHF               ]CHF_FwActivate.c,851: Rollback check timer not needed as roll-back or activation not ongoing
      565 [     42.360][yyyy-mm-dd hh:mm:ss][ info][HANmanager        ]HANMGR_HANInterface.c,711: HAN Interface_Enabled = TRUE
      566 [     42.363][yyyy-mm-dd hh:mm:ss][ info][CHF               ]CHF_FwActivate.c,942: toBeActivatedFirmware set to 0
      567 [     42.395][yyyy-mm-dd hh:mm:ss][ info] PAN Id 19D5, Extended PAN id 887384FF0000092C
      568 [     42.397][yyyy-mm-dd hh:mm:ss][ info][CHF               ]CALENDAR_Service.c,294: Retrieving CHF future dated commands
      569 [     42.401][yyyy-mm-dd hh:mm:ss][ info][HANmanager        ]HANMGR_HANInterface.c,1027: LastHANConfigurationChangeTime =FF FF FF FF
      570 [     42.403][yyyy-mm-dd hh:mm:ss][ info][CHF               ]CALENDAR_Service.c,1764: Number of future dated command restored : 0
      571 [     42.404][yyyy-mm-dd hh:mm:ss][ info][HANmanager        ]HANMGR_HANInterface.c,834: node ID  value = 0
      572 [     42.406][yyyy-mm-dd hh:mm:ss][ info][CHF               ]CHF_Task.c,1644: No future dated CHF commands
      573 [     42.409][yyyy-mm-dd hh:mm:ss][ info][HANmanager        ]HANMGR_HANInterface.c,897: firmware version =
      574 [     42.411][yyyy-mm-dd hh:mm:ss][ info][CHF               ]CHF_Task.c,1653: Added GPF GUID in CHF device log =88-73-84-ff-00-00-09-2c
      575 [     42.412][yyyy-mm-dd hh:mm:ss][ info][HANmanager        ]HANMGR_HANInterface.c,921: model number = PA5235D-B4B3
      576 [     42.414][yyyy-mm-dd hh:mm:ss][ info][CHF               ]TASK_Base.c,214: **** Run operations for task CHF end.
      577 [     42.416][yyyy-mm-dd hh:mm:ss][ info][HANmanager        ]HANMGR_HANInterface.c,950: manufacturer id =ZF105985DT
      578 [     42.419][yyyy-mm-dd hh:mm:ss][ info] HAN 2.4GHz Channel 24
      579 [     42.421][yyyy-mm-dd hh:mm:ss][debug][  rpl/task        ]0: Going to state disabled
      580 [     42.422][yyyy-mm-dd hh:mm:ss][debug][  conman          ]LoWPAN prefix unset from RPL
      581 [     42.425][yyyy-mm-dd hh:mm:ss][ info][C4_Task           ]C4_Task.c,1080: Mesh Agent running
      582 [     42.427][yyyy-mm-dd hh:mm:ss][ info][C4_Task           ]TASK_Base.c,214: **** Run operations for task C4_Task end.
      583 [     42.431][yyyy-mm-dd hh:mm:ss][ERROR][C4_Task           ]DEVICE_Task.c,2947: MESH SELF-TEST FAILED!!
      584 [     42.434][yyyy-mm-dd hh:mm:ss][ info][C4_Task           ]LED_Service.c,116: SetLED, LED:MESH, Freq(state):HIGH_FREQ
      585 [     42.447][yyyy-mm-dd hh:mm:ss][debug][  cc1200          ]** RNG e1d08da7 **
      586 [     42.458][yyyy-mm-dd hh:mm:ss][ info][C4_Task           ]LOGGING_Service.c,809: [DMM CHF Event Log: Write Entry]: C:C401
      587 [     42.470][yyyy-mm-dd hh:mm:ss][debug][  cc1200          ]** RNG 69954f05 **
      588 [     42.476][yyyy-mm-dd hh:mm:ss][RESET][C4_Task           ]C4_Task.c,760: MESH Radio chip failure
      589 [     42.495][yyyy-mm-dd hh:mm:ss][debug][  cc1200          ]** RNG 7325d7ab **
      590 [     42.500][yyyy-mm-dd hh:mm:ss][ info][C4_Task           ]DEVICE_Task.c,1731: Re-boot cause set to 5
      591 [     42.503][yyyy-mm-dd hh:mm:ss][ info][C4_Task           ]LOGGING_Service.c,614: [DMM Reboot Log: Write entry: Reason=1
      592 [     42.520][yyyy-mm-dd hh:mm:ss][debug][  cc1200          ]** RNG 4e3ea04e **
      593 [     42.522][yyyy-mm-dd hh:mm:ss][ info][Supervisor        ]SUPERVISOR_Task.c,480: SHUTDOWN requested: reason 0
      594 [     42.535][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]interpan-host.c,88: Mac filter List Enable status = 0x00
      595 [     42.538][yyyy-mm-dd hh:mm:ss][ info][Power             ]POWER_Task.c,350: power_Shutdown
      596 [     42.542][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]interpan.c,285: Interpan is Disabled
      597 [     42.545][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]telit-stubs.c,297: [ASH:TraceEvent] ======== ASH stopped ========

      598 [     42.547][yyyy-mm-dd hh:mm:ss][ WARN][Ezsp              ]CH_osal_ezsp.c,5171: EZSP state is set as : EZSP_SHUTDOWN
      599 [     42.551][yyyy-mm-dd hh:mm:ss][ info][Ezsp              ]ota-storage-telit.c,265: Closing the Ota Server File Store.
      600 [     42.553][yyyy-mm-dd hh:mm:ss][debug][  cc1200          ]** RNG 2fb0aec3 **Sent shutdown message to supervisor task - assert reboot
      610 [     42.564][yyyy-mm-dd hh:mm:ss][ info][C4_Task           ]C4_Task.c,1102: taskc4_Shutdown
      611 [     42.581][yyyy-mm-dd hh:mm:ss][debug][  cc1200          ]** RNG 021a1f60 **
      612 [     42.583][yyyy-mm-dd hh:mm:ss][ info][  terminal        ]Shutting down
      613 [     42.590][yyyy-mm-dd hh:mm:ss][ info][HANmanager        ]HANMGR_HANInterface.c,984: Channel mask value is = 7fff800
      614 [     42.607][yyyy-mm-dd hh:mm:ss][ info][FwDownload        ]FwDownload_Task.c,2197: Shutting down FwDownload Task
      615 [     42.620][yyyy-mm-dd hh:mm:ss][ info][HANmanager        ]HANMGR_HANInterface.c,1014: stack profile value is =2
      616 [     42.639][yyyy-mm-dd hh:mm:ss][ info][FwDownload        ]FwDownload_Task.c,1578: FwDownload.State setting updated to 1
      617 [     42.642][yyyy-mm-dd hh:mm:ss][debug][  cc1200          ]** RNG 26223bc9 **
      618 [     42.656][yyyy-mm-dd hh:mm:ss][ info][FwDownload        ]FwDownload_Task.c,1578: FwDownload.Interruptions setting updated to 0
      619 [     42.669][yyyy-mm-dd hh:mm:ss][ info][FwDownload        ]FwDownload_Task.c,1578: FwDownLoad.RetryCounterOuter setting updated to 0
      620 [     42.682][yyyy-mm-dd hh:mm:ss][ info][FwDownload        ]FwDownload_Task.c,1578: FwDownload.OngoingFwDownloadType setting updated to 0


    ----------------------------------

    When CH in reboot loop..... we get this every boot on ACM0

    every 5 seconds or so:
    "#PSNT: 4"


    --------------------------------------------------------

    cers, keys, RLL key for SMIP CH

    connode_default_mac_key.bin

    upload_smip.py -p ${DEV} -C /connode /tmp/certs/${NID}/agent.key.der /tmp/certs/${NID}/agent.crt.der /tmp/certs/${NID}/ca.crt.der

    NOTE: Must be named as above.

    Is SECCREDENTIALS_InternKeyChfMeshRllEnum only set during manufacture?

    ---------------------------------------------------------

    Wireshark

    display filter:

    wpan.src64 == 00:1b:c5:0c:60:06:73:dd

    wpan.src64 == 00:1b:c5:0c:60:06:73:dd || wpan.dst64 == 00:1b:c5:0c:60:06:73:dd || wpan.src64 == 00:1b:c5:0c:60:06:73:de || wpan.dst64 == 00:1b:c5:0c:60:06:73:de

    ---------------------------------------------------------------

    SMIP serial issues:
    - Hang-up control kills AT parser on modem
    - holding UART open on host when CH boots means that /dev/ttyACMx will not be enumerated.
    - udev installs its own driver on 18.04
    - USB driver for 16.04 and prior fails with known lockup.
    - flow control is enabled for ports and we do't expect that. Turn it off via stty.

    -----------------------------------------------------------

    IP level traffic:

    - Two profiles, 900s apart instantaneous & block-load
    - one response for each, 85 bytes.
    - 426 bytes for profile 1.
    - 234 bytes for profile 2.

    looks like:
    426b -> server
    85b <- server
    234b -> server
    85b <- server

    Doing this 96 times per day:

    90*426 = 38340B
    90*85 = 7650B
    90*234 = 21060B
    90*85 = 7650B

    Total to server per day = 38340 + 21060 = 59400 Bytes
    Total from server per day = 7650 + 7650 = 15300 Bytes


    -----------------------------------

    Speed at PHY layer = 50KBit/s = 6250 bytes/sec

    throughput of unACKed UDP packets =
    throughput of ACKed UDP packets =
    throughput of confirmed CoAP packets =
    throughput of unconfirmed CoAP packets =

    --------------------------------------------------

    Single hop nodes
    SPDCL 1557/2977     = 52%
    MPWZ 30981/80322    = 38%
    UGVCL 11555/23605   = 48%


    --------------------------------------------------

    RPL Objective function (OF) factors:
    - ETX to route around nodes with local interferers.
    - Hop count to reduce number of transmissions.
    - Cumulative transmitted power to root (can take into account ETX as a multiplier?).
    - Cumulative Number of neighbours to root.
    - Available uplink throughput ().
    - netsize_penality (is this needed?).


    This probably won't work, but...
    If too much local interference, splinter RPL into a sub-mesh and act as a gateway to route packets
    to the original mesh? It would use the existing radio to change channel for transmit.
    This new type of gateway could have scheduled communications with the real gateway to reduce loss
    due to switching channel.

    ---------------------------------------------

    Upper limit of number of nodes supported:


    Given a 50Kbps radio providing 6250 Bytes/sec and an 20% overhead for packet management we have 5000 Bytes/sec.
    If all meters cooperated in an ideal manner to perfectly interleave their packets leading to 0% congestion, we could fill the air with 5000 Bytes/sec of payload (metering) data.
    One meter produces 90 samples of around 90 bytes of (real) metering data per day ignoring metadata which use <magic> to transfer. This results in 113 bytes of data on-air per packet 90 times per day, per meter.
    A packet of 113 bytes takes on the order of 3ms to transmit with a 5ms LBT period, making the packet 8ms in total. A single meter, therefore, requires a total of 720ms (8ms*90) airtime per day.
    Given those values, the medium supports 120,000 meters.


    ------------------------------------------

    - Routing table size
    - Tuning of RPL parameters for large networks
    - Frame size optimisations
    - Management-packet prioritisation.
    - Duty-cycle reservation for management packets.
    - Simplified network planning for frequency agility

    - Simple Coordinated transmissions (grouped).
    - Complex Coordinated transmissions (dynamic based on neighbouring nodes).
    - Reducing data requirements
    - UDP to server
    - UDP to gateway (mq-proxy)
    - RPL OF to minimise transmited power along route.
    - RPL OF to minimise number of neighbours along route.
    - RPL OF to factor in available-uplink-capacity.
    - Improved transmit-power control.
    - Improved frequency agility
    - Login token passing
    - Frequency hopping
    - CPU to modem UART link
    - Network planning incorporating more factors.
    - Uplink network agility.

    - Increased radio bitrate
    - Physical architecture (modular gateway)
    - Gateway-attached meters.
    - Satellite gateways & high-power in-meter-satellite gateways.
    - Multi radio gateway

    -----------------------------------------------

    OBISs in the kaifa_ma304 driver.

    // Instant
    0x00, 0x00, 0x60, 0x01, 0x00, 0xFF
    0x00, 0x00, 0x60, 0x01, 0x01, 0xFF
    0x00, 0x00, 0x01, 0x00, 0x00, 0xFF
    0x01, 0x00, 0x00, 0x02, 0x08, 0xFF
    0x01, 0x01, 0x00, 0x02, 0x00, 0xFF
    0x01, 0x01, 0x00, 0x02, 0x08, 0xFF
    0x01, 0x00, 0x01, 0x08, 0x00, 0xFF
    0x01, 0x00, 0x02, 0x08, 0x00, 0xFF
    0x01, 0x00, 0x03, 0x08, 0x00, 0xFF
    0x01, 0x00, 0x04, 0x08, 0x00, 0xFF
    0x01, 0x00, 0x20, 0x07, 0x00, 0xFF
    0x01, 0x00, 0x1F, 0x07, 0x00, 0xFF
    0x01, 0x00, 0x34, 0x07, 0x00, 0xFF
    0x01, 0x00, 0x33, 0x07, 0x00, 0xFF
    0x01, 0x00, 0x48, 0x07, 0x00, 0xFF
    0x01, 0x00, 0x47, 0x07, 0x00, 0xFF
    0x01, 0x00, 0x01, 0x07, 0x00, 0xFF
    0x01, 0x00, 0x02, 0x07, 0x00, 0xFF
    0x01, 0x00, 0x03, 0x07, 0x00, 0xFF
    0x01, 0x00, 0x04, 0x07, 0x00, 0xFF
    0x01, 0x00, 0x0B, 0x23, 0x80, 0xFF
    0x01, 0x00, 0x0B, 0x23, 0x81, 0xFF
    0x01, 0x00, 0x0B, 0x23, 0x82, 0xFF
    0x01, 0x00, 0x0E, 0x07, 0x00, 0xFF
    0x01, 0x00, 0x0D, 0x07, 0x00, 0xFF
    0x00, 0x01, 0x5E, 0x1F, 0x04, 0xFF
    0x00, 0x00, 0x61, 0x62, 0x00, 0xFF
    0x00, 0x00, 0x60, 0x01, 0x04, 0xFF


    // Energy load
    { { 0x01, 0x00, 0x63, 0x01, 0x00, 0xFF }, 0, NULL,

    // Power quality
    { { 0x01, 0x00, 0x63, 0x02, 0x00, 0xFF }, 0, NULL,

    // MBUS load
    { { 0x00, 0x00, 0x18, 0x03, 0x00, 0xFF }, 0, NULL,


    { 0x01, 0x01, 0x00, 0x02, 0x00, 0xFF }, // Firmware identifier
    { 0x01, 0x00, 0x00, 0x02, 0x08, 0xFF }, // Firmware signature
    { 0x01, 0x01, 0x00, 0x02, 0x08, 0xFF }, // Firmware signature
    { 0x00, 0x00, 0x60, 0x01, 0x04, 0xFF }, // EUI-64


    ------------------------------------------------

    MEA estimation:

    Assumptions:
    - PanMesh server
    - Calendar via device-op
    - meter-upgrade via old "metadata-in-filename" mechanism.


    Estimate:
    - Meterupgrade; Can take in the meter-upgrade module fairly easily (3d) but getting it working with the meter may take longer (new integration). (2w)
    - Calendar; With device-op, should work, but will take a little scripting on server-side (3d)
    - Get build up to date (3d).
    - Meter events; make the Agents "complex-profile" reading code get the events-profile data and send to server (1w).
    - Time sync; Probably not worth taking this from Omnimesh and just do a time-set periodically on a cron/schedule (much simpler). (3d)

    So, 5 weeks (ish) in total sounds fair.



    -------------------------------

    git add remote gerrit ssh://stevetickle@gerrit.cyco.io:222/terminal

    git push ssh://stevetickle@gerrit.cyco.io:222/terminal HEAD:refs/for/master

    --------------------------------------

    git show 10949171b8

    duty cycle change from 10->100 after version ....


    change 10949171b8 happened on Thu Jan 10 11:17:44 2019 +0000
    tag prior to 10949171b8 is v142.2
    tag after to 10949171b8 is v142.3

    git tags with dates:

    git log --tags --simplify-by-decoration --pretty="format:%ai %d"

    2019-01-16 18:38:43 +0000  (tag: v142.3, tag: OMNIMESH_6.1)
    2019-01-03 12:33:39 +0000  (tag: v142.2)


    --------------------------------------------------

    We have a build breakage on master as a result of ipa3b-mbus being put into CI builds.

    src/device/drivers/mbus/device-mbus.c: In function 'task_put':
    src/device/drivers/mbus/device-mbus.c:140:13: error: this statement may fall through [-Werror=implicit-fallthrough=]
                 ++s_userQueue_dropped;
                 ^~~~~~~~~~~~~~~~~~~~~
    src/device/drivers/mbus/device-mbus.c:142:9: note: here
             default:
             ^~~~~~~
    cc1: all warnings being treated as errors

    Got a changeset to fix it (https://gerrit.cyco.io/#/c/12585/)
    Oddly, it appears that it's failing on the build-server but not locally.

    ---------------------------------
    RPL rank

    The RPL RFC  describes it like this: (https://tools.ietf.org/html/rfc6550#page-20)

    DAGRank(M) is less than DAGRank(N):
          In this case, the position of M is closer to the DODAG root than
          the position of N.  Node M may safely be a DODAG parent for Node N
          without risk of creating a loop.  Further, for a Node N, all
          parents in the DODAG parent set must be of a Rank less than
          DAGRank(N).  In other words, the Rank presented by a Node N MUST
          be greater than that presented by any of its parents.


    -----------------------------------------------------------

    RPL issue with continuous churn in RPL network

    unreliable networks get penalised

    RPL_UNRELIABLE_DAG_PENALTY



    ----------------------------------------------

    duty-cycle test:

    before:
    agent-ipa3-lnt-dlms-insecure-v125.2.1.elf
    mac.dutycycle.limit                      : 10
    mac.dutycycle.buffer                     : 1000


    after:
    agent-ipa3b-lnt-dlms-insecure-v151.2.31+dirty.elf
    2019-09-06 11:19:01.963 #1   001bc50c6004fdd6 <log> 0:00:00.982 [debug] [    terminal] { terminal}: !! Warning, bad duty cycle detected, correcting (10/1000) !!
    mac.dutycycle.limit                      : 100
    mac.dutycycle.buffer                     : 1000


    -----------------------------------------------------------------
    - 9f2ec671252fa9ca7ad83ffd683fbe5e6bd7eaae CND-9599 Duty-cycle correction
    - 6ee676b952987309783abec34f698e53111cee3a Updated Gitlab CI to build HMP and latest build-tools
    - 63bb71bd56384f198370f104490cf0b49d206418 Gitlabify the project
    - 09d894b1bb5ea7956c38d09eb388530f1a935bdf Revert the NIC7 build to an IPA3 bootloader
    - af519aed0bfbf44e93e446eb093d4dcd1681b4f6 CND-9492 : SMA Agent - powerSwitch status request returns invalid state


    ---------------------------------------

    [Fri Sep  6 14:42:47 2019] [04:37:52.115] 1567777367 16672115 dlms	dlms	tx unencrypted: (1/2): c30181000f0000280000ff010109109e
    [Fri Sep  6 14:42:47 2019] [04:37:52.115] 1567777367 16672115 dlms	dlms	tx unencrypted: (2/2): f01c96319e989964b036bd46d3217e
    [Fri Sep  6 14:42:47 2019] [04:37:52.383] 1567777367 16672383 dlms	dlms	Encrypted:: (1/3): 29300005113ddf7a8520fa194bb67a9b
    [Fri Sep  6 14:42:47 2019] [04:37:52.383] 1567777367 16672383 dlms	dlms	Encrypted:: (2/3): cf1cff31aad969761a963e37cabc1e63
    [Fri Sep  6 14:42:47 2019] [04:37:52.383] 1567777367 16672383 dlms	dlms	Encrypted:: (3/3): fb7f456a003d68d3b69b
    [Fri Sep  6 14:42:47 2019] [04:37:52.385] 1567777367 16672385 dlms	dlms	rx decrypted: (1/2): c701810001000910c0bba41b053b9b78
    [Fri Sep  6 14:42:47 2019] [04:37:52.385] 1567777367 16672385 dlms	dlms	rx decrypted: (2/2): 4cec183f552e8ad6
    [Fri Sep  6 14:42:47 2019] [04:37:52.385] 1567777367 16672385 dlms	dlms	COSEM AA with HLS setup is accepted
    [Fri Sep  6 14:42:47 2019] [04:37:52.386] 1567777367 16672386 dlms	dlms	DLMS result is 0 bytes with code 0
    [Fri Sep  6 14:42:47 2019] [04:37:52.604] 1567777367 16672604 dlms	dlms	Encrypted:: (1/2): 16300005113ed788890787130e0daaba
    [Fri Sep  6 14:42:47 2019] [04:37:52.604] 1567777367 16672604 dlms	dlms	Encrypted:: (2/2): 46b2f508b5e2fa
    [Fri Sep  6 14:42:47 2019] [04:37:52.605] 1567777367 16672605 dlms	dlms	rx decrypted: (1/1): c701810103
    [Fri Sep  6 14:42:47 2019] [04:37:52.614] 1567777367 16672614 dlms	dlms	Action Response result: hw fault
    [Fri Sep  6 14:42:47 2019] [04:37:52.622] 1567777367 16672622 dlms	dlms	processXDlmsApdu(24 B): failed
    [Fri Sep  6 14:42:47 2019] [04:37:52.622] 1567777367 16672622 dlms	dlms	DLMS result is 0 bytes with code 12

    <ActionRequest>
      <ActionRequestNormal>
        <!--Priority: HIGH ServiceClass: UN_CONFIRMED invokeID: 1-->
        <InvokeIdAndPriority Value="81" />
        <MethodDescriptor>
          <!--ASSOCIATION_LOGICAL_NAME-->
          <ClassId Value="000F" />
          <!--0.0.40.0.0.255-->
          <InstanceId Value="0000280000FF" />
          <MethodId Value="01" />
        </MethodDescriptor>
        <MethodInvocationParameters>
          <OctetString Value="9EF01C96319E989964B036BD46D3217E" />
        </MethodInvocationParameters>
      </ActionRequestNormal>
    </ActionRequest>

    <ActionResponse>
      <ActionResponseNormal>
        <!--Priority: HIGH ServiceClass: UN_CONFIRMED invokeID: 1-->
        <InvokeIdAndPriority Value="81" />
        <Result Value="Success" />
        <ReturnParameters>
          <Data>
            <OctetString Value="C0BBA41B053B9B784CEC183F552E8AD6" />
          </Data>
        </ReturnParameters>
      </ActionResponseNormal>
    </ActionResponse>


    [Fri Sep  6 14:42:47 2019] [04:37:52.604] 1567777367 16672604 dlms	dlms	Encrypted:: (1/2): 16300005113ed788890787130e0daaba
    [Fri Sep  6 14:42:47 2019] [04:37:52.604] 1567777367 16672604 dlms	dlms	Encrypted:: (2/2): 46b2f508b5e2fa
    [Fri Sep  6 14:42:47 2019] [04:37:52.605] 1567777367 16672605 dlms	dlms	rx decrypted: (1/1): c701810103
    [Fri Sep  6 14:42:47 2019] [04:37:52.614] 1567777367 16672614 dlms	dlms	Action Response result: hw fault

    <Data="300005113ED788890787130E0DAABA46B2F508B5E2FA" />

    <ActionResponse>
      <ActionResponseNormal>
        <!--Priority: HIGH ServiceClass: UN_CONFIRMED invokeID: 1-->
        <InvokeIdAndPriority Value="81" />
        <Result Value="HardwareFault" />
        <ReturnParameters>
          <DataAccessError Value="HardwareFault" />
        </ReturnParameters>
      </ActionResponseNormal>
    </ActionResponse>



    ---------------------------------------------------

    [Fri Sep  6 15:15:35 2019] [05:10:40.852] 1567779335 18640852 dlms	dlms	rx decrypted: (9/30): 060000178c060000178c060000000006
    [Fri Sep  6 15:15:35 2019] [05:10:40.852] 1567779335 18640852 dlms	dlms	rx decrypted: (10/30): 00000000020b090c07e3081aff000fff
    [Fri Sep  6 15:15:35 2019] [05:10:40.853] 1567779335 18640853 dlms	dlms	rx decrypted: (11/30): ff014a00060000000006000000000600
    [Fri Sep  6 15:15:35 2019] [05:10:40.853] 1567779335 18640853 dlms	dlms	rx decrypted: (12/30): 0005fc060000621e06000060e0060000
    [Fri Sep  6 15:15:35 2019] [05:10:40.853] 1567779335 18640853 dlms	dlms	rx decrypted: (13/30): 60b30600001ef706000021d706000000
    [Fri Sep  6 15:15:35 2019] [05:10:40.854] 1567779335 18640854 dlms	dlms	rx decrypted: (14/30): 000600000000020b090c07e3081aff00
    [Fri Sep  6 15:15:35 2019] [05:10:40.854] 1567779335 18640854 dlms	dlms	rx decrypted: (15/30): 1effff014a0006000000000600000000
    [Fri Sep  6 15:15:35 2019] [05:10:40.854] 1567779335 18640854 dlms	dlms	rx decrypted: (16/30): 06000007a0060000625c060000611c06
    [Fri Sep  6 15:15:35 2019] [05:10:40.855] 1567779335 18640855 dlms	dlms	rx decrypted: (17/30): 0000608d06000027380600002cf70600
    [Fri Sep  6 15:15:35 2019] [05:10:40.855] 1567779335 18640855 dlms	dlms	rx decrypted: (18/30): 0000000600000000020b090c07e3081a
    [Fri Sep  6 15:15:35 2019] [05:10:40.855] 1567779335 18640855 dlms	dlms	rx decrypted: (19/30): ff002dffff014a000600000000060000
    [Fri Sep  6 15:15:35 2019] [05:10:40.856] 1567779335 18640856 dlms	dlms	rx decrypted: (20/30): 000006000006bc060000628a06000061
    [Fri Sep  6 15:15:35 2019] [05:10:40.856] 1567779335 18640856 dlms	dlms	rx decrypted: (21/30): 3e06000060a706000027500600002750
    [Fri Sep  6 15:15:35 2019] [05:10:40.856] 1567779335 18640856 dlms	dlms	rx decrypted: (22/30): 06000000000600000000020b090c07e3
    [Fri Sep  6 15:15:35 2019] [05:10:40.857] 1567779335 18640857 dlms	dlms	rx decrypted: (23/30): 081aff0100ffff014a00060000000006
    [Fri Sep  6 15:15:35 2019] [05:10:40.857] 1567779335 18640857 dlms	dlms	rx decrypted: (24/30): 00000000060000050406000062c50600
    [Fri Sep  6 15:15:35 2019] [05:10:40.858] 1567779335 18640858 dlms	dlms	rx decrypted: (25/30): 00616606000061080600001c00060000
    [Fri Sep  6 15:15:35 2019] [05:10:40.858] 1567779335 18640858 dlms	dlms	rx decrypted: (26/30): 1c0006000000000600000000020b090c
    [Fri Sep  6 15:15:35 2019] [05:10:40.858] 1567779335 18640858 dlms	dlms	rx decrypted: (27/30): 07e3081aff010fffff014a0006000000
    [Fri Sep  6 15:15:35 2019] [05:10:40.859] 1567779335 18640859 dlms	dlms	rx decrypted: (28/30): 00060000000006000004b806000062e2
    [Fri Sep  6 15:15:35 2019] [05:10:40.859] 1567779335 18640859 dlms	dlms	rx decrypted: (29/30): 060000616f060000611b06000016cf06
    [Fri Sep  6 15:15:35 2019] [05:10:40.859] 1567779335 18640859 dlms	dlms	rx decrypted: (30/30): 0000199706000000000600000000
    [Fri Sep  6 15:15:35 2019] [05:10:40.859] 1567779335 18640859 dlms	dlms	s_totalDlmsPayloadBuf = alloc 0 + 466
    [Fri Sep  6 15:15:35 2019] [05:10:40.860] 1567779335 18640860 dlms	dlms	tx unencrypted: (1/1): c0028100000001



    [Fri Sep  6 16:45:36 2019] [06:40:41.891] 1567784736 24041891 dlms	dlms	rx decrypted: (9/30): 7c06000027de06000000000600000000
    [Fri Sep  6 16:45:36 2019] [06:40:41.892] 1567784736 24041892 dlms	dlms	rx decrypted: (10/30): 020b090c07e3081aff0200ffff014a00
    [Fri Sep  6 16:45:36 2019] [06:40:41.892] 1567784736 24041892 dlms	dlms	rx decrypted: (11/30): 06000000000600000000060000068a06
    [Fri Sep  6 16:45:36 2019] [06:40:41.892] 1567784736 24041892 dlms	dlms	rx decrypted: (12/30): 000062cd06000061d1060000617b0600
    [Fri Sep  6 16:45:36 2019] [06:40:41.893] 1567784736 24041893 dlms	dlms	rx decrypted: (13/30): 001c2f06000027200600000000060000
    [Fri Sep  6 16:45:36 2019] [06:40:41.893] 1567784736 24041893 dlms	dlms	rx decrypted: (14/30): 0000020b090c07e3081aff020fffff01
    [Fri Sep  6 16:45:36 2019] [06:40:41.893] 1567784736 24041893 dlms	dlms	rx decrypted: (15/30): 4a000600000000060000000006000006
    [Fri Sep  6 16:45:36 2019] [06:40:41.894] 1567784736 24041894 dlms	dlms	rx decrypted: (16/30): 8006000062c906000061dc0600006185
    [Fri Sep  6 16:45:36 2019] [06:40:41.894] 1567784736 24041894 dlms	dlms	rx decrypted: (17/30): 0600001b8906000026d9060000000006
    [Fri Sep  6 16:45:36 2019] [06:40:41.894] 1567784736 24041894 dlms	dlms	rx decrypted: (18/30): 00000000020b090c07e3081aff021eff
    [Fri Sep  6 16:45:36 2019] [06:40:41.895] 1567784736 24041895 dlms	dlms	rx decrypted: (19/30): ff014a00060000000006000000000600
    [Fri Sep  6 16:45:36 2019] [06:40:41.895] 1567784736 24041895 dlms	dlms	rx decrypted: (20/30): 00041a06000062c006000061bc060000
    [Fri Sep  6 16:45:36 2019] [06:40:41.895] 1567784736 24041895 dlms	dlms	rx decrypted: (21/30): 61660600001156060000150c06000000
    [Fri Sep  6 16:45:36 2019] [06:40:41.896] 1567784736 24041896 dlms	dlms	rx decrypted: (22/30): 000600000000020b090c07e3081aff02
    [Fri Sep  6 16:45:36 2019] [06:40:41.896] 1567784736 24041896 dlms	dlms	rx decrypted: (23/30): 2dffff014a0006000000000600000000
    [Fri Sep  6 16:45:36 2019] [06:40:41.896] 1567784736 24041896 dlms	dlms	rx decrypted: (24/30): 06000002e606000062eb06000061da06
    [Fri Sep  6 16:45:36 2019] [06:40:41.897] 1567784736 24041897 dlms	dlms	rx decrypted: (25/30): 0000616f0600000b670600000b670600
    [Fri Sep  6 16:45:36 2019] [06:40:41.897] 1567784736 24041897 dlms	dlms	rx decrypted: (26/30): 0000000600000000020b090c07e3081a
    [Fri Sep  6 16:45:36 2019] [06:40:41.897] 1567784736 24041897 dlms	dlms	rx decrypted: (27/30): ff0300ffff014a000600000000060000
    [Fri Sep  6 16:45:36 2019] [06:40:41.898] 1567784736 24041898 dlms	dlms	rx decrypted: (28/30): 000006000008cc060000625a06000061
    [Fri Sep  6 16:45:36 2019] [06:40:41.898] 1567784736 24041898 dlms	dlms	rx decrypted: (29/30): 1706000060ec0600000b970600000e2f
    [Fri Sep  6 16:45:36 2019] [06:40:41.898] 1567784736 24041898 dlms	dlms	rx decrypted: (30/30): 06000000000600000000
    [Fri Sep  6 16:45:36 2019] [06:40:41.899] 1567784736 24041899 dlms	dlms	s_totalDlmsPayloadBuf = alloc 466 + 462
    [Fri Sep  6 16:45:36 2019] [06:40:41.899] 1567784736 24041899 dlms	dlms	tx unencrypted: (1/1): c0028100000002
    [parsed local time] [parsed uptime] epochtime uptime module task log
    --------------------------------------------------------------------



    For clarity and in adherence with the requirements of IETF
    RFC5759, all Security Credential Documents shall:
    o contain the authorityKeyIdentifier extension, except
    where the security credentials document is self signed or
    Root Certificates;
    o contain the keyUsage extension which shall be marked as
    critical;

    contain a authorityKeyIdentifier in the form [0] KeyIdentifier
    which shall be marked as non-critical, except where the Security
    Credential Document is self signed. Note this exception only
    applies where RemotePartyRole as specified in the
    X520OrganizationalUnitName field = root;

    In the case of Root CA key compromise, a new Root CA certificate is generated
    within the SMKI via a Root CA key ceremony. The distribution of the new Root CA
    key is a function of the DCC Trust Anchor Management System (TAMS), using the
    signing certificate issued by the SMKI.

    Contingency Key Pair a Key Pair established by the DCC for the purposes of the
    replacement of all Certificates including Root OCA Certificates
    on Devices after a Relevant Private Key has been
    Compromised

    Contingency Public Key the Public Key which is part of that Key Pair and which is
    stored in the WrappedApexContingencyKey field of the Root
    OCA Certificate (being the field identified as such in the Root
    OCA Certificate Profile at Annex B of the Organisation
    Certificate Policy)

    contain a single public key except for the Root-OCA where there
    shall be two public keys. The second public key shall be referred
    to as the Contingency Key and shall be present in the
    WrappedApexContingencyKey extension with the meaning of
    IETF RFC5934. The Contingency Key shall be encrypted as per the
    requirements of the GBCS.

    RFC 5934:
    Any type of TAMP message, including an Apex Trust Anchor
       Update message, can be validated with the operational public key.
       The second public key, called the contingency public key, can only be
       used to update the apex trust anchor.

    The contingency private key
       SHOULD be used at only one point in time; it is used only to sign an
       Apex Trust Anchor Update message that results in its own replacement



    Ok, RFC 5934 (which SMKI follow) specify the use of a "contingency private key", basically the
    root cert as *two* public keys, the first is used for normal messages, the second (tagged as "WrappedApexContingencyKey")
    is only used for the key-replacement message after which it is replaced. Basically a one-time use key.

    (The relevant parts of RFC 5934 are section 1.2.1)

    Quotes:
    "Any type of TAMP message, including an Apex Trust Anchor
     Update message, can be validated with the operational public key.
     The second public key, called the contingency public key, can only be
     used to update the apex trust anchor."

    "The contingency private key
    SHOULD be used at only one point in time; it is used only to sign an
    Apex Trust Anchor Update message that results in its own replacement"

    And from the SMKI doc describing the certs:
    "...contain a single public key except for the Root-OCA where there
    shall be two public keys. The second public key shall be referred
    to as the Contingency Key and shall be present in the
    WrappedApexContingencyKey extension with the meaning of
    IETF RFC5934. The Contingency Key shall be encrypted as per the
    requirements of the GBCS.
    "

    ---------------------------------------------------------------

    SMIP KEK changes:
    - LoginResponseMessage needs a 'optional bytes passPhrase' field.
    - loginResponseCallback() needs to extract and store the passPhrase for later use when returning the secure module data on first-boot.
    - When returning the keytable, unwrap and re-wrap with KEK=TRUNC128(SHA256(SALT+PASSPHRASE)) where PASSPHRASE is value from LoginResponseMessage. After use, sanitise the PASSPHRASE storage.
    - Passphrase is stored within the keyTable.
    - KeyTable is stored wrapped within the VaultIC in the CH.
    - On use by Agent, keyTable is unwrapped into RAM using KEK=TRUNC128(SHA256(SALT+PASSPHRASE)), where PASSPHRASE is extracted from the table. After decryption, temporary storage area is sanitised.
    - SALT is derived from data hardcoded into image (not stored directly in image, there *must* be a function to derive it at point of use, not stored, then temporary area sanitised).
    - Modify keyTableGenerate script to take SALT and PASSPHRASE to encrypt the table with.

    -------------------------------------------------------------------

    Node 00-1b-c5-0c-60-04-2c-7f
    https://hes.amimpwz.in/panmesh/login#node.events/35484


    326151093	47633	22.0	node.boot	PUSH	S~dlms:3724 malloc of 14326 bytes failed!	11/09/19 12:16:38
    326132640	47806	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 14326 + 462	11/09/19 13:16:10
    326132586	47805	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 13864 + 462	11/09/19 13:16:09
    326132535	47804	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 13402 + 462	11/09/19 13:16:08
    326132499	47803	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 12940 + 462	11/09/19 13:16:07
    326132457	47802	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 12478 + 462	11/09/19 13:16:05
    326132415	47801	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 12016 + 462	11/09/19 13:16:04
    326132376	47800	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 11554 + 462	11/09/19 13:16:03
    326132346	47799	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 11092 + 462	11/09/19 13:16:02
    326132292	47798	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 10630 + 462	11/09/19 13:16:01
    326132247	47797	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 10168 + 462	11/09/19 13:16:00
    326132181	47796	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 9706 + 462	11/09/19 13:15:59
    326132145	47795	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 9244 + 462	11/09/19 13:15:58
    326132091	47794	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 8782 + 462	11/09/19 13:15:57
    326132067	47793	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 8320 + 462	11/09/19 13:15:56
    326132028	47792	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 7858 + 462	11/09/19 13:15:55
    326131977	47791	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 7396 + 462	11/09/19 13:15:54
    326131947	47790	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 6934 + 462	11/09/19 13:15:53
    326131899	47789	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 6472 + 462	11/09/19 13:15:51
    326131869	47788	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 6010 + 462	11/09/19 13:15:50
    326131851	47778	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 1390 + 462	11/09/19 13:15:40
    326131818	47777	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 928 + 462	11/09/19 13:15:39
    326131815	47787	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 5548 + 462	11/09/19 13:15:49
    326131698	47786	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 5086 + 462	11/09/19 13:15:48
    326131644	47785	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 4624 + 462	11/09/19 13:15:47
    326131608	47784	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 4162 + 462	11/09/19 13:15:46
    326131566	47783	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 3700 + 462	11/09/19 13:15:45
    326131551	47782	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 3238 + 462	11/09/19 13:15:44
    326131524	47781	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 2776 + 462	11/09/19 13:15:43
    326131566	47783	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 3700 + 462	11/09/19 13:15:45
    326131551	47782	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 3238 + 462	11/09/19 13:15:44
    326131524	47781	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 2776 + 462	11/09/19 13:15:43
    326131482	47780	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 2314 + 462	11/09/19 13:15:42
    326131455	47779	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 1852 + 462	11/09/19 13:15:41
    326131368	47776	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 466 + 462	11/09/19 13:15:38
    326131332	47775	22.2	node.alert	PUSH	s_totalDlmsPayloadBuf = alloc 0 + 466	11/09/19 13:15:37
    326131299	47774	22.2	node.alert	PUSH	get-range from=1567789260 to=1567807200	11/09/19 13:15:35



    -------------------------------------------------------------
    O
    Kaifa alarm
    0F40000000090C07E3090C040C120CFF800000
    0202
     0906 0000616200FF
     06   07 00 60 C5 "

    07 00 60 C5 is the bitmask for alarms, gets converted into a list.


    push mechanism
    https://confluence.cyco.io/display/ENG/%5BDesignSpec%5D+C4+-+Push+Alarms+and+Last+Gasp

    Kaifa event codes:
    https://confluence.cyco.io/display/ENG/Kaifa+MA304C?preview=/14156008/22478918/Event_codes.xls

    ------------------------------------------

    friendcom:

    2019-09-16 10:39:33.177 #1   001bc50c6004fdd6 <log> 0:00:02.263 Hter DV18@4ad76L27a55S2000cb28


    -------------------------------------------------

    .hex to .bin

    objcopy --input-target=ihex --output-target=binary /Data/Temp/Z106-A4-KMZ109Z-20190911-V1\(W\).hex /Data/Temp/Z106-A4-KMZ109Z-20190911-V1\(W\).bin

    ---------------------------

    tunnelhub was removed after Oct 2015
    after this hash in the terminal repo: 696363d8aef41de67f2070cd36ba5543b0ff29ea (This is the last commit)


    Comments:
    This is a tunnel concentrator server. It terminates connections from C4 gateway terminals
    connecting over the internet (3G modem).

    IPv6 packets to/from the terminal are tunneled in UDP in IPv4. The tunnel is configured
    by the Tunnel Setup Protocol (TSP, RFC5572), for example to hand out IP prefixes to the terminal.

    This server connects to the Linux IPv6 stack using TUN virtual network interfaces. It is
    responsible for configuring the TUN interfaces and handing out IPv6 prefixes to connected clients.


    ----------------------------------

    server(s)
    Update appserver.properties and webserver.properties from working system.
    /Data/Temp/serverProperties/[sma,nms]

    NMS: http://localhost:8080/nms/dashboard
    SMA: http://localhost:8882/dashboard
    PanMesh: http://localhost:8080/#dashboard



    ---------------------------------------

    crash:

    https://jenkins.cyco.io/job/Omnimesh_Terminal_Branch/1232/artifact/terminal/build/
    nic7-genus-dlms-insecure:v151.2.35
    2019-09-18 13:40:58.381 #1   0000007123010138 <log> 1:06:55.209 Hter DV0@2a73eL5ea67S20010ce0

    crash in power_switch::pbEncodeStates()
    this doesn't make much sense.


    --------------------------------------------

    CNIC7 review:
    - 3 LEDs? stay with single green?
    - large FLASH can be reduced to 8MBit.
    - need dev board for Quectel modem to test out commands (should be ok, but may need changes to our generic modem driver).
    - CEL_DTR gets inverted according to our source ( ----0--- DTR output low (CELL_DTR high on modem side)). Is this still happening?
    - meter port needs PA0, PA1, PA4, PA5
    - ethernet to be removed?
    - SPI FLASH on PD12, PD13, PD14, PD15.
    - Modem on PF4. PF5, PF6, PF7
    - In uart-efr32.c, mneed merging of CONFIG_EFR32_GW200 and CONFIG_EFR32_IPA3.
    - Debug port on PC10, PC11
    - SWD on PF0, PF1, PF2

    -------------------------------------------------

    I2C on EFR32FG12P231F1024GM48 (QFN48) 31 GPIO, 1MB FLASH, 128KB RAM:
    - 100/400/1000 speeds.
    - Active in all energy modes so able to be used for power-control.
    - PA0, PA1 look like good candidates for I2C0 as they can take over the ELM_UART_TX/RX pins.
    - PC10, PC11 are usable for I2C1 but they are also the LOG_UART_TX/RX.


    --------------------------------------------------------

    CNIC:

    EFM32GG12B810F1024GM64   (Series 1)
    - No FLASH (NIC7 gateway build)
    - 1024KB FLASH
    - 192KB RAM
    - QFN64
    - I2C0 - to mesh NICs
    - US0 - Cellular
    - US1 - meter
    - U1 - Debug

    --------------------------------------------------------------
    add fd00::1

    sudo ip -6 add add fd00::1 dev enp0s3

    --------------------------------------------------------

    server credentials keys cert
    https://confluence.cyco.io/display/ENG/PKI+infrastructure+description

    openssl ecparam -genkey -out Server.key -name prime256v1

    # Backup generated key:
    $ cp Server.key Server_passwordless_backup.key
    # Assign the password:
    $ openssl ec -in Server_passwordless_backup.key -des -passout pass:1234 -out Server.key

    openssl req -new -key Server.key -out Server.csr -sha256 -subj "/C=SE/ST=Stockholm/L=Stockholm/O=Connode AB/OU=R&D/CN=C4 Server"

    openssl x509 -req -in Server.csr -days 3650 -CA /Data/Projects/terminal/tools/c4-tools/cert/ec/root.crt -CAkey /Data/Projects/terminal/tools/c4-tools/cert/ec/root.key -CAcreateserial -out Server.crt

    -------------------------------------------

    Generate server security RSA pair
    #without password
    openssl genrsa -out nopass.pem 2048
    openssl rsa -in nopass.pem -pubout | tee nopass.pem.pub


    #with password
    openssl genrsa -des3 -out pass.pem 2048
    openssl rsa -in pass.pem -pubout | tee pass.pem.pub


    Or...

    #!/bin/bash
    set -e
    CURVE=secp224r1

    #create root key
    openssl ecparam -out root.key -name ${CURVE} -genkey
    #create self signed root cert
    openssl req -new -key root.key -x509 -nodes -days 3650 -out root.crt -keyout root2.key -subj "/C=SE/ST=Stockholm/L=Stockholm/O=Connode AB/OU=R&D/CN=c4.connode.com"
    #create server key
    openssl ecparam -out server.key -name ${CURVE} -genkey
    #generate server CSR
    openssl req -new -key server.key -out server.csr -subj "/C=SE/ST=Stockholm/L=Stockholm/O=Connode AB/OU=R&D/CN=testserver.connode.com"
    #sign server CSR
    openssl x509 -req -in server.csr -CA root.crt -CAkey root.key -CAcreateserial -out server.crt -days 3650
    #create client key
    openssl ecparam -out client.key -name ${CURVE} -genkey
    #generate client CSR
    openssl req -new -key client.key -out client.csr -subj "/C=SE/ST=Stockholm/L=Stockholm/O=Connode AB/OU=R&D/CN=testserver.connode.com"
    #sign client CSR
    openssl x509 -req -in client.csr -CA root.crt -CAkey root.key -CAcreateserial -out client.crt -days 3650

    #create keystore
    keytool -import -keystore server.keystore -storepass "Connode" -file root.crt -alias client -trustcacerts
    openssl pkcs12 -export -in server.crt -inkey server.key -out server.p12 -name server -CAfile root.crt -caname root
    keytool
     -importkeystore -deststorepass Connode -destkeypass Connode
    -destkeystore server.keystore -srckeystore server.p12 -srcstoretype
    PKCS12 -srcstorepass Connode -alias server

    cp root.key root-key.pem
    cp server.key server-key.pem
    cp server.crt server-cert.pem
    cp client.key client-key.pem
    cp client.crt client-cert.pem

    ------------------------------------------------

    ubuntu@stevesworklaptop:/Data/Temp/Credentials/Working$ openssl x509 -text -noout -in /Data/Temp/ProdPack/ProdPack1000/00-1B-C5-0C-60-06-76-7F/node.crt.der -inform der
    Certificate:
        Data:
            Version: 1 (0x0)
            Serial Number:
                8d:51:b4:50:15:b3:a8:3c
            Signature Algorithm: ecdsa-with-SHA256
            Issuer: C = SE, ST = Stockholm, L = Stockholm, O = Connode AB, OU = R&D, CN = demo-poc.connode.com
            Validity
                Not Before: Jul 11 13:18:14 2019 GMT
                Not After : Jul  8 13:18:14 2029 GMT
            Subject: CN = 00-1B-C5-0C-60-06-76-7F
            Subject Public Key Info:
                Public Key Algorithm: id-ecPublicKey
                    Public-Key: (256 bit)
                    pub:
                        04:8a:55:65:a6:b8:ce:e2:96:87:ae:b1:ac:08:0f:
                        23:34:c8:91:16:f7:1d:be:33:3a:d1:a9:67:0f:d3:
                        33:04:fe:c7:50:2d:ed:53:55:20:b0:11:23:f0:6e:
                        a8:9d:02:89:c1:cf:36:0c:d8:0a:f7:4c:b7:4d:0c:
                        d6:8d:01:b8:bc
                    ASN1 OID: prime256v1
                    NIST CURVE: P-256
        Signature Algorithm: ecdsa-with-SHA256
             30:44:02:20:30:88:c9:69:27:41:ec:f7:40:5a:99:84:3b:49:
             77:fd:65:95:e7:e6:6e:9c:ce:f6:40:bf:f3:69:9a:55:06:23:
             02:20:58:94:1f:08:69:47:34:c0:05:60:c0:ed:c7:dd:04:f6:
             8f:a3:78:15:fe:3a:52:96:7c:a3:ae:86:1c:aa:48:c9



    ubuntu@stevesworklaptop:/Data/Temp/Credentials/Working$ openssl x509 -text -noout -in /Data/Temp/ProdPack/ProdPack1000/00-1B-C5-0C-60-06-76-7F/ca.crt.der -inform der
    Certificate:
        Data:
            Version: 3 (0x2)
            Serial Number:
                e0:be:bf:be:19:d8:3e:88
            Signature Algorithm: ecdsa-with-SHA256
            Issuer: C = SE, ST = Stockholm, L = Stockholm, O = Connode AB, OU = R&D, CN = demo-poc.connode.com
            Validity
                Not Before: Nov 26 15:46:48 2018 GMT
                Not After : Nov 23 15:46:48 2028 GMT
            Subject: C = SE, ST = Stockholm, L = Stockholm, O = Connode AB, OU = R&D, CN = demo-poc.connode.com
            Subject Public Key Info:
                Public Key Algorithm: id-ecPublicKey
                    Public-Key: (256 bit)
                    pub:
                        04:72:fd:aa:0e:bf:8b:36:87:e4:ca:28:38:8d:af:
                        ed:7e:42:4f:b6:1c:c2:a1:2b:15:02:9b:bd:79:5e:
                        c0:ad:36:21:03:1f:86:a8:5b:86:da:e1:2b:09:18:
                        ff:a3:02:79:52:85:50:fd:33:d9:eb:86:7a:6d:57:
                        d9:df:86:bb:ad
                    ASN1 OID: prime256v1
                    NIST CURVE: P-256
            X509v3 extensions:
                X509v3 Subject Key Identifier:
                    A8:64:17:2A:19:C1:88:75:38:11:68:B6:3A:B3:41:55:09:4D:72:EA
                X509v3 Authority Key Identifier:
                    keyid:A8:64:17:2A:19:C1:88:75:38:11:68:B6:3A:B3:41:55:09:4D:72:EA

                X509v3 Basic Constraints:
                    CA:TRUE
        Signature Algorithm: ecdsa-with-SHA256
             30:44:02:20:0d:a6:16:bb:cb:42:94:5c:1d:1c:ee:09:fb:a2:
             86:fe:44:08:c7:8d:87:ff:f8:a6:51:43:18:4e:0d:8d:99:7e:
             02:20:78:bf:6c:e5:4e:62:10:b1:28:8c:ae:ba:85:ed:36:6f:
             d8:99:64:4d:c0:03:d2:03:36:f6:1f:1b:46:72:ca:79


    Failing at:
    if (caPrivateKey.getPublicKeyHash().equals(trustedCertificate.getPublicKeyHash())) {



    -----------------------------------------------------

    openssl check cert matches key:

    "openssl x509 -noout -pubkey -in ca.crt" == "openssl pkey -pubout -in ca.key"


    Verify crt is signed by a CA:
    openssl verify -verbose -CAfile ca.crt  node.crt

    ------------------------------------------------------------

    0) The following instructions are timing sensitive, you need to know when the modem ports are
    enumerated. To do this, I perform a "watch -n 1 ls /dev/ttyACM*" so I can see when ports appear
    and dissapear.

    1) If using VirtualBox, repeatedly turn off and on the CH and put the device into your USB settings
    such that it VirtualBox always captures the CH as it boots up. This is essential to get the timing
    right on bootup.

    2) The CH application takes a while to start up and present the USB ports to the host.

    3) AT+M2M=0 to staop it booting after 4 seconds (telit_appzone_c_user-guide_r1.pdf).

    at
    OK
    at+m2m=0
    OK

    At this point the modem can be sat at an AT prompt allowing you to enter
    commands (or be driven by a script).

    4) AT+M2M=4,10 will reboot the modem and make it start the application after 10 seconds.

    5) Before the modem comes up again after a reboot, make sure all appliations using /dev/ttyACMx
    are closed otherwise those ports will not enumerate correctly.

    6) "read_port -p /dev/ttyACM3" will show you the debug text.

    7) To reprogram the application, first start from a powered-off CH, close the "read_port", have
    no applications with open /dev/ttyACMx ports.

    8) Get ready to run the following command as soon as your port-watcher shows the ACMx ports
    ./tools/c4-tools/upload_smip.py  -r /Data/Temp/m2m_Drop1_Integ_TSIP_20190919_apz.bin -p /dev/ttyACM0

    The following should happen:
    --> AT
    AT
    OK
    --> ATE1
    ATE1
    OK
    --> AT#PORTCFG?
    AT#PORTCFG?
    #PORTCFG: 8,8

    OK
    --> AT#PORTCFG=8
    AT#PORTCFG=8
    OK
    --> AT+GMR
    AT+GMR
    12.00.928-B034

    OK
    Uploading /Data/Temp/m2m_Drop1_Integ_TSIP_20190919_apz.bin to /dev/ttyACM0
    --> AT#M2MWRITE="m2m_Drop1_Integ_TSIP_20190919_apz.bin",1751164,1
    AT#M2MWRITE="m2m_Drop1_Integ_TSIP_20190919_apz.bin",1751164,1
    .........................................................................................................................................................................................................................
    File of size 1751164 written, waiting for modem to confirm with OK...
    >>>
    OK
    Writing SHA sum 3b4d81f1e262198b2e5954d0e0111f249c92db2c6a6d89cb6e4ee1de3c6d8d29 of /Data/Temp/m2m_Drop1_Integ_TSIP_20190919_apz.bin to hash info file slot
    --> AT#M2MCHDIR?
    AT#M2MCHDIR?
    #M2MCHDIR: "/"

    OK
    --> AT#M2MCHDIR="/fileservice/firmware/slot4"
    AT#M2MCHDIR="/fileservice/firmware/slot4"
    OK
    --> AT#M2MWRITE="slot4.slt",32,0
    AT#M2MWRITE="slot4.slt",32,0
    .
    File of size 32 written, waiting for modem to confirm with OK...
    >>>
    OK
    --> AT#M2MCHDIR="/"
    AT#M2MCHDIR="/"
    OK
    Making m2m_Drop1_Integ_TSIP_20190919_apz.bin runnable
    --> AT#M2MRUN=2,"m2m_Drop1_Integ_TSIP_20190919_apz.bin"
    AT#M2MRUN=2,"m2m_Drop1_Integ_TSIP_20190919_apz.bin"
    OK
    --> AT#M2MRUN?
    AT#M2MRUN?
    #M2MRUN: "m2m_Drop1_Integ_TSIP_20190919_apz.bin"

    OK
    --> AT+M2M=4,10
    AT+M2M=4,10
    OK

    9) The CH will now reboot and start the freshly programmed application after 10 seconds.


    ------------------------------------------------------------------

    hw type hardware version tag CONFIG_NAME image

    yeah, so its a bit of a mess... what is configured as the hw type (the one you've found) isn't used, but is reported.... the one that is actually checked by the bootloader to be the same as the image during an upgrade is not known as the hardware type but is the "CONFIG_NAME". The text that this CONFIG_NAME actually contains is the hardware type but is nothing to do with the configuration item you found.


    -------------------------------
    ACM DTR CH SMIP serial port issue.

    DTR can't be controlled via Linux.

    https://unix.stackexchange.com/questions/446088/how-to-prevent-dtr-on-open-for-cdc-acm

    ------------------------------------------------

    SMIP last gasp
    cndgwmsg.h

    CA-273 CND-3716

    -------------------------------------------------

    02110d040725403905000000000500000000050000069e050000465005000046500500000000050000000005000000000500000000050000000005000000000500000000050000000005000000000500000000090c07e3090dff0a0dffff80007605296d2a0d

    02 11
     0d 04 07254039
     05 00000000
     05 00000000
     05 0000069e
     05 00004650
     05 00004650
     05 00000000
     05 00000000
     05 00000000
     05 00000000
     05 00000000
     05 00000000
     05 00000000
     05 00000000
     05 00000000
     05 00000000
     09 0c 07e3090dff0a0dffff800076
     05 296d2a0d

    -----------------------------------------------------------
    Telit stream update xfp

    UE910 stream.bin files in scimitar_ch/CommsHubFramework/tools/TELIT/Stream/

    stream_UE910_EUD-AZ_64R_64F-12.00.927_B053.bin

    - power off modem.
    - Press "program" ono Xfp.
    - power on modem while Xfp is waiting... It should pick it up when the com ports enumerate.
    - Programming should take just under 2 minutes.
    - power-cycle the boards.
    - python target_binary_download.py /Data/Temp/m2m_v98-3_apz.bin /dev/ttyACM0 8 --ncp_firmware_path /Data/Temp/em357-SingleB-FW_6_3_2_37.ota

    -----------------------------------------------

    RAM usage symbols sizes
    v151.x

    arm-none-eabi-size agent.elf

       text	   data	    bss	    dec	    hex	filename
     477476	   1104	  68688	 547268	  859c4	agent.elf


    Code:       466KB text + 1KB data   = 467KB
    static RAM: 67KB + 1KB data         = 68KB
    dynamic RAM:                        = 20KB

    total RAM usage                     = 88KB
    total FLASH usage                   = 467KB

    -------------------------------------------------------

    openssl x509 -in certificate.crt -text -noout

    intCA.crt.PEM.crt       - CA=true
    Ref1_Service-99.key     -
    Ref1_Service-99.pem     -
    TEF_Test_Mesh_IA.pem    -
    TEF_Test_Mesh_Root.pem  - CA=true
    ToshCA.cer.pem          - CA=true

    --------------------------------------

    certificate verify:

    ubuntu@stevesworklaptop:/Data/Temp/Credentials/Working$ openssl verify -CAfile ca.crt server.crt
    server.crt: OK
    ubuntu@stevesworklaptop:/Data/Temp/Credentials/Working$ openssl verify -CAfile ca.crt node.crt
    node.crt: OK


    ubuntu@stevesworklaptop:/Data/Temp/KeyTest$ openssl verify -CAfile root.crt client.c
    client.crt  client.csr
    ubuntu@stevesworklaptop:/Data/Temp/KeyTest$ openssl verify -CAfile root.crt client.crt
    client.crt: OK

    -----------------------------------------------

    ma304 hw1 kaifa schematic alarm

    PA4 = interrupt pin UART_DTR EM_DTR pin-11 on meter-header, EM_RTS, pin 18 on IPA module, PA5 on EFR32
    PB0 = allowAlarm pin UART_CTS EM_CTS pin-7 on meter-header, EM_CTS pin 19 on IPA module, PA4 on EFR32.

    Note: There is another reversal from RTS to CTS on the development/breakout boards for IPA.

    Which means the *actual* meter-push/interrupt pin is the UART0 *CTS* pin, *not* RTS! argh!

    NOTE2: 'nEVENT' on the meter interface for IPA3b (pin 9) seems to be wired up but we never see a
    transition on that line. Guessing the meter software still uses pin-11 (EM-RTS) instead.

    ----------------------------------------------

    version info for git

    tools/buildsys/scripts/get_git_version.sh
    remove "-s"




    // Data Notification packet format:
    // 0F  Data-Notification
    // 40 00 00 00  long-invoke-id-and-priority
    // 09 0C 07 D0 01 01 06 02 25 38 FF 80 00 00  date-time
    // 02 structure
    // 02 length
    // 09 06 00 00 61 62 00 FF  Obis code for alarm
    // 06 00 00 00 04           alarm value

    // We only need "alarm value" and
    // expected that the format of packet is hardcoded to this structure

    7ea039010110a7c3e6e700 0f
    40 00 00 00
    09 0c 07e30a02030f3002ff003c00
    02 03
     09 0c 07e30a02030f3002ff003c00
     06 04c060f6
     06 00000000
    3e79 7e



    2019-10-02 15:48:04.512 #1   001bc50c60066205 <log> 0:02:41.399 [debug] [        hdlc] {     hdlc}: ** Waiting for HDLC event (60000ms) **
    2019-10-02 15:48:04.589 #1   001bc50c60066205 <log> 0:02:41.454 [debug] [        hdlc] {     hdlc}: ACTION_WAIT_FOR_RESPONSE
    2019-10-02 15:48:04.589 #1   001bc50c60066205 <log> 0:02:41.461 [debug] [        hdlc] {     hdlc}: rx: (1/4): 7ea039010110a7c3e6e7000f40000000
    2019-10-02 15:48:04.589 #1   001bc50c60066205 <log> 0:02:41.470 [debug] [        hdlc] {     hdlc}: rx: (2/4): 090c07e30a02030f3002ff003c000203
    2019-10-02 15:48:04.589 #1   001bc50c60066205 <log> 0:02:41.479 [debug] [        hdlc] {     hdlc}: rx: (3/4): 090c07e30a02030f3002ff003c000604
    2019-10-02 15:48:04.589 #1   001bc50c60066205 <log> 0:02:41.489 [debug] [        hdlc] {     hdlc}: rx: (4/4): c060f606000000003e797e
    2019-10-02 15:48:04.633 #1   001bc50c60066205 <log> 0:02:41.497 [debug] [        hdlc] {     hdlc}: HDLC_TYPE_I
    2019-10-02 15:48:04.633 #1   001bc50c60066205 <log> 0:02:41.504 [debug] [        hdlc] {     hdlc}: Passing IFrame up the stack to the DLMS task.
    2019-10-02 15:48:04.633 #1   001bc50c60066205 <log> 0:02:41.513 [debug] [meter/kaifaMa304] {     hdlc}: dlmsReceiveCb called with s_rxRes=0 from dev dlms (0b 0x0)
    2019-10-02 15:48:04.633 #1   001bc50c60066205 <log> 0:02:41.524 [debug] [        hdlc] {     hdlc}: !! Result == ResultOK !!
    2019-10-02 15:48:04.633 #1   001bc50c60066205 <log> 0:02:41.531 [debug] [        hdlc] {     hdlc}: ** Waiting for HDLC event (60000ms) **
    2019-10-02 15:48:04.676 #1   001bc50c60066205 <log> 0:02:41.540 [debug] [meter/kaifaMa304] {   device}: !! MessageAlarmsMaskRequest received, from ISR !!
    2019-10-02 15:48:04.676 #1   001bc50c60066205 <log> 0:02:41.550 [ WARN] [meter/kaifaMa304] {   device}: Failed to find obis code tag field in Data Notification APDU
    2019-10-02 15:48:04.676 #1   001bc50c60066205 <log> 0:02:41.561 [debug] [    hdlclock] {   device}: -- unlocking HDLC --
    2019-10-02 15:48:04.676 #1   001bc50c60066205 <log> 0:02:41.568 [debug] [        hdlc] {   device}: disconnectLink 0x0
    2019-10-02 15:48:04.676 #1   001bc50c60066205 <log> 0:02:41.575 [debug] [        hdlc] {   device}: Disconnect HDLC link
    2019-10-02 15:48:04.702 #1   001bc50c60066205 <log> 0:02:41.582 [ WARN] [meter/kaifaMa304] {   device}: Failed to receive Alarm Indication Mask
    2019-10-02 15:48:04.702 #1   001bc50c60066205 <log> 0:02:41.592 [debug] [meter/kaifaMa304] {   device}: Finished processing message.

    ---------------------------------

    v148.10:

    - DeviceOpsForKaifa
    - ConfigurableSingleLED
    - CND9672, CND-9667 (meter-push interrupt & netstat/devstat leds). ec4f80340fcb0cde7b89f893b60ed0818219b97b 36fe140070921de5ca141f3bd8fffd95efc8beae




    - 510f2ef2c022bbb4994798321ebc6e3430f3fccc netstat/devstat/meter-push
    - 1cab983052a78265daf92f1372dff39d2af16fcb led-build change.
    - 9b92050e870dedd0a4bc29528e45b26f919af6b8 device-ops
    - 36fe140070921de5ca141f3bd8fffd95efc8beae netstat/devstat/meter-push
    - ec4f80340fcb0cde7b89f893b60ed0818219b97b netstat/devstat/meter-push merge-issues.


    6ee676b952987309783abec34f698e53111cee3a build tools
    63bb71bd56384f198370f104490cf0b49d206418 gitlabify

    --------------------------------------------------------------
    AES256

    https://testssl.sh/openssl-iana.mapping.html

    ECDHE-ECDSA-AES128-CCM8 = 0xc0ae
    ECDHE-ECDSA-AES256-CCM8 = 0xc0ef

    record-header:
    16       (handshake record)
    03 01    (protocol version)
    00 a5    (number of following bytes)
    handshake-header:
    01       (handshake type)
    00 00 a1 (number of bytes following)
    client version:
    03 03
    client-random:
    32 bytes
    session-id:
    00
    cipher suites (44 bytes in):
    00 02 c0 ae  (for AES-128)
    00 02 c0 af  (for AES-256)


    DTLS "Client-hello" is first packet sent to server from client.
    It should look like this:

    16          <---- handshake record type.
    03 01       <---- protocol version.
    xx xx       <---- number of following bytes in frame.
    01          <---- handshake type
    xx xx xx    <---- number of following bytes in packet.
    03 03       <---- protocol version number (TLS 1.2)
    xx xx xx xx xx xx xx xx xx xx xx xx xx xx xx xx  <---- random data
    xx xx xx xx xx xx xx xx xx xx xx xx xx xx xx xx  <---- random data
    00          <---- session id
    00 02       <---- number of bytes containing the cipher-suite, should be two.
    c0 ae       <---- cipher suite (AES-128). AES-256 is "c0 af".
    ... (more data in rest of packet)




    -----------------------------------------------------

    DTLS extensions:

    // turn on EC support
    wolfSSL_CTX_UseSupportedCurve(ctx, WOLFSSL_ECC_SECP256R1);

    // turn on trusted_ca_keys extension support
    wolfSSL_CTX_UseTrustedCaKeys(ctx);

    ---------------------------------------------------------

    tshark wireshark radio keys
    tshark config in ~/.config/wireshark
    keys in ~/.config/wireshark/ieee802154_keys

    tshark -r /Data/Logs/radio-aes256.pcap -V


    ----------------------------------------

    DTLS extension

    Datagram Transport Layer Security
        DTLS Record Layer: Handshake Protocol: Client Hello
            Content Type: Handshake (22)
            Version: DTLS 1.2 (0xfefd)
            Epoch: 0
            Sequence Number: 0
            Length: 129
            Handshake Protocol: Client Hello
                Handshake Type: Client Hello (1)
                Length: 117
                Message Sequence: 0
                Fragment Offset: 0
                Fragment Length: 117
                Version: DTLS 1.2 (0xfefd)
                Random: 953a90bf820bae62aae5f5d2a4eac25ceeee22c52a8492db...
                    GMT Unix Time: May  3, 2049 08:28:47.000000000 GMT
                    Random Bytes: 820bae62aae5f5d2a4eac25ceeee22c52a8492db7c834424...
                Session ID Length: 32
                Session ID: ac16a088312198b7b9a6dbfc1bbebbc4c5c86f570a6ce0df...
                Cookie Length: 0
                Cipher Suites Length: 2
                Cipher Suites (1 suite)
                    Cipher Suite: TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8 (0xc0af)
                Compression Methods Length: 1
                Compression Methods (1 method)
                    Compression Method: null (0)
                Extensions Length: 41
                Extension: trusted_ca_keys (len=21)
                    Type: trusted_ca_keys (3)
                    Length: 21
                    Data: 0158b2604832def562fa28ebc48e5f3b8e2d21c8f5
                Extension: supported_groups (len=4)
                    Type: supported_groups (10)
                    Length: 4
                    Supported Groups List Length: 2
                    Supported Groups (1 group)
                        Supported Group: secp256r1 (0x0017)
                Extension: signature_algorithms (len=4)
                    Type: signature_algorithms (13)
                    Length: 4
                    Signature Hash Algorithms Length: 2
                    Signature Hash Algorithms (1 algorithm)
                        Signature Algorithm: ecdsa_secp256r1_sha256 (0x0403)
                            Signature Hash Algorithm Hash: SHA256 (4)
                            Signature Hash Algorithm Signature: ECDSA (3)


    extensions:
    - ecdsa_secp256r1_sha256 curve
    - trusted_ca_keys (defined in RFC3546)



    form RFC3546
       constrained clients that, due to memory limitations, possess only a
       small number of CA root keys, may wish to indicate to servers which
       root keys they possess, in order to avoid repeated handshake
       failures.

       In order to indicate which CA root keys they possess, clients MAY
       include an extension of type "trusted_ca_keys" in the (extended)
       client hello.  The "extension_data" field of this extension SHALL
       contain "TrustedAuthorities"

    CND-8166: Revert "Merge changes from topic 'wolfssl-3.14.0'"

    Revert to previous version of WolfSSl because 3.14.0 broke our Trusted CA
    Keys extension patch.

    It works with DTLS resume but not with a full handshake.

    In order to upgrade to 3.14.0 the patch must be rewritten. See this
    upstream commit
    https://github.com/wolfSSL/wolfssl/commit/7160384a1969482c4a3c5d4e3b39f206570f9b7d

    Basically the patch calculated a SHA1 of the raw public key but the
    commit above kept more of the ASN1 encoded public key than before
    causing our code to calculate the wrong SHA1.

    This reverts commit 2145c488f5112ed231ffc4331a4c9982c90f6e37, reversing
    changes made to 2d52177263557aac6bd80c4741ff70ca6b4ede84.

    Change-Id: I631848282483422db56b005e747199689c5e5c9e

    -----------------------------------------------------------

    7e a00c034130de33e6e700 9eb4 7e
    -----------------------------------------------------

    SMIP CH rescue
    Sometimes the CH continues to reboot.
    In this case, try using minicom to attach to /dev/ttyACM4.
    You have to be quick with this one. The AT parser is active for ~1 second.
    Get ready to paste "AT+M2M=0" into /dev/ttyACM4. You should get an "OK" at which point it will
    reboot and you will have a permanently active AT parser.

    AT#PORTCFG=?
    #PORTCFG: Variant=0: AT= USIF0 USB0 USB3; MA(Trace)= USB1
    #PORTCFG: Variant=1: AT= USIF0 USB0 USB3; MA(Trace)= USIF1
    #PORTCFG: Variant=2: AT= USIF0 SPI USB0; MA(Trace)= USB1
    #PORTCFG: Variant=3: AT= USIF0 USIF1 USB0; MA(Trace)= USB1
    #PORTCFG: Variant=4: AT= USIF0 SPI USB0 USB3; MA(Trace)= USB1
    #PORTCFG: Variant=5: AT= SPI USB0 USB3; MA(Trace)= USB1
    #PORTCFG: Variant=6: AT= USIF0 SPI USB0; MA(Trace)= USB1
    #PORTCFG: Variant=7: AT= USIF0 USB0 USB3; MA(Trace)= USB1; 3G-Trace= USB2
    #PORTCFG: Variant=8: AT= USB0 USB3 USB4; MA(Trace)= USB1
    #PORTCFG: Variant=9: AT= USIF0 USB0 HSIC0; MA(Trace)= USB1; 3G-Trace= USB2
    #PORTCFG: Variant=10: AT= USIF0 USB0 HSIC0 HSIC1; MA(Trace)= USB1; 3G-Trace= USB2
    #PORTCFG: Variant=11: not supported by this product
    #PORTCFG: Variant=12: AT= USIF0 USB0 USB3 USB4; MA(Trace)= USB1; DLINK= USB5

    AT#PORTCFG?
    #PORTCFG: 8,8

    which means this is active:
    22617 #PORTCFG: Variant=8: AT= USB0 USB3 USB4; MA(Trace)= USB1


    ---------------------------------------------------

    string section debug removal.

    #include <stdio.h>



    //
    // This will be stored in .xxx_section
    //
    char* specialString __attribute__ ((__section__(".blaa"))) = "Hello World!";

    //
    // This will be stored into .data
    //
    char* normalString  = "Hello Hello Hello";


    void myLoggingFn(const char* format, ...)
    {
    }

    #define LOG_DEBUG(format, ... ) {static const char t[] __attribute__ ((__section__(".xxx_section"))) =format;myLoggingFn( t, ## __VA_ARGS__ );}

    int main()
    {
        printf("[%s]",normalString);
        printf("[%s]",specialString);

        LOG_DEBUG("One two three %d", 1);
        LOG_DEBUG("four five six %d", 2);
        LOG_DEBUG("seven eight nine");
    }


    Extract section with:
    objcopy --dump-section .logdebug=StringSection.logdebug StringSection

    Remove section with:
    objcopy --remove-section .logdebug StringSection

    -------------------------------------------

    ---------------------------------------------------------------
    1st run:

    python target_binary_download.py /Data/Temp/m2m_v98-3_apz.bin /dev/ttyACM0 8 --ncp_firmware_path /Data/Temp/em357-SingleB-FW_6_3_2_37.ota --factory_image_ember em357-SingleB-FW_6_3_1_35.ota
    > AT+M2M?
    +M2M: 0,1,0
    OK
    > AT#M2MCHDRIVE?
    #M2MCHDRIVE: 0
    OK
    > AT#PORTCFG?
    #PORTCFG: 8,8
    OK
     ....going to delete_settings_file
     ....going to delete_certificate_files
     ....going to delete_certificate_file_connode
     ... Downloading file m2mapz.bin to target.
    > AT#M2MWRITE="m2mapz.bin",1739620,1
    >>>
    > AT+M2M?

    AT Error: No contact with target

    -------------------------------------------------------
    2nd run:
    following from above to indicate differing behaviour (timing dependent??):

    python target_binary_download.py /Data/Temp/m2m_v98-3_apz.bin /dev/ttyACM0 8 --ncp_firmware_path /Data/Temp/em357-SingleB-FW_6_3_2_37.ota --factory_image_ember em357-SingleB-FW_6_3_1_35.ota
    > AT+M2M?
    +M2M: 0,1,0
    OK
    > AT#M2MCHDRIVE?
    #M2MCHDRIVE: 0
    OK
    > AT#PORTCFG?
    #PORTCFG: 8,8
    OK
     ....going to delete_settings_file
     ....going to delete_certificate_files
     ....going to delete_certificate_file_connode
     ... Downloading file m2mapz.bin to target.
    > AT#M2MWRITE="m2mapz.bin",1739620,1
    >>>


    > AT#M2MRUN=2,"m2mapz.bin"
    OK
     ... The application m2mapz.bin should be downloaded on target.
     ....setting modem configuration for WANMGR
    > AT+CFUN=1
    OK
    > AT#SIMDET=1
    OK
    > AT+CGREG=1
    OK
    > AT+CGEREP=2,0
    OK
    > AT#NITZ=0
    OK
    > AT+CGCLASS=CG
    OK
    > AT#AUTOATT=1
    OK
    > AT#ICMP=2
    OK
    > AT#PSNT=1
    OK
    > AT+CFUN=4
    OK
    > AT&P
    OK
    > AT&W
    OK
    Adding hash to target for binary /Data/Temp/m2m_v98-3_apz.bin
    AT Error: No contact with target


    ------------------------------------------------
    3rd run:

    python target_binary_download.py /Data/Temp/m2m_v98-3_apz.bin /dev/ttyACM0 8 --ncp_firmware_path /Data/Temp/em357-SingleB-FW_6_3_2_37.ota --factory_image_ember em357-SingleB-FW_6_3_1_35.ota
    > AT+M2M?
    +M2M: 0,1,0
    OK
    > AT#M2MCHDRIVE?
    #M2MCHDRIVE: 0
    OK
    > AT#PORTCFG?
    #PORTCFG: 8,8
    OK
     ....going to delete_settings_file
     ....going to delete_certificate_files
     ....going to delete_certificate_file_connode
     ... Downloading file m2mapz.bin to target.
    > AT#M2MWRITE="m2mapz.bin",1739620,1
    >>>


    OK

    > AT#M2MRUN=2,"m2mapz.bin"
    OK
     ... The application m2mapz.bin should be downloaded on target.
     ....setting modem configuration for WANMGR
    > AT+CFUN=1
    OK
    > AT#SIMDET=1
    OK
    > AT+CGREG=1
    OK
    > AT+CGEREP=2,0
    OK
    > AT#NITZ=0
    OK
    > AT+CGCLASS=CG
    OK
    > AT#AUTOATT=1
    OK
    > AT#ICMP=2
    OK
    > AT#PSNT=1
    OK
    > AT+CFUN=4
    OK
    > AT&P
    OK
    > AT&W
    OK
    Adding hash to target for binary /Data/Temp/m2m_v98-3_apz.bin
    > AT#M2MWRITE="slot4.slt",32
    >>>
    OK
    >file write of tempHash.txt on \fileservice\firmware\slot4\slot4.slt Done
    Adding NCP firmware update OTA image to target.
    AT Error: No contact with target


    --------------------------------------------------

    On Windows:
    C:\Users\SteveTickle\Documents\ToshTools_Real>c:\python27\python target_binary_download.py m2m_v98-3_apz.bin COM92 8 --ncp_firmware_path em357-SingleB-FW_6_3_2_37.ota --factory_image_ember em357-SingleB-FW_6_3_1_35.ota -CID 887384530000092a -GID 887384ff0000092a
     ....closing ITCH cli interface if open
    > AT+M2M?
    +M2M: 0,1,0
    OK
    > AT#M2MCHDRIVE?
    #M2MCHDRIVE: 0
    OK
    > AT#PORTCFG?
    #PORTCFG: 8,8
    OK
     ....going to delete_settings_file
     ....going to delete_certificate_files
     ....going to delete_certificate_file_connode
     ... Downloading file m2mapz.bin to target.
    > AT#M2MWRITE="m2mapz.bin",1739620,1
    >>>
     ....closing ITCH cli interface if open
    > AT+M2M?

    AT Error: No contact with target


    -----------------------------------------------

    Using Windows without Telit drivers... timeout in same place as Linux.
    Using Windows with Telit drivers.... works.

    C:\Users\SteveTickle\Documents\ToshTools_Real>c:\python27\python target_binary_download.py m2m_v98-3_apz.bin COM99 8 --ncp_firmware_path em357-SingleB-FW_6_3_2_37.ota --factory_image_ember em357-SingleB-FW_6_3_1_35.ota -CID 887384530000092a -GID 887384ff0000092a --settings_path Device_SKU2_3.txt

     ....closing ITCH cli interface if open
    > AT+M2M?
    +M2M: 0,1,0
    OK
    > AT#M2MCHDRIVE?
    #M2MCHDRIVE: 0
    OK
    > AT#PORTCFG?
    #PORTCFG: 8,8
    OK
     ....going to delete_settings_file
     ....going to delete_certificate_files
     ....going to delete_certificate_file_connode
     ... Downloading file m2mapz.bin to target.
    > AT#M2MWRITE="m2mapz.bin",1739620,1
    >>>


    > AT#M2MRUN=2,"m2mapz.bin"
    OK
     ... The application m2mapz.bin should be downloaded on target.
     ....setting modem configuration to manufacturing values from P+S
    > AT+CFUN=1
    OK
    > AT+COPS=0
    OK
    > AT#SIMDET=2
    OK
    > AT+CGREG=0
    OK
    > AT+CGEREP=0,0
    OK
    > AT#AUTOATT=1
    OK
    > AT#PSNT=0
    OK
    > AT+WS46=25
    OK
    > AT#TEMPCFG=-30,-18,73,80
    OK
    > AT#TEMPMON=0,0,1,10
    OK
    > AT+CGCLASS=CG
    OK
    > AT#ICMP=2
    OK
    > AT#NITZ=0
    OK
    > AT#SIMDET=0
    OK
    > AT&P
    OK
    > AT&W
    OK
    > AT+M2M=0
    OK
     ... Waiting for reboot after setting modem config.
    Adding hash to target for binary m2m_v98-3_apz.bin
     ....closing ITCH cli interface if open
    > AT#M2MWRITE="slot4.slt",32
    >>>
    OK
    >file write of tempHash.txt on \fileservice\firmware\slot4\slot4.slt Done
    Generating a database with 78 new values in AutoGeneratedDB.db from Device_SKU2_3.txt
    Adding CHF ID to database.
    Generating a database with 1 new values in AutoGeneratedDB.db from tempCHFIdDb.txt
    Adding hash to database.
     ....closing ITCH cli interface if open
    > AT#M2MWRITE="slot0.slt",61472
    >>>
    OK
    >file write of AutoGeneratedDB.db on \fileservice\database\slot0\slot0.slt Done
    Adding NCP firmware update OTA image to target.
     ....closing ITCH cli interface if open
    > AT#M2MWRITE="slot2.slt",155684
    >>>
    OK
    >file write of em357-SingleB-FW_6_3_2_37.ota on \fileservice\special\slot2\slot2.slt Done
    Adding factory image for NCP firmware to target.

    ------------------------------------------

    /lib/udev/rules.d/77-mm-telit-port-types.rules
    has:
    # HE910, UE910, UL865 (dynamic port identification supported)
    ATTRS{idVendor}=="1bc7", ATTRS{idProduct}=="0021", ENV{ID_MM_TELIT_TAGGED}="1", ENV{ID_MM_TELIT_PORTS_TAGGED}="1"

    ------------------------------------------------

    To stop spurious first-breath events being reported when meter watchdogs:
    - Meter asserts meter-push.
    - Node detects meter-push, but read will fail. The node may also be in process of reading from meter and timing out due to lack of response.
    - If when node starts up (within 5 seconds?), the alert pin is asserted, we assume that the restart is due to a meter-watchdog event and do not send a first-breath.
    - If when node starts up (within 5 seconds?), the alert pin is *NOT* asserted, we assume that the restart is due to a power-failure event and node sends a first-breath.

    ------------------------------------------

    v148.11

    - Yens test jig stuff
    - HDLC fix                              - 9f029d6544b5d381fe5163e869aaf888fcc6a34e
    - Manufacturing/device-testing.         - 4552dfa90d42eabb7ad64a1030ef2db6f7608a0e
    - CND-9444 Enable overriding TX frequency in EFR    - d0acd022fb7c55f3e123b9503faa1d19d469dd0a
    - Documentation. Ordering of obises?    - Done.

    ----------------------------------

    gateway routelist:
    4KB = ~200 nodes.
    8KB = ~400 nodes
    16KB = ~800 nodes.

    --------------------------------------------------------

    Impact assesment for key changes on operations, what error messages?

    change events:
    - Preferred key change
    - key addition
    - key removal
    - key barring
    - key restriction

    scenarios:
    - RPL join/mesh formation. DIS are broadcast, DIO/DAO/DAO-ACK are unicast.
    - login
    - time distrbution (broadcast/link-local-multicast)
    - file distribution (download phase). Unicast.
    - file distribution (broadcast phase). broadcast
    - file distribution (fill-in phase). unicast.
    - IPSEC key exchange (over DTLS). unicast over DTLS between server/node.
    - IPSEC packets over mesh. unicast.
    - mesh hopping. As RPL if tables are consistent. What if tables aren't?
    - cellular going down. Mesh reform, RPL ativity.
    - General DTLS traffic. Only restricted flag affects if unicast works.
    - CoAP/non-DTLS traffic. Filtered by restricted-key and address


    ----------------------------------------------------------

    radio range test procedure

    - turn off power-control.
    - enable maximum power.

    ./tools/c4-tools/coap_request.py --ctrlporthub :4002  --radio-test-id 7 --radio-send --radio-test-iid 02-1B-C5-0C-60-05-A2-83 --radio-test-power 54 --radio-test-count 100000


    -------------------------------------------------
    https://hes.amimpwz.in/panmesh/login#node.statistics/51563

    gateway ratio improvement (cb-82):
    - looks promising, ~600 nodes per gateway seems stable.
    - slight drop in SLA, around 1% that may be explained by a meter-upgrade that automatically kicked in.
    - Topologies look good, evenly spread, max-chain-length 6. Very few of those.
    - With ~500 down-routes, modem is uploading ~1.3MByte/hour and downloading ~400KB/hour
    - MAC.drop.percentage not significantly different with large numbers of meters. This indicates that increased
    mesh size does not cause increasing numbers of packets being dropped (at this level).
    - Contention percentage increased from ~50 to ~125 with peaks at 200 at point of changeover (RPL activity?). This indicates
    that as the number of meters on a single mesh rise, less airtime is available (at the gateway). As expected, the increased
    amount of data flowing from meters is making the hop-1 air less available. This is correlated with rises in mac.drop.percentage
    so the extra time on-air may be due to retries?
    - mac tx frame increased from ~2000/hour to 6500/hour when going from 125 to 500 nodes.
    - mac rx frames increased from ~17000/hour previously to ~30000 after.
    - mac.tx.dutycycle increased from ~1.5% before to ~4% after, peaking at 8% (of 10%). (At gateway).
    - rpl.route_add_failures == 0, constantly.
    - The uplink rate of 1.3MByte/hour == 0.361MBps which is approaching theoretical maximum 2G upload
    limit of 0.4MBps.
    - mac.tx.noack.percentage spikes  to a high value at test-start but average seems roughly the same as previously
    indicating that possibly during intense RPL activity when mesh is disturbed we get packets dropped?
    - At test-start, the number of down-routes briefly spiked up to ~900 before falling back down to ~500. This
    indicates significant headroom in the number of available entries in the route-list. The gateway is not
    being route-list-size-limited at this number of nodes.
    - CoAP failure percentage does not rise with increasing number of nodes indicating that retries are handling
    the packet-drops sufficiently well (except during one brief spike at test-start).

    - Delay is seen in readings leading to SLA drop
    - netsize_penalty?
    - sloshing? big swings causing overload? do the stats/metrics act quick enough to stop the sloshing
    effect? (time-base issue).

    -----------------------------

    framecounter issue.

    - Gets reset at known points so allows for replay attacks.
    - SMIP may need this to be rectified for CPA.


    --------------------------------------

    EFM32GG12B8xx in QFN64 package

    CNIC7 review:
    - PD2 is a 5V tolerant... treat it any different?
    - US2_TX labelled as "I" for input along with "US2_RX....

    - GNSS/GPS facility would be useful (time-sync & network-planning). ANT_GNSS?
    - (paid for service using Cell triangulation) AT+QCELLLOC Get Location Information by QuecLocator
    - More Test Points?
    - netlight probably unusable.
    - EG91 DBG_TX and RX brough out to a header or TPs?

    ---------------------------------------------------------------

    IGW7 architecture change.
    - fw upgrade to all uC. Up to four different images, three may be able to be combined.
    - master controls reset of slaves.
    - security must be handled on master, slaves are dumb.
    - RPL implications (two concurrent meshes or one?)
    - Configuration implications (i.e. doubling up on radio config).
    - Is duty-cycle shared or individual?
    - SLIP-over-I2C
    - LED (extra-leds) control over I2C to CNIC7.
    - packets are encrypted and decrypted with MAC key(s) for
    - meter-interface from CNIC needs to be exposed over I2C to master-IPA



    Operate slave IPA3 on a separate mesh for compatibility with other single-channel meshes.
    RPL on slave-IPA is standalone and separate. Network interface presented to master-IPA is 'raw'
    with no security, DTLS, etc.
    On startup, only master-IPA is running, it brings slaves out of reset, determines if they are present
    and registers the network-interfaces.

    Phase 1:
    - Get CNIC7 running with IP stack on board. Use to prove out the Quectel modem i/f.

    Phase 2:
    - SLIP-over-I2C slave on CNIC7.
    - SLIP-over-I2C master (with IP stack and mesh) on Master-IPA.


    Registering new interface:

    ip_core.c
    iface.h

    - Create a static IfaceDesc structure with callbacks and call ipAddIface()
    - txPktq in IfaceDesc is used for outgoing packet. device-specufuc task reads from that q and
    sends out to PHY.
    - setRxCallback() registers callback for packet receipt notifications.

    -------------------------------------
    fuzz testing CND-8621
    doesn't build so take 78536bafd476c84d82bb47cd9241b85470144af5 fixes.

    Documentation/fuzzing.txt
    apt install afl

    ./tools/fuzzing/fuzzy-wuzzy.sh


https://confluence.cyco.io/display/ENG/2015/03/23/Flexelint?preview=%2F13467824%2F13631565%2FFlexeLint_v9.zip

    For MISRA lint report:
    install FlexeLint_v9.zip.zip from https://confluence.cyco.io/display/ENG/2015/03/23/Flexelint<Paste>

    To install you have to build the source.
    cd src
    gcc -o flint *.c
    ./flint

    Add it to your path in you .bashrc:
    PATH=/Data/Temp/Flexelint/src:$PATH

    Thanks for purchasing FlexeLint Workstation License for download     .  Your download transaction ID is 0002496773 and your payment has now cleared.  In order to obtain technical support or updated software you will need to reference your serial number.  Please make a note of it.

    Serial Number:
    FlexeLint License: S60627

    make lint-ipa1-smip-insecure

    filter the full list down the non-3pp, non-Note, non-system-include MISRA checks:
    ag -v "generated|Note|3pp|stm32|efr32|cortex|at45|ds1374|ubuntu|mtd\/spi" build/ipa1-smip-insecure/lint/agent.lint | ag MISRA > agent.lint.MISRA

    report in:
    build/ipa1-smip-insecure/lint/agent.lint

    Old MISRA report in CND-3954


    status check tool for afl-fuzz by <lcamtuf@google.com>

    Individual fuzzers
    ==================

    >>> fuzzer0 (0 days, 20 hrs) <<<

      cycle 19, lifetime speed 484 execs/sec, path 1301/1303 (99%)
      pending 0/52, coverage 8.68%, no crashes yet

    >>> fuzzer1 (0 days, 20 hrs) <<<

      cycle 149, lifetime speed 507 execs/sec, path 695/1431 (48%)
      pending 0/4, coverage 8.74%, no crashes yet

    >>> fuzzer2 (0 days, 20 hrs) <<<

      cycle 157, lifetime speed 511 execs/sec, path 980/1442 (67%)
      pending 0/7, coverage 8.75%, no crashes yet

    >>> fuzzer3 (0 days, 20 hrs) <<<

      cycle 168, lifetime speed 512 execs/sec, path 419/1332 (31%)
      pending 0/1, coverage 8.54%, no crashes yet

    Summary stats
    =============

           Fuzzers alive : 4
          Total run time : 3 days, 10 hours
             Total execs : 149 million
        Cumulative speed : 2014 execs/sec
           Pending paths : 0 faves, 64 total
      Pending per fuzzer : 0 faves, 16 total (on average)
           Crashes found : 0 locally unique
    -------------------------------------------------------------------

    MISRA issues:
    - coapSendResponsePayload can fail due to queue-full conditions. This ripples out to most coapSendXXX() functions and they
    aren't retried.
    - fsRemove and friends can fail in many ways and are never retried or checked for failure.


    ARM RVCT compiler maximum identifier length: limited by RAM
    http://www.keil.com/support/man/docs/armcc/armcc_chr1359125037910.htm

    identifier length for GCC compiler: "The preprocessor treats all characters as significant. The C standard requires only that the first 63 be significant."
    https://gcc.gnu.org/onlinedocs/cpp/Implementation-limits.html<Paste>

    ---------------------------------------------------------------------

    commit 05fe0dfd67664a6a9cfa7bafdc2b5bb6ee3494e0
    Merge: 8025bdf70 0fb229e6f
    Author: SteveTickle <steve.tickle@cyanconnode.com>
    Date:   Thu Oct 24 13:44:58 2019 +0000

        Merge branch 'lixin/mactestmode' into 'master'

        SMIPDEV-114 support TestBench functionality

        See merge request smip/terminal!22

    commit 3926d22b4695377b2150cb303d6b54c50a9da4b6
    Author: Jakob Ruhe <jakob.ruhe@cyanconnode.com>
    Date:   Fri Dec 15 16:09:08 2017 +0100

        SMIPDEV-8 CND-7472: Update File download event types

        Rename the event FailDownload into InterruptedDownload to indicate
        that the job is probably still running on the server and may get
        resumed soon.

        Send the InterruptedDownload event to the File event callback when
        the agent changes IP address instead of the AbortDownload event.

        Log on info level what is given to the File event callback.

        Change-Id: I64bd3477ebb2daf44bad8d4662303a676f600292
        (cherry picked from commit 09463be9dfd6d3a79af058689d592ba715576e42)

    commit 0fb229e6f2cf2400b0481aa0d13d087957257445 (origin/lixin/mactestmode)
    Author: lcheng <lixin.cheng@cyanconnode.com>
    Date:   Thu Oct 17 15:25:31 2019 +0100

        SMIPDEV-114 support TestBench functionality

        - Keystore: cnd_keystoreKeyChanged() support cnd_KeyIndex_LinkLayerKey.
        Load default mac key and use it as keyId 0

        - For SMIP test build (ipa1-smip and host-smip), add follwing features
        Configuration: add "agent.mactestmode", do the same as
        "agentOptions->macTestMode", except to support some local coap requests
        to support required tests.

        Keystore: add new "keystore/mac-key" coap request to set the default
        mac key.

    commit 30b8abcdb2d2b807e1483f3988adc69710d813b3 (origin/lixin/protect_keywrite_api)
    Author: lcheng <lixin.cheng@cyanconnode.com>
    Date:   Thu Oct 3 12:13:53 2019 +0100

        Protect cndkeystore WriteKey API

    commit 50f4783dd4da647db26102c0f4d4baf7a86de111
    Author: Steve Tickle <steve.tickle@cyanconnode.com>
    Date:   Thu Aug 8 11:19:18 2019 +0100

        SMIPDEV-51 Implement ability to configure a key table and preferred key

        (1) Configuration: support binary data (new Bytes type)
        (2) Configuration: support secure parameter for keystore (new Secure
        flag and securedId)
        (3) SMIP configuration backend: store secure parameter to keystore
        (4) Add new parameter "key.keytable" (Bytes type, Secure).
        It contains key table and preferred key. For SMIP, it is stored in
        keystore KeyTable.
        (5) Add keytable to mac_security and ready for multiple keys support
        (6) Add smip mock code for configuration and keystore storage
        (7) Add ipa1-smip-insecure target to test smip code on ipa1 node


    ----------------------------------------

    va_arg justifications and checks:
    - fn cannot return between va_start / va_end.
    - default type promotion converts chars to ints so don't interpret as char.
    - buffer overrun.
    - pointer from int promotion if sizeof(void*) != sizeof(int).
    - constant format string.

    ----------------------------------------

    restricted key limitations:
    1) Only one node with a restricted key is allowed on a mesh at once.
    2) Nodes with restricted keys are not allowed to have children (except temporarily, prior to the DAO-ACK timeout).

    Implications:
    3) Setting a restricted flag on an in-use key will remove those nodes from the mesh.
    4) Because of point 1, transition from a restricted key to non-restricted keys (the bootstrap case) will
    take a long time (i.e. each 'hop' of nodes at at time with a mesh timeout & reform between each).
    5) Because of point 2, nodes attempting to join the network with a restricted key who happen to have a
    child node will not be able to join. Nodes *have* to be leaf nodes to join with a restricted key. This
    condition *should* happen, but is it enforced or accidental?

    ---------------------------------------------------------

    blfwupload:

    ~/gitlab1/terminal/build/host-ctrlporthub/bin/ctrlporthub -controllerport 4000 -loglevel debug  -serial $SERIAL > /dev/null 2>&1 &
    pid=$!
    sleep 1
    ~/gitlab1/terminal/tools/c4-tools/coap_request.py --ctrlporthub :4000 --restart
    kill $pid
    sleep 1
    ~/gitlab1/terminal/build/host-agent/bin/blfwupload -serial $SERIAL -image $IMAGE -dev $SERIAL -loglevel debug


    -----------------------------------------------


    od -A none -v -t x1 ~/Shared/Downloads/Meter_Agent\ 071_RX.txt

    :1,$s/7e/\r7e/g


    -----------------------------------------------------------------

    DTLS epoch

    https://tlswg.org/dtls13-spec/draft-ietf-tls-dtls13.html#rfc.section.6.1


    epoch value (0) is used with unencrypted messages. There are three unencrypted messages in DTLS, namely ClientHello, ServerHello, and HelloRetryRequest.
    epoch value (1) is used for messages protected using keys derived from client_early_traffic_secret. This includes early data sent by the client and the EndOfEarlyData message.
    epoch value (2) is used for messages protected using keys derived from [sender]_handshake_traffic_secret. Messages transmitted during the initial handshake, such as EncryptedExtensions, CertificateRequest, Certificate, CertificateVerify, and Finished belong to this category. Note, however, post-handshake are protected under the appropriate application traffic key and are not included in this category.
    epoch value (3) is used for payloads protected using keys derived from the initial traffic_secret_0. This may include handshake messages, such as post-handshake messages (e.g., a NewSessionTicket message).
    epoch value (4 to 2^16-1) is used for payloads protected using keys from the traffic_secret_N (N>0).

    ------------------------------------
    IGW7
    IMGW:

    CNIC7 + master-IPA combination.
    - I2C driver
    - SLIP driver
    - Reset logic
    - GPIO expander driver
    - ID line driver
    - Application-switching based on ID.
    - Quectel modem driver
    - removal of radio code from EFM application (CNIC7).
    - Encryption of packets on I2C (Wireless-Link-Layer key WLL)
    - Debug over SLIP/UART.
    - ID line needs to be incorporated into I2C address.
    - 'myAddress' needs to be dependent on ID line
    - File distribution of images to slave nodes.
    - 'remote' netstat/devstat LEDs (controlled by CNIC7) Better to be controlled by I2C expander?
    - coexistence interrupt notification on CNIC7
    - time distribution.
    - power-fail distribution.
    - Bootloader (now is the time to do an upgradeable bootloader!).

    demo-able stages?


    add to INTERFACE_SLIP EInterface (comm/types.h)
    ipAddIface(, "slip", ^s_slipDesc );
    ipReceive() -> processIncomingIP() -> forMe/notForMeSoForwardbasedOnAddressOrDrop.
    ipSend() -> ipRoute()

    SLIP & IPv6 on Linux using tuntap.
    https://raspberrypi.stackexchange.com/questions/51248/why-doesnt-ipv6-over-slip-work

    tunslip6

    ----------------------------------------------------------

    // Generate a certificate
      openssl ecparam -out key.pem -name prime256v1 -genkey
      openssl req -new -sha256 -key key.pem -out server.csr
      openssl x509 -req -sha256 -days 365 -in server.csr -signkey key.pem -out cert.pem

      // Use with examples/dial/main.go
      openssl s_server -dtls1_2 -cert cert.pem -key key.pem -accept 4444

      // Use with examples/listen/main.go
      openssl s_client -dtls1_2 -connect 127.0.0.1:4444 -debug -cert cert.pem -key key.pem


    -----------------------------------------------

    openssl list all ciphers

    openssl ciphers -v 'ALL:eNULL'

    -----------------------------------------------------
    multicast on ipv6
    https://en.wikipedia.org/wiki/Multicast_Listener_Discovery
    MLDv1 RFC 3810/4604/3678

    - Need to implement service such as this: "IPv6MulticastListen(socket, interface, IPv6multicastaddress, filtermode, sourcelist)"
    - Can implement only basic, Any-source-multicast (RFC3678)

    The Start Listening operation is equivalent to:

          IPv6MulticastListen ( socket, interface, IPv6 multicast address,
                                EXCLUDE, {} )

       and the Stop Listening operation is equivalent to:

          IPv6MulticastListen ( socket, interface, IPv6 multicast address,
                                INCLUDE, {} )

       where {} is an empty source list.

    -------------------------------------------------------

    status check tool for afl-fuzz by <lcamtuf@google.com>

    Individual fuzzers
    ==================

    >>> fuzzer0 (0 days, 18 hrs) <<<

      cycle 19, lifetime speed 497 execs/sec, path 1192/1311 (90%)
      pending 0/105, coverage 8.85%, no crashes yet

    >>> fuzzer1 (0 days, 18 hrs) <<<

      cycle 169, lifetime speed 530 execs/sec, path 484/1272 (38%)
      pending 0/1, coverage 8.84%, no crashes yet

    >>> fuzzer2 (0 days, 18 hrs) <<<

      cycle 166, lifetime speed 523 execs/sec, path 625/1333 (46%)
      pending 0/2, coverage 8.80%, no crashes yet

    >>> fuzzer3 (0 days, 18 hrs) <<<

      cycle 158, lifetime speed 530 execs/sec, path 505/1245 (40%)
      pending 0/1, coverage 8.60%, no crashes yet

    Summary stats
    =============

           Fuzzers alive : 4
          Total run time : 3 days, 0 hours
             Total execs : 134 million
        Cumulative speed : 2080 execs/sec
           Pending paths : 0 faves, 109 total
      Pending per fuzzer : 0 faves, 27 total (on average)
           Crashes found : 0 locally unique


    -----------------------------------------------------------
    libftd2xx for ftdi I2C

    https://www.ftdichip.com/Drivers/D2XX.htm

    wget https://www.ftdichip.com/Drivers/D2XX/Linux/libftd2xx-x86_64-1.4.8.gz
    gunzip libftd2xx-x86_64-1.4.8.gz
    mkdir libftd2xx
    cd libftd2xx/
    tar xvf ../libftd2xx-x86_64-1.4.8


    LibMPSSE I2C FTDI:
    https://www.ftdichip.com/Support/SoftwareExamples/MPSSE/LibMPSSE-I2C.htm
    wget https://www.ftdichip.com/Support/SoftwareExamples/MPSSE/LibMPSSE-I2C/libMPSSE-I2C.zip
    cd External/Linux/
    tar xvf libftd2xx1.1.12.tar.tar

    Remove spi target from lib in Makefile and rebuild (only have i2c in the lib).

    .a in:
    LibMPSSE/Build/Linux/libMPSSE.a

    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/Data/Projects/LibMPSSE-I2C/LibMPSSE/Build/Linux
    ldconfig

    --------------------------------------

    SLIP framing:
    end-of-frame = 0xc0
    escape is 0xdb;
    on send, if you find 0xc0, replace with 0xdb 0xdc.
    on send, if you find 0xdb, replace with 0xdb 0xdd.



    2019-11-15 17:26:35.918 #1   001bc50c6004fdd6 <log> 0:00:09.682 [debug] [       slip6] { schedule}: Got 48 bytes from SLIP i/f
    2019-11-15 17:26:35.918 #1   001bc50c6004fdd6 <log> 0:00:09.689 [debug] [       slip6] { schedule}: rx : (1/3): 6000000000083a202a11000000000000
    2019-11-15 17:26:35.918 #1   001bc50c6004fdd6 <log> 0:00:09.699 [debug] [       slip6] { schedule}: rx : (2/3): 00010203040506070000000000000000
    2019-11-15 17:26:35.918 #1   001bc50c6004fdd6 <log> 0:00:09.708 [debug] [       slip6] { schedule}: rx : (3/3): 021bc50c6004fdd6800078cbabcd0000
    2019-11-15 17:26:35.970 #1   001bc50c6004fdd6 <log> 0:00:09.717 [debug] [        icmp] { schedule}: ICMPv6 unicast from 2a11::1:203:405:607, Echo request (-), 4 B
    2019-11-15 17:26:35.970 #1   001bc50c6004fdd6 <log> 0:00:09.728 [debug] [   icmp/echo] { schedule}: Echo Request from: 2a11::1:203:405:607, id: 0xabcd, seq: 0, ICMP payload size: 4
    2019-11-15 17:26:35.970 #1   001bc50c6004fdd6 <log> 0:00:09.740 [debug] [        icmp] { schedule}: ICMPv6 unicast to 2a11::1:203:405:607, Echo reply (-), 4 B
    2019-11-15 17:26:35.970 #1   001bc50c6004fdd6 <log> 0:00:09.751 [debug] [          ip] { schedule}: Send IP on slip6, 8 B, type 58, ttl 32: ::21b:c50c:6004:fdd6 -> 2a11::1:203:405:607
    2019-11-15 17:26:36.015 #1   001bc50c6004fdd6 <log> 0:00:09.764 [debug] [       slip6] { slip6_tx}: Got packet detined for SLIP...
    2019-11-15 17:26:36.015 #1   001bc50c6004fdd6 <log> 0:00:09.772 [debug] [       slip6] { slip6_tx}: tx : (1/3): 6000000000083a200000000000000000
    2019-11-15 17:26:36.015 #1   001bc50c6004fdd6 <log> 0:00:09.781 [debug] [       slip6] { slip6_tx}: tx : (2/3): 021bc50c6004fdd62a11000000000000
    2019-11-15 17:26:36.015 #1   001bc50c6004fdd6 <log> 0:00:09.790 [debug] [       slip6] { slip6_tx}: tx : (3/3): 0001020304050607810077cbabcd0000
    2019-11-15 17:26:36.015 #1   001bc50c6004fdd6 <log> 0:00:09.799 [debug] [       slip6] { schedule}: processPacketFromUART
    2019-11-15 17:26:36.060 #1   001bc50c6004fdd6 <log> 0:00:09.846 [debug] [       slip6] { slip6_tx}: Waiting for packet detined for SLIP...
    2019-11-15 17:26:36.202 #1   001bc50c6004fdd6 <log> 0:00:09.966 [debug] [    rpl/core] {      rpl}: 0: transmit DIS
    2019-11-15 17:26:36.202 #1   001bc50c6004fdd6 <log> 0:00:09.972 [debug] [        icmp] {      rpl}: ICMPv6 multicast to ff02::1a, RPL control message (DIS), 23 B
    2019-11-15 17:26:36.202 #1   001bc50c6004fdd6 <log> 0:00:09.983 [debug] [          ip] {      rpl}: Send IP on lowpan, 27 B, type 58, ttl 32: fe80::21b:c50c:6004:fdd6 -> ff02::1a
    2019-11-15 17:26:36.228 #1   001bc50c6004fdd6 <log> 0:00:10.008 [debug] [      mac_tx] {lowpan_tx}: Tx 56 B at 20 dBm as #80 to fd-ff-ff-ff-ff-ff-ff-ff: Sent without ack request
    2019-11-15 17:26:36.591 #1   001bc50c6004fdd6 <log> 0:00:10.351 [debug] [      mac_rx] {   mac_rx}: Received 56 B, broadcast #210 from 02-1b-c5-0c-60-06-73-f2: rssi -99 dBm, sec 5, payload 32 B
    2019-11-15 17:26:36.591 #1   001bc50c6004fdd6 <log> 0:00:10.364 [debug] [        icmp] {   mac_rx}: ICMPv6 multicast from fe80::21b:c50c:6006:73f2, RPL control message (DIS), 23 B
    2019-11-15 17:26:36.591 #1   001bc50c6004fdd6 <log> 0:00:10.377 [debug] [    rpl/core] {      rpl}: 0: Ignoring DIS for instance 7 (mine is 46)

    -----------------------------------------

    sudo tunctl -3 -u steve

    #
    sudo ifconfig tun1 192.168.0.254 up
    #
    sudo route add -host 192.168.0.253 dev tun1
    sudo ifconfig tun1 inet6 add fda7:576d:ac1a::1/48
    sudo ifconfig tun1 inet6 add 2a11::1/48
    sudo route add -net 192.168.0.0 netmask 255.255.255.0 dev tun1
    sudo route -A inet6 add 2a11::1/48 dev tun1
    sudo ifconfig tun1 up
    ping6 2a11::0001:0203:0405:0600
    sudo tshark -i tun1
    coap-client -m get coap://[2a11::1:203:405:600]/conf/m/all


    #
    sudo bash -c 'echo 1 > /proc/sys/net/ipv4/conf/tap0/proxy_arp'
    #
    sudo arp -Ds 192.168.0.253 eth0 pub

    To delete the interface, use the -d option:

    #
    sudo tunctl -d tap0
    Set 'tap0' nonpersistent

    https://unix.stackexchange.com/questions/368690/why-netcat-doesnt-use-the-right-interface-associated-with-the-ip

    socat - udp6-listen:1234,reuseaddr,fork
    sudo ip -6 addr del fe80::298c:e727:d0d6:81eb/64 dev tun1


    ---------------------------------------------------------

    routing for IGW7:

    site-local fec0::/10   forwarded within organisation. deprecated.
    link-local fe80::   not forwarded, only on-link access.
    unique-local-unicast fd00::/8
    global-unicast 2000::/3    16-bit subnet-id, 40 bits global-id, 64-bit interface-id
    unspecified :: (all zeroes)
    loopback ::1
    multicast: ff00::
    solicited-node ff02:: (used for neighbour discovery) Can be used as a source-address, when no other address is defined.

    #define FILE_DISTRIBUTION_MULTICAST_GROUP "ff05::00c4:f11e"
    #define POWERCONTROL_BEACON_MULTICAST_GROUP "ff02::00c4:bbbb"


    - lowpan has file distribution multicast group ff05::00c4:f11e
    - lowpan has power beacon multicast group ff02::00c4:bbbb
    - lowpan has link local.
    - lowpan has unicast address.

    - i2c has link-local.
    - i2c has

    - tun6d i/f (uplink) has a ULA assigned by tun6d. (fd::)

    - ethernet has

    - cellular has ipv4 therefore not in this consideration.



    -----------------------------------

    2019-11-19T07:00:21.908530 [000:00:00.782] [ WARN] [    fs/crypt] { terminal}: openRead: Bad header
    2019-11-19T07:00:21.915201 [000:00:00.789] [ WARN] [   config/pb] { terminal}: Failed to read config file: OK

    2019-11-19T07:38:38.805326 [000:38:17.653] [debug] [   coap/task] {     coap}: session 2 (ddeba19023a587c8): Request from [fd00::1]:5684: PUT file/download/95753 (T=CON, MID=0x1210): 116 B (65000:applicati


    --------------------------------------

    Quectel modem

    https://www.cika.com/soporte/Information/GSMmodules/Quectel/AppNotes/Quectel_GSM_PPP_Application_Note.pdf

    - Auth is different for all modems. Use AT+QGPAU instead of CGAUTH.


    ---------------------------------------

    gw200 expansion port:

    #define GPIO_PIN_GPIO0 ((GPIOPin){ gpioPortC, 8 }) // Expansion port pin 5
    #define GPIO_PIN_ELM_INT ((GPIOPin){ gpioPortB, 13 }) // Expansion port pin 6
    #define GPIO_ETH_DOWN_INT ((GPIOPin){ gpioPortA, 3 })

    // Expansion port
    USART1:

    [1] = { { gpioPortA, 0 }, { gpioPortA, 1 },
            {  }, { gpioPortA, 5 }, { gpioPortA, 4 },
            USART_ROUTELOC0_TXLOC_LOC0 | USART_ROUTELOC0_RXLOC_LOC0, 0,
            cmuClock_USART1, USART1, USART1_RX_IRQn,
            3, 2,
            LDMA_CH_REQSEL_SOURCESEL_USART1 | LDMA_CH_REQSEL_SIGSEL_USART1TXBL,
            LDMA_CH_REQSEL_SOURCESEL_USART1 | LDMA_CH_REQSEL_SIGSEL_USART1RXDATAV },


    TX=A0
    RX=A1

    I2C0 can use A0/A1 as SDA/SCL on expansion port. Will need pull-ups on those lines.
    -----------------------------------

    v148.12

    c296503766e49e27c0359ed4164d627f63d5e4c2 (build number change)
    4c1afb9131166f9847990b1e9c0c0b2637208cf9 (hdlc change)

    ----------------------------------

    new kaifa alarm format.

    7ea03b010110d1fae6e7000fi

    40 00 00 00
    09 0c 07e30b1c04113b38ffffc400
    02 04
    09 06 0000616200ff
    06 00002000
    09 06 0000616204ff
    06 00 000000

    3e4a 7e


    old style:

    7ea02e0101102757e6e7000f40000000
    090c07e30b1d050f120dffffc400
    02 02
    0906 0000616200ff
    06 00 002000766d7e


    -----------------------------------------

    column join

    ag --nonumbers "^15" /Data/Logs/time.log > c1
    ag --nonumbers "^sec:" /Data/Logs/time.log | ag -o --nonumbers "[0-9]+" > c2
    paste -d ',' c1 c2 > c.csv


    -----------------------------------------------

    cnic7 processor

    EFM32GG12B810F1024GM64-A
    not
    EFR32FG12P231F1024GM48

    Ordering Code
    Flash
    (kB)
    RAM
    (kB)
    DC-DC Converter
    USB
    QSPI
    SDIO
    LCD
    GPIO Package Temp Range
    EFM32GG12B810F1024GM64-A 1024 192 Yes Yes Yes Yes Yes 51 QFN64 -40 to +85°C

    in EFM32GG/Include

    --------------------------------------------------------

    MISRA report processing:

    split multiple MISRA matches into multiple lines:

    grep -o "\[MISRA.*" ../MISRA.report.Delta | sed "s/\], /\]\n/" | sort > TotalViolationsInstances


    List of violations present:

    grep -o "\[MISRA.*" ../MISRA.report.Delta | sed "s/\], /\]\n/" | sort | uniq > ViolationsPresent


    to provide a count of all issue categories:

    xargs -t -I '{}' -n 1 < ViolationsPresent  grep -F -c "'{}'" TotalViolationsInstances

    count all violations

    xargs -I '{}' -n 1 < ViolationsPresent grep -F -c '{}' TotalViolationsInstances > ViolationsPresentCount

    join two columns:

    paste -d ',' ViolationsPresent ViolationsPresentCount  > ViolationsTable.csv

    ------------------------------------------------------


    (gdb) where
    #0  uartWriteBlockingWithTimeout (timeout=4294967295, length=13, buffer=0x4912f "Hello World\r\n",
        port=1) at src/platform/drivers/uart/uart-efm32.c:241
    #1  uartOpen (port=port@entry=1, settings=settings@entry=0x200096c8 <s_terminalTaskStack+1480>)
        at src/platform/drivers/uart/uart-efm32.c:164
    #2  0x00022f62 in ctrlportServicePlatformInit () at src/services/ctrlport/ctrlport_service-hw.c:106
    #3  0x00022ab2 in init () at src/services/ctrlport/ctrlport_service.c:98
    #4  0x00010190 in modulesInit (list=list@entry=0x475d8 <serviceModules>) at src/base/module.c:16
    #5  0x00021db0 in servicesInit () at src/services/services.c:57
    #6  0x0002ae7a in terminalBasicStart () at src/terminal/terminal.c:140
    #7  0x0002af44 in terminalTask (arg=0x20008ff0 <s_terminalInitedSemaphore>)
        at src/terminal/terminal.c:501
    #8  0x0003c9f8 in pvTaskIncrementMutexHeldCount () at build/3pp/freertos/FreeRTOS/Source/tasks.c:4250
    Backtrace stopped: previous frame identical to this frame (corrupt stack?)

    ----------------------------------------------

    Bring-up notes:

    - Put spin loop in HardFaulHandler to allow debugging.
    - SWD ok.
    - processor type corrected (series 1, not 2).
    - gpio ok
    - check layout e.g. spi pins by toggling with gpio.
    - disabled watchdog.
    - bootload jumping to firmware.
    - clocks ok
    - uart tx ok with polled I/O
    - uart lines state changed via gpio.
    - uart rx ok (interrupt hit with correct byte).
    - DMA for uart-tx ok.
    - ctrlporthub logging ok.
    - ctrlporthub commands ok. config-list.
    - coap_request --restart ok.
    - SPI ok.
    - flash driver changed to AT45, ok.
    - cndfs ok.
    - persistent config ok.
    - meter uart tx & rx ok.
    - meter talking to driver.



    /dev/serial/by-id/usb-FTDI_TTL232R_FTATI1IX-if00-port0

    stty -F /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0 9600 raw
    stty -F /dev/serial/by-id/usb-FTDI_TTL232R_FTATI1IX-if00-port0 9600 raw
    socat -x /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0,raw,echo=0,crnl /dev/serial/by-id/usb-FTDI_TTL232R_FTATI1IX-if00-port0,raw,echo=0,crnl


    opto:
    socat -x /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0,raw,echo=0,crnl /dev/serial/by-id/usb-FTDI_TTL232R_FTATI1IX-if00-port0,raw,echo=0,crnl

    modem:
    stty -F /dev/serial/by-id/usb-FTDI_USB_Serial_Converter_FTDVHX55-if00-port0 115200 raw
    stty -F /dev/serial/by-id/usb-FTDI_TTL232R_FTATI1IX-if00-port0 115200 raw
    socat -x /dev/serial/by-id/usb-FTDI_USB_Serial_Converter_FTDVHX55-if00-port0,raw,echo=0,crnl /dev/serial/by-id/usb-FTDI_TTL232R_FTATI1IX-if00-port0,raw,echo=0,crnl

    Crash in:

    (gdb)
    0x0003c9d8 in uiUpdateCpuLoad () at build/3pp/freertos/FreeRTOS/Source/tasks.c:4084
    4084		    unsigned int uiCpuLoad = 100 - (ulIdleTaskRunTimeCounter * 100 / ulDelta);
    (gdb) where
    #0  0x0003c9d8 in uiUpdateCpuLoad () at build/3pp/freertos/FreeRTOS/Source/tasks.c:4084
    #1  0x0002ac24 in OS_getCpuLoad () at src/platform/osal/osal-freertos/osal_freertos.c:386
    #2  0x00021ff2 in logPeriodicStatus (id=<optimized out>, data=<optimized out>)
        at src/management/status/status.c:106
    #3  0x00025da8 in scheduleTask (arg=<optimized out>) at src/services/schedule/schedule_service.c:193
    #4  0x0003ca10 in pvTaskIncrementMutexHeldCount () at build/3pp/freertos/FreeRTOS/Source/tasks.c:4250
    Backtrace stopped: previous frame identical to this frame (corrupt stack?)
    (gdb)

    ulDelta == 0, div by zero.
    (gdb) p ulDelta
    $1 = 0
    (gdb) p ulIdleTaskRunTimeCounter
    $2 = 4294433878
    (gdb)


    TODO:
    - Fix watchdog.
    - Fix ulDelta==0 dev-by-zero.
    - powerfail
    - status lines
    - flow control to modem.
    - waitForModem.

    ----------------------------------------------

    deadlock in:

    Breakpoint 6, OS_mutexTake (m=0x20003c34 <s_modemTransmitMutex>)
        at src/platform/osal/osal-freertos/osal_freertos.c:369
    369	        PANIC_HALT("Deadlock");
    (gdb) where
    #0  OS_mutexTake (m=0x20003c34 <s_modemTransmitMutex>)
        at src/platform/osal/osal-freertos/osal_freertos.c:369
    #1  OS_mutexTake (m=m@entry=0x20003c34 <s_modemTransmitMutex>)
        at src/platform/osal/osal-freertos/osal_freertos.c:362
    #2  0x00018c06 in modemTransmit (nextHop=<optimized out>, dstMac=<optimized out>, buf=0x20010f6c "E",
        len=74) at src/communication/modem/modem.c:773
    #3  0x00017ac4 in ipv4Transmit (interface=interface@entry=IPV4_IF_CELLULAR, dst=...,
        protocol=protocol@entry=HDR_UDP, packetbuf=packetbuf@entry=0x20010f68)
        at src/communication/ipv4/ipv4_core.c:136
    #4  0x00018406 in ipv4UdpTransmit (interface=interface@entry=IPV4_IF_CELLULAR, dst=...,
        srcPort=srcPort@entry=53, dstPort=dstPort@entry=53, packetbuf=packetbuf@entry=0x20010f68)
        at src/communication/ipv4/ipv4_udp.c:44
    #5  0x00017f28 in sendRequest (rr=1,
        hostname=0x2000ad85 <s_configuration+317> "lnt-dev2.dev.cyanconnode.com", id=<optimized out>)
        at src/communication/ipv4/ipv4_dns.c:237
    #6  ipv4DnsResolveBlocking (interface=interface@entry=IPV4_IF_CELLULAR,
        hostname=hostname@entry=0x2000ad85 <s_configuration+317> "lnt-dev2.dev.cyanconnode.com",
        response=response@entry=0x20003200 <s_state+100>) at src/communication/ipv4/ipv4_dns.c:265
    #7  0x00015cde in updateTunnelServerAddress (iface=IPV4_IF_CELLULAR)
        at src/communication/uplink/uplink_tun6.c:319
    #8  tun6StateMachine (scheduleId=<optimized out>, data=<optimized out>)
        at src/communication/uplink/uplink_tun6.c:430
    #9  0x0003fd44 in scheduleTask (arg=<optimized out>) at src/services/schedule/schedule_service.c:193
    #10 0x000579ac in pvTaskIncrementMutexHeldCount () at build/3pp/freertos/FreeRTOS/Source/tasks.c:4257
    Backtrace stopped: previous frame identical to this frame (corrupt stack?)

    s_modemTransmitMutex    = modem.c:773       (mutex)
    s_stateSemaphore        = -1                (binary)
    s_eventSemaphore        = -1                (binary)
    s_sendDoneSemaphore     = modem.c:803       (binary)

    s_modemTransmitMutex    = modem.c:773
    s_stateSemaphore        = -1
    s_eventSemaphore        = -1
    s_sendDoneSemaphore     = 0


    s_modemTransmitMutex    = uplink_rx, modem.c:773
    s_stateSemaphore        = NULL, -1
    s_eventSemaphore        = NULL, -1
    s_sendDoneSemaphore     = NULL, -1

    s_modemTransmitMutex    = uplink_tx modem.c:774
    s_stateSemaphore        =
    s_eventSemaphore        =
    s_sendDoneSemaphore     = uplink_tx modem.c:804

    s_modemTransmitMutex    =
    s_stateSemaphore        =
    s_eventSemaphore        =
    s_sendDoneSemaphore     = uplink_tx modem.c:804

    s_modemTransmitMutex    = uplink_tx modem.c:786
    s_stateSemaphore        =
    s_eventSemaphore        =
    s_sendDoneSemaphore     = uplink_tx modem.c:829


    2019-12-17 14:35:16.135 #1   0000000011111111 <log> 0:01:16.319 [debug] [       modem] {uplink_tx}: >>> Waiting for s_modemTransmitMutex
    2019-12-17 14:35:16.185 #1   0000000011111111 <log> 0:01:16.328 [debug] [       modem] {uplink_tx}: >>> Waiting for s_stateSemaphore
    2019-12-17 14:35:16.185 #1   0000000011111111 <log> 0:01:16.336 [debug] [       modem] {uplink_tx}: >>> giving s_stateSemaphore and s_eventSemaphore
    2019-12-17 14:35:16.185 #1   0000000011111111 <log> 0:01:16.345 [debug] [       modem] {uplink_tx}: >>> Waiting for s_sendDoneSemaphore
    2019-12-17 14:35:16.185 #1   0000000011111111 <log> 0:01:16.354 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 128 bytes
    2019-12-17 14:35:16.236 #1   0000000011111111 <log> 0:01:16.383 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 9 bytes
    2019-12-17 14:35:16.236 #1   0000000011111111 <log> 0:01:16.401 [debug] [       modem] {    modem}: >>> signalling s_sendDoneSemaphore because we're *not* in DTR mode.
    2019-12-17 14:35:16.236 #1   0000000011111111 <log> 0:01:16.412 [debug] [       modem] {uplink_tx}: >>> Giving s_modemTransmitMutex

    2019-12-17 14:35:17.132 #1   0000000011111111 <log> 0:01:17.319 [debug] [       modem] {uplink_tx}: >>> Waiting for s_modemTransmitMutex
    2019-12-17 14:35:17.186 #1   0000000011111111 <log> 0:01:17.328 [debug] [       modem] {uplink_tx}: >>> Waiting for s_stateSemaphore
    2019-12-17 14:35:17.186 #1   0000000011111111 <log> 0:01:17.336 [debug] [       modem] {uplink_tx}: >>> giving s_stateSemaphore and s_eventSemaphore
    2019-12-17 14:35:17.186 #1   0000000011111111 <log> 0:01:17.345 [debug] [       modem] {uplink_tx}: >>> Waiting for s_sendDoneSemaphore
    2019-12-17 14:35:17.186 #1   0000000011111111 <log> 0:01:17.354 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 128 bytes
    2019-12-17 14:35:17.234 #1   0000000011111111 <log> 0:01:17.383 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 9 bytes
    2019-12-17 14:35:17.234 #1   0000000011111111 <log> 0:01:17.401 [debug] [       modem] {    modem}: >>> signalling s_sendDoneSemaphore because we're *not* in DTR mode.
    2019-12-17 14:35:17.234 #1   0000000011111111 <log> 0:01:17.412 [debug] [       modem] {uplink_tx}: >>> Giving s_modemTransmitMutex

    2019-12-17 14:35:18.134 #1   0000000011111111 <log> 0:01:18.319 [debug] [       modem] {uplink_tx}: >>> Waiting for s_modemTransmitMutex
    2019-12-17 14:35:18.186 #1   0000000011111111 <log> 0:01:18.328 [debug] [       modem] {uplink_tx}: >>> Waiting for s_stateSemaphore
    2019-12-17 14:35:18.186 #1   0000000011111111 <log> 0:01:18.336 [debug] [       modem] {uplink_tx}: >>> giving s_stateSemaphore and s_eventSemaphore
    2019-12-17 14:35:18.186 #1   0000000011111111 <log> 0:01:18.345 [debug] [       modem] {uplink_tx}: >>> Waiting for s_sendDoneSemaphore
    2019-12-17 14:35:18.186 #1   0000000011111111 <log> 0:01:18.354 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 128 bytes
    2019-12-17 14:35:18.232 #1   0000000011111111 <log> 0:01:18.383 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 9 bytes
    2019-12-17 14:35:18.233 #1   0000000011111111 <log> 0:01:18.401 [debug] [       modem] {    modem}: >>> signalling s_sendDoneSemaphore because we're *not* in DTR mode.
    2019-12-17 14:35:18.233 #1   0000000011111111 <log> 0:01:18.412 [debug] [       modem] {uplink_tx}: >>> Giving s_modemTransmitMutex

    2019-12-17 14:35:19.132 #1   0000000011111111 <log> 0:01:19.319 [debug] [       modem] {uplink_tx}: >>> Waiting for s_modemTransmitMutex
    2019-12-17 14:35:19.187 #1   0000000011111111 <log> 0:01:19.328 [debug] [       modem] {uplink_tx}: >>> Waiting for s_stateSemaphore
    2019-12-17 14:35:19.187 #1   0000000011111111 <log> 0:01:19.336 [debug] [       modem] {uplink_tx}: >>> giving s_stateSemaphore and s_eventSemaphore
    2019-12-17 14:35:19.187 #1   0000000011111111 <log> 0:01:19.345 [debug] [       modem] {uplink_tx}: >>> Waiting for s_sendDoneSemaphore
    2019-12-17 14:35:19.188 #1   0000000011111111 <log> 0:01:19.354 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 128 bytes
    2019-12-17 14:35:19.232 #1   0000000011111111 <log> 0:01:19.383 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 9 bytes
    2019-12-17 14:35:19.232 #1   0000000011111111 <log> 0:01:19.401 [debug] [       modem] {    modem}: >>> signalling s_sendDoneSemaphore because we're *not* in DTR mode.
    2019-12-17 14:35:19.232 #1   0000000011111111 <log> 0:01:19.412 [debug] [       modem] {uplink_tx}: >>> Giving s_modemTransmitMutex

    2019-12-17 14:35:19.936 #1   0000000011111111 <log> 0:01:20.122 [debug] [       modem] {uplink_tx}: >>> Waiting for s_modemTransmitMutex
    2019-12-17 14:35:19.979 #1   0000000011111111 <log> 0:01:20.131 [debug] [       modem] {uplink_tx}: >>> Waiting for s_stateSemaphore
    2019-12-17 14:35:19.979 #1   0000000011111111 <log> 0:01:20.139 [debug] [       modem] {uplink_tx}: >>> giving s_stateSemaphore and s_eventSemaphore
    2019-12-17 14:35:19.979 #1   0000000011111111 <log> 0:01:20.148 [debug] [       modem] {uplink_tx}: >>> Waiting for s_sendDoneSemaphore
    2019-12-17 14:35:19.979 #1   0000000011111111 <log> 0:01:20.157 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 128 bytes
    2019-12-17 14:35:20.039 #1   0000000011111111 <log> 0:01:20.186 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 9 bytes
    2019-12-17 14:35:20.039 #1   0000000011111111 <log> 0:01:20.205 [debug] [       modem] {    modem}: >>> signalling s_sendDoneSemaphore because we're *not* in DTR mode.
    2019-12-17 14:35:20.039 #1   0000000011111111 <log> 0:01:20.216 [debug] [       modem] {uplink_tx}: >>> Giving s_modemTransmitMutex

    2019-12-17 14:35:44.520 #1   0000000011111111 <log> 0:01:44.676 [debug] [       modem] {uplink_tx}: >>> Waiting for s_modemTransmitMutex
    2019-12-17 14:35:44.520 #1   0000000011111111 <log> 0:01:44.684 [debug] [       modem] {uplink_tx}: >>> Waiting for s_stateSemaphore
    2019-12-17 14:35:44.520 #1   0000000011111111 <log> 0:01:44.692 [debug] [       modem] {uplink_tx}: >>> giving s_stateSemaphore and s_eventSemaphore
    2019-12-17 14:35:44.520 #1   0000000011111111 <log> 0:01:44.702 [debug] [       modem] {uplink_tx}: >>> Waiting for s_sendDoneSemaphore

    These are missing:
    2019-12-17 14:35:19.979 #1   0000000011111111 <log> 0:01:20.157 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 128 bytes
    2019-12-17 14:35:20.039 #1   0000000011111111 <log> 0:01:20.186 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 9 bytes
    2019-12-17 14:35:20.039 #1   0000000011111111 <log> 0:01:20.205 [debug] [       modem] {    modem}: >>> signalling s_sendDoneSemaphore because we're *not* in DTR mode.
    2019-12-17 14:35:20.039 #1   0000000011111111 <log> 0:01:20.216 [debug] [       modem] {uplink_tx}: >>> Giving s_modemTransmitMutex



    -----------------------

    2019-12-17 16:38:35.321 #1   0000000011111111 <log> 0:01:11.335 [debug] [       modem] {uplink_tx}: >>> Waiting for s_modemTransmitMutex
    2019-12-17 16:38:35.321 #1   0000000011111111 <log> 0:01:11.344 [debug] [       modem] {uplink_tx}: >>> Waiting for s_stateSemaphore
    2019-12-17 16:38:35.322 #1   0000000011111111 <log> 0:01:11.352 [debug] [       modem] {uplink_tx}: >>> modemTransmit 132 bytes
    2019-12-17 16:38:35.322 #1   0000000011111111 <log> 0:01:11.360 [debug] [       modem] {uplink_tx}: >>> giving s_stateSemaphore and s_eventSemaphore
    2019-12-17 16:38:35.350 #1   0000000011111111 <log> 0:01:11.369 [debug] [       modem] {uplink_tx}: >>> Waiting for s_sendDoneSemaphore
    2019-12-17 16:38:35.350 #1   0000000011111111 <log> 0:01:11.378 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 128 bytes
    2019-12-17 16:38:35.404 #1   0000000011111111 <log> 0:01:11.407 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 9 bytes
    2019-12-17 16:38:35.404 #1   0000000011111111 <log> 0:01:11.425 [debug] [       modem] {    modem}: >>> signalling s_sendDoneSemaphore because we're *not* in DTR mode.
    2019-12-17 16:38:35.405 #1   0000000011111111 <log> 0:01:11.436 [debug] [       modem] {uplink_tx}: >>> Giving s_modemTransmitMutex

    2019-12-17 16:38:36.277 #1   0000000011111111 <log> 0:01:12.318 [debug] [       modem] {uplink_tx}: >>> Waiting for s_modemTransmitMutex
    2019-12-17 16:38:36.320 #1   0000000011111111 <log> 0:01:12.327 [debug] [       modem] {uplink_tx}: >>> Waiting for s_stateSemaphore
    2019-12-17 16:38:36.320 #1   0000000011111111 <log> 0:01:12.335 [debug] [       modem] {uplink_tx}: >>> modemTransmit 132 bytes
    2019-12-17 16:38:36.320 #1   0000000011111111 <log> 0:01:12.343 [debug] [       modem] {uplink_tx}: >>> giving s_stateSemaphore and s_eventSemaphore
    2019-12-17 16:38:36.320 #1   0000000011111111 <log> 0:01:12.352 [debug] [       modem] {uplink_tx}: >>> Waiting for s_sendDoneSemaphore
    2019-12-17 16:38:36.320 #1   0000000011111111 <log> 0:01:12.361 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 128 bytes
    2019-12-17 16:38:36.387 #1   0000000011111111 <log> 0:01:12.390 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 9 bytes
    2019-12-17 16:38:36.387 #1   0000000011111111 <log> 0:01:12.408 [debug] [       modem] {    modem}: >>> signalling s_sendDoneSemaphore because we're *not* in DTR mode.
    2019-12-17 16:38:36.387 #1   0000000011111111 <log> 0:01:12.419 [debug] [       modem] {uplink_tx}: >>> Giving s_modemTransmitMutex

    2019-12-17 16:38:37.274 #1   0000000011111111 <log> 0:01:13.318 [debug] [       modem] {uplink_tx}: >>> Waiting for s_modemTransmitMutex
    2019-12-17 16:38:37.317 #1   0000000011111111 <log> 0:01:13.327 [debug] [       modem] {uplink_tx}: >>> Waiting for s_stateSemaphore
    2019-12-17 16:38:37.317 #1   0000000011111111 <log> 0:01:13.335 [debug] [       modem] {uplink_tx}: >>> modemTransmit 132 bytes
    2019-12-17 16:38:37.317 #1   0000000011111111 <log> 0:01:13.343 [debug] [       modem] {uplink_tx}: >>> giving s_stateSemaphore and s_eventSemaphore
    2019-12-17 16:38:37.318 #1   0000000011111111 <log> 0:01:13.352 [debug] [       modem] {uplink_tx}: >>> Waiting for s_sendDoneSemaphore
    2019-12-17 16:38:37.318 #1   0000000011111111 <log> 0:01:13.361 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 128 bytes
    2019-12-17 16:38:37.386 #1   0000000011111111 <log> 0:01:13.390 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 9 bytes
    2019-12-17 16:38:37.386 #1   0000000011111111 <log> 0:01:13.408 [debug] [       modem] {    modem}: >>> signalling s_sendDoneSemaphore because we're *not* in DTR mode.
    2019-12-17 16:38:37.386 #1   0000000011111111 <log> 0:01:13.419 [debug] [       modem] {uplink_tx}: >>> Giving s_modemTransmitMutex

    2019-12-17 16:38:38.279 #1   0000000011111111 <log> 0:01:14.318 [debug] [       modem] {uplink_tx}: >>> Waiting for s_modemTransmitMutex
    2019-12-17 16:38:38.333 #1   0000000011111111 <log> 0:01:14.327 [debug] [       modem] {uplink_tx}: >>> Waiting for s_stateSemaphore
    2019-12-17 16:38:38.333 #1   0000000011111111 <log> 0:01:14.335 [debug] [       modem] {uplink_tx}: >>> modemTransmit 132 bytes
    2019-12-17 16:38:38.333 #1   0000000011111111 <log> 0:01:14.343 [debug] [       modem] {uplink_tx}: >>> giving s_stateSemaphore and s_eventSemaphore
    2019-12-17 16:38:38.333 #1   0000000011111111 <log> 0:01:14.352 [debug] [       modem] {uplink_tx}: >>> Waiting for s_sendDoneSemaphore
    2019-12-17 16:38:38.333 #1   0000000011111111 <log> 0:01:14.361 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 128 bytes
    2019-12-17 16:38:38.354 #1   0000000011111111 <log> 0:01:14.390 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 9 bytes
    2019-12-17 16:38:38.387 #1   0000000011111111 <log> 0:01:14.408 [debug] [       modem] {    modem}: >>> signalling s_sendDoneSemaphore because we're *not* in DTR mode.
    2019-12-17 16:38:38.387 #1   0000000011111111 <log> 0:01:14.419 [debug] [       modem] {uplink_tx}: >>> Giving s_modemTransmitMutex

    2019-12-17 16:38:39.274 #1   0000000011111111 <log> 0:01:15.318 [debug] [       modem] {uplink_tx}: >>> Waiting for s_modemTransmitMutex
    2019-12-17 16:38:39.320 #1   0000000011111111 <log> 0:01:15.327 [debug] [       modem] {uplink_tx}: >>> Waiting for s_stateSemaphore
    2019-12-17 16:38:39.320 #1   0000000011111111 <log> 0:01:15.335 [debug] [       modem] {uplink_tx}: >>> modemTransmit 132 bytes
    2019-12-17 16:38:39.320 #1   0000000011111111 <log> 0:01:15.343 [debug] [       modem] {uplink_tx}: >>> giving s_stateSemaphore and s_eventSemaphore
    2019-12-17 16:38:39.320 #1   0000000011111111 <log> 0:01:15.352 [debug] [       modem] {uplink_tx}: >>> Waiting for s_sendDoneSemaphore
    2019-12-17 16:38:39.320 #1   0000000011111111 <log> 0:01:15.361 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 128 bytes
    2019-12-17 16:38:39.386 #1   0000000011111111 <log> 0:01:15.390 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 9 bytes
    2019-12-17 16:38:39.386 #1   0000000011111111 <log> 0:01:15.408 [debug] [       modem] {    modem}: >>> signalling s_sendDoneSemaphore because we're *not* in DTR mode.
    2019-12-17 16:38:39.386 #1   0000000011111111 <log> 0:01:15.419 [debug] [       modem] {uplink_tx}: >>> Giving s_modemTransmitMutex

    -----------------------------------------------------------------------


    Deadlock detected from scheduleTask while trying to send packet (taking s_modemTransmitMutex):
    uplink_tx task waiting for sendDone, when scheduletask tries to send data and blocks for > 2min, hence deadlock.

    (gdb) where
    #0  OS_mutexTakeDebug (m=0x20003afc <s_modemTransmitMutex>, fileName=<optimized out>,
        lineNumber=<optimized out>) at src/platform/osal/osal-freertos/osal_freertos.c:442
    #1  OS_mutexTakeDebug (m=m@entry=0x20003afc <s_modemTransmitMutex>,
        fileName=fileName@entry=0x44443 "src/communication/modem/modem.c", lineNumber=lineNumber@entry=774)
        at src/platform/osal/osal-freertos/osal_freertos.c:432
    #2  0x00018d22 in modemTransmit (nextHop=<optimized out>, dstMac=<optimized out>, len=74,
        buf=0x2000ac0c "E") at src/communication/modem/modem.c:774
    #3  modemTransmit (nextHop=<optimized out>, dstMac=<optimized out>, buf=0x2000ac0c "E", len=74)
        at src/communication/modem/modem.c:746
    #4  0x00017bac in ipv4Transmit (interface=interface@entry=IPV4_IF_CELLULAR, dst=...,
        protocol=protocol@entry=HDR_UDP, packetbuf=packetbuf@entry=0x2000ac08)
        at src/communication/ipv4/ipv4_core.c:136
    #5  0x00018512 in ipv4UdpTransmit (interface=interface@entry=IPV4_IF_CELLULAR, dst=...,
        srcPort=srcPort@entry=53, dstPort=dstPort@entry=53, packetbuf=packetbuf@entry=0x2000ac08)
        at src/communication/ipv4/ipv4_udp.c:44
    #6  0x0001801c in sendRequest (rr=1,
        hostname=0x2000617d <s_configuration+317> "lnt-dev2.dev.cyanconnode.com", id=<optimized out>)
        at src/communication/ipv4/ipv4_dns.c:237
    #7  ipv4DnsResolveBlocking (interface=interface@entry=IPV4_IF_CELLULAR,
        hostname=hostname@entry=0x2000617d <s_configuration+317> "lnt-dev2.dev.cyanconnode.com",
        response=response@entry=0x20003068 <s_state+100>) at src/communication/ipv4/ipv4_dns.c:265
    #8  0x00015db4 in updateTunnelServerAddress (iface=IPV4_IF_CELLULAR)
        at src/communication/uplink/uplink_tun6.c:319
    #9  tun6StateMachine (scheduleId=<optimized out>, data=<optimized out>)
        at src/communication/uplink/uplink_tun6.c:430
    #10 0x00026174 in scheduleTask (arg=<optimized out>) at src/services/schedule/schedule_service.c:193

    s_modemTransmitMutex    = uplink_tx modem.c:774
    s_stateSemaphore        =
    s_eventSemaphore        =
    s_sendDoneSemaphore     = uplink_tx modem.c:806


    2019-12-17 16:50:46.623 #1   0000000011111111 <log> 0:01:24.336 [debug] [       modem] {uplink_tx}: >>> modemTransmit 132 bytes
    2019-12-17 16:50:46.623 #1   0000000011111111 <log> 0:01:24.344 [debug] [       modem] {uplink_tx}: >>> giving s_stateSemaphore and s_eventSemaphore
    2019-12-17 16:50:46.623 #1   0000000011111111 <log> 0:01:24.353 [debug] [       modem] {uplink_tx}: >>> Waiting for s_sendDoneSemaphore
    2019-12-17 16:50:46.624 #1   0000000011111111 <log> 0:01:24.362 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 128 bytes
    2019-12-17 16:50:46.692 #1   0000000011111111 <log> 0:01:24.391 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 9 bytes
    2019-12-17 16:50:46.692 #1   0000000011111111 <log> 0:01:24.409 [debug] [       modem] {    modem}: >>> signalling s_sendDoneSemaphore because we're *not* in DTR mode.
    2019-12-17 16:50:46.692 #1   0000000011111111 <log> 0:01:24.420 [debug] [       modem] {uplink_tx}: >>> Giving s_modemTransmitMutex

    2019-12-17 16:50:47.581 #1   0000000011111111 <log> 0:01:25.319 [debug] [       modem] {uplink_tx}: >>> Waiting for s_modemTransmitMutex
    2019-12-17 16:50:47.622 #1   0000000011111111 <log> 0:01:25.328 [debug] [       modem] {uplink_tx}: >>> Waiting for s_stateSemaphore
    2019-12-17 16:50:47.622 #1   0000000011111111 <log> 0:01:25.336 [debug] [       modem] {uplink_tx}: >>> modemTransmit 132 bytes
    2019-12-17 16:50:47.622 #1   0000000011111111 <log> 0:01:25.344 [debug] [       modem] {uplink_tx}: >>> giving s_stateSemaphore and s_eventSemaphore
    2019-12-17 16:50:47.622 #1   0000000011111111 <log> 0:01:25.353 [debug] [       modem] {uplink_tx}: >>> Waiting for s_sendDoneSemaphore
    2019-12-17 16:50:47.622 #1   0000000011111111 <log> 0:01:25.362 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 128 bytes
    2019-12-17 16:50:47.691 #1   0000000011111111 <log> 0:01:25.391 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 9 bytes
    2019-12-17 16:50:47.691 #1   0000000011111111 <log> 0:01:25.409 [debug] [       modem] {    modem}: >>> signalling s_sendDoneSemaphore because we're *not* in DTR mode.
    2019-12-17 16:50:47.691 #1   0000000011111111 <log> 0:01:25.420 [debug] [       modem] {uplink_tx}: >>> Giving s_modemTransmitMutex

    2019-12-17 16:50:48.581 #1   0000000011111111 <log> 0:01:26.319 [debug] [       modem] {uplink_tx}: >>> Waiting for s_modemTransmitMutex
    2019-12-17 16:50:48.635 #1   0000000011111111 <log> 0:01:26.328 [debug] [       modem] {uplink_tx}: >>> Waiting for s_stateSemaphore
    2019-12-17 16:50:48.635 #1   0000000011111111 <log> 0:01:26.336 [debug] [       modem] {uplink_tx}: >>> modemTransmit 132 bytes
    2019-12-17 16:50:48.635 #1   0000000011111111 <log> 0:01:26.344 [debug] [       modem] {uplink_tx}: >>> giving s_stateSemaphore and s_eventSemaphore
    2019-12-17 16:50:48.635 #1   0000000011111111 <log> 0:01:26.353 [debug] [       modem] {uplink_tx}: >>> Waiting for s_sendDoneSemaphore
    2019-12-17 16:50:48.635 #1   0000000011111111 <log> 0:01:26.362 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 128 bytes
    2019-12-17 16:50:48.690 #1   0000000011111111 <log> 0:01:26.391 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 9 bytes
    2019-12-17 16:50:48.691 #1   0000000011111111 <log> 0:01:26.409 [debug] [       modem] {    modem}: >>> signalling s_sendDoneSemaphore because we're *not* in DTR mode.
    2019-12-17 16:50:48.691 #1   0000000011111111 <log> 0:01:26.420 [debug] [       modem] {uplink_tx}: >>> Giving s_modemTransmitMutex

    2019-12-17 16:50:49.579 #1   0000000011111111 <log> 0:01:27.319 [debug] [       modem] {uplink_tx}: >>> Waiting for s_modemTransmitMutex
    2019-12-17 16:50:49.621 #1   0000000011111111 <log> 0:01:27.328 [debug] [       modem] {uplink_tx}: >>> Waiting for s_stateSemaphore
    2019-12-17 16:50:49.622 #1   0000000011111111 <log> 0:01:27.336 [debug] [       modem] {uplink_tx}: >>> modemTransmit 132 bytes
    2019-12-17 16:50:49.622 #1   0000000011111111 <log> 0:01:27.344 [debug] [       modem] {uplink_tx}: >>> giving s_stateSemaphore and s_eventSemaphore
    2019-12-17 16:50:49.622 #1   0000000011111111 <log> 0:01:27.353 [debug] [       modem] {uplink_tx}: >>> Waiting for s_sendDoneSemaphore
    2019-12-17 16:50:49.622 #1   0000000011111111 <log> 0:01:27.362 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 128 bytes
    2019-12-17 16:50:49.691 #1   0000000011111111 <log> 0:01:27.391 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 9 bytes
    2019-12-17 16:50:49.691 #1   0000000011111111 <log> 0:01:27.409 [debug] [       modem] {    modem}: >>> signalling s_sendDoneSemaphore because we're *not* in DTR mode.
    2019-12-17 16:50:49.691 #1   0000000011111111 <log> 0:01:27.420 [debug] [       modem] {uplink_tx}: >>> Giving s_modemTransmitMutex

    2019-12-17 16:50:50.581 #1   0000000011111111 <log> 0:01:28.319 [debug] [       modem] {uplink_tx}: >>> Waiting for s_modemTransmitMutex
    2019-12-17 16:50:50.634 #1   0000000011111111 <log> 0:01:28.328 [debug] [       modem] {uplink_tx}: >>> Waiting for s_stateSemaphore
    2019-12-17 16:50:50.634 #1   0000000011111111 <log> 0:01:28.336 [debug] [       modem] {uplink_tx}: >>> modemTransmit 132 bytes
    2019-12-17 16:50:50.634 #1   0000000011111111 <log> 0:01:28.344 [debug] [       modem] {uplink_tx}: >>> giving s_stateSemaphore and s_eventSemaphore
    2019-12-17 16:50:50.634 #1   0000000011111111 <log> 0:01:28.353 [debug] [       modem] {uplink_tx}: >>> Waiting for s_sendDoneSemaphore
    2019-12-17 16:50:50.634 #1   0000000011111111 <log> 0:01:28.362 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 128 bytes               <----- This should have happened below to give s_sendDoneSemaphore.
    2019-12-17 16:50:50.691 #1   0000000011111111 <log> 0:01:28.391 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 9 bytes
    2019-12-17 16:50:50.691 #1   0000000011111111 <log> 0:01:28.409 [debug] [       modem] {    modem}: >>> signalling s_sendDoneSemaphore because we're *not* in DTR mode.
    2019-12-17 16:50:50.691 #1   0000000011111111 <log> 0:01:28.420 [debug] [       modem] {uplink_tx}: >>> Giving s_modemTransmitMutex



    2019-12-17 16:51:15.563 #1   0000000011111111 <log> 0:01:53.279 [debug] [       modem] {uplink_tx}: >>> Waiting for s_modemTransmitMutex
    2019-12-17 16:51:15.563 #1   0000000011111111 <log> 0:01:53.287 [debug] [       modem] {uplink_tx}: >>> Waiting for s_stateSemaphore
    2019-12-17 16:51:15.563 #1   0000000011111111 <log> 0:01:53.295 [debug] [       modem] {uplink_tx}: >>> modemTransmit 76 bytes
    2019-12-17 16:51:15.563 #1   0000000011111111 <log> 0:01:53.303 [debug] [       modem] {uplink_tx}: >>> giving s_stateSemaphore and s_eventSemaphore
    2019-12-17 16:51:15.583 #1   0000000011111111 <log> 0:01:53.313 [debug] [       modem] {uplink_tx}: >>> Waiting for s_sendDoneSemaphore             <----- This should have completed.

    2019-12-17 16:53:46.483 #1   0000000011111111 <log> 0:04:24.236 [debug] [       modem] { schedule}: >>> Waiting for s_modemTransmitMutex            <----- This task wants to transmit, but can't.

    -------------------------------------


    2019-12-17 17:44:50.595 #1   0000000011111111 <log> 0:03:52.361 [debug] [       modem] {uplink_tx}: >>> Waiting for s_sendDoneSemaphore
    2019-12-17 17:44:50.653 #1   0000000011111111 <log> 0:03:52.370 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 128 bytes
    2019-12-17 17:44:50.653 #1   0000000011111111 <log> 0:03:52.389 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 9 bytes
    2019-12-17 17:44:50.653 #1   0000000011111111 <log> 0:03:52.398 [debug] [       modem] {    modem}: >>> signalling s_sendDoneSemaphore because we're *not* in DTR mode.
    2019-12-17 17:44:50.653 #1   0000000011111111 <log> 0:03:52.409 [debug] [       modem] {uplink_tx}: >>> Giving s_modemTransmitMutex

    2019-12-17 17:44:51.560 #1   0000000011111111 <log> 0:03:53.318 [debug] [       modem] {uplink_tx}: >>> modemTransmit start 132 bytes
    2019-12-17 17:44:51.594 #1   0000000011111111 <log> 0:03:53.327 [debug] [       modem] {uplink_tx}: >>> Waiting for s_modemTransmitMutex
    2019-12-17 17:44:51.595 #1   0000000011111111 <log> 0:03:53.335 [debug] [       modem] {uplink_tx}: >>> Waiting for s_stateSemaphore
    2019-12-17 17:44:51.595 #1   0000000011111111 <log> 0:03:53.343 [debug] [       modem] {uplink_tx}: >>> modemTransmit middle 132 bytes
    2019-12-17 17:44:51.595 #1   0000000011111111 <log> 0:03:53.352 [debug] [       modem] {uplink_tx}: >>> giving s_stateSemaphore and s_eventSemaphore
    2019-12-17 17:44:51.595 #1   0000000011111111 <log> 0:03:53.361 [debug] [       modem] {uplink_tx}: >>> Waiting for s_sendDoneSemaphore
    2019-12-17 17:44:51.653 #1   0000000011111111 <log> 0:03:53.370 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 128 bytes
    2019-12-17 17:44:51.654 #1   0000000011111111 <log> 0:03:53.389 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 9 bytes
    2019-12-17 17:44:51.654 #1   0000000011111111 <log> 0:03:53.397 [debug] [       modem] {    modem}: >>> signalling s_sendDoneSemaphore because we're *not* in DTR mode.
    2019-12-17 17:44:51.654 #1   0000000011111111 <log> 0:03:53.409 [debug] [       modem] {uplink_tx}: >>> Giving s_modemTransmitMutex

    2019-12-17 17:44:52.552 #1   0000000011111111 <log> 0:03:54.318 [debug] [       modem] {uplink_tx}: >>> modemTransmit start 132 bytes
    2019-12-17 17:44:52.595 #1   0000000011111111 <log> 0:03:54.327 [debug] [       modem] {uplink_tx}: >>> Waiting for s_modemTransmitMutex
    2019-12-17 17:44:52.596 #1   0000000011111111 <log> 0:03:54.335 [debug] [       modem] {uplink_tx}: >>> Waiting for s_stateSemaphore
    2019-12-17 17:44:52.596 #1   0000000011111111 <log> 0:03:54.343 [debug] [       modem] {uplink_tx}: >>> modemTransmit middle 132 bytes
    2019-12-17 17:44:52.596 #1   0000000011111111 <log> 0:03:54.352 [debug] [       modem] {uplink_tx}: >>> giving s_stateSemaphore and s_eventSemaphore
    2019-12-17 17:44:52.596 #1   0000000011111111 <log> 0:03:54.361 [debug] [       modem] {uplink_tx}: >>> Waiting for s_sendDoneSemaphore
    2019-12-17 17:44:52.652 #1   0000000011111111 <log> 0:03:54.370 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 128 bytes
    2019-12-17 17:44:52.652 #1   0000000011111111 <log> 0:03:54.389 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 9 bytes
    2019-12-17 17:44:52.653 #1   0000000011111111 <log> 0:03:54.398 [debug] [       modem] {    modem}: >>> signalling s_sendDoneSemaphore because we're *not* in DTR mode.
    2019-12-17 17:44:52.653 #1   0000000011111111 <log> 0:03:54.409 [debug] [       modem] {uplink_tx}: >>> Giving s_modemTransmitMutex

    2019-12-17 17:44:53.551 #1   0000000011111111 <log> 0:03:55.318 [debug] [       modem] {uplink_tx}: >>> modemTransmit start 132 bytes
    2019-12-17 17:44:53.594 #1   0000000011111111 <log> 0:03:55.327 [debug] [       modem] {uplink_tx}: >>> Waiting for s_modemTransmitMutex
    2019-12-17 17:44:53.594 #1   0000000011111111 <log> 0:03:55.335 [debug] [       modem] {uplink_tx}: >>> Waiting for s_stateSemaphore
    2019-12-17 17:44:53.594 #1   0000000011111111 <log> 0:03:55.343 [debug] [       modem] {uplink_tx}: >>> modemTransmit middle 132 bytes
    2019-12-17 17:44:53.594 #1   0000000011111111 <log> 0:03:55.352 [debug] [       modem] {uplink_tx}: >>> giving s_stateSemaphore and s_eventSemaphore
    2019-12-17 17:44:53.595 #1   0000000011111111 <log> 0:03:55.361 [debug] [       modem] {uplink_tx}: >>> Waiting for s_sendDoneSemaphore
    2019-12-17 17:44:53.653 #1   0000000011111111 <log> 0:03:55.370 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 128 bytes
    2019-12-17 17:44:53.653 #1   0000000011111111 <log> 0:03:55.389 [debug] [    modemdrv] {    modem}: >>> modemDriverWrite of 9 bytes
    2019-12-17 17:44:53.653 #1   0000000011111111 <log> 0:03:55.398 [debug] [       modem] {    modem}: >>> signalling s_sendDoneSemaphore because we're *not* in DTR mode. <--- sendDone signalled here, this doesn't happen
    2019-12-17 17:44:53.653 #1   0000000011111111 <log> 0:03:55.409 [debug] [       modem] {uplink_tx}: >>> Giving s_modemTransmitMutex


    2019-12-17 17:45:17.984 #1   0000000011111111 <log> 0:04:19.724 [debug] [       modem] {uplink_tx}: >>> modemTransmit start 76 bytes
    2019-12-17 17:45:17.984 #1   0000000011111111 <log> 0:04:19.732 [debug] [       modem] {uplink_tx}: >>> Waiting for s_modemTransmitMutex
    2019-12-17 17:45:17.984 #1   0000000011111111 <log> 0:04:19.740 [debug] [       modem] {uplink_tx}: >>> Waiting for s_stateSemaphore
    2019-12-17 17:45:17.984 #1   0000000011111111 <log> 0:04:19.749 [debug] [       modem] {uplink_tx}: >>> modemTransmit middle 76 bytes
    2019-12-17 17:45:18.004 #1   0000000011111111 <log> 0:04:19.757 [debug] [       modem] {uplink_tx}: >>> giving s_stateSemaphore and s_eventSemaphore
                                                                                                                                                    <----- missing modemDriverWrite
                                                                                                                                                    <----- missing modemDriverWrite
    2019-12-17 17:45:18.004 #1   0000000011111111 <log> 0:04:19.766 [debug] [       modem] {uplink_tx}: >>> Waiting for s_sendDoneSemaphore         <---- uplink_tx task stops here waiting for sendDone.


    2019-12-17 17:47:48.907 #1   0000000011111111 <log> 0:06:50.681 [debug] [       modem] { schedule}: >>> modemTransmit start 74 bytes
    2019-12-17 17:47:48.907 #1   0000000011111111 <log> 0:06:50.689 [debug] [       modem] { schedule}: >>> Waiting for s_modemTransmitMutex

    ---------------------------------------------

    Control
    - manipulate
    - command
    - conduct
    - govern
    - manage
    -


    -------------------------------------

    RTC
    #0  0x0003e3a6 in syncReg (mask=<optimized out>)
        at build/3pp/flex/platform/emlib_efm32/src/em_cmu.c:4024
    #1  syncReg (mask=65536) at build/3pp/flex/platform/emlib_efm32/src/em_cmu.c:4013
    #2  0x0003e468 in CMU_ClockEnable (clock=clock@entry=cmuClock_RTCC, enable=enable@entry=true)
        at build/3pp/flex/platform/emlib_efm32/src/em_cmu.c:5034
    #3  0x0002a47e in rtcInit () at src/platform/drivers/rtc/rtc_efm32.c:64
    #4  0x00026808 in timeServiceStart () at src/services/time/time_service.c:198
    #5  0x000101dc in modulesStart (list=list@entry=0x481d8 <serviceModules>) at src/base/module.c:25
    #6  0x00022466 in servicesStart () at src/services/services.c:64
    #7  0x0002b4be in terminalBasicStart () at src/terminal/terminal.c:148
    #8  0x0002b57c in terminalTask (arg=0x200096c8 <s_terminalInitedSemaphore>)
        at src/terminal/terminal.c:511
    #9  0x0003d044 in pvTaskIncrementMutexHeldCount () at build/3pp/freertos/FreeRTOS/Source/tasks.c:4257
    Backtrace stopped: previous frame identical to this frame (corrupt stack?)


    ---------------------------------------------------------------

    CNIC7 setup.

    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --load-key client-key /Data/Temp/ProdPack/ProdPack1000/00-1B-C5-0C-60-06-74-B0/node.key.der
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --load-key client-cert /Data/Temp/ProdPack/ProdPack1000/00-1B-C5-0C-60-06-74-B0/node.crt.der
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --load-key root-cert /Data/Temp/ProdPack/ProdPack1000/00-1B-C5-0C-60-06-74-B0/ca.crt.der

    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config prod.lowpan.eui64 00-1B-C5-0C-60-06-74-B0
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config prod.prodtime 1

    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config server.ip fd00::1
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config modem.apn wlapn4.com
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config modem.username cyan
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config modem.password cyan
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config modem.authmethod PAP
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config modem.tun6.ip lnt-dev2.dev.cyanconnode.com
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config modem.tun6.port 8050
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config modem.tun6.secret lnt-dev2
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config server.mq.push_now 1
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config server.mq.push_delay 30

    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config device.dlms.lls_password lnt1
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config device.dlms.authentication_key 31323334353637383930313233343536
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config device.dlms.encryption_key 31323334353637383930313233343536
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config device.dlms.hls_key 30303030303030303031303335383230
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config capabilities.meter.device_testing 0


    socat -x /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0,raw,echo=0,crnl /dev/serial/by-id/usb-FTDI_TTL232R_FTATI1IX-if00-port0,raw,echo=0,crnl

    -----------------------------------------

    CyanConnode
    Technical Lead and SME

    Development of both the UltiMesh and OmniMesh smart metering and IoT platforms.
    These platforms consist of embedded nodes using Cortex-M processors and sub-GHz/802.15.4 radios, gateways (both bare-metal and using embedded Linux) on ARM
    platfrms and using GPRS/LTE (Cat-1 and CAT-M1) modems and servers written in Java and Python.
    The mesh network involves a proprietary, standards-based IPv6 network stack implementing (among others) RPL, 6LoWPAN and IPv6 protocols as well as CoAP & DTLS
    for secure communications.
    Developed the new family of products using a modular architecture and performed bring-up of CNIC7, IGW7 and DCUb4 products.
    Furthered the development of IPAx platform and OmniMesh smart metering application and rearchitected the IPv6 stack to support the new products.
    Identified and designed the required system-wide changes needed for cost-optimisation of the nodes.
    Developed the Linux platform for the DCUb4 gateway using Buildroot on ARMv7 (BeagleBone variant).
    Provided day-to-day technical support and triage of issues for the operations/solutions team regarding the operation of the mesh network, IPv6 gateways/networks,
    embedded nodes and smart-metering.
    Development of the SMIP/SMETS2 mesh product for not-spots and support for CPA certification of that product regarding its security and robustness characteristics
    including MISRA certification and maintenance of codebase quality and fuzz-testing using American Fuzzy Lop (AFL).
    Provided technical leadership for Indian and UK development teams, creation of technical documentation such as architectural diagrams and high/low level design
    documents.
    Also sucessfully demonstrated operation of newly developed products to management and the wider team(s).
    Worked closely with the hardware team while supporting the development of the new platforms and triage of issues in existing platforms.


    ----------------------------------------

    LoRaMesh:
    - No notion of upstream/downstream. Only forward/no-forward.
    - Root is determined by it being a source-of-ACKs. Only root can generate ACK packets.
    - Forwarding is subject to a random delay. If we hear a duplicate packet before we transmit
    then we delay the transmit until ACK is not heard.
    - If you forwarded a packet because you heard no-one else do so, you're on the route for that
    address if you hear an ACK for that packet. If so, forward on the corresponding ACK.
    - Worst case routing will be determined by flooding. This is guaranteed to find a route, tho
    it is expensive regarding power.
    - ACKs should contain hop-count so initial flood will give all nodes an idea of their position
    in the mesh.
    - When all nodes know their hop-count, packets marked as up-stream/down-stream will be able
    to be forwarded more efficiently.
    - Forwarding delay should be based on hop-count, which means nodes closer to the root will naturally
    forward packets before more distant nodes, creating a more locally-optimal path (not whole-path-optimal tho).
    - ACK packets could also include power metrics for more whole-path-optimal routing.
    - Periodically, the root can broadcast 'illuminator' packets to inform all reachable nodes of
    their depth in the tree.
    - Packets do not need a 'current depth' field as the packets are only forwarded with a delay based
    on the nodes depth and de-duplication takes care of this.
    - forwarding-delay is based on a nodes hop-count and packet direction up/down.
    - Measure the density of your local environment my counting duplicate packets. Hi-density correlates with more duplicates.
    - In high-density, reduce your transmit power-level. This will interfere less with others and reduce unwanted propagation.
    - Nodes with fewer neighbours should transmit first.

    -----------------------------------

    CNIC7 remaining work:
    - into master.
    - I2C.
    - PWM on status pins (or remove?)
    - Flow control.
    - modem reset
    - status lines ('extra' ui).
    - remove dummy lowpan.
    - GPS?
    - transmit-detect?
    - first stage bootloader.

    IGW7:
    - I2C driver
    - I2CIP module

    Quick-path: have a modem proxy over I2C.
    Proper-path: IP stack improvments to allow multiple-interfaces.

    ---------------------------------------------

    BVipa3-lnt-dlms-insecure:v19.7.41+b16227+g67ee94e Hde DV0@3a15eL3a27bS2000a368
    BVipa3-lnt-dlms-insecure:v19.7.41+b16227+g67ee94e Hde DV0@3a15eL3a27bS2000a368

    -----------------------------

    - 2.24V, panic:
    2020-01-09 13:52:00.609 #1   0011223344556677 <log> 0:00:04.463 [ info] [     monitor] { terminal}: Profile radio is disabled (interval 0 s)
    2020-01-09 13:52:00.609 #1   0011223344556677 <log> 0:00:04.472 [ info] [     monitor] { terminal}: Profile network is disabled (interval 0 s)
    2020-01-09 13:52:00.609 #1   0011223344556677 <log> 0:00:04.481 [ info] [     monitor] { terminal}: Profile ip is disabled (interval 0 s)
    2020-01-09 13:52:00.609 #1   0011223344556677 <log> 0:00:04.489 [debug] [      module] { terminal}: Starting filedl
    2020-01-09 13:52:00.609 #1   0011223344556677 <log> 0:00:04.497 [ info] [    terminal] { terminal}: Reboot reason: R~unknown
    2020-01-09 13:52:00.651 #1   0011223344556677 <log> 0:00:04.505 [debug] [ cndfs/utils] { terminal}: Found metadata #3 for /mq/000.mq: id=5 st=677 sz=659 refs=0
    2020-01-09 13:52:00.651 #1   0011223344556677 <log> 0:00:04.515 [debug] [ cndfs/utils] { terminal}: Found metadata #3 for /mq/000.mq: id=5 st=677 sz=659 refs=0
    2020-01-09 13:52:00.651 #1   0011223344556677 <log> 0:00:04.526 [debug] [      fs/api] { terminal}: fsOpen (/mq/000.mq, mode=3, fd=0)
    2020-01-09 13:52:00.651 #1   0011223344556677 <log> 0:00:04.534 [debug] [       cndfs] { terminal}: Committing 24 B at 659 (filesize 659)
    2020-01-09 13:52:00.697 #1   0011223344556677 <log> 0:00:04.543 [debug] [  fs/service] { terminal}: flashopProgram 677:0x0 40 B
    2020-01-09 13:52:00.697 #1   0011223344556677 <log> 0:00:04.551 [ERROR] [       flash] { terminal}: SR1 = 02 SR2 = 02 SR3 = 002
    2020-01-09 13:52:00.697 #1   0011223344556677 <log> 0:00:04.560 [debug] [  fs/service] { terminal}: flashopProgram 677:0x2c5 24 B
    2020-01-09 13:52:00.697 #1   0011223344556677 <log> 0:00:04.568 [ERROR] [       flash] { terminal}: SR1 = 02 SR2 = 02 SR3 = 002
    2020-01-09 13:52:00.697 #1   0011223344556677 <log> 0:00:04.577 [debug] [ cndfs/utils] { terminal}: Found metadata #3 for /mq/000.mq: id=5 st=677 sz=683 refs=0
    2020-01-09 13:52:00.740 #1   0011223344556677 <log> 0:00:04.587 [debug] [   mqstorage] { terminal}: Wrote m# 31 of size 22 to file /mq/000.mq size 683
    2020-01-09 13:52:00.740 #1   0011223344556677 <log> 0:00:04.597 [ WARN] [   alertbits] { schedule}: Alerts: keys
    2020-01-09 13:52:00.740 #1   0011223344556677 <log> 0:00:04.604 [debug] [ cndfs/utils] { schedule}: Found metadata #3 for /mq/000.mq: id=5 st=677 sz=683 refs=0
    2020-01-09 13:52:00.740 #1   0011223344556677 <log> 0:00:04.615 [debug] [ cndfs/utils] { schedule}: Found metadata #3 for /mq/000.mq: id=5 st=677 sz=683 refs=0
    2020-01-09 13:52:00.740 #1   0011223344556677 <log> 0:00:04.625 [debug] [      fs/api] { schedule}: fsOpen (/mq/000.mq, mode=3, fd=0)
    2020-01-09 13:52:00.789 #1   0011223344556677 <log> 0:00:04.634 [debug] [       cndfs] { schedule}: Committing 19 B at 683 (filesize 683)
    2020-01-09 13:52:00.789 #1   0011223344556677 <log> 0:00:04.648 [debug] [  fs/service] { schedule}: flashopProgram 678:0x28 128 B
    2020-01-09 13:52:00.789 #1   0011223344556677 <log> 0:00:04.656 [ERROR] [       flash] { schedule}: SR1 = 02 SR2 = 02 SR3 = 002
    2020-01-09 13:52:00.789 #1   0011223344556677 <log> 0:00:04.664 [panic] ======== Panic ========
    2020-01-09 13:52:00.789 #1   0011223344556677 <log> 0:00:04.664 [panic] platform_efr32:175, in task schedule: Stack overflow in schedule

    - 2.05V, no output from node. Leading up to that, winding the V down causes the processor to reset
    earlier as initialising and transmitting packets causes voltage-droop. Flash always functional.

    - Winding back up to 2.19V allows it to continue far enough to attempt writing to FLASH. Seems Ok.
    - 2.38V, transmission of packets is now possible.


    -----------------------------------

    - SimCOM 7600EI
    -  Adesto FLASH
    - Unknown processor 100GJG



    -----------------------------

    - Hold up time for last-gasp?
    - Product identification code (hardware)?



    ----------------------------------------------------

    debug log

    There is a *real* need for an improved mechanism for debugging in the field. The nature of out product means we
    will continue to only discover the (many) corner-cases of meter-interaction while deployed due to he number involved,
    (i.e. we will never have a significant population of meters to test in-house).

    We are currently limited to performing debug via the "snapshot" log, i.e. a 2KB snapshot of text that can be retrieved
    in a one-shot manner. Repeating this to attempt to get a continuous flow of debug text takes ~1 minute.

    In the "BetterInFieldDebugging" branch (https://gitlab.cyco.io/Omnimesh/terminal/commits/BetterInFieldDebugging) there
    is proof-of-concept code of a debug log that will continuously stream compressed debug-log packets at a rate that the
    network will support.

    This has the potential to flood the network, so should be used with care and should have a safe-guard feature to
    automatically disable itself after (say) 30 minutes.

    The implementation involves integrating a compression mechanism (lz4) into the Agent code and performing compression of
    a single packet of debug-text. the data-rate can also be reduced through use of filtering of debug "area" and "level" as
    is usual.

    Use of this mechanism should only be done with the understanding of the data rates involved and their potential effect
    on the mesh and cellular networks. The mesh network can transfer ~1KByte/sec and although cellular is not in general so
    limited, it may still be a bottleneck in certain cases.

    Once this feature is enabled, it requires the use of a server-side decompressor (tools/udpLog/RunMe.sh) to receive the
    UDP packets, decompress them and present the debug-text on stdout as a debug-log.

    The current code requires tidying up, commenting, safe-guards adding and in general making it more usable in practice.


    --------------------------------

    HLD/LLD

    - "Data Model", i.e how the information required to represent the node is organised, events from different source (filter?
    combine?), configuration (duplicate mesh data). Metrics:Same information for all interfaces? or 'hardcoded' into config as now?
    - enic/PHY options.
    - ipv4/cnic/tunnel. Tunnel is a networking feature, so should be on the CNIC, not a security endpoint. CNIC runs uplink_tun6
    to present an IPv6 i/f over I2CIP. IPv6 uplink would be no different. The tunnel would be invisible in that case, but
    the routes that are advertised in that case is still over the IPv6 uplink. In effect, the tun6 is an implementation detail
    of the cellular uplink. Note that the password for tun7 is explicitly *not* a security-measure, its a 'challenge' that the remote
    side has to perform an specified operation (hashing) for the session to be setup.
    (https://confluence.cyco.io/display/ENG/Omnimesh+-+tun6d+-+Protocol+Overview)
    - address scheme (prefix-allocation, etc).
    - address discovery, SLAAC, etc.
    - FWUP details. phase 1 phase 2
    - encryption (retry mechanism on I2C), retry during key-exchange? phase-1, phase-2?


    ---------------------------------------

    CoAP endpoints:

    "device/alarms/conf", confGetCallback, CoapMethodGet, .idempotent = true
    "device/alarms/conf", confPostCallback, CoapMethodPost
    "device/alarms/conf/hash", confHashGetCallback, CoapMethodGet, .idempotent = true

    "sm/profile/conf", confGetCallback, CoapMethodGet, .idempotent = true
    "sm/profile/conf/hash", confHashGetCallback, CoapMethodGet, .idempotent = true
    "sm/profile/conf", confPostCallback, CoapMethodPost

    "sm/series", retrieveProfileCallback, .method = CoapMethodGet, .idempotent = true

    "meter/digitalio", getCallback, .idempotent = true, .method=CoapMethodGet
    "meter/digitalio", putCallback, .idempotent = true, .method=CoapMethodPut

    "devices/list", resourceCallback, .method = CoapMethodGet, .idempotent = true
    "sm", smResourceCallback, .numberOfInFlightRequestsAllowed = 1

    "smip/dmm-string", dmmGetStringCallback, CoapMethodGet, .idempotent = true
    "smip/selftest", selftestGetStatusCallback, CoapMethodGet, .idempotent = true

    "fs", fsResourceCallback, CoapMethodPost, .idempotent = true

    "crashtest", crashtestCallback, CoapMethodPost, .idempotent = true

    "time", getTime, CoapMethodGet, .idempotent = true
    "time", setTime, CoapMethodPost
    "time/meshtime/send", sendMeshTime, CoapMethodPost

    "reftime", timeServiceCoapRequestRefTime, .method = CoapMethodPost

    "memstats/info", getMemStatsInfo, CoapMethodGet, .idempotent = true
    "memstats/log", logMemStats, CoapMethodPost
    "memstats", getMemStats, CoapMethodGet, .idempotent = true

    "file/download", fileDownloadCoapRequest, CoapMethodPut
    "file/abort", fileAbortCoapRequest, CoapMethodPut
    BCASTCLIENT_URI_BASE, bcastclientBlockRequest, CoapMethodPut, .multicastCapable = true, .allowNonDtls = true

    "log", logCoapGetCB, CoapMethodGet, .idempotent = true
    "log", logCoapPostCB, CoapMethodPost, .idempotent = true

    BCASTSERVER_URI_BASE, bcastBlockCoapRequest, CoapMethodGet, .idempotent = true, .allowNonDtls = true
    "file/broadcast", bcastStartCoapRequest, CoapMethodPut

    "firmware/update", firmwareUpdateCoapRequest, CoapMethodPut

    "login/logout", loginLogoutCallback, CoapMethodPost
    "login/clear-dtls", loginClearDtlsCallback, CoapMethodPost

    "monitoring/m", moduleCoapResourceCb, CoapMethodGet, .idempotent = true
    "datarate/discard", discardRequest, CoapMethodPost, .idempotent = true
    "datarate/start", startRequest, CoapMethodPut
    "net/info", infoCallback, CoapMethodGet, .idempotent = true
    "net/stats", statsCallback, CoapMethodGet, .idempotent = true
    "net/topology", topoCallback, CoapMethodGet, .idempotent = true
    "net/routes", routesCallback, CoapMethodGet, .idempotent = true

    "temperature", temperatureGetCallback, CoapMethodGet

    "ping", pingReceiveRequestCallback, CoapMethodPost, .idempotent = true

    "events/m", eventsModuleCoapResourceCb, CoapMethodGet, .idempotent = true

    "memory", memoryCallback, CoapMethodPost, .idempotent = true

    "fuzz/mac", fuzzGetCallback, CoapMethodGet, .idempotent = true
    "fuzz/mac", fuzzSetCallback, CoapMethodPost, .idempotent = true

    "prod/led", ledRequestCallback, CoapMethodPost

    "prod/erase-flash", eraseFlashRequestCallback, CoapMethodPost
    "prod/finalize/pass", finalizePassRequestCallback, CoapMethodPost
    "prod/finalize/fail", finalizeFailRequestCallback, CoapMethodPost
    "prod/netmeterpin", getNetDevStatCallback, CoapMethodGet
    "prod/netmeterpin", setNetDevStatCallback, CoapMethodPut
    "prod/netmeterio", setNetDevIOStatCallback, CoapMethodPut

    "prod/test-ethernet", testEthernetCallback, CoapMethodPost
    "prod/load-ethernet", loadEthernetCallback, CoapMethodPost
    "prod/voltage", getVoltageCallback, CoapMethodGet
    "prod/gpio", getGpioCallback, CoapMethodGet
    "prod/test-leds", testLedsCallback, CoapMethodPost
    "prod/test-modem", testModemCallback, CoapMethodPost

    "prod/test-eeprom", testEepromRequestCallback, CoapMethodPost

    "prod/radio-ping", radioPingRequestCallback, CoapMethodPost

    "prod/keyfile", keyfileRequestCallback, CoapMethodPost

    "restart", restartReceiveRequestCallback, CoapMethodPost

    "mq-entries", mqCoapPull, CoapMethodGet, .idempotent = true

    "conf", confCallback, CoapMethodGet, .idempotent = true
    "conf/m/all", modulesAllCallback, CoapMethodGet, .idempotent = true
    "conf/m", moduleCallback, CoapMethodGet, .idempotent = true
    "conf", confPostCallback, CoapMethodPost

    "ping", resourceCallback, CoapMethodGet
    "ping", resourceCallback, CoapMethodPut
    "ping/advanced", resourceCallback

    "conman/mode", getModeCallback, CoapMethodGet, .idempotent = true
    "conman/mode", setModeCallback, CoapMethodPost, .idempotent = true
    "conman/mesh-enabled", setMeshEnabledCallback, CoapMethodPost, .idempotent = true

    "rpl/reset-mesh", resetMeshCallback, CoapMethodPost

    "rll-key", rllKeyPut, CoapMethodPut, .idempotent = true
    "rll-key", rllKeyGet, CoapMethodGet, .idempotent = true

    "gwmsg", coapCallback, CoapMethodPost, .allowNonDtls = true

    "csr", csrCB, CoapMethodPost

    "perftest/tp", coapStartThroughputTest, CoapMethodPost, .allowNonDtls = true

    "perftest/tp/result", coapThroughputTestResult, CoapMethodPost, .allowNonDtls = true

    "perftest/gwmsg", coapStartGwmsgTest, CoapMethodPut, .allowNonDtls = true

    "perftest/enter", coapEnterTestMode, CoapMethodPut
    "perftest/leave", coapLeaveTestMode, CoapMethodPut, .allowNonDtls = true
    "perftest/start", coapStartTest, CoapMethodPut
    "perftest/report", coapGetReport, CoapMethodGet
    "perftest/nodeinfo", coapGetInfo, CoapMethodGet, .idempotent = true, .allowNonDtls = true

    "ipsec", coapCB, CoapMethodPost

    "radio/test/send", getTestSendCallback, CoapMethodGet, .idempotent = true
    "radio/test/send", postTestSendCallback, CoapMethodPost
    "radio/test/receive", getTestReceiveCallback, CoapMethodGet, .idempotent = true
    "radio/test/receive", postTestReceiveCallback, CoapMethodPost
    "radio/test/mode", setTestModeCallback, CoapMethodPost, .idempotent = true
    "radio/rssi", getRssiCallback, CoapMethodGet, .idempotent = true
    "radio/frequency", setFrequencyCallback, CoapMethodPost, .idempotent = true
    "radio/channel", setChannelCallback, CoapMethodPost, .idempotent = true
    "radio/cca-limit", setCcaLimitCallback, CoapMethodPost, .idempotent = true

    "keystore/trigger-change", keystoreTriggerChangeCallback, CoapMethodPost, .idempotent = true



    name="mac"
        name="keyChanged"                   # Master-NIC
        name="unknownKey"                   # Master-NIC, slave-NIC

    name="dtls"
        name="keyChanged"                   # Master-NIC
        name="keyChangeFailed"              # Master-NIC

    name="network"
        name="perftestEnter"                #
        name="perftestLeave"                #
        name="perftestFinished"             #
        name="dhcpLease"                    #

    name="login"
        name="loggedIn" unused="true"       # Master-NIC

    name="filedistribution"
        name="broadcastStarted"             # Master-NIC, slave-NIC for broadcast on both internal and mesh
        name="broadcastFinished"            # Master-NIC, slave-NIC for broadcast on both internal and mesh
        name="downloadStarted"              # Master-NIC, slave-NIC for broadcast on both internal and mesh
        name="downloadFinished"             # Master-NIC, slave-NIC for broadcast on both internal and mesh

    name="firmwareupdate"
        name="restart"                      # All modules.

    name="time"
        name="mesh.failure"                 #

    name="activity"
        name="mgmt.nodeActive"              #

    name="node"
        name="boot"                         #
        name="powerLost"                    #
        name="alert"                        #
        name="powerStatus"                  #
        name="lowPowerMode"                 #

    name="device"
        name="powerChange" unused="true"    #
        name="error"                        #
        name="upgradeResult"                #

    ---------------------------------------------------------

    elf to bin

    arm-none-eabi-objcopy -O binary build/efr32-fsbl/bin/firststage-bootloader.elf firststage.bin

    make elf from bin:
    arm-none-eabi-objcopy -I binary -O elf32-littlearm –change-section-address=.data=0x8000000 -B arm -S app.bin app.elf




    -----------------------------------------

    ipa3:
    - at45.c
    - AT45*

    Must change to CONFIG_FLASH_SPI25
    - spi25.c
    - AT25*


    SRP0 (Status Reg 0)
    SRP1 (Status Reg 1)


    RAIL_PaCtuneSet();


    --------------------------------------------------------

    UltraSOC            - Nick  Moore
    Sentec              - Chetan
    Adder Technology    - Joe Draper
    Viavi               -
    Cambridge Broadband Networks    - Chetan
    Eltek                           - Chetan
    ARM
    MBDA                -
    AudioTelligence     - Max Hutchings
    AMG systems         - Max Hutchings, Biggleswade
    CCL                 -



    ----------------------------------------------------------

    MISRA

    https://www.embedded.com/tutorial-achieve-reliable-embedded-code-with-misra-c/
    https://www.perforce.com/resources/qac/misra-c-cpp


    --------------------------------------------------------

    firststage-bootloader

    ./tools/gdb/flash-ipa3-bin.sh build/efr32-fsbl/bin/firststage-bootloader.bin 0x0
    ./tools/gdb/flash-ipa3-bin.sh build/ipa3-bl/bin/bootloader.hbin 0x1000
    ./tools/gdb/flash-ipa3-bin.sh build/ipa3-bl/bin/bootloader.hbin 0x10000
    ./tools/gdb/flash-ipa3-bin.sh build/ipa3-lnt-dlms-insecure/bin/agent.hbin 0x70000

    dd if=/dev/zero of=zeros.bin bs=1 count=1024
    ./tools/gdb/flash-ipa3-bin.sh zeros.bin 0x10000


    Intended method of use:

    - fsbl checks 3 locations, A, B and App.
    - When booting, only *either* A or B should be valid.
    - If *both* A and B are valid, it is presumed there has been an interrupted
    bootloader write as the last part of the bootloader-write is to remove the
    previous bootloader.
    - If neither A nor B is valid, the application is run directly to recover
    the situation. no firmware-upgrade is possible in this case since the application
    is being executed from the first-stage-bootloader.
    - When upgrading the bootloader, determine the invalid-slot (A or B). This is where
    the new image will be written (by the application). Only when the application is
    written should the header be made valid. When the header has been made valid,
    perform a check of the entire bootloader image to ensure its correct. When the
    check passes, make the current bootloader invalid by corrupting its header.
    - In the period of time between writing the new bootloader and removing the old
    bootloader, there will be a period of time where *both* are valid. While in this
    two-valid-bootloaders mode, the sequence numbers will come into effect. With no
    change the current image-headers contain identical sequenceNumbers and in this case
    the application image is run directly. This will allow the application to complete
    the new bootloader programming sequence (by checking and erasing the old one).
    - If the sequence numbers are not identical and both A & B are valid, then the
    sequence numbers must be consecutive. In this case, the bootloader with the highest
    sequence number will be executed.

    -----------------------------------------------------

    Genus:

    7ea077
    610330ad6ce6e700
    6169a10906076085
    7405080103
    a203020100
    a305a1030201
    0e
    88020780890760857405080202aa12
    8010
    47656e75734240415977411301240120
    a40a0408474f4500000000
    05
    be230421281f3000000018574c52e7
    b220dc39c6c89eebdf36a6b515094be7
    fd44e47757427ba27e


    <HDLC len="118" >
    <TargetAddress Value="48" />
    <SourceAddress Value="1" />
    <!--AARE frame.-->
    <FrameType Value="30" />
    <PDU>
    <AssociationResponse>
      <ApplicationContextName Value="LN_WITH_CIPHERING" />
      <AssociationResult Value="0" />
      <ResultSourceDiagnostic>
        <!--AUTHENTICATION_REQUIRED-->
        <ACSEServiceUser Value="14" />
      </ResultSourceDiagnostic>
      <ResponderACSERequirement Value="1" />
      <MechanismName Value="High" />
      <RespondingAuthentication Value="47656E75734240415977411301240120" />
      <RespondingAPTitle Value="474F450000000005" />
      <glo_InitiateResponse Value="3000000018574C52E7B220DC39C6C89EEBDF36A6B515094BE7FD44E4775742" />
    </AssociationResponse>
    </PDU>
    </HDLC>


    LnT:

    7ea077
    610330ad6ce6e700
    6169a10906076085
    7405080103
    a203020100
    a305a1030201
    0e
    a40a04084c4e543031313830
    88020780890760857405080202aa12
    8010
    6162636465666768696a6b6c6d6e6f70
    be230421281f300000134d3f81fa74
    d0ff6e9e594015af4718149c33049b84
    3a51996731f53b2c7e

    <HDLC len="118" >
    <TargetAddress Value="48" />
    <SourceAddress Value="1" />
    <!--AARE frame.-->
    <FrameType Value="30" />
    <PDU>
    <AssociationResponse>
      <ApplicationContextName Value="LN_WITH_CIPHERING" />
      <AssociationResult Value="0" />
      <ResultSourceDiagnostic>
        <!--AUTHENTICATION_REQUIRED-->
        <ACSEServiceUser Value="14" />
      </ResultSourceDiagnostic>
      <RespondingAPTitle Value="4C4E543031313830" />
      <ResponderACSERequirement Value="1" />
      <MechanismName Value="High" />
      <RespondingAuthentication Value="6162636465666768696A6B6C6D6E6F70" />
      <glo_InitiateResponse Value="300000134D3F81FA74D0FF6E9E594015AF4718149C33049B843A51996731F5" />
    </AssociationResponse>
    </PDU>
    </HDLC>

    -----------------------------------------------

    sudo apt install docker-ce
    sudo groupadd docker
    sudo usermod -aG docker $USER
    newgrp - docker

    ----------------------------------------

    src/base
    github.com/AlDanial/cloc v 1.74  T=0.06 s (236.0 files/s, 37008.6 lines/s)
    -------------------------------------------------------------------------------
    Language                     files          blank        comment           code
    -------------------------------------------------------------------------------
    C                                5            254            102           1340
    C/C++ Header                     5            110            193            333
    make                             5              3              3             14
    -------------------------------------------------------------------------------
    SUM:                            15            367            298           1687
    -------------------------------------------------------------------------------

    ubuntu@stevesworklaptop:/Data/Projects/terminalSMIP2/src$ cloc communication/
         287 text files.
         287 unique files.
           3 files ignored.

    github.com/AlDanial/cloc v 1.74  T=1.23 s (230.6 files/s, 46952.4 lines/s)
    -------------------------------------------------------------------------------
    Language                     files          blank        comment           code
    -------------------------------------------------------------------------------
    C                              130           8109           6173          34159
    C/C++ Header                   105           1434           4612           2972
    make                            48             55             13            271
    Protocol Buffers                 1              6              0             26
    -------------------------------------------------------------------------------
    SUM:                           284           9604          10798          37428
    -------------------------------------------------------------------------------

    src/config
    -------------------------------------------------------------------------------
    Language                     files          blank        comment           code
    -------------------------------------------------------------------------------
    XML                              3             52             39            794
    C/C++ Header                     6             59            115            160
    make                             1              4              3             34
    -------------------------------------------------------------------------------
    SUM:                            10            115            157            988
    -------------------------------------------------------------------------------



    src/connode
    thub.com/AlDanial/cloc v 1.74  T=0.07 s (239.9 files/s, 23326.1 lines/s)
    -------------------------------------------------------------------------------
    Language                     files          blank        comment           code
    -------------------------------------------------------------------------------
    C/C++ Header                    14            170            968            315
    C                                1             42             16            124
    make                             2              2              1             15
    -------------------------------------------------------------------------------
    SUM:                            17            214            985            454
    -------------------------------------------------------------------------------


    src/hw
    -------------------------------------------------------------------------------
    Language                     files          blank        comment           code
    -------------------------------------------------------------------------------
    C                               13            304            573           1253
    C/C++ Header                    10             60             73            124
    make                             6             24             21            116
    Python                           1             23             17             87
    -------------------------------------------------------------------------------
    SUM:                            30            411            684           1580
    -------------------------------------------------------------------------------




    ----------------------------------------


    ioremap cache/nocache readb/writeb/readw/writew/readl/writel
    writethrough/writecached.
    no multiple mappings.

    typically use physical mapping cos bus-masters need bus-address
    and cpu needs virt address.
    remap_pfn_range uses physical address when setting up memory
    mappings but only knows about addresses in the CPU.


    Documentation/DMA-API-HOWTO.txt
    https://www.infradead.org/~mchehab/kernel_docs/unsorted/bus-virt-phys-mapping.html

    CPU untranslated. This is the “physical” address. Physical address 0 is what the CPU sees when it drives zeroes on the memory bus.
    CPU translated address. This is the “virtual” address, and is completely internal to the CPU itself with the CPU doing the appropriate translations into “CPU untranslated”.
    bus address. This is the address of memory as seen by OTHER devices, not the CPU. Now, in theory there could be many different bus addresses, with each device seeing memory in some device-specific way, but happily most hardware designers aren’t actually actively trying to make things any more complex than necessary, so you can assume that all external hardware sees the memory the same way.

    inb/outb

    user/kernel mapping.


    mempry barrier
    reodering by compiler and hardware.
    rmb(), wmb(), mb()
    barrier - tell compiler to flush all temps to memory.


    spinlock

    caching
    alignment


    mailbox interrupts

    upper/lower interrupt handlers.


    memcpy_fromio / memcpy_toio / memset_io

    kmalloc

    PCI BAR
    DMA pci mappings
    each PCI peripheral is identified by a bus number, a device number, and a function number
    every PCI slot has four interrupt pins


    PTE TLB
    https://www.oreilly.com/library/view/linux-device-drivers/0596000081/ch13.html
    addx split into pgd/pmd/pte/offset.
    pgd->pmd->pte
    pte contains physical address of page.
    each process and kernel as a set of page tables.

    VMA virtual memory area
    segments like BSS, stack, text
    larger areas that have same permissions.

    drivers that can implement mmap for user code need to manage ptes.


    https://www.oreilly.com/library/view/linux-device-drivers/0596000081/ch08s04.html
    https://www.oreilly.com/library/view/linux-device-drivers/0596000081/ch15.html





    User virtual addresses
    These are the regular addresses seen by user-space programs. User addresses are either 32 or 64 bits in length, depending on the underlying hardware architecture, and each process has its own virtual address space.





    Physical addresses
    The addresses used between the processor and the system’s memory. Physical addresses are 32- or 64-bit quantities; even 32-bit systems can use 64-bit physical addresses in some situations.

    Bus addresses
    The addresses used between peripheral buses and memory. Often they are the same as the physical addresses used by the processor, but that is not necessarily the case. Bus addresses are highly architecture dependent, of course.

    Kernel logical addresses
    These make up the normal address space of the kernel. These addresses map most or all of main memory, and are often treated as if they were physical addresses. On most architectures, logical addresses and their associated physical addresses differ only by a constant offset. Logical addresses use the hardware’s native pointer size, and thus may be unable to address all of physical memory on heavily equipped 32-bit systems. Logical addresses are usually stored in variables of type unsigned long or void *. Memory returned from kmalloc has a logical address.

    Kernel virtual addresses
    These differ from logical addresses in that they do not necessarily have a direct mapping to physical addresses. All logical addresses are kernel virtual addresses; memory allocated by vmalloc also has a virtual address (but no direct physical mapping). The function kmap, described later in this chapter, also returns virtual addresses. Virtual addresses are usually stored in pointer variables.



    kmalloc vs vmalloc
    logical address vs virtual address which may not be mapped to physical.


    Low memory
    Memory for which logical addresses exist in kernel space. On almost every system you will likely encounter, all memory is low memory.

    High memory
    Memory for which logical addresses do not exist, because the system contains more physical memory than can be addressed with 32 bits.






    Kernel must be reentrant
    although no preemption occurs, in SMP systems, multiple processors are in kernel simultaneously.

    kernel-modules have a usage count, increment on open, decrement on close.


    check_region, chem_mem_region to see if you can allocate ports/address ranges.



    Module parameters, can be passed in via insmod or .conf
    MODULE_PARM

    major, minor numbers, mknod
    major number identifies driver
    minor  number is of use to driver.
    register_chrdev()
    list in Documentation/devices.txt
    or if major == 0, auto allocate.

    file_operations struct, read/write/ioctl/mmap/etc


    race conditions, smp is big issue.
    sema_init()
    down() == take, blocks process
    down_interruptible() blocks process but allows signals to process.
    up == give. releases process.

    get_user
    put_user for small items
    copy_to_user()
    copy_from_user() for blocks.
    pages might not be in memory (i.e. swapped out) in this case, page-fault handler will block process
    so being reentrant is important.
    readv and writev scatter/gather.



    debugging:
    printk
    /var/log/messages
    echo 8 > /proc/sys/kernel/printk
    or setlevel

    or JTAG/SWD

    or read_proc for /proc info.

    or ioctl for debugging.

    or strace for system calls & parameters.

    Systemfaults:
    OOPS messages.
    klogd and ksymoops to map hex values to symbols

    gdb /usr/src/linux/vmlinux /proc/kcore
    cant breakpoint, just view data with symbols.

    kdb
    kgdb
    LTT trace toolkit.



    Blocking:
    wait_queue
    allocate and block with:
    DECLARE_WAIT_QUEUE_HEAD(wq);
    sleep_on()
    interruptible_sleep_on() has race conditions.
    sleep_on_timeout() jiffies
    wait_event() with condition evaluated in while loop, avoids race conditions
    wait_event_interruptible

    wake_up() from interrupt handler or other task?
    wake_up has to be called after changing any variable that could change the result of the wait condition.

    the blocking is performed by seting task status to BLOCKED and calling schedule.
    the wake-up is performed by setting task status to RUNNABLE and calling schedule.

    wake-up acts on allprocesses on wait-queue.
    This can lead to the thundering-herd problem where all tasks wake up and cause context switches but only
    one can get work done.... inefficient.



    reentrancy:
    - critical with SMP
    - no globals.
    - beware anything that causes blocking, schedule(), page-faults accessing user data, etc.
    - Scull_Pipe *dev = filp->private_data;
    - multiple open of files.
    - spinlock. never sleeps, for critical sections. uniprocessor compiles to nothing. only for SMP.
    - must use for minimum time possible. and never sleep while holding the lock!
    - spin_lock() spin_unlock().


    Errors:
    - EBUSY
    - EPERM
    - Blocking instead of EBUSY? not pleasant for user.


    Task Queues - lists of functions to perform (used in bottom-half handlers).
    int queue_task(struct tq_struct *task, task_queue *list);
    run_task_queue()
    unordered.
    run by kernel, not process when it can, not on-demand.
    no access to user space because no process exists when run.
    no sleeping
    - predefined queues, scheduler(keventd),tq_timer(interrupt), immediate.
    - timerq executes in interrupt handler removing scheduling latency.
    - immediateq used for bottom-halfs, must be told to run by "marking" the bottom-half
    - its purpose is to execute a task as soon as possible, but at a safe time. So its use is for interrupt-handlers.


    Tasklets - use for polling a device where don't want overhead of context switches each time.
    Now preferred over task-queues for bottom-half interrupt handlers.
    - run on first CPU that schedules them.
    - can run in parallel on SMP.
    DECLARE_TASKLET(name, function, data);
    tasklet_schedule(&jiq_tasklet);
    - since theyrunin an interrupt-context, spinlocks must be used to protect multiple calls on SMP.


    Kernel timers.


    vmalloc vs kmalloc
    vmalloc allocates CPU addressable pages as opposed to kmalloc 1:1 physical pages.
    kmalloc with KERNEL priority can block due to swapping, etc.
    kmalloc with ATOMIC priority won't block so is suitable for being called from interrupt-handler.

    SLAB allocator.
    - for arrays of small objects.
    - each object is cache aligned and can be in DMA region.
    - size is power of two.



    interrupts:
    save_flags()
    cli()
    sti()
    restore_flags()

    request_irq() installs handler
    - irq number from PCI config or probing.
    - SMP issues, must spinlock fir the IRQ to prevent multi CPU processing same interrupt.
    - flags can indicate INTERRUPT or SHARED. INTERRUPT causes handler to be called with interrupts disabled, SHARED does not.
    - INTERRUPT flag indicates a fast-handler, SHARED indicates a slow-handler.
    - /proc/interrupts can show interrupt count.
    - bottom-half handler called via tasklet.
    - fast-handler for the few realtime responses that are required such as timer interrupt.
    - slow for  most things.
    - Don't forget to clear interrupt flags from devices.
    - handler doesnt run in process context so no blocking or transfer of data to/from user space. instead trigger a wait-queue.
    - if handler has to wait or take significant time, drop it into a tasklet.
    - use barrier/wmb/rmb instead of volatile to read/write value scorrectly.
    - bottom halfs run with interrupts enabled so are not blocking execution of other interrupts.
    - DECLARE_TASKLET(name, function, data); and tasklet_schedule(&short_tasklet);
    - wake up waiting process by wake_up_interruptible(&short_queue);
    - shared interrupt lines imply level, not edge triggering so multiple devices and pull a line high or low.
    - shared interrupts, must  pass context (dev*) into handler. handler must interrogate device to recognise own interrupts.
    - sahred handlers cant do enable_irq() or disable_irq() without messing up the other drivers.


    race condtions:
    - use circular buffers
    - don't use shared variables.
    - use spinlocks for mutual exclusion.
    - use lock variables.
    - don't use semaphores because that implies blocking a process and you're not in a process-context.

    spin_lock() takes lock
    spin_lock_irqsave() takes lock and disables ints on local CPU.
    spin_lock_bh() takes lock and prvents execution of bottom-halves.
    spin_trylock() tests lock and possibly takes it.
    spin_unlock()
    spin_unlock_irqrestore()
    spin_unlock_bh()
    spin_is_locked()
    - if used by interrupt handlers,process must also use spin_lock_irqsave and spin_unlock_irqsave to disable interrupts.


    reader-writer-spinlocks:
    - write-locks must be taken with irqsave to avoid deadlocks, read-locks dont need that tho.
    - read_lock()
    - read_unlock()
    - write_lock()
    - write_unlock()


    lock variables (aka poor-mans-spinlock) TAS (test and set) operation.
    - atomic access with bit operations.
    - set_bit()
    - clear_bit()
    - test_bit()
    - test_and_set_bit()
    - test_and_change_bit()


    - wait_event(wq, condition) performs the test-while-half-asleep operation to go to sleep safely.
    - its a macro so the condition gets evaluated every time round the loop.

    linked list:
    - put a struct list_head list; at the top of your struct.
    - INIT_LIST_HEAD();
    - list_add()
    - list_add_tail()
    - list_del()
    - list_splice();
    - list_entry() gives containing stucture from list ptr.


    PCIe
    - configuration registers
    - BAR setup.
    - bus master DMA.






    Previous serial port character device

    MontaVista distribution, customised, compilation on Windows with Cygwin.

    RF->ADC->FPGA->SRIO->TI6678->x86->network
    - zero-copy pipelined architecture.
    - DMA from SRIO
     - processing stage 1
      - processing stage 2
       - processing stage 3
        - data reform into circular buffer format for transfer to x86.
        - DMA to x86.
         - logging to FLASH.
         - control from network.

    Caching issues between CC6678 cores and from x86 to CC6678 transfer core.
    cache hierarchies on CC6678. 32KB L1 data, 512KB L2 per core.
    shared 4MB SRAM between cores.
    Use intrinsics for memory barrier equivalents & macros/library fns for cache invalidation & flushing.
    arrange for flushing and invalidation coordinated with DMA between cores.
    done dynamically to allow zero copy from buffer to buffer while still enabling performance boost from cache.
    buffers are sized and aligned appropriately to allow for data to be correctly transferred while allowing

    Also, Ground probing radar system, Front end process & signal processing (4xi860 Mercury RaceWay) transferring data
    to Solaris board (VME rack) then logging and UI.
    - data transfer (DMA from parallel port).
    - Bare metal on DSP.
    - DSP pipeline (oriented around scans).
    - Performing FFTs, windowing etc.

    Radar data processing (Pulse Train Analyser).
    - FPGA fron end filter.
    - Recieved over VME bus (DMA from FPGA)
    - PowerPC, VxWorks.
    - Over VME backplane network to Solaris board for UI & control.


    Bare metal PCIe driver on TI CC6678 side.

    DCUb4 bringup
    - RAM timings
    - Secure boot (uboot)

    Performance counters on CC6678 side for cache misses and hits, etc.
    Performance counters for optimising power usage on Cortex M


    Mali, tile based,
    - Exploits locality by iterating over all primitves in tile rather than over whole frame.


    -----------------------------------------

    JTAG tap: efm32.cpu tap/device found: 0x4ba00477 (mfg: 0x23b (ARM Ltd.), part: 0xba00, ver: 0x4)
    JTAG tap: efm32.cpu tap/device found: 0x4ba00477 (mfg: 0x23b (ARM Ltd.), part: 0xba00, ver: 0x4)

    Error: Could not initialize the debug port
    Info : JTAG tap: efm32.cpu tap/device found: 0x4ba00477 (mfg: 0x23b (ARM Ltd.), part: 0xba00, ver: 0x4)
    Info : JTAG tap: auto0.tap tap/device found: 0xffffffff (mfg: 0x7ff (<invalid>), part: 0xffff, ver: 0xf)
    Error: auto0.tap: IR capture error; saw 0x0003 not 0x0001

    ------------------------------------------------------

    FT232H

    ADBUS2 == pin 18 == TDO == SWDIO == CN2-9
    ADBUS1 == pin 16 == TCK == SWCLK == CN2-10
    GND

    --------------------------------------

    branches:
    BetterInFieldDebugging
    SLIP6_PoC

    -------------------------------------------------

    FreeRTOS current task debugging

    pxCurrentTCB


    ------------------------------------------
    Mesh prefix.

    CONFIG_GATEWAY
    CONFIG_ETHERNET_IPV6_UPLINK to send NS
    CONFIG_ETHERNET_IPV6_DOWNLINK to send RA

    conmanSetUplinkPrefix called from ipv6_uplink.c::prefixCallback()




    ---------------------------------
    NIC7 FLASH
    We have three different FLASH devices that should all be suitable:

    Unit #1 AT25FF321A-SSHN-T

    Unit #2 AT25SF321B-SSHB-T

    Unit #3 AT25XE321D-SSHN-T

    ---------------------------------------

    prod.prodtime                            : 1
    prod.alias.id                            :
    prod.ethernet.macaddr                    :
    prod.lowpan.eui64                        : 00-00-00-00-11-22-33-44
    prod.hw.version                          :
    rpl.enabled                              : 1
    rpl.br.dio.imin                          : 12
    rpl.br.dio.imax                          : 8
    rpl.br.dio.k                             : 6
    rpl.br.routelife                         : 1200
    rpl.br.ocp                               : 1
    rpl.dis.trickle.min.ms                   : 10000
    rpl.dis.trickle.doublings                : 4
    rpl.probe.interval.min.ms                : 1500
    rpl.probe.doublings                      : 6
    rpl.instance_id                          : 0
    rpl.etx.weight_factor                    : 64
    rpl.mrhof.pp_hysteresis                  : 75
    rpl.dag_switch.hysteresis                : 150
    rpl.dag_switch.time                      : 7200
    rpl.routes.max                           : 10000
    rpl.dao.deferred_ack                     : 1
    rpl.netsize_penalty                      : 64
    lowpan.txpower.max                       : 10
    lowpan.hop_limit                         : 32
    lowpan.frame_retries                     : 3
    lowpan.powercontrol.interval             : 480
    lowpan.powercontrol.target               : -90
    lowpan.powercontrol                      : 1
    lowpan.cca.threshold                     : -94
    lowpan.channelplan                       : 0
    lowpan.channel                           : 32
    lowpan.autochannel                       : 0
    server.ip                                : ::
    server.port                              : 5684
    server.mq.push_now                       : 0
    server.mq.push_delay                     : 3600
    server.mq.more_delay                     : 600
    modem.uplink.max_failures_before_reset   : 5
    mac.lbt.min.be                           : 3
    mac.lbt.max.be                           : 8
    mac.lbt.max.backoffs                     : 20
    mac.dutycycle.limit                      : 100
    mac.dutycycle.buffer                     : 1000
    mac.frame_size                           : 253
    dtls.timeout.initial.s                   : 8
    dtls.timeout.max.s                       : 127
    dtls.heartbeat.period.s                  : 3600
    dtls.heartbeat.retry.s                   : 120
    dtls.heartbeat.max.retries               : 4
    monitor.profile.default.enabled          : 1
    monitor.profile.default.sample.interval  : 86400
    monitor.profile.radio.enabled            : 0
    monitor.profile.radio.sample.interval    : 3600
    monitor.profile.network.enabled          : 0
    monitor.profile.network.sample.interval  : 3600
    monitor.profile.ip.enabled               : 0
    monitor.profile.ip.sample.interval       : 3600
    time.tz                                  : CET-1CEST,M3.5.0/2,M10.5.0/3
    time.max.diff                            : 30
    time.mesh.fail.event.interval            : 1800
    time.mesh.period                         : 3600
    time.ref.period                          : 43200
    time.ref.rtt.max                         : 30
    coap.retry.timeout                       : 10
    coap.session.timeout                     : 60
    coap.attempts                            : 3
    activity.report.enabled                  : 1
    node.production.rssisource.enabled       : 0
    node.production.rssisource.power         : 10
    node.production.rssisource.period        : 500
    node.production.meter_update_period      : 5
    capabilities.meter.reverse_ESW           : 0
    capabilities.meter.device_testing        : 1
    capabilities.meter.supports_Ipv6_setup   : 1
    capabilities.meter.supports_payment_management : 0
    capabilities.meter.MeterUpgradeRequiresUpgradeCredentials : 0
    capabilities.dlmspipe.session_close_detection : 1
    capabilities.meter.time_update           : 1
    capabilities.meter.timezone_set          : 1
    capabilities.meter.dst_set               : 0
    capabilities.module.led.type             : 1


    -------------------------------------------------

    ./rpc_prodtest.py --setparam server.ip fd00::1
    ./rpc_prodtest.py --setparam prod.lowpan.eui64 00-1B-C5-0C-60-06-77-B5
    ./rpc_prodtest.py --loadkey -s client-key -f /Data/ProdPak/ProdPak1000/00-1B-C5-0C-60-06-77-B5/node.key.der
    ./rpc_prodtest.py --loadkey -s client-cert -f /Data/ProdPak/ProdPak1000/00-1B-C5-0C-60-06-77-B5/node.crt.der
    ./rpc_prodtest.py --loadkey -s root-cert -f /Data/ProdPak/ProdPak1000/00-1B-C5-0C-60-06-77-B5/ca.crt.der
    ./rpc_prodtest.py --loadkey -s mac-key -f /Data/ProdPak/ProdPak1000/00-1B-C5-0C-60-06-77-B5/mac_key
    ./rpc_prodtest.py –finalize

    ./tools/c4-tools/coap_request.py --ctrlporthub localhost:4002 --load-key client-key /Data/Temp/ProdPack/ProdPack1000/00-1B-C5-0C-60-06-77-B5/node.key.der
    ./tools/c4-tools/coap_request.py --ctrlporthub localhost:4002 --load-key client-cert /Data/Temp/ProdPack/ProdPack1000/00-1B-C5-0C-60-06-77-B5/node.crt.der
    ./tools/c4-tools/coap_request.py --ctrlporthub localhost:4002 --load-key root-cert /Data/Temp/ProdPack/ProdPack1000/00-1B-C5-0C-60-06-77-B5/ca.crt.der


    600000000343113ffd00000000000000
    0000000000000001fdaa18656aee0004
    021bc50c600677b51634163403437ca4
    16fefd0000000000000006005e020000
    520001000000000052fefdf14e3bc48d
    f36824a5167d28c09c18cb5ceafc9238
    3aa6941dcf12d8143bd4a3204d52b754
    ce996dfb2cde1568b366042e56ee8fa1
    51c71d45ce643df57791c6c6c0ae0000
     0a000b000201000003000016fefd0000
     00000000000701e00b0001d400020000
     000001d40001d10001ce308201ca3082
     0170020900daf7cf350c67e754300a06
     082a8648ce3d0403023077310b300906
     03550406130253453112301006035504
     080c0953746f636b686f6c6d31123010
     06035504070c0953746f636b686f6c6d
     31133011060355040a0c0a436f6e6e6f
     6465204142310c300a060355040b0c03
     522644311d301b06035504030c146465
     6d6f2d706f632e636f6e6e6f64652e63
     6f6d301e170d31393038303931343133
     35345a170d3234303731333134313335
     345a3063310b30090603550406130253
     453112301006035504080c0953746f63
     6b686f6c6d31133011060355040a0c0a
     436f6e6e6f6465204142310c300a0603
     55040b0c03522644311d301b06035504
     030c1463692d686f7374732d756b2d64
     656d6f2d706f633059301306072a8648
     ce3d020106082a8648ce3d0301070342
     000404f6698a779030e46e63813fe828



    600000000343113ffd000000000000000000000000000001fdaa18656aee0004021bc50c600677b51634163403437ca416fefd0000000000000006005e



    600000000342113ffd00000000000000
    0000000000000001fdaa18656aee0004
    021bc50c600677b51634163403423739
    16fefd000000000000000b005e020000
    520001000000000052fefd023500fb32
    94791020f1224440b885d9680a419a51
    8b106ab657be469ed1b3a520ace9edf0
    655cf49ded500788f7fd228febe3fce8
    853d06aa62f2d3ea51aa1734c0ae0000
     0a000b000201000003000016fefd0000
     00000000000c01e00b0001d400020000
     000001d40001d10001ce308201ca3082
     0170020900daf7cf350c67e754300a06
     082a8648ce3d0403023077310b300906
     03550406130253453112301006035504
     080c0953746f636b686f6c6d31123010
     06035504070c0953746f636b686f6c6d
     31133011060355040a0c0a436f6e6e6f
     6465204142310c300a060355040b0c03
     522644311d301b06035504030c146465
     6d6f2d706f632e636f6e6e6f64652e63
     6f6d301e170d31393038303931343133
     35345a170d3234303731333134313335
     345a3063310b30090603550406130253
     453112301006035504080c0953746f63
     6b686f6c6d31133011060355040a0c0a
     436f6e6e6f6465204142310c300a0603
     55040b0c03522644311d301b06035504
     030c1463692d686f7374732d756b2d64
     656d6f2d706f633059301306072a8648
     ce3d020106082a8648ce3d0301070342
     000404f6698a779030e46e63813fe828
     2ee9f7d8e2a7a37497c38401f7de0079
     79528c2c4030258aedb756cf3a747b86
     028d10be0c09486425ad35894c160c38
     9409300a06082a8648ce3d0403020348
     00304502204c7e92bb33153c5621bba3
     9387aa75e1f9b84a34456b89e555e0d0
     4daf7a790a022100a1d62883dd9f4939
     3d2510fb50faf88f56da4681fb360ee5
     86aafc84a1a7193116fefd0000000000
     00000d009b0c00008f00030000000000
     8f03001741044262ebceb47fa70ecf70
     9f4d9cadb6003eae3a0ce83ad1736781
     b62339b2b23c6e6e0171646db88c839e
     03bbd7eb92d4a59b41a2c4264dc418ad
     883d61126b9404030046304402204348
     95d7c2ad24f2423a9b23155e97ea3557
     deb3d6d8ea22f9f0e5a40e0671d40220
     35b536d77e02755db261d1315dd69cb6
     2426dd958917f4e002e179768b375b08
     16fefd000000000000000e00140d0000
     08000400000000000801400002040300
     0016fefd000000000000000f000c0e00
     00000005000000000000


    https://omnidev-in-01.dev.cyanconnode.com/nms/nodes/00-1b-c5-0c-60-06-77-b5/statistics


    ------------------------------------------------

    dev-stack

    ./stack setup -p omnimesh -n 1

    ------------------------------------

    time sync
    - Save time to fs from time-synch process. Seed the RTC from fs on startup. Time will never go backwards.
    Seeding the RTC will then provide seed+uptime accuracy until login. Window till time-set is <1s.
    - Save time to fs from time-synch process at the same point that time is read from meter. On startup change
    discovery process to read time from meter first. Obtain the meter-delta at this point. Seed the RTC with
    savedTime+meterDelta. Accuracy is dependent on time-since-last-sync. Problem is that this inverts the
    master/slave relationship with the meter. Window till time set is also on the order of 5-10 seconds.
    - Increase rate of mesh-sync packets.
    - Obtain time from DIO in resposne to a DIS.
    - Obtain time from basestation if not logged in.
    - Obtain time from GPS on CNIC/IGW (if fitted).

    - need threshold on delta calculations to only use delta if within a given window.



    config/dlt645.mk
    config/nic7b-kaifa-dlms-insecure.mk
    config/host-kaifa-insecure.mk
    config/nic7-kaifa-dlms-insecure.mk
    config/ipa3b-kaifa-dlms.mk
    config/nic7-kaifa-dlms.mk
    config/host-mbus.mk
    config/nic7b-kaifa-dlms.mk
    config/hw1-kaifa-dlms-insecure.mk
    config/ipa3b-kaifa-dlms-insecure.mk
    config/ipa3b-mbus.mk


    2020-02-19 16:08:16.741 #1   001bc50c600663d7 <log> 0:00:42.585 [debug] [        hdlc] {     hdlc}: rx: (1/4): 7ea03b010110d1fae6e7000f40000000
    2020-02-19 16:08:16.742 #1   001bc50c600663d7 <log> 0:00:42.594 [debug] [        hdlc] {     hdlc}: rx: (2/4): 090c07e4021303100605ffffc4000204
    2020-02-19 16:08:16.742 #1   001bc50c600663d7 <log> 0:00:42.603 [debug] [        hdlc] {     hdlc}: rx: (3/4): 09060000616200ff0600e020fc090600
    2020-02-19 16:08:16.742 #1   001bc50c600663d7 <log> 0:00:42.612 [debug] [        hdlc] {     hdlc}: rx: (4/4): 00616204ff060120024018247

    ----------------------------------------

    network simulator: packet loss, rate limiting, jitter, duplication, reordering., corruption
    netem tc (traffic control)
    https://www.excentis.com/blog/use-linux-traffic-control-impairment-node-test-environment-part-2



    ---------------------------------

    prioritisation
    partitioning in NMS for network conditions
    dynamic adaptation
    flow control
    minimise end-to-end traffic. single direction if possible.


    ---------------------------------------------------------------

    S~BVipa3-lnt-dlms:v20.0.0+b16937+gcb464d Hde DV0@39fceL3a0ebS2000a368"


    ------------------------------------------------------------------------

    https://en.wikipedia.org/wiki/IPv6_address

    General form:

    network prefix   IID
    <---- /64 -----> <----- /64 ---->
    0011223344556677 0011223344556677


    Typical use:

    routing    subnet   IID
    <---/48----><--> <----- /64 ---->
    0011223344556677 0011223344556677


    tun6d /48 case:
    - tun6d currently assumes a /48 but static/random prefix for all gateways.
    - tun6d uses the 16-bit subnetId for the addressable range of gateways (2^64 possible gateways).
    - Each tun6d peer is assigned a single IPv6 address making up a full /64 network-prefix.
    - tun6d in that case requires 2x64KByte bit masks per instance.

    routing    subnet   IID
    <---/48----><--> <----- /64 ---->
    0011223344556677 0011223344556677
    fd5b2b5b5bc4....
    fdxxxxxxxxxxyyyy


    tun6d /40 case:
    routing    subnet   IID
    <---/40--><----> <----- /64 ---->
    0011223344556677 0011223344556677
    fd5b2b5b5b......
    fdxxxxxxxxyyyyyy

    - A /40 static/random prefix allows 2^24 (i.e 16 million) possible peers.
    - tun6d in that case requires 2x16MByte bit masks per instance.
    - (Note) Linear scan through bitmasks involved to setup a peer which is not insignificant.


    CNIC case A:

    tun6d /40 case:
    routing  subnet  IID
    <---/40--><--><> <----- /64 ---->
    0011223344556677 0011223344556677
    fd5b2b5b5b......
    fdxxxxxxxxyyyyyy

    - Each CNIC will need a subnet, without change that will limit us to 65536 maximum CNICs on a network
    which is within range in a reasonable timeframe.
    - To counter the above point, we can increase the subnetId range to 24 bit, giving 2^24 CNICs on the network.


    CNIC case B:

    routing    subnet   IID
    <---/48----><--> <----- /64 ---->
    0011223344556677 0011223344556677
    fd5b2b5b5bc4....
    fdxxxxxxxxxxyyyy

    - Each CNIC will only ever support a single node, so all CNICs could be assigned a /127 address.
    - Extending the above. All nodes have unique EUIs, therefore we have no real need for the subnet...
    - ...except for managing the traffic (i.e. segmenting up the network for file-distribution).
    - The subnetId is used effectively to infer the topology of the network.
    - Maybe multicast is a better way to do that operation.
    - File-distribution is effectively a multicast operation, but we have rolled our own mechanism.
    - File-distribution down to gateway is a file-transfer to the all-routers multicast address.
    - File-distribution from gw to nodes is a file-transfer to the all-nodes multicast address.
    - CNICs will all have unique EUIs so could be assigned a single subnet id, leaving all other subnetIds available.



    IGW case:

    tun6d /40 case:
    routing  subnet  IID
    <---/40--><--><> <----- /64 ---->
    0011223344556677 0011223344556677
    fd5b2b5b5b......
    fdxxxxxxxxyyyyzz

    - Each CNIC will need a subnet, without change that will limit us to 65536 maximum CNICs on a network
    which is within range in a reasonable timeframe.
    -


    ----------------------------------------------------
    mass communication improvements

    Use cases:
    - firmware upgrade - multicast request, unicast response.
    - meter upgrade - multicast request. unicast response.
    - file distribution (distinct from above). multicast request, unicast response.
    - prepayment display - unicast request.
    - on-demand read - multicast request, unicast response.
    - node-configuration distribution
    - meter-configuration distribution (e.g. disconnect).


    - Topology can be built from parent reporting, prefix is not required to determine topology.
    - traffic management by multicast grouping allows more flexible grouping.
    - end-to-end encryption is a problem for responses, but requests can be multicast.
    - responses will be end-to-end encrypted, mass-requests will be end-to-end encrypted with shared key.
    - Making responses asynchronous, i.e. split request into separate request and response phases allows
    multicast to work.
    - file-distribution could work in a multicast manner, all-routers is targetted by NMS. all-nodes is
    targetted by gateway(s).



    Multicast Groupings, could use site-local or admin-local addressing:
    - gateways
    - geographical areas, e.g. towns? grid coords?
    - feeder; would need a setup step prior to this working.
    - cell-id (because we have multiple gateways per cell).
    - carrier
    - meter-type
    - version
    - designated test areas
    - device-type.
    - All-nodes
    - All-routers
    - All-terminals
    - All-RPL-nodes
    - All CNICs


    Security:
    - unicast for sensitive/private data, generally data from-meter e2e encrypted with *node-unique/session* key.
    - multicast for non-sensitive data, generally data to-meter is e2e encrypted with *shared* key.
    - use of multicast for distribution of requests allows *much* greater efficiency.
    - use of multicast allows nodes to hop meshes and still be addressed.
    - multicast requests should be default. unicast will be a special case.
    - Use DTLS session to distribute multicast key.
    - On multicast-key per multicast-group?
    - Login returns set of multicast groups to join?

    Tunnel:
    - Required to operate over IPv4 betworks sucah as cellular.
    - Have to modify tun6d to forward multicast/IGMP addresses.
    - tun6d needs to act as a querier and multicast router to only
    forward packets to peers that have joined the destination group.
    - tun6d initially sets the multicast set for a new peer to be the
    group of nodes on its gateway. This then matches the address space
    partitioning that happens right now.
    - tun6d then can snoop on IGMP packets sent to tun6d ipv4 interface
    and add/remove group membership as needed for things like cell-id
    group.
    - Maybe tun6d should be an IPv6 multicast router as it presents ipv6 at both ends.





    ----------------------------------------------------------------

    Adams meter driver:
    https://gitlab.cyco.io/Omnimesh/terminal/-/tree/aps/generic-dlms-driver

    JJs bootloader update
    https://gitlab.cyco.io/Omnimesh/terminal/-/merge_requests/75


    -------------------------------------------

    nms/dtls/src/main/java/com/connode/dtls/DTLSConnectionRegistry.java
    removeConnection
    listener.connectionExpire
    sessionExpired


    LOGOUT set in:
    DbRemoteAddressesResolver.java::logoutOneNode()

    -----------------------------------------------

    action == ACTION_PDU_TRANSMITTED,

    ACTION_PDU_TRANSMITTED is set from:
    - dlmsSendHldcRR
    - dlmsSendHdlcDisc
    - sendRequest

    Last transmit was:
    7e
    a02b
    03
    21
    10
    fbaf
    e6e600
    601da109060760857405080101be1004
    0e01000000065f1f0400001f1fffff
    c64d
    7e

    which is an AARQ ("Setup AA with No Security") which would have been sent by
    sendAARQwithNoSecurity->sendrequest


    onInvocationCounterRead(InvocationCounterHLS) is called while AARQ is still in progress
    before AARE has been received.
    The SendRequest times out, returning NULL message.


    Device                                                      DLMS

                                                               reportDlmsResult()
    deviceTask()                                                dlmsReceiveCb() calls OS_semaphoreGive(&s_dlmsSemaphore);
     processDlmsPayload()
      dlmsVariantProcessDlmsPayloadPending()
       onInvocationCounterRead(InvocationCounterHLS)
         dlmsSendGetRequest(1, IC, 2, NULL, 0);
         sendRequest()
         .... timeout & 0-byte return


    --------------------------------------------------

    lighting

    - Should have been a third application LA parallel to SMA but is standalone JQuery/Flask app with SQLite backend.
    - Node is just a UDP pipe for now, interfaces with STM32 controller on ASKA board.
    - last work was scale-up to show 20K lighting nodes on server using ASKA emulator.

    https://gitlab.cyco.io/groups/mothballed/-/archived
    https://gitlab.cyco.io/AdamSutton/prototyping/-/commits/feature/lighting_node_put
    https://gitlab.cyco.io/AdamSutton/prototyping/-/blob/feature/lighting_hes_ui_scaleup/lighting_node/
    https://gitlab.cyco.io/AdamSutton/prototyping/-/blob/feature/lighting_hes_ui_scaleup/lighting_hes/metering.py
    https://gitlab.cyco.io/AdamSutton/prototyping/-/blob/feature/lighting_hes_ui_scaleup/lighting_hes/programme.py
    https://gitlab.cyco.io/mothballed/Lighting/aska_emulator/-/blob/master/src/node.c
    https://gitlab.cyco.io/mothballed/Lighting/aska_emulator/-/blob/master/src/meter.c
    https://gitlab.cyco.io/mothballed/Lighting/terminal/-/compare/master...lightingo
    https://gitlab.cyco.io/mothballed/Lighting

    -----------------------------------------

    Genus

    -------------------------------------------
    Release:
    - NIC7-NewFlash
    - Alarm fix
    - GStar from VIVek


    -------------------------------------------

    BER test
    uses PN9

    RAIL_BerConfigSet()
    RAIL_BerRxStart()
    RAIL_BerRxStop()
    RAIL_BerStatusGet()

     uint32_t bitsTotal; /**< Number of bits to receive */
     uint32_t bitsTested; /**< Number of bits currently tested */
     uint32_t bitErrors; /**< Number of bits errors detected */
     int8_t   rssi; /**< Latched RSSI value at pattern detect */

    --------------------------------------------
    lz4 udp log

    pip install lz4

    import lz4.frame
    compressedData=open('readme.md.lz4','rb').read()
    uncompressedData=lz4.frame.decompress(compressedData)

    ------------------------------------

    IGW work
    - config proxy 9953
    - mq proxy
    - event proxy & filter
    - file distribution
    - IP Core work - make it more generic & flexible.
    - new modem evaluation (Neoway N11)
    - Rethink monitoring/statistics.
    - node upgrade.




    ---------------------------------------


    prod.prodtime                            : 1
    prod.alias.id                            : 00-1B-C5-0C-60-06-1A-55
    prod.ethernet.macaddr                    :
    prod.lowpan.eui64                        : 00-1B-C5-0C-60-06-1A-55
    prod.hw.version                          :
    rpl.enabled                              : 1
    rpl.br.dio.imin                          : 12
    rpl.br.dio.imax                          : 8
    rpl.br.dio.k                             : 6
    rpl.br.routelife                         : 1200
    rpl.br.ocp                               : 1
    rpl.dis.trickle.min.ms                   : 10000
    rpl.dis.trickle.doublings                : 4
    rpl.probe.interval.min.ms                : 1500
    rpl.probe.doublings                      : 6
    rpl.instance_id                          : 46
    rpl.etx.weight_factor                    : 64
    rpl.mrhof.pp_hysteresis                  : 75
    rpl.dag_switch.hysteresis                : 150
    rpl.dag_switch.time                      : 7200
    rpl.routes.max                           : 10000
    rpl.dao.deferred_ack                     : 1
    rpl.netsize_penalty                      : 64
    lowpan.txpower.max                       : 10
    lowpan.hop_limit                         : 32
    lowpan.frame_retries                     : 3
    lowpan.powercontrol.interval             : 480
    lowpan.powercontrol.target               : -90
    lowpan.powercontrol                      : 1
    lowpan.cca.threshold                     : -94
    lowpan.channelplan                       : 0
    lowpan.channel                           : 10
    lowpan.autochannel                       : 0
    ip.eth.ipv4.4in6.endpoint                :
    ip.eth.ipv4.mtu                          : 0
    ip.eth.ipv4.dns_servers                  :
    ip.eth.ipv4.lease_time                   : 600
    ip.eth.ipv6.dns_server                   :
    ip.eth.ipv4.up.ip                        :
    ip.eth.ipv4.up.gw                        :
    ip.eth.ipv4.up.dns                       :
    server.ip                                : fd00::1
    server.port                              : 5684
    server.mq.push_now                       : 0
    server.mq.push_delay                     : 3600
    server.mq.more_delay                     : 600
    modem.apn                                : wlapn4.com
    modem.tun6.ip                            : omnidev-in-01.dev.cyanconnode.com
    modem.tun6.port                          : 8050
    modem.tun6.secret                        : ZV9IPCHFvINmOEKv
    modem.uplink.gracetime                   : 900
    modem.username                           : cyan
    modem.password                           : cyan
    modem.authmethod                         : PAP
    modem.pin                                :
    modem.uplink.max_failures_before_reset   : 5
    mac.lbt.min.be                           : 3
    mac.lbt.max.be                           : 8
    mac.lbt.max.backoffs                     : 20
    mac.dutycycle.limit                      : 100
    mac.dutycycle.buffer                     : 1000
    mac.frame_size                           : 253
    dtls.timeout.initial.s                   : 8
    dtls.timeout.max.s                       : 127
    dtls.heartbeat.period.s                  : 3600
    dtls.heartbeat.retry.s                   : 120
    dtls.heartbeat.max.retries               : 4
    monitor.profile.default.enabled          : 1
    monitor.profile.default.sample.interval  : 86400
    monitor.profile.radio.enabled            : 0
    monitor.profile.radio.sample.interval    : 3600
    monitor.profile.network.enabled          : 0
    monitor.profile.network.sample.interval  : 3600
    monitor.profile.ip.enabled               : 0
    monitor.profile.ip.sample.interval       : 3600
    monitor.profile.modem.enabled            : 1
    monitor.profile.modem.sample.interval    : 900
    monitor.profile.environment.enabled      : 0
    monitor.profile.environment.sample.interval : 3600
    time.tz                                  : CET-1CEST,M3.5.0/2,M10.5.0/3
    time.max.diff                            : 30
    time.mesh.fail.event.interval            : 1800
    time.mesh.period                         : 3600
    time.ref.period                          : 43200
    time.ref.rtt.max                         : 30
    coap.retry.timeout                       : 10
    coap.session.timeout                     : 60
    coap.attempts                            : 3
    activity.report.enabled                  : 1
    node.power_fail.gracetime                : 0
    node.production.rssisource.enabled       : 0
    node.production.rssisource.power         : 10
    node.production.rssisource.period        : 500
    node.production.meter_update_period      : 5
    capabilities.meter.reverse_ESW           : 0
    capabilities.meter.device_testing        : 1
    capabilities.meter.supports_Ipv6_setup   : 1
    capabilities.meter.supports_payment_management : 0
    capabilities.meter.MeterUpgradeRequiresUpgradeCredentials : 0
    capabilities.dlmspipe.session_close_detection : 1
    capabilities.meter.time_update           : 1
    capabilities.meter.timezone_set          : 1
    capabilities.meter.dst_set               : 0
    capabilities.module.led.type             : 1
    dev.i2c.slave.address                    : 226


    -----------------------------------------------------

    orange pi:

    ip -6 add add 2a03:a000:5:192:85ad:e4e:1239:1a dev eth0



    ---------------------------------------------
    LZF compression

    https://github.com/janding/lzfx.git
    https://github.com/teepark/python-lzf

    https://code.google.com/archive/p/lzfx/


    #!/usr/bin/env python3


    import lzf
    import sys
    import struct

    t=open(sys.argv[0],'rb').read()

    fileId,kind,length  = struct.unpack('>4sHI',t[:10])
    compressedFrame     = t[10:10+length]
    uncompressedFrame   = lzf.decompress(compressedFrame,length)

    print(fileId,kind,length)
    print(uncompressedFrame)


    git@github.com:nemequ/liblzf.git


    import lzf
    import struct
    t=open('../liblzf/README.lzf','rb').read()
    blobID,blobType,compressedSize,uncompressedSize = struct.unpack('>2scHH',t[:7])
    compressedFrame     = t[7:7+compressedSize]
    print(lzf.decompress(compressedFrame,uncompressedSize).decode('utf-8'))



    ------------------------------

    CA update

    get_ca

    get repo, run get_ca.py


    b'Osf^\x88\x01\x1fSend IP on uplink, 311 B, type 1\x007 \x08\x1ftl 32: fdaa:1865:6aee:7:21b:c50c\x0c:6006:77b8 -> &\x0f00::1\neth_up: tx E\x052.16.3 \x05\x0176@#\x0313.2 \r\x1335.150 359B proto=17\xe0\x007\x00r 7\xe0\x04& [\xe0\x05H\x02407\xe0\x027\x06Got UDP\xe0\x054\x02:80 `\xe0\x079\x05:50412`1\nIPv6 packetA\x03\x80\xb4\x04 from\xe0\x0bH\x07399B\nICM@4\x0cunicast error\x801\xa0\xfa\n, DestinatiAV\x0fnreachable (Port\xe0\x03\x11\x00)!n\x0455 B\n@'
    ('fdaa:1865:6aee:7:21b:c50c:6006:77b8', 1234, 0, 0)
    1583772495 392
    compressedSize=297
    uncompressedSize=392
    error in compressed data
    .
    b'Psf^\x92\x00\x1fSend IP on uplink, 311 B, type 1\x007 \x08\x1ftl 32: fdaa:1865:6aee:7:21b:c50c\x0c:6006:77b8 -> &\x0f00::1\neth_up: tx E\x052.16.3 \x05\x0176@#\x0313.2 \r\x1435.150 359B proto=17\n\x00'
    ('fdaa:1865:6aee:7:21b:c50c:6006:77b8', 1234, 0, 0)
    1583772496 146
    compressedSize=149
    uncompressedSize=146
    None
    'NoneType' object has no attribute 'splitlines'
    .
    b'Psf^\x92\x00\x1fSend IP on uplink, 163 B, type 1\x007 \x08\x1ftl 32: fdaa:1865:6aee:7:21b:c50c\x0c:6006:77b8 -> &\x0f00::1\neth_up: tx E\x052.16.3 \x05\x0176@#\x0313.2 \r\x1435.150 211B proto=17\n\x00'
    ('fdaa:1865:6aee:7:21b:c50c:6006:77b8', 1234, 0, 0)
    1583772496 146
    compressedSize=149
    uncompressedSize=146
    None




    There are (at least) two conditions where this is a legitimate status.

    First-breath is generated at login point, time passes, power fails and last-gasp is generated (can't be read from meter). Since the meter has not been read in the intervening time, it still has a last-gasp bit set itself. We then report this along with the last-gasp.
    First-breath is generated at login point and ESW is cached for later power-fail. This cache contains the first-breath (from the meter). A power-fail then occurs and the cached flags are used to send the last-gasp. First-breath is also included in these alarms.
    Both these cases occur because we have to cache the ESW from the meter and we have had no intervening read of the ESW to refresh the (non-first-breath) status between then and a power-fail occurring.

    -----------------------------------------------

    import lzf
    lzf.decompress(open('test2.lzh','rb').read(),316*1024)



    Send IP on uplink, 164 B, type 17, ttl 32: fdaa:1865:6aee:7:21b:c50c:6006:77b8 -> fd00::1
    eth_up: tx 172.16.32.176 -> 13.232.35.150 212B proto=17


    b"\x1fSend IP on uplink, 164 B, type 1\x007 \x08\x1ftl 32: fdaa:1865:6aee:7:21b:c50c\x0c:6006:77b8 -> &\x0f00::1\neth_up: tx E\x052.16.3 \x05\x0176@#\x0313.2 \r\x1935.150 212B proto=17\nSessi \x8e\x0f5: Timeout (last@H\x1b8 s ago, user triggered: no)\xe0\x048\x08oo many t\x80A\x08s, giving \xe4\r\nDTLS negotiat@i\xa0$\x08, restart@'\x12login sequence\nChan \x10\x01g   \x01te o\xc0> \x12`O \xf8\x05wait\n\x00H\x024"



    -------------------------------------

    ssh cyanconnode@cyan-emng104
    Sundbyb3rg

    -----------------------------------------
    mac_keys.txt

    ProdPack1000:
    0 94a3802a5a15376c2d99037a795d4efe

    DemoPOC:
    0 94a3802a5a15376c2d99037a795d4efe

    MPWZ:
    0 94a3802a5a15376c2d99037a795d4efe

    Unknown:
    0 c31703fa82e4e25e3223222f8db31240

    omnireltest1:
    omnireltest2:
    sysadmin
    vK20V2FM

    ssh stickle@panmesh-dev-01.dev.cyanconnode.com



    https://omnidev-in-01.dev.cyanconnode.com/
    13.232.35.150
    modem.tun6.secret=ZV9IPCHFvINmOEKv


    ------------------------------------------------------

    ./tools/c4-tools/coap_request.py --ctrlporthub :4001 --rll-key /Data/Temp/DemoPOCkey.txt
    ./tools/c4-tools/coap_request.py --ctrlporthub :4001 --load-key client-key /Data/Temp/ProdPack/ProdPack1000/00-1B-C5-0C-60-06-77-B0/node.key.der
    ./tools/c4-tools/coap_request.py --ctrlporthub :4001 --load-key client-cert /Data/Temp/ProdPack/ProdPack1000/00-1B-C5-0C-60-06-77-B0/node.crt.der
    ./tools/c4-tools/coap_request.py --ctrlporthub :4001 --load-key root-cert /Data/Temp/ProdPack/ProdPack1000/00-1B-C5-0C-60-06-77-B0/ca.crt.der
    ./tools/c4-tools/coap_request.py --ctrlporthub :4001 --config prod.lowpan.eui64 00-1B-C5-0C-60-06-77-B0
    ./tools/c4-tools/coap_request.py --ctrlporthub :4001 --config prod.prodtime 1
    ./tools/c4-tools/coap_request.py --ctrlporthub :4001 --config lowpan.channelplan 0
    ./tools/c4-tools/coap_request.py --ctrlporthub :4001 --config lowpan.channel 5
    ./tools/c4-tools/coap_request.py --ctrlporthub :4001 --config rpl.instance_id  8
    ./tools/c4-tools/coap_request.py --ctrlporthub :4001 --config server.ip fd00::1
    ./tools/c4-tools/coap_request.py --ctrlporthub :4001 --restart


    stty -F /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0 9600 raw
    stty -F /dev/serial/by-id/usb-FTDI_TTL232R_FT94TOL6-if00-port0 9600 raw
    socat -x /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0,raw,echo=0,crnl /dev/serial/by-id/usb-FTDI_TTL232R_FT94TOL6-if00-port0,raw,echo=0,crnl



    ---------------------------------

                    Cipher Suite: TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 (0xc02c)
                    Cipher Suite: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 (0xc02b)
                    Cipher Suite: TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (0xc030)
                    Cipher Suite: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 (0xc02f)
                    Cipher Suite: TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 (0x009f)
                    Cipher Suite: TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 (0x009e)
                    Cipher Suite: TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 (0xcca9)
                    Cipher Suite: TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 (0xcca8)
                    Cipher Suite: TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256 (0xccaa)
                    Cipher Suite: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 (0xc027)
                    Cipher Suite: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 (0xc023)
                    Cipher Suite: TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 (0xc028)
                    Cipher Suite: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 (0xc024)
                    Cipher Suite: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA (0xc00a)
                    Cipher Suite: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA (0xc009)
                    Cipher Suite: TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA (0xc014)
                    Cipher Suite: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA (0xc013)
                    Cipher Suite: TLS_ECDHE_ECDSA_WITH_AES_128_CCM (0xc0ac)
                    Cipher Suite: TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8 (0xc0ae)
                    Cipher Suite: TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8 (0xc0af)
                    Cipher Suite: TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 (0x006b)
                    Cipher Suite: TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 (0x0067)
                    Cipher Suite: TLS_DHE_RSA_WITH_AES_256_CBC_SHA (0x0039)
                    Cipher Suite: TLS_DHE_RSA_WITH_AES_128_CBC_SHA (0x0033)
                    Cipher Suite: TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 (0xcc14)
                    Cipher Suite: TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 (0xcc13)
                    Cipher Suite: TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256 (0xcc15)



    TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8

    wolfSSL_CTX_set_cipher_list(ctx, "ECDHE-ECDSA-AES128-CCM-8");


    ---------------------------------------------
    multiple displays
    xrandr --auto --output VGA-1 --mode 1920x1080 --right-of HDMI-1

    This works
    xrandr --auto --output HDMI-1 --mode 1920x1080 --left-of eDP-1


    -----------------------------------
    bluetooth uart

    sudo rfcomm connect 1 11:75:58:30:58:86

    0000   0b ef 1f 01 0b                                    .ï...
    0b:ef:a4:01:01

    0b:ef:1f:01:0b


    ---------------------------------------------
    socat

    stty -F /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0 9600 raw
    stty -F /dev/serial/by-id/usb-FTDI_TTL232R_FTG4DEXG-if00-port0 9600 raw
    socat -x /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0,raw,echo=0,crnl /dev/serial/by-id/usb-FTDI_TTL232R_FTG4DEXG-if00-port0,raw,echo=0,crnl

    -----------------------------------
    Swagger
    http://lntmdmsint.dev.cyanconnode.com/swagger-UI.html

    -------------------------
    gateway modem settings:

    modem.apn                                : wlapn4.com
    modem.tun6.ip                            : 13.232.35.150
    modem.tun6.port                          : 8050
    modem.tun6.secret                        : ZV9IPCHFvINmOEKv
    modem.uplink.gracetime                   : 900
    modem.username                           : cyan
    modem.password                           : cyan
    modem.authmethod                         : PAP
    modem.pin                                :

    ------------------------------------------------------------------------

    processIncomingIP
     sendIp
       filterOutgoing_PreRouting
       ipRoute
       filterOutgoing_PostRouting
       queueUpAndEncodePacket()

    ipSendIp
      setMLDFlags
      fragmentedSend()
        for all fragments:
          sendIp
            ipRoute
      nonFragmentedSend()
        sendIp
          ipRoute



    ---------------------------------------------------------------------
    prodpak:

    ./make_prod_package.py --name MIDTestContinuous --bootloader bootloader.elf  --image agent.elf  --order TEST_INTERNAL_IPA3_x1000_02_20190711131959.562.tar.gz --hw-variant ipa3b
    manifest.yaml
    image/bl.elf
    image/agent.elf
    MEADemoPOCProdPak1/00-1B-C5-0C-60-06-74-B4/
    MEADemoPOCProdPak1/00-1B-C5-0C-60-06-74-B4/config
    MEADemoPOCProdPak1/00-1B-C5-0C-60-06-74-B4/mac_key
    MEADemoPOCProdPak1/00-1B-C5-0C-60-06-74-B4/mac_keys.txt
    MEADemoPOCProdPak1/00-1B-C5-0C-60-06-74-B4/ca.crt.der
    MEADemoPOCProdPak1/00-1B-C5-0C-60-06-74-B4/node.crt.der
    MEADemoPOCProdPak1/00-1B-C5-0C-60-06-74-B4/node.key.der
    tar jcvf ../MEA1.prodpak.tbz2 --xform s:'./'::  ./*

    -------------------------------------

    omnibox-ui

    npm install -g @vue/cli
    npm install -g @vue/cli-service-global

    npm install
    cd src
    vue serve



    -------------------------------------

    apt install npm
    npx create-react-app my-app
    cd my-app
    npm start


    Create React App
    https://reactjs.org/docs/create-a-new-react-app.html#create-react-app
    https://create-react-app.dev/

    Material-UI

    npm install @material-ui/core
    npm install @material-ui/icons

    https://codesandbox.io/s/4qp6vjp319

    npm install react-beautiful-dnd

    ----------------------------------------------------

    meter-configurator

    - Load-profile capture-period
    - Demand integration period
    - billing date
    - load-curtailment:
        - limit
        - event setting for connect/disconnect.
        - number of auto-reconnection attempts
        - time between auto-reconnection attempts.
        - lock-out period.
    - meter-upgrade
    - DLMS credentials
       - HLS
       - LLS
       - FW-upgrade (?)
    - push schedule. This is effectively capture-period (?) we don't support the scheduled-data-push.
    - Event-thresholds
       - Get list of these.
    - ToU calendar (explicitly drop this one?)
    - Node-upgrade (does this need to be done on this tool?)


    -------------------------------------------------

    Papyrus
    Engineering version of Papers.
    - PDF library
    - tags
    - annotations
    - linking between docs

    Use cases:
    - PDF schematic, links to layout and datasheet.
    - Instantly get all PDFs for a particular project using project tags. Stored once.
    - Internal or external PDF viewer.
    - GitLab/GitHub/GoogleDrive/OneDrive backend
    - Raw repo remains usable with original names, sqlite db for apps use.
    - Raw repo/storage remains usable for people who don't want that. Papyrus indexes it.
    - Plugin for "add to Papyrus" to quickly get a PDF into system from other window.
    - Public libraries, i.e. public access, private repo.

    Business model:
    - Commercial/hosted with limited free account
    - On-Prem option


    name:
    - Papyrus
    - Scriptum
    - Engrafo
    - Engrafa
    - Vivlio
    - Engrafica
    - Chartam
    - Notitia

    Implementation:
    - PDF.js (Mozilla) git@github.com:mozilla/pdf.js.git
    - Vue.JS
    - Indexer hashes files.
    - Internal references are to hashes, not filenames. This allows user freedom
    to arrange storage however they like.
    - Flask back-end
    - Convert other files types to pdf to display.
    - Use pandoc to convert other formats to pdf.


    https://www.papersapp.com/

    -----------------------------------------------

    Hde DV0@656b4L2ba2fS2000a338

    crash in strcmp()


    ----------------------
    Timesheet March 2020
    6(5)^C3(5) 20(1)


    ----------------------------------------

     W~BVipa3b-mbus-insecure:v20.3.10+g387655e15+dirty Hmb DV0@54934L19fafS20009d08

    ---------------------------
    screenshot:

    xwd | convert xwd:- jpg:- > step5.jpg

    ------------------------------------------

    (200, {'meters': []})
    (200, {'meters': [{'meterId': 'USS 0000008', 'status': 'SUCCESS', 'failureStep': '0', 'progress': None},
                      {'meterId': 'USS0002002', 'status': 'SUCCESS', 'failureStep': '0', 'progress': None},
                      {'meterId': 'UST1000002', 'status': 'FAILED', 'failureStep': '0', 'progress': None}]})


    --------------------------------------

    IGW7 HLD updates
    - Architecture diagram update
    - Slot-ID now analogue
    - File distribution update
    - Configuration updates
    - Proxy description (events, mq, etc)
    - Remove debug
    - Update address scheme
    - Routing rules config.
    - Remove Low-power-mode
    - Merge mq-API into proxy description
    - Address scheme update.
    - Add monitor/stats collection.

    -------------------------------------------

    PanMesh UI improvements:
    - CND-10058
    -


    ------------------------------------------------

    442MHz gws

    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --rll-key /Data/Temp/DemoPOCkey.txt
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --load-key client-key /Data/Temp/ProdPack/ProdPack1000/00-1B-C5-0C-60-06-76-30/node.key.der
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --load-key client-cert /Data/Temp/ProdPack/ProdPack1000/00-1B-C5-0C-60-06-76-30/node.crt.der
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --load-key root-cert /Data/Temp/ProdPack/ProdPack1000/00-1B-C5-0C-60-06-76-30/ca.crt.der
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config prod.lowpan.eui64 00-1B-C5-0C-60-06-76-30
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config prod.prodtime 1
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config lowpan.channelplan 0
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config lowpan.channel 5
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config rpl.instance_id  8
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config server.ip fd00::1
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config modem.tun6.secret ZV9IPCHFvINmOEKv
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config modem.tun6.ip mea-dev-hes.mea.prod.cyanconnode.com
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config modem.apn wlapn4.com
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config modem.username cyan
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config modem.password cyan
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config modem.authmethod PAP
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --restart



    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --rll-key /Data/Temp/DemoPOCkey.txt
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --load-key client-key /Data/Temp/ProdPack/ProdPack1000/00-1B-C5-0C-60-06-76-31/node.key.der
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --load-key client-cert /Data/Temp/ProdPack/ProdPack1000/00-1B-C5-0C-60-06-76-31/node.crt.der
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --load-key root-cert /Data/Temp/ProdPack/ProdPack1000/00-1B-C5-0C-60-06-76-31/ca.crt.der
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config prod.lowpan.eui64 00-1B-C5-0C-60-06-76-31
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config prod.prodtime 1
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config lowpan.channelplan 0
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config lowpan.channel 5
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config rpl.instance_id  8
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config server.ip fd00::1
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config modem.tun6.secret ZV9IPCHFvINmOEKv
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config modem.tun6.ip mea-dev-hes.mea.prod.cyanconnode.com
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config modem.apn wlapn4.com
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config modem.username cyan
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config modem.password cyan
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --config modem.authmethod PAP
    ./tools/c4-tools/coap_request.py --ctrlporthub :4002 --restart


    ------------------------------------------

    Web based ToDo dashboard app

    Grid of tasks, the larger are the highest priority
    sunsama like
    as things get closer to deadline, their size increases.
    the bigger the task, the bigger the size.

    ----------------------------------

    L&T updateSignalRSSIRequest    0x00u, 0x80u, 0x60u, 0x00u, 0x04u, 0xFFu
    genus updateSignalRSSIRequest  0x00u, 0x80u, 0x60u, 0x00u, 0x04u, 0xFFu
    kaifa updateSignalRSSIRequest  0x00u, 0x80u, 0x00u, 0x00u, 0x04u, 0xFFu

    onMeterChannelResponse

    updateMeterRSSIValue


    ----------------------------
    add-ons for relays, display-list and md-reset button

    CND-10029 relays
    CND-10111 lcd display list
    CND-10113 active/passive relay times (already implemented?)
    CND-10116 MD reset button
    CND-10109 billing cycle length
    ----------------------------------------

    apache reverse proxy
    apt install apache2 libapache2-mod-proxy-uwsgi libapache2-mod-proxy-uwsgi-dbg

    https://httpd.apache.org/docs/2.4/mod/mod_proxy.html

    mod_wsgi:

    apt-get install libapache2-mod-wsgi

    https://flask.palletsprojects.com/en/1.1.x/deploying/mod_wsgi/

    ------------------------------------

    addressing:

    s_prefixLen = (unsigned int)len;
    s_numberOfAddresses = 1ULL << (64 - len);

    // Bad prefix length. A /40 should be enough for everyone, allowing 16M
    // sub-prefixes. Technically we're limited to 2**31 prefixes by
    // bitFindFree() returning a (32-bit signed) int.

    40+24 == 64 == /40 with a random 24-bit subnetId.

    ------------------------------------------

    tun6d protocol

    gw -> tun6d (HelloMessage) initiate
    gw <- tun6d (HelloResponseMessage) challenge
    gw -> tun6d (AuthenticateMessage) challenge-response.
    gw <- tun6d (TunnelOptionsMessage) prefix,keepalive-period, timeout.
    -----------------------------

    dlmsVariantConfigureBillingPeriod
    checkBillingPeriodConfiguration
    configureBillingPeriod


    -----------------------------------------------

    The current functionality is oriented around managing temperature in the GW-200 rather than providing longevity while running on battery. It is expected that some changes to the logic will be required here in order to run in a more efficent manner while still providing at least partial coverage for the mesh [REF_0007].

    -----------------------

    API doc review

    3.5.3 BillingPeriod, no addition for periodLength.
    3.6.2.1 One point to make is that there needs to be a degree of introspection
    available for the DisconnectorControlRequest in that it will have different
    behaviours depending on whether the parameters are a) single string or b) list of strings.

    Also, bit uncomfortable in that the API is imperative (i.e. a list of commands) rather than
    declarative (i.e. a list of final desired states). (This is a criticism of the whole API tho
    rather than this specific one).


    3.6.4 DisplayList:
    - Missing MD reset button enable
    - Would avoid the term "push" as that term has specific metering definitions (i.e. DLMS push). "displayListManual" may be better.

    3.7.9: DisplayList should probably be UserInterface as it is greater than just the display list(s) i,e button also.


----------------------------------------
!!  Update the Kaifa Manufacturing doc in Sharepoint.



------------------------------------------------------------------
fw upgrade



POST /meterJob
{
"jobName": "JOB_XYZ",
"meterGroup": "GROUP_ABC",
"jobType": "METER_FIRMWARE_UPDATE",
"commands": [ {
		"type": "FIRMWARE_IMAGE",
		"firmwareImage": "HEX_ENCODED_FIRMWARE_DATA",
		"firmwareHash": "HEX_ENCODED_MD5_HASH_OF_FIRMARE_DATA",
		"meters": [ { "id": "USS 0000008", "firmwareIdent": "ABC" } ]
      } ] }

POST /manageMeterJob/JOB123 { "instruction": "START" }

-------------------------------------------

sudo apt install oracle-java8-jdk

wget -O nukkit.jar http://ci.mengcraft.com:8080/job/nukkit/lastSuccessfulBuild/artifact/target/nukkit-1.0-SNAPSHOT.jar

sudo java -jar nukkit.jar

------------------------------------------------------

removing release mode.
- local-CoAP to incorporate a challenge and become secure. Needs strong authentication and to be robust.

- If we can have secure local-CoAP, we can remove prod-mode and use it instead.


secure/insecure differences:
- debug-flag blown. CONFIG_READ_PROTECT
- local-CoAP disabled. CONFIG_LOCAL_COAP
- some coap resources not registered (reset-mesh, conman, login, time)

----------------------------
prodmode changes for IGW
secure/insecure unification


- Local-CoAP is only enabled on DebugUART when no certs/keys exist.
- Local-CoAP is disabled if certs exist.
- Only cert-setting CoAP function are marked as Non-DTLS.
- SLIP6 is enabled on Debug Port if certs exist.
- DTLS will also work over SLIP6, enabling use of test CoAP Endpoints.
- All other CoAP endpoints require DTLS.
- Test functions can remain enabled until explicitly disabled with prodtime.
- rate-limiting exists on SLIP6 i/f.
- Could add a source-address restriction to add extra hurdle.

SecureCoAP == CoAP over DTLS over local-Debug-UART.

----------------------------------------------------

TangedCo update
G3627.145021 -> G36A5.071010
./tools/c4-tools/coap_request.py --config device.dlms.lls_password 3141324233433444
./tools/c4-tools/coap_request.py --config device.dlms.hls_key 746764636c686c7375676d3434616263
./tools/c4-tools/coap_request.py --config device.dlms.encryption_key 546744634c654b616b674d3434616263
./tools/c4-tools/coap_request.py --config device.dlms.authentication_key 546744634c654b616b674d3434616263
./tools/c4-tools/coap_request.py --config device.dlms.FirmwareUpgrade_key 746764636C686C7366676D3434616263



GW7 only no 100/500 etc
Reset : needs clarification
GW200 has to be used in GW7
 Is part of the requirement as per Matt.
GW7 will be standard operating range.
Extended will be used later?

Secure/ insecure discussion

2.4
Link to be confidential and integrity checked.
Need more information on Ethernet NIC.

Security
Some sync is needed between 2 end points and re-establish.
This needs a more insight especially at IP level.
Dtls on top would be possible option?
Matt and Steve to discuss to find a right solution.
No HW implications.
HSM as an optional?
HW IDs must be identified and married,CNIC,I/f board and agent. The data has to be available on server? Revisit the specification on this, based on the thread model, this needs more understanding.
2.9 File Distribution
Whether F/Ws to be combined or split?
It may exceed 800kb or more, node and meter together.
NIC7 n CNIC7 to debug headers.


2.10 Radio coexistence issues
Antenna must be installed with X distance apart, HW to update this.
This needs more testing and understand the proximity is to be maintained.
2.11 power failure
Meter power failure is third party.
Need more details to cover. Andy n Steve will work on 11 and 12.
2.12 control of the PSU
Need an interrupt line.
2.13 safe shutdown
Event notification is needed.

2.14 LED control
2.15 Configuration
Single configuration
2.18 Low power mode
2.19 MQ CoAP API


-----------------------------------------------

fileInput.addEventListener("change", function(evt) {
  const files = evt.target.files;
  if (!files || files.length === 0) {
    return;
  }
  PDFViewerApplication.eventBus.dispatch("fileinputchange", {
    source: this,
    fileInput: evt.target,
  });
});

webViewerFileInputChange()
webViewerOpenFile()

app.js:2195
PDFViewerApplication.open(url);

https://0.0.0.0:8081/MAX7400-MAX7407.pdf

-------------------------------------

- CoAP endpoints have DTLS required for secure-Local-CoAP?
- CoAP endpoints have DTLS disabled for internal CoAP?
- certs will be unsed on slave-NIC and CNIC if it weren't for secure-local-CoAP but needs to be there for individual use.
- marrying CNIC & NIC together during IGW production

phase 1, don't have internal DTLS, phase 2 introduce DTLS for internal?

------------------------------------------

IGW Tasks
- IGW type on server, usable in search and grouping.                            - 10d
- new production mode / configuration mode with reversible application-mode.    - 10d
- DTLS server                                                                   - 5d
- secure-local-coap / SLIP6 / PC-side tools                                     - 5d
- EC100 bring-up                                                                - 5d
- slot id                                                                       - 2d
- revision id                                                                   - 2d
- collection of identity info from other slave modules.                         - 3d
- nodeHash generation and reporting                                             - 5d
- reset control by master of slave modules.                                     - 3d
- timeout and error handling on I2C                                             - 5d
- integrity check on I2C.                                                       - 2d
- Encryption on I2C                                                             - 4d
- framecounter on I2C                                                           - 5d
- reporting of identity to test sw                                              - 3d
- Shutdown broadcast                                                            - 2d
- UI LED control exposed to other modules, i.e. CNIC                            - 4d
- integration tests                                                             - 10d
- ProdPak to incorporate WLL key.                                               - 2d

- Production SW

- Upgrade authentication                                                        - 5d
- Upgrade hw identification                                                     - 5d

- Backplane DTLS session?                                                       - 4d
- tun6 allocation of multiple addresses.                                        - 4d

- HSM driver.                                                                   - 25d
- Battery-backed RTC driver (I2C)                                               - 5d
- New PSU control                                                               - 5d
- Configurable routing                                                          - 5d
- low-power-mode                                                                - 25d
- Proxy functionality (samples, alarms, events, metrics).                       - 10d
- Ethernet (TBD)                                                                - 25d
- upgradeable bootloader                                                        - 5d

asdas


---------------------------------------------------------

2020-04-24 15:00:32.675 [dtls-pool-1] TRACE c.c.s.t.s.coap.IncomingCoapExchange - Received request POST /mq from peer /fdaa:1865:6aee:0:21b:c50c:6006:73fb:5684 with payload [08b7fd0912c40208b8e38af50572bb020a0a55535431303030303032120601005e5b00ff1a0e090c07e40418050e3a17ff014a001a0517000000001a0517000000001a0517000000001a0517436fb3331a0517436fb3331a0517436f999a1a0517000000001a0517000000001a0517000000001a0517000000001a051742488e561a0517404000001a0517000000001a0517404000001a031200541a0506000358aa1a031200011a0506000000221a0211d41a0e090c07e40413ff000000ff014a001a0517451970001a0517000000001a0517463824001a0517000000001a0517412000001a0e090c07e40413ff021e00ff014a001a0517412000001a0e090c07e40413ff020000ff014a001a0203011a0506000006401a0517462b2c001a0517000000001a0517000000001a05174480c0002210ab7cb8818212ffd3b415b6375a9862e528b7e28af505].

~/pbd 08b7fd0912c40208b8e38af50572bb020a0a55535431303030303032120601005e5b00ff1a0e090c07e40418050e3a17ff014a001a0517000000001a0517000000001a0517000000001a0517436fb3331a0517436fb3331a0517436f999a1a0517000000001a0517000000001a0517000000001a0517000000001a051742488e561a0517404000001a0517000000001a0517404000001a031200541a0506000358aa1a031200011a0506000000221a0211d41a0e090c07e40413ff000000ff014a001a0517451970001a0517000000001a0517463824001a0517000000001a0517412000001a0e090c07e40413ff021e00ff014a001a0517412000001a0e090c07e40413ff020000ff014a001a0203011a0506000006401a0517462b2c001a0517000000001a0517000000001a05174480c0002210ab7cb8818212ffd3b415b6375a9862e528b7e28af505
1: 163511
2 {
  1: 1587720632
  14 {
    1: "UST1000002"
    2: "\001\000^[\000\377"
    3: "\t\014\007\344\004\030\005\016:\027\377\001J\000"
    3: "\027\000\000\000\000"
    3: "\027\000\000\000\000"
    3: "\027\000\000\000\000"
    3: "\027Co\2633"
    3: "\027Co\2633"
    3: "\027Co\231\232"
    3: "\027\000\000\000\000"
    3: "\027\000\000\000\000"
    3: "\027\000\000\000\000"
    3: "\027\000\000\000\000"
    3: "\027BH\216V"
    3: "\027@@\000\000"
    3: "\027\000\000\000\000"
    3: "\027@@\000\000"
    3: "\022\000T"
    3: "\006\000\003X\252"
    3: "\022\000\001"
    3: "\006\000\000\000\""
    3: "\021\324"
    3: "\t\014\007\344\004\023\377\000\000\000\377\001J\000"
    3: "\027E\031p\000"
    3: "\027\000\000\000\000"
    3: "\027F8$\000"
    3: "\027\000\000\000\000"
    3: "\027A \000\000"
    3: "\t\014\007\344\004\023\377\002\036\000\377\001J\000"
    3: "\027A \000\000"
    3: "\t\014\007\344\004\023\377\002\000\000\377\001J\000"
    3: "\003\001"
    3: "\006\000\000\006@"
    3: "\027F+,\000"
    3: "\027\000\000\000\000"
    3: "\027\000\000\000\000"
    3: "\027D\200\300\000"
    4: "\253|\270\201\202\022\377\323\264\025\2667Z\230b\345"
    5: 1587720503
  }
}

-----------------------------------------------------------

./omnimesh/omnisma-demo.py --sma_user="sysadmin" --sma_pass="sysadmin" --sma_ws https://omnidev-in-01.dev.cyanconnode.com/ws -m "USS 0000008" --config-set ../SetConfig-DisconnectorControl-off.json

---------------------------------------

ssh -p 922 ubuntu@86.129.59.24


----------------------------------------------

cellular management:
- https://openapi.airtel.in/#/docs/payment
- gw sim
- distribution management system (https://en.wikipedia.org/wiki/Distribution_management_system)
- NIC


MNO(Mobile Network Operator) Airtel provides a M2M(Machine to Machine) platform through Web APIs. These APIs utilises SIM card, NIC, DMS node identities for queries.

HES shall gather identity information of GW SIM, NIC, and DMS Nodes from the mesh
MNO SIM Management integration: High priority
The identity information of the individual mesh components shhould be used to report the status of these components to MNO M2M platform.
The identity information can be used to query the related MNO service status
Network outages
Coverage of the GWs, throughput
NIC accesability, throughput
HES can schedule jobs based on the status of mesh componets gathered from MNO M2M platform
HES should report cellular connectivity issues/events to the MNO M2M platform
HES should do OTA commissioning of the mesh components related to the MNO M2M platform
HES shall display cellular issues/events


Communication failures shall be logged and reported on HES                                                              (metrics)
Scheduled performance measurement jobs executed by HES to GWs and selected nodes                                        (metrics)
Comminication infrastructure quality arguments shall be acquired from GWs                                               (metrics)
GW WAN configuration data shall be retrieved from GWs for Network Operator queries and system logging/reporting         (New)
Feeder power failures and recoveries shall be reported/notified by GWs to HES                                           (How do we know its a feeder failure?)
Communication failures, retries and recoveries: timeouts, Node/GW, WAN connections                                      (metrics)
Communication infrastructure quality:                                                                                   (metrics, duplicate)
RAT(for WAN) selection and switching: GW (UMTS, HSDPA, HSUPA, HSPA, LTE)                                                (new, no identification of protocol yet)
RAT Service Quality: GW (RSSI, RSRQ, RSRP, RSCP, Tx Pwr Level, Rx Pwr Level)
QoS: Maximum Uplink/Downlink bit rate
Communication channel round trip performance; Server to GW TTL (ICMP ping), GW to Nodes TTL(ICMP ping)
Topology gathering: GW to Nodes
Topology gathering: Node to Node Hopping
HES to GWSs roundrip and throughput performance gathering
GWSs to Nodes roundtrip and throughput performance gathering
GW WAN Configuration:
IMEI (GW, International Mobile Equipment ID, i.e. Modem ID)
IMSI (GW SIM, International Mobile Station ID, i.e. GW's ID on Network Operator)
ICCID (GW SIM, SIM Integrated Circuit Card ID, i.e. SIM ID and manufacturer)
Feeder power failures and recoveries: Node, GW(on battery, on line power)
HES job queues can utilise communication infrastructure status and quality levels to schedule (issue, re-prioritise, postpone, reschedule) jobs to GW/Node groups to improve system performance and decrease wastage.
Reporting system level operational quality
Reporting End-to-End connection, data loss
HES can access the Web APIs of Network Operators as a client (WAN Configuration and Communication Infrastructure Quality
To report network outage
Operator SLA query, demand, reporting



Gateway operations:
- Read IMSI(s) (AT+CIMI)
- Read IMEI (AT+CGSN).
- Read ICCID (AT+CCID?)
- Read RSSI (AT+CSQ?)
- Read network selection (AT+ZSNTE, AT+COPS, AT+CREG)
- Name of manufacturer - AT+CGMI
- Model number - AT+CGMM
- Software version - AT+CGMR
- determine server ping time.
- determine channel performance.
- New CoAP request to supply identity.
- New CoAP request to supply configuration info (hash, but could be considered to be hash of config module for "modem").


---------------------
cellular signal quality:

RSRQ, RSSI, etc
https://www.cablefree.net/wirelesstechnology/4glte/rsrp-rsrq-measurement-lte/


-----------------------------

 7ea02503039604f0e6e700c401810001
01020809010111021101110211011101
11021101d99e7e

<HDLC len="36" >
<TargetAddress Value="1" />
<SourceAddress Value="1" />
<!--I frame.-->
<FrameType Value="96" />
<PDU>
<GetResponse>
  <GetResponseNormal>
    <!--Priority: HIGH ServiceClass: UN_CONFIRMED invokeID: 1-->
    <InvokeIdAndPriority Value="129" />
    <Result>
      <Data>
        <Array Qty="1" >
          <Structure Qty="8" >
            <OctetString Value="01" />
            <UInt8 Value="2" />
            <UInt8 Value="1" />
            <UInt8 Value="2" />
            <UInt8 Value="1" />
            <UInt8 Value="1" />
            <UInt8 Value="2" />
            <UInt8 Value="1" />
          </Structure>
        </Array>
      </Data>
    </Result>
  </GetResponseNormal>
</GetResponse>
</PDU>
</HDLC>


---------------------------------------------

Active Calendar read response
2020-04-27 13:24:44.734 #1   0000000000000003 <log> 0:43:13.220 [debug] [        hdlc] {     hdlc}: rx: (1/3): 7ea02503039604f0e6e700c401810001
2020-04-27 13:24:44.734 #1   0000000000000003 <log> 0:43:13.220 [debug] [        hdlc] {     hdlc}: rx: (2/3): 01020809010111011101110211011101
2020-04-27 13:24:44.734 #1   0000000000000003 <log> 0:43:13.220 [debug] [        hdlc] {     hdlc}: rx: (3/3): 110211012e907e
Passive Calendar read response
2020-04-27 14:09:26.106 #1   0000000000000003 <log> 1:27:54.592 [debug] [        hdlc] {     hdlc}: rx: (1/3): 7ea02503039604f0e6e700c401810001
2020-04-27 14:09:26.106 #1   0000000000000003 <log> 1:27:54.592 [debug] [        hdlc] {     hdlc}: rx: (2/3): 01020809010111021101110211011101
2020-04-27 14:09:26.106 #1   0000000000000003 <log> 1:27:54.592 [debug] [        hdlc] {     hdlc}: rx: (3/3): 11021101d99e7e


<HDLC len="36" >
<TargetAddress Value="1" />
<SourceAddress Value="1" />
<!--I frame.-->
<FrameType Value="96" />
<PDU>
<GetResponse>
  <GetResponseNormal>
    <!--Priority: HIGH ServiceClass: UN_CONFIRMED invokeID: 1-->
    <InvokeIdAndPriority Value="129" />
    <Result>
      <Data>
        <Array Qty="1" >
          <Structure Qty="8" >
            <OctetString Value="01" />
            <UInt8 Value="1" />
            <UInt8 Value="1" />
            <UInt8 Value="2" />
            <UInt8 Value="1" />
            <UInt8 Value="1" />
            <UInt8 Value="2" />
            <UInt8 Value="1" />
          </Structure>
        </Array>
      </Data>
    </Result>
  </GetResponseNormal>
</GetResponse>
</PDU>
</HDLC>

<HDLC len="36" >
<TargetAddress Value="1" />
<SourceAddress Value="1" />
<!--I frame.-->
<FrameType Value="96" />
<PDU>
<GetResponse>
  <GetResponseNormal>
    <!--Priority: HIGH ServiceClass: UN_CONFIRMED invokeID: 1-->
    <InvokeIdAndPriority Value="129" />
    <Result>
      <Data>
        <Array Qty="1" >
          <Structure Qty="8" >
            <OctetString Value="01" />
            <UInt8 Value="2" />
            <UInt8 Value="1" />
            <UInt8 Value="2" />
            <UInt8 Value="1" />
            <UInt8 Value="1" />
            <UInt8 Value="2" />
            <UInt8 Value="1" />
          </Structure>
        </Array>
      </Data>
    </Result>
  </GetResponseNormal>
</GetResponse>
</PDU>
</HDLC>

Attribute 8 - active False
2020-04-28 12:02:07.356 #1   0000000000000003 <log> 0:41:45.085 [debug] [        hdlc] {     hdlc}: rx: (1/3): 7ea02503039604f0e6e700c401810001
2020-04-28 12:02:07.356 #1   0000000000000003 <log> 0:41:45.085 [debug] [        hdlc] {     hdlc}: rx: (2/3): 01020809010111021101110211011101
2020-04-28 12:02:07.356 #1   0000000000000003 <log> 0:41:45.085 [debug] [        hdlc] {     hdlc}: rx: (3/3): 11021101d99e7e
Attribute 4 - active True
2020-04-28 12:05:52.860 #1   0000000000000003 <log> 0:45:30.590 [debug] [        hdlc] {     hdlc}: rx: (1/3): 7ea02503039604f0e6e700c401810001
2020-04-28 12:05:52.860 #1   0000000000000003 <log> 0:45:30.590 [debug] [        hdlc] {     hdlc}: rx: (2/3): 01020809010111011101110211011101
2020-04-28 12:05:52.860 #1   0000000000000003 <log> 0:45:30.590 [debug] [        hdlc] {     hdlc}: rx: (3/3): 110211012e907e

------------------------------------------
time from meter and node.

"coap_request --time-get" and:
"coap_request.py --device "USS 0000008" --device-op GET 8 0.0.1.0.0.255 2"

2020-04-28 09:13:11,921 ctrlport : Connecting to ctrlporthub on localhost:4000
Result 1/1: 14 B: b'090c07e4041c020a0b2eff014a00'
            datetime-octet-string { 2020-04-28T10:11:46 dev 330 status: 0x0 }



--------------------------------------------------
Kaifa:
EUI-64          0.0.96.1.4.255
Node fw         0.128.0.0.9.255
Rx/TX RSSI      0.128.0.0.4.255
Req Channel No  0.128.0.0.7.255
RSSI-target     0.128.0.0.10.255
Actual Channel  0.128.0.0.11.255


---------------------------------------------

cat ./teststring.proto
syntax = "proto2";
message Test2 {
  optional string b = 2;
}

echo b:\"my_testing_string\"|./protoc --encode Test2 teststring.proto>result.out

put this into a file "t":
activationTime: 123
day: 23
periodLength: EVEN_MONTHLY


cat t | protoc --encode PassiveBillingPeriod interface/proto/device_meter_config.proto  -Iinterface/proto

cat t | protoc --encode PassiveBillingPeriod interface/proto/device_meter_config.proto  -Iinterface/proto | od -t x1


ODD_MONTHLY:  "08 7b 10 17 18 03"
EVEN_MONTHLY: "08 7b 10 17 18 02"
MONTHLY:      "08 7b 10 17 18 01"



------------------------------------------------------

billingPeriod: {
    activationTime: 123
    day: 23
    periodLength: EVEN_MONTHLY
}


cat t | protoc --encode MeterConfigMessage interface/proto/device_meter_config.proto  -Iinterface/proto | od -t x1

ODD_MONTHLY:  "1a 06 08 7b 10 17 18 03"
EVEN_MONTHLY: "1a 06 08 7b 10 17 18 02"
MONTHLY:      "1a 06 08 7b 10 17 18 01"

------------------------------------------

Set 0.0.15.0.0.255 attribute 4 (day of month))
Set 0.0.15.0.0.255 ic 22 attr 4 valueLen 17 B
tx unencrypted: (1/2): c10181001600000f0000ff0400010102
tx unencrypted: (2/2): 0209040000000009050000001000
Login state: wait, server: [fd00::1]:5684
Agent Mode: GatewayOnly, ifaces up: uplink lowpan eth4
TASK                      now blocks    max  total  calls
terminal                 6654     32   6994   8785     79
dtls                     4020     12   4112  16528     41
device                   2335     22   3141  14322    219
schedule                  492     11    748   2354     38
uplink_tx                  80      1    196    712      6
eth_up: tx 192.168.2.240 -> 13.232.35.150 56B proto=17
FILE                      now blocks    max  total  calls
wolfssl_funcs            4544     20   4544   8764     33
ctrlport                 4136      2   4136   4136      2
dlms                     2070     12   2300  16037    140
device-dlms              1264      2   1374   1540     14
schedule_service          512     16    512    992     31
GLOBAL                  13509     77  14130  79928    866
Sending keepalive message
RPL: attached as BR, inst 0, rank 128, dag fdaa:1865:6aee:7:21b:c50c:6006:77b8 v.240, pp ::, hop 0, rout
Number of dags: 1
DAG prefix                ver DODAG-ID
  0 fdaa:1865:6aee:7::    240 fdaa:1865:6aee:7:21b:c50c:6006:77b8
Neighbors: 0, local: 0. Parents: 0, preferred: 0
 RPL route list: 0 entries using 0 B (0 B/entry)
ICMPv6 unicast to fd00::1, Echo request (-), 4 B
Send IP on uplink, 8 B, type 58, ttl 32: fdaa:1865:6aee:7:21b:c50c:6006:77b8 -> fd00::1
eth_up: tx 192.168.2.240 -> 13.232.35.150 56B proto=17
Connect HDLC link
tx: (1/1): 7e
tx: (1/1): a020
tx: (1/1): 03
tx: (1/1): 61
tx: (1/1): 93
tx: (1/1): 1b9f
tx: (1/2): 8180140502015e0602015e0704000000
tx: (2/2): 01080400000001
tx: (1/1): 51af
tx: (1/1): 7e
** Giving s_responseSem to start the timeout cycle... **
 -- waiting on s_dlmsSemaphore for 100000ms --
Restarting HDLC timeout due to HDLC send operation
** Waiting for HDLC event (60000ms) **
ACTION_WAIT_FOR_RESPONSE
rx: (1/3): 7ea020610373059e8180140502015e06
rx: (2/3): 02015e07040000000108040000000151
rx: (3/3): af7e
HDLC_TYPE_UA
tx: (1/1): 7e
tx: (1/1): a03d
tx: (1/1): 03
tx: (1/1): 61
tx: (1/1): 10
tx: (1/1): a661
tx: (1/1): e6e600
tx: (1/4): c92f3000003a67c5bcc706ef0e322542
tx: (2/4): 69ae5da03773b7ff06817ad76da3f025
tx: (3/4): c39fbae34ae643df4f8707f7bdb41710
tx: (4/4): 82
tx: (1/1): 7852
tx: (1/1): 7e
** Giving s_responseSem to start the timeout cycle... **
!! Result == ResultOK !!
** Waiting for HDLC event (60000ms) **
Restarting HDLC timeout due to HDLC send operation
** Waiting for HDLC event (60000ms) **
}: eth_up: rx 13.232.35.150 -> 192.168.2.240 56B proto=17
}: Got UDP 13.232.35.150:8050 -> 192.168.2.240:50412
}: Got IPv6 packet on eth_up from 13.232.35.150:8050 48B
}: ICMPv6 unicast from fd00::1, Echo reply (-), 4 B
}: Echo Reply from: fd00::1, id: 0xabcd, seq: 2, ICMP payload size: 4
}: eth_up: rx 13.232.35.150 -> 192.168.2.240 56B proto=17
}: Got UDP 13.232.35.150:8050 -> 192.168.2.240:50412
}: Got IPv6 packet on eth_up from 13.232.35.150:8050 48B
}: ICMPv6 unicast from fd00::1, Echo reply (-), 4 B
}: Echo Reply from: fd00::1, id: 0xabcd, seq: 3, ICMP payload size: 4
}: eth_up: rx 13.232.35.150 -> 192.168.2.240 56B proto=17
}: Got UDP 13.232.35.150:8050 -> 192.168.2.240:50412
}: Got IPv6 packet on eth_up from 13.232.35.150:8050 48B
}: ICMPv6 unicast from fd00::1, Echo reply (-), 4 B
}: Echo Reply from: fd00::1, id: 0xabcd, seq: 4, ICMP payload size: 4
ACTION_WAIT_FOR_RESPONSE
rx: (1/2): 7ea01061033068a2e6e7000e060501da
rx: (2/2): 427e
HDLC_TYPE_I
Passing IFrame up the stack to the DLMS task.
!! Result == ResultOK !!
** Waiting for HDLC event (60000ms) **
Error Response from meter access: access denied through authorisation reason
processXDlmsApdu(4 B): failed
DLMS result is 0 bytes with code 12
dlmsReceiveCb called with s_rxRes=0
** processDlmsPayload (12) **
Broken response: check failed
Error from USS 0000008: comm: broken rsp
fsOpen failed (/mq/000.mq, newfile): Permission denied
Failed to create file /mq/000.mq: permission denied
MeterConfiguration result: failure
Reason: Failed response from meter
Response produced for unknown session id: 321
CoAP sessions: 0 in, 0 out
Disconnect HDLC link
tx: (1/1): 7e
tx: (1/1): a007
tx: (1/1): 03
tx: (1/1): 61
tx: (1/1): 53
tx: (1/1): 6581
tx: (1/1): 7e
** Giving s_responseSem to start the timeout cycle... **
 -- waiting on s_dlmsSemaphore for 100000ms --
Restarting HDLC timeout due to HDLC send operation
** Waiting for HDLC event (60000ms) **
ACTION_WAIT_FOR_RESPONSE
rx: (1/1): 7ea00761037377467e
HDLC_TYPE_UA
HDLC link disconnected
!! Result == ResultOK !!
** Waiting for HDLC event (60000ms) **
DLMS result is 0 bytes with code 0
dlmsReceiveCb called with s_rxRes=12
** processDlmsPayload (0) **
Error ceased from USS 0000008
fsOpen failed (/mq/000.mq, newfile): Permission denied
Failed to create file /mq/000.mq: permission denied
-- unlocking HDLC --
disconnectLink 0x0
-- waiting on the userQueue for -1ms --
Scheduling keepalive in 1s
Sending keepalive message
ICMPv6 unicast to fd00::1, Echo request (-), 4 B
Send IP on uplink, 8 B, type 58, ttl 32: fdaa:1865:6aee:7:21b:c50c:6006:77b8 -> fd00::1
eth_up: tx 192.168.2.240 -> 13.232.35.150 56B proto=17
}: eth_up: rx 13.232.35.150 -> 192.168.2.240 56B proto=17
}: Got UDP 13.232.35.150:8050 -> 192.168.2.240:50412
}: Got IPv6 packet on eth_up from 13.232.35.150:8050 48B
}: ICMPv6 unicast from fd00::1, Echo reply (-), 4 B
}: Echo Reply from: fd00::1, id: 0xabcd, seq: 5, ICMP payload size: 4
** dlmspipe task triggered **
DLMS process finished.
** dlmspipe task waiting to be triggered (30000) **
Postpone device hash propagation, node isn't logged in

------------------------------------

Set 0.0.15.0.0.255 attribute 4 (day of month))
Set 0.0.15.0.0.255 ic 22 attr 4 valueLen 17 B
tx unencrypted: (1/2): c10181001600000f0000ff0400010102
tx unencrypted: (2/2): 0209040000000009050000001700
tx: (1/1): 7e
tx: (1/1): a03d
tx: (1/1): 03
tx: (1/1): 61
tx: (1/1): 54
tx: (1/1): 8665
tx: (1/1): e6e600
tx: (1/4): c92f3000003a9fa5277030a65723ba47
tx: (2/4): a27b2ea063664577199166dd7ebe696b
tx: (3/4): cc7de3e20a65bff987770b920473d052
tx: (4/4): df
tx: (1/1): 8018
tx: (1/1): 7e
** Giving s_responseSem to start the timeout cycle... **
 -- waiting on s_dlmsSemaphore for 100000ms --
Restarting HDLC timeout due to HDLC send operation
** Waiting for HDLC event (60000ms) **
ACTION_WAIT_FOR_RESPONSE
rx: (1/3): 7ea02361037477cfe6e700cd15300000
rx: (2/3): 0729d69c0ff051b5a80fd62fbf0fbd8c
rx: (3/3): b175802a7e
HDLC_TYPE_I
Passing IFrame up the stack to the DLMS task.
!! Result == ResultOK !!
** Waiting for HDLC event (60000ms) **
Encrypted:: (1/2): 153000000729d69c0ff051b5a80fd62f
Encrypted:: (2/2): bf0fbd8cb175
rx decrypted: (1/1): c5018100
DLMS result is 0 bytes with code 0
dlmsReceiveCb called with s_rxRes=0
** processDlmsPayload (0) **


----------------------------------------




2020-04-29 15:47:37.762 #26  001bc50c600677b8 <log> 0:01:21.833 [ info] [        dtls] {     dtls}: Session 2: Timeout (last tx 19 s ago, user triggered: no)
2020-04-29 15:47:37.762 #26  001bc50c600677b8 <log> 0:01:21.833 [ WARN] [        dtls] {     dtls}: Session 2: Too many timeouts, giving up
2020-04-29 15:47:37.762 #26  001bc50c600677b8 <log> 0:01:21.833 [ info] [       login] {     dtls}: DTLS negotiation timeout, restarting login sequence
2020-04-29 15:47:37.762 #26  001bc50c600677b8 <log> 0:01:21.833 [debug] [       login] {     dtls}: Changing state: negotiating DTLS -> wait
2020-04-29 15:47:37.762 #26  001bc50c600677b8 <log> 0:01:21.833 [debug] [ meter/genus] {   device}: Configure BillingPeriod step 0
2020-04-29 15:47:37.762 #26  001bc50c600677b8 <log> 0:01:21.833 [debug] [ meter/genus] {   device}: Set 0.0.15.0.137.255 attribute 4 (day of month))
2020-04-29 15:47:37.762 #26  001bc50c600677b8 <log> 0:01:21.833 [debug] [        dlms] {   device}: Set 0.0.15.0.137.255 ic 22 attr 4 valueLen 17 B
2020-04-29 15:47:37.762 #26  001bc50c600677b8 <log> 0:01:21.833 [debug] [        dlms] {   device}: tx unencrypted: (1/2): c10181001600000f0089ff0400010102
2020-04-29 15:47:37.762 #26  001bc50c600677b8 <log> 0:01:21.833 [debug] [        dlms] {   device}: tx unencrypted: (2/2): 0209040000000009050000001700
2020-04-29 15:47:37.762 #26  001bc50c600677b8 <log> 0:01:21.834 [debug] [ uplink-tun6] { schedule}: Sending keepalive message
2020-04-29 15:47:37.763 #26  001bc50c600677b8 <log> 0:01:21.834 [debug] [        icmp] { schedule}: ICMPv6 unicast to fd00::1, Echo request (-), 4 B
2020-04-29 15:47:37.763 #26  001bc50c600677b8 <log> 0:01:21.834 [debug] [          ip] { schedule}: Send IP on uplink, 8 B, type 58, ttl 32: fdaa:1865:6aee:7:21b:c50c:6006:77b8 -> fd00::1
2020-04-29 15:47:37.763 #26  001bc50c600677b8 <log> 0:01:21.834 [debug] [   ipv4/core] {uplink_tx}: eth_up: tx 192.168.2.240 -> 13.232.35.150 56B proto=17
2020-04-29 15:47:37.813 #26  001bc50c600677b8 <log> 0:01:21.884 [debug] [        hdlc] {   device}: tx: (1/1): 7e
2020-04-29 15:47:37.813 #26  001bc50c600677b8 <log> 0:01:21.884 [debug] [        hdlc] {   device}: tx: (1/1): a03d
2020-04-29 15:47:37.813 #26  001bc50c600677b8 <log> 0:01:21.884 [debug] [        hdlc] {   device}: tx: (1/1): 03
2020-04-29 15:47:37.813 #26  001bc50c600677b8 <log> 0:01:21.885 [debug] [        hdlc] {   device}: tx: (1/1): 61
2020-04-29 15:47:37.813 #26  001bc50c600677b8 <log> 0:01:21.885 [debug] [        hdlc] {   device}: tx: (1/1): 54
2020-04-29 15:47:37.813 #26  001bc50c600677b8 <log> 0:01:21.885 [debug] [        hdlc] {   device}: tx: (1/1): 8665
2020-04-29 15:47:37.813 #26  001bc50c600677b8 <log> 0:01:21.885 [debug] [        hdlc] {   device}: tx: (1/1): e6e600
2020-04-29 15:47:37.814 #26  001bc50c600677b8 <log> 0:01:21.885 [debug] [        hdlc] {   device}: tx: (1/4): c92f3000003b7f562dfbf9e5d7db5786
2020-04-29 15:47:37.814 #26  001bc50c600677b8 <log> 0:01:21.885 [debug] [        hdlc] {   device}: tx: (2/4): ec65d4abbfeb628e8b09e3879d2f80b2
2020-04-29 15:47:37.814 #26  001bc50c600677b8 <log> 0:01:21.885 [debug] [        hdlc] {   device}: tx: (3/4): 0d67a5d4c707a0a85db362a1249c498e
2020-04-29 15:47:37.814 #26  001bc50c600677b8 <log> 0:01:21.885 [debug] [        hdlc] {   device}: tx: (4/4): bd
2020-04-29 15:47:37.814 #26  001bc50c600677b8 <log> 0:01:21.885 [debug] [        hdlc] {   device}: tx: (1/1): ff5b
2020-04-29 15:47:37.814 #26  001bc50c600677b8 <log> 0:01:21.885 [debug] [        hdlc] {   device}: tx: (1/1): 7e
2020-04-29 15:47:37.814 #26  001bc50c600677b8 <log> 0:01:21.886 [debug] [        hdlc] {   device}: ** Giving s_responseSem to start the timeout cycle... **
2020-04-29 15:47:37.814 #26  001bc50c600677b8 <log> 0:01:21.886 [debug] [  meter/dlms] {   device}:  -- waiting on s_dlmsSemaphore for 100000ms --
2020-04-29 15:47:37.814 #26  001bc50c600677b8 <log> 0:01:21.886 [debug] [        hdlc] {     hdlc}: Restarting HDLC timeout due to HDLC send operation
2020-04-29 15:47:37.814 #26  001bc50c600677b8 <log> 0:01:21.886 [debug] [        hdlc] {     hdlc}: ** Waiting for HDLC event (60000ms) **
2020-04-29 15:47:37.896 #26  001bc50c600677b8 <log> 0:01:21.967 [debug] [   ipv4/core] {socketUplink}: eth_up: rx 13.232.35.150 -> 192.168.2.240 56B proto=17
2020-04-29 15:47:37.896 #26  001bc50c600677b8 <log> 0:01:21.967 [debug] [    ipv4/udp] {socketUplink}: Got UDP 13.232.35.150:8050 -> 192.168.2.240:50412
2020-04-29 15:47:37.896 #26  001bc50c600677b8 <log> 0:01:21.967 [debug] [ uplink-tun6] {socketUplink}: Got IPv6 packet on eth_up from 13.232.35.150:8050 48B
2020-04-29 15:47:37.896 #26  001bc50c600677b8 <log> 0:01:21.967 [debug] [        icmp] {socketUplink}: ICMPv6 unicast from fd00::1, Echo reply (-), 4 B
2020-04-29 15:47:37.896 #26  001bc50c600677b8 <log> 0:01:21.967 [debug] [   icmp/echo] {socketUplink}: Echo Reply from: fd00::1, id: 0xabcd, seq: 2, ICMP payload size: 4
2020-04-29 15:47:38.026 #26  001bc50c600677b8 <log> 0:01:22.096 [debug] [        hdlc] {     hdlc}: ACTION_WAIT_FOR_RESPONSE
2020-04-29 15:47:38.026 #26  001bc50c600677b8 <log> 0:01:22.096 [debug] [        hdlc] {     hdlc}: rx: (1/3): 7ea02361037477cfe6e700cd15300000
2020-04-29 15:47:38.026 #26  001bc50c600677b8 <log> 0:01:22.096 [debug] [        hdlc] {     hdlc}: rx: (2/3): 081f1d752f22114e40a388741e21ec69
2020-04-29 15:47:38.026 #26  001bc50c600677b8 <log> 0:01:22.096 [debug] [        hdlc] {     hdlc}: rx: (3/3): fa8e798e7e
2020-04-29 15:47:38.026 #26  001bc50c600677b8 <log> 0:01:22.096 [debug] [        hdlc] {     hdlc}: HDLC_TYPE_I
2020-04-29 15:47:38.026 #26  001bc50c600677b8 <log> 0:01:22.096 [debug] [        hdlc] {     hdlc}: Passing IFrame up the stack to the DLMS task.
2020-04-29 15:47:38.026 #26  001bc50c600677b8 <log> 0:01:22.096 [debug] [        hdlc] {     hdlc}: !! Result == ResultOK !!
2020-04-29 15:47:38.026 #26  001bc50c600677b8 <log> 0:01:22.097 [debug] [        hdlc] {     hdlc}: ** Waiting for HDLC event (60000ms) **
2020-04-29 15:47:38.026 #26  001bc50c600677b8 <log> 0:01:22.097 [debug] [        dlms] {     dlms}: Encrypted:: (1/2): 15300000081f1d752f22114e40a38874
2020-04-29 15:47:38.026 #26  001bc50c600677b8 <log> 0:01:22.097 [debug] [        dlms] {     dlms}: Encrypted:: (2/2): 1e21ec69fa8e
2020-04-29 15:47:38.026 #26  001bc50c600677b8 <log> 0:01:22.097 [debug] [        dlms] {     dlms}: rx decrypted: (1/1): c5018100
2020-04-29 15:47:38.026 #26  001bc50c600677b8 <log> 0:01:22.097 [debug] [        dlms] {     dlms}: DLMS result is 0 bytes with code 0
2020-04-29 15:47:38.026 #26  001bc50c600677b8 <log> 0:01:22.097 [debug] [  meter/dlms] {     dlms}: dlmsReceiveCb called with s_rxRes=0
2020-04-29 15:47:38.026 #26  001bc50c600677b8 <log> 0:01:22.097 [debug] [  meter/dlms] {   device}: ** processDlmsPayload (0) **






2020-04-29 15:47:48.762 #26  001bc50c600677b8 <log> 0:01:32.833 [debug] [    dlmspipe] { dlmspipe}: ** dlmspipe task triggered **
2020-04-29 15:47:48.762 #26  001bc50c600677b8 <log> 0:01:32.833 [debug] [    dlmspipe] { dlmspipe}: DLMS process finished.
2020-04-29 15:47:48.762 #26  001bc50c600677b8 <log> 0:01:32.833 [debug] [    dlmspipe] { dlmspipe}: ** dlmspipe task waiting to be triggered (30000) **
2020-04-29 15:47:48.762 #26  001bc50c600677b8 <log> 0:01:32.833 [debug] [ meter/genus] {   device}: Configure BillingPeriod step 1
2020-04-29 15:47:48.762 #26  001bc50c600677b8 <log> 0:01:32.833 [debug] [ meter/genus] {   device}: Set 1.0.0.8.6.255 attribute 2 (periodLength)
2020-04-29 15:47:48.762 #26  001bc50c600677b8 <log> 0:01:32.833 [debug] [        dlms] {   device}: Set 1.0.0.8.6.255 ic 1 attr 2 valueLen 2 B
2020-04-29 15:47:48.762 #26  001bc50c600677b8 <log> 0:01:32.833 [debug] [        dlms] {   device}: tx unencrypted: (1/1): c1018100010100000806ff02001103
2020-04-29 15:47:48.814 #26  001bc50c600677b8 <log> 0:01:32.885 [debug] [        hdlc] {   device}: tx: (1/1): 7e
2020-04-29 15:47:48.814 #26  001bc50c600677b8 <log> 0:01:32.885 [debug] [        hdlc] {   device}: tx: (1/1): a02e
2020-04-29 15:47:48.814 #26  001bc50c600677b8 <log> 0:01:32.885 [debug] [        hdlc] {   device}: tx: (1/1): 03
2020-04-29 15:47:48.814 #26  001bc50c600677b8 <log> 0:01:32.885 [debug] [        hdlc] {   device}: tx: (1/1): 61
2020-04-29 15:47:48.814 #26  001bc50c600677b8 <log> 0:01:32.885 [debug] [        hdlc] {   device}: tx: (1/1): 76
2020-04-29 15:47:48.814 #26  001bc50c600677b8 <log> 0:01:32.885 [debug] [        hdlc] {   device}: tx: (1/1): fa81
2020-04-29 15:47:48.814 #26  001bc50c600677b8 <log> 0:01:32.885 [debug] [        hdlc] {   device}: tx: (1/1): e6e600
2020-04-29 15:47:48.814 #26  001bc50c600677b8 <log> 0:01:32.885 [debug] [        hdlc] {   device}: tx: (1/3): c9203000003b8008b0aea0ed20eb406e
2020-04-29 15:47:48.814 #26  001bc50c600677b8 <log> 0:01:32.885 [debug] [        hdlc] {   device}: tx: (2/3): 0fcdb6207b77105e20b9e326eabfc50f
2020-04-29 15:47:48.814 #26  001bc50c600677b8 <log> 0:01:32.885 [debug] [        hdlc] {   device}: tx: (3/3): dedd
2020-04-29 15:47:48.814 #26  001bc50c600677b8 <log> 0:01:32.885 [debug] [        hdlc] {   device}: tx: (1/1): 2a08
2020-04-29 15:47:48.814 #26  001bc50c600677b8 <log> 0:01:32.885 [debug] [        hdlc] {   device}: tx: (1/1): 7e
2020-04-29 15:47:48.814 #26  001bc50c600677b8 <log> 0:01:32.885 [debug] [        hdlc] {   device}: ** Giving s_responseSem to start the timeout cycle... **
2020-04-29 15:47:48.814 #26  001bc50c600677b8 <log> 0:01:32.885 [debug] [  meter/dlms] {   device}:  -- waiting on s_dlmsSemaphore for 100000ms --
2020-04-29 15:47:48.814 #26  001bc50c600677b8 <log> 0:01:32.885 [debug] [        hdlc] {     hdlc}: Restarting HDLC timeout due to HDLC send operation
2020-04-29 15:47:48.814 #26  001bc50c600677b8 <log> 0:01:32.885 [debug] [        hdlc] {     hdlc}: ** Waiting for HDLC event (60000ms) **
2020-04-29 15:47:49.020 #26  001bc50c600677b8 <log> 0:01:33.089 [debug] [        hdlc] {     hdlc}: ACTION_WAIT_FOR_RESPONSE
2020-04-29 15:47:49.020 #26  001bc50c600677b8 <log> 0:01:33.090 [debug] [        hdlc] {     hdlc}: rx: (1/3): 7ea0236103966b0be6e700cd15300000
2020-04-29 15:47:49.020 #26  001bc50c600677b8 <log> 0:01:33.090 [debug] [        hdlc] {     hdlc}: rx: (2/3): 08203c234ee6f81d99e073797acf1b63
2020-04-29 15:47:49.020 #26  001bc50c600677b8 <log> 0:01:33.090 [debug] [        hdlc] {     hdlc}: rx: (3/3): e6b454a57e
2020-04-29 15:47:49.021 #26  001bc50c600677b8 <log> 0:01:33.090 [debug] [        hdlc] {     hdlc}: HDLC_TYPE_I
2020-04-29 15:47:49.021 #26  001bc50c600677b8 <log> 0:01:33.090 [debug] [        hdlc] {     hdlc}: Passing IFrame up the stack to the DLMS task.
2020-04-29 15:47:49.021 #26  001bc50c600677b8 <log> 0:01:33.090 [debug] [        hdlc] {     hdlc}: !! Result == ResultOK !!
2020-04-29 15:47:49.021 #26  001bc50c600677b8 <log> 0:01:33.090 [debug] [        hdlc] {     hdlc}: ** Waiting for HDLC event (60000ms) **
2020-04-29 15:47:49.021 #26  001bc50c600677b8 <log> 0:01:33.091 [debug] [        dlms] {     dlms}: Encrypted:: (1/2): 1530000008203c234ee6f81d99e07379
2020-04-29 15:47:49.021 #26  001bc50c600677b8 <log> 0:01:33.091 [debug] [        dlms] {     dlms}: Encrypted:: (2/2): 7acf1b63e6b4
2020-04-29 15:47:49.021 #26  001bc50c600677b8 <log> 0:01:33.091 [debug] [        dlms] {     dlms}: rx decrypted: (1/1): c5018100
2020-04-29 15:47:49.021 #26  001bc50c600677b8 <log> 0:01:33.091 [debug] [        dlms] {     dlms}: DLMS result is 0 bytes with code 0
2020-04-29 15:47:49.021 #26  001bc50c600677b8 <log> 0:01:33.091 [debug] [  meter/dlms] {     dlms}: dlmsReceiveCb called with s_rxRes=0
2020-04-29 15:47:49.021 #26  001bc50c600677b8 <log> 0:01:33.091 [debug] [  meter/dlms] {   device}: ** processDlmsPayload (0) **

----------------------------------------

viewAreaElement.addEventListener('scroll', debounceScroll, true);





    ./tools/c4-tools/coap_request.py --ctrlporthub :4000 --rll-key /Data/Temp/DemoPOCkey.txt
    ./tools/c4-tools/coap_request.py --ctrlporthub :4000 --load-key client-key /Data/Temp/ProdPack/ProdPack1000/00-1B-C5-0C-60-06-76-33/node.key.der
    ./tools/c4-tools/coap_request.py --ctrlporthub :4000 --load-key client-cert /Data/Temp/ProdPack/ProdPack1000/00-1B-C5-0C-60-06-76-33/node.crt.der
    ./tools/c4-tools/coap_request.py --ctrlporthub :4000 --load-key root-cert /Data/Temp/ProdPack/ProdPack1000/00-1B-C5-0C-60-06-76-33/ca.crt.der
    ./tools/c4-tools/coap_request.py --ctrlporthub :4000 --config prod.lowpan.eui64 00-1B-C5-0C-60-06-76-33
    ./tools/c4-tools/coap_request.py --ctrlporthub :4000 --config prod.prodtime 1
    ./tools/c4-tools/coap_request.py --ctrlporthub :4000 --config lowpan.channelplan 0
    ./tools/c4-tools/coap_request.py --ctrlporthub :4000 --config lowpan.channel 5
    ./tools/c4-tools/coap_request.py --ctrlporthub :4000 --config rpl.instance_id  8
    ./tools/c4-tools/coap_request.py --ctrlporthub :4000 --config server.ip fd00::1
    ./tools/c4-tools/coap_request.py --ctrlporthub :4000 --config modem.tun6.secret ZV9IPCHFvINmOEKv
    ./tools/c4-tools/coap_request.py --ctrlporthub :4000 --config modem.tun6.ip mea-dev-hes.mea.prod.cyanconnode.com
    ./tools/c4-tools/coap_request.py --ctrlporthub :4000 --config modem.apn wlapn4.com
    ./tools/c4-tools/coap_request.py --ctrlporthub :4000 --config modem.username cyan
    ./tools/c4-tools/coap_request.py --ctrlporthub :4000 --config modem.password cyan
    ./tools/c4-tools/coap_request.py --ctrlporthub :4000 --config modem.authmethod PAP
    ./tools/c4-tools/coap_request.py --ctrlporthub :4000 --restart
----------------------

Add-Ons need to be reported for new Tangedco functionality

For all new metering functionality such as multi-phase-relays and UI functionality, the Agent should identify the meter and report the appropriate (new) Add-Ons.
This will enable the NMS&SMA to identify the available functionality for the chosen meter and filter functionality appropriately.


--------------------------------------

configItem: {
    dataType: BILLING_PERIOD
    getType: ACTIVE_SET
}


cat t | protoc --encode GetMeterConfigRequest interface/proto/device_meter_config.proto  -Iinterface/proto | od -t x1

ODD_MONTHLY:  "1a 06 08 7b 10 17 18 03"
EVEN_MONTHLY: "1a 06 08 7b 10 17 18 02"
MONTHLY:      "1a 06 08 7b 10 17 18 01"

--------------------------------------------------------
Gateway boot problem
(BAD)

b Reset_Handler
(gdb) info reg
r0             0x40052000          1074077696
r1             0x80000000          -2147483648
r2             0x287b9             165817
r3             0x20020000          537001984
r4             0xbbf5              48117
r5             0xa5a5a5a5          -1515870811
r6             0xa5a5a5a5          -1515870811
r7             0xa5a5a5a5          -1515870811
r8             0xa5a5a5a5          -1515870811
r9             0xa5a5a5a5          -1515870811
r10            0xa5a5a5a5          -1515870811
r11            0xa5a5a5a5          -1515870811
r12            0x7fffffff          2147483647
sp             0x20020000          0x20020000
lr             0xffffffff          -1
pc             0x287b8             0x287b8 <Reset_Handler>
xPSR           0x1000000           16777216
fpscr          0x0                 0
msp            0x2001ffe0          0x2001ffe0
psp            0x20020000          0x20020000
primask        0x1                 1
basepri        0xa0                -96
faultmask      0x0                 0
control        0x2                 2



(GOOD)
(gdb) info reg
r0             0x40052000          1074077696
r1             0x80000000          -2147483648
r2             0x287b9             165817
r3             0x20020000          537001984
r4             0xbbf5              48117
r5             0xa5a5a5a5          -1515870811
r6             0xa5a5a5a5          -1515870811
r7             0xa5a5a5a5          -1515870811
r8             0xa5a5a5a5          -1515870811
r9             0xa5a5a5a5          -1515870811
r10            0xa5a5a5a5          -1515870811
r11            0xa5a5a5a5          -1515870811
r12            0x7fffffff          2147483647
sp             0x20020000          0x20020000
lr             0xffffffff          -1
pc             0x287b8             0x287b8 <Reset_Handler>
xPSR           0x1000000           16777216
fpscr          0x0                 0
msp            0x2001ffe0          0x2001ffe0
psp            0x20020000          0x20020000
primask        0x1                 1
basepri        0xa0                -96
faultmask      0x0                 0
control        0x2                 2


(Bad, will boot to bootloader, crashes in Reset_Handler in main fw)
adapter speed: 1000 kHz
Info : The selected transport took over low-level target control. The results might dif
Info : Unable to match requested speed 1000 kHz, using 950 kHz
Info : Unable to match requested speed 1000 kHz, using 950 kHz
Info : clock speed 950 kHz
Info : STLINK v2 JTAG v27 API v2 SWIM v6 VID 0x0483 PID 0x3748
Info : using stlink api v2
Info : Target voltage: 3.256021                                 <-------
Info : efm32.cpu: hardware has 6 breakpoints, 4 watchpoints
target halted due to debug-request, current mode: Thread
xPSR: 0x01000000 pc: 0x0fe10000 msp: 0x20000400
Info : accepting 'gdb' connection on tcp/3333
Info : detected part: EFR32FG12P Flex Gecko, rev 16
Info : flash size = 1024kbytes
Info : flash page size = 2048bytes
target halted due to debug-request, current mode: Thread
xPSR: 0x01000000 pc: 0x0fe10000 msp: 0x20000400


(Good, running, no debug)
adapter speed: 1000 kHz
Info : The selected transport took over low-level target control. The res
 differ compared to plain JTAG/SWD
Info : Unable to match requested speed 1000 kHz, using 950 kHz
Info : Unable to match requested speed 1000 kHz, using 950 kHz
Info : clock speed 950 kHz
Info : STLINK v2 JTAG v27 API v2 SWIM v6 VID 0x0483 PID 0x3748
Info : using stlink api v2
Info : Target voltage: 1.579568                                     <----
Error: init mode failed (unable to connect to the target)
in procedure 'init'
in procedure 'ocd_bouncer'

---------------------------------------


Breakpoint 3, Reset_Handler () at src/hw/cortex-m3/startup.c:92
92	  _start();
(gdb) del 3
(gdb) c
Continuing.
^C
Program received signal SIGINT, Interrupt.
BUS_RegBitRead (bit=3, addr=0x400e4090) at build/3pp/flex/platform/emlib/inc/em_bus.h:194
194	  return *(volatile uint32_t *)aliasAddr;
(gdb) where
#0  BUS_RegBitRead (bit=3, addr=0x400e4090) at build/3pp/flex/platform/emlib/inc/em_bus.h:194
#1  CMU_OscillatorEnable (osc=cmuOsc_HFXO, enable=enable@entry=true, wait=wait@entry=true)
    at build/3pp/flex/platform/emlib/src/em_cmu.c:3716
#2  0x0004dd4e in CMU_ClockSelectSet (clock=clock@entry=cmuClock_HF, ref=ref@entry=cmuSelect_HFXO)
    at build/3pp/flex/platform/emlib/src/em_cmu.c:2643
#3  0x00039c84 in halInitChipSpecific () at src/platform/init/platform_efr32.c:114
#4  platformInit () at src/platform/init/platform_efr32.c:137
#5  0x0003a172 in cnd_agentInit (agentOptions=agentOptions@entry=0x0) at src/terminal/agent.c:90
#6  0x000101ac in main (argc=<optimized out>, argv=<optimized out>) at src/terminal/main.c:17
(gdb)

build/3pp/flex/platform/emlib/src/em_cmu.c:3716

This never completes:
Breakpoint 7, CMU_ClockSelectSet (clock=clock@entry=cmuClock_HF, ref=ref@entry=cmuSelect_HFXO)
    at build/3pp/flex/platform/emlib/src/em_cmu.c:2643
2643	      CMU_OscillatorEnable(osc, true, true);

cmuClock_HF

Never gets to this:
flashWaitStateMax()


----------------------------------------------

forceRender
renderView
case RenderingStates.INITIAL

this.pdfViewer object.
div id="viewer" is zero height, should be ~12800px.


-------------------------------------------------------
ESW and alarms

Its easier to describe the process in detail than address each point as there is extra complexity that isn't being touched upon:

In a double-power-outage, the behaviour can differ depending on when the outage happened. What really matters in this case is whether the node has completed discovery of the meter and if a login has occurred. Both these mechanisms can take many minutes.

What is really happening is that the node powers up and within a few seconds will try to start discovery. Simultaneously, the network is initialised and a login attempted. Both those procedures may fail and be retried. It could take many hours for both those operations to complete, but is typically minutes.
In order to not accidentally clear the other alarms while sending a last-gasp (as was happening a few months ago), we save a cached copy of the ESW whenever we read the ESW. This cached version is then used when a last-gasp is sent to avoid having to read the meter (which is at this point, un-powered).

If we haven't had a chance to read the ESW from the meter (and the meter is now dead), then we have no choice but to send up the last-gasp alarm with the other bits cleared. This is another issue with synthesizing the alarms. We can genuinely be put into a situation where we apparently clear the "other" alarm bits that may reappear later. There is nothing we can do in this situation. Even attempting to read the ESW as the very first operation merely narrows the duration that this is a possibility for.

So, if we have had a chance to discover the meter and read the ESW.... but we haven't yet logged in, we have a cached version of the ESW which we can use to send the LG. In this case, the last-gasp will be sent but will fail and go into the mq for later delivery. The delivery will eventually make it up to the server after a few hours potentially.

So a last-gasp may or may not contain the other ESW bits depending on exactly when the different events occurred.

For first-breath, due to the desire to not "lose" alarm bits, we have to wait until we read the ESW from the meter.
Before we interact with the meter, we need the discovery to happen otherwise we wouldn't have a meter-id, etc that we need to be able correctly register our meter with the SMA. This process can take a few minutes.

Consider a different situation, we could have discovery completing and the node logging in, thus triggering an ESW read (for the purposes of sending a first-breath). Before that ESW read occurs, a PFAIL notification comes in and we also trigger the last-gasp notification.
When the ESW read completes we send an alarm notification that has *both* last-gasp and first-breath flags set. This is a genuine effect seen in the wild.
In this case, you could say that we should send separate notifications, one with FB, one with LG.... but the time will be identical on both of those notifcations causing a power-outage to be recorded of zero seconds duration.

Another situation that produces a similar effect is where a power-fail occurs soon after power-up. Some meters do actually set the first-breath flag in the meter regardless of whether we're synthesizing that flag. In those cases, the meters clear that flag after a particular duration (roughly a minute, IIRC). If the power-fail occurs prior to that flag being cleared, we can also generate a synthesized last-gasp that is combined with the (real) first-breath from the meter.

Now, the timing....

Some meters implement a the full DLMS-PUSH mechanism, i.e. the meter notifies the Agent via a GPIO and the Agent reads the alarm packet via a specially-crafted "RR" packet. The reading of this alarm packet clears the specific alarms that are transferred in that packet. This is intended to avoid any race-condition in reading alarms.
Crucially, this packet also contains the timestamp that the indicated alarms occurred at.

Other meters do not implement PUSH properly and instead simply raise the nEVENT line to notify the Agent to read the ESW in the normal manner. This has two drawbacks, a) the meter has no knowledge of what alarms have been read (so for example it can't clear first-breath after a first-read), and b) No timing information is recorded as to when the alarm occurred. In this case, we do the best we can and register the alarm using the current best-knowledge of the meter-time (which is read periodically by the Agent from the meter).
So, the timestamp of the alarms in this case is the time that we happened to read the meter-RTC previously (whenever that happened). It could quite easily differ from real meter-time by a number of minutes. This could of course be tightened up but due to the Agent not being the meter, we need to communicate with the meter over a link that involves retrys. This can again cause delays over what is expected.

Because the timing is not being generated by the meter, any short-duration alarms that have a "set/reset" behaviour may not be seen, due to them being raised and cleared within a small number of seconds of each other will not be seen as by the time the ESW read happens, the alarm will have cleared. For these meters, the Agent is effectively taking a snapshot of the ESW when prompted to by the meter. This is not a reliable (in the computer-science sense) mechanism.

On to the relationship between node-time and meter-time. This in itself is a complicated issue as time in a distributed system is non-deterministic. Suffice to say that the times on each individual device in the chain can drift either way at various rates. We attempt to manage this with our time-sync mechanism, but on the meter, that will typically have up to four hours worth of drift applied to it. This can cause meter-time to be ahead or behind node-time.

In a worst case, an event could be generated by the meter immediately prior to a time-sync. the time-sync then sets the time backwards and the event is cleared (short-term event). In this case, the clearing-event will have a timestamp before the setting event. This will also be reflected in the event-log in this case.

So, in summary, alarms can be accurate.... but:
Synthesized alarms can have matched-pairs occurring at the same time (FB/LG)
Synthesized alarms can be sent without the other alarms bits being present.
Alarms can be missed.
Last-gasp can be sent without a matching first-breath.
Timestamps on alarms can be many minutes behind actual meter time.
Timestamps on alarms can be a few seconds ahead or behind node time.
"Matched pairs" of alarms (from the meter) can seemingly have the same time, causing a (seeming) zero-duration event.
Clearing events can happen before the setting event.
A lot of these may seem to have small probabilities of happening. Unfortunately, Omnimesh is a large distributed system with hundreds of thousands of individual devices. At this scale we will see all these types of effects.

Basically, all these issues can be avoided if you just read the event-profile for this same information. I would go so far as to say that if your purpose is to derive any information from these type of alarms, you must use the event-log rather than the alarms, certainly if the Agent is synthesizing first-breath and last-gasp.


For your point 3) There is a very simple check to prioritise last-gasp over first-breath in the case where if we are attempting to synthesize both a FB and LG together, then we prioritise the LG. As I said at the time, I don't believe this is the correct solution to the issue as this is just hiding one small problem. The issue of combined FB and LG can still occur when they are meter-generated instead.
I believe the filtering you're referring prior to that was a de-duplication of the event-log, not the alarms. These are separate but related (in the meter).

Regarding point 4) correct, the node reads the ESW as is described above (thats the only way to get the ESW). This is the same for all alarms, not just tamper. The node performs no filtering at all of any alarms from the meter. The ESW that is read (or is PUSHed to the Agent) is sent straight up to the server as-is.

Point 5) yes.

So can we do better? yes, of course.
We could a) Direct people to use the event-log wherever possible or b) rewrite the meter-alarm-reading mechanism in the Agent to use the event-log instead of using the ESW (effectively doing a) in an automated manner ).


-------------------------------------------------

(gdb) x/16xb &uartBuffer[0]
0x2000bfb7 <uartBuffer>:	0x07	0x07	0x53	0x81	0xd3	0x7e	0x00	0x00
0x2000bfbf <uartBuffer+8>:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
(gdb) p uartBufferIndex
$1 = 6


(gdb) x/256xb &uartBuffer[0]
0x2000bfb7 <uartBuffer>:	0x7e	0xa0	0x53	0x81	0xd3	0x7e	0xf3	0x33
0x2000bfbf <uartBuffer+8>:	0x02	0x01	0x5e	0x07	0x04	0x00	0x00	0x00
0x2000bfc7 <uartBuffer+16>:	0x01	0x08	0x04	0x00	0x00	0x00	0x01	0x51
0x2000bfcf <uartBuffer+24>:	0xaf	0x7e	0x7e	0xa0	0x7e	0xa0	0x20	0x03
0x2000bfd7 <uartBuffer+32>:	0x03	0x93	0xfe	0xc9	0x81	0x80	0x14	0x05
0x2000bfdf <uartBuffer+40>:	0x02	0x01	0x5e	0x06	0x02	0x01	0x5e	0x07
0x2000bfe7 <uartBuffer+48>:	0x04	0x00	0x00	0x00	0x01	0x08	0x04	0x00
0x2000bfef <uartBuffer+56>:	0x00	0x00	0x01	0x51	0xaf	0x7e	0x7e	0xa0
0x2000bff7 <uartBuffer+64>:	0x20	0x03	0x03	0x93	0xfe	0xc9	0x81	0x80
0x2000bfff <uartBuffer+72>:	0x14	0x05	0x02	0x01	0x5e	0x06	0x02	0x01
0x2000c007 <uartBuffer+80>:	0x5e	0x07	0x04	0x00	0x00	0x00	0x01	0x08
0x2000c00f <uartBuffer+88>:	0x04	0x00	0x00	0x00	0x01	0x51	0xaf	0x7e
0x2000c017 <uartBuffer+96>:	0x7e	0xa0	0xe0	0xb2	0xa0	0x14	0x05	0x02
0x2000c01f <uartBuffer+104>:	0x01	0x5e	0x06	0x02	0x01	0x5e	0x07	0x04
0x2000c027 <uartBuffer+112>:	0x00	0x00	0x00	0x01	0x08	0x04	0x00	0x00
0x2000c02f <uartBuffer+120>:	0x00	0x01	0x51	0xaf	0x7e	0x7e	0xa0	0x20
0x2000c037 <uartBuffer+128>:	0x03	0x05	0x01	0x14	0x05	0x02	0x01	0x5e
0x2000c03f <uartBuffer+136>:	0x06	0x02	0x01	0x5e	0x07	0x04	0x00	0x00
0x2000c047 <uartBuffer+144>:	0x00	0x08	0x04	0x00	0x00	0x00	0x01	0x51
0x2000c04f <uartBuffer+152>:	0xaf	0x7e	0x7e	0xa0	0x20	0x03	0x03	0x93
0x2000c057 <uartBuffer+160>:	0xfe	0xc9	0x81	0x80	0x14	0x05	0x02	0x01
0x2000c05f <uartBuffer+168>:	0x5e	0x06	0x02	0x01	0x5e	0x07	0x04	0x00
0x2000c067 <uartBuffer+176>:	0x00	0x00	0x01	0x08	0x04	0x00	0x00	0x00
0x2000c06f <uartBuffer+184>:	0x01	0x51	0xaf	0x7e	0x7e	0xa0	0x20	0x03
0x2000c077 <uartBuffer+192>:	0x03	0x93	0xfe	0xc9	0x81	0x80	0x14	0x05
0x2000c07f <uartBuffer+200>:	0x02	0x01	0x5e	0x06	0x02	0x01	0x5e	0xff
0x2000c087 <uartBuffer+208>:	0x00	0x00	0x00	0x01	0x08	0x04	0x00	0x00
0x2000c08f <uartBuffer+216>:	0x00	0x01	0x00	0x00	0x00	0x00	0x00	0x00
0x2000c097 <uartBuffer+224>:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x2000c09f <uartBuffer+232>:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x2000c0a7 <uartBuffer+240>:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x2000c0af <uartBuffer+248>:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
(gdb) p uartBufferIndex
$3 = 218


2020-05-13 12:22:23.775 #1   001bc50c6006f4cd <log> 0:01:06.065 [debug] [        hdlc] {     dlms}: Connect HDLC link
2020-05-13 12:22:23.775 #1   001bc50c6006f4cd <log> 0:01:06.072 [debug] [        hdlc] {     dlms}: tx: (1/1): 7e
2020-05-13 12:22:23.775 #1   001bc50c6006f4cd <log> 0:01:06.078 [debug] [        hdlc] {     dlms}: tx: (1/1): a020
2020-05-13 12:22:23.775 #1   001bc50c6006f4cd <log> 0:01:06.085 [debug] [        hdlc] {     dlms}: tx: (1/1): 03
2020-05-13 12:22:23.775 #1   001bc50c6006f4cd <log> 0:01:06.091 [debug] [        hdlc] {     dlms}: tx: (1/1): 03
2020-05-13 12:22:23.775 #1   001bc50c6006f4cd <log> 0:01:06.098 [debug] [        hdlc] {     dlms}: tx: (1/1): 93
2020-05-13 12:22:23.816 #1   001bc50c6006f4cd <log> 0:01:06.104 [debug] [        hdlc] {     dlms}: tx: (1/1): fec9
2020-05-13 12:22:23.816 #1   001bc50c6006f4cd <log> 0:01:06.111 [debug] [        hdlc] {     dlms}: tx: (1/2): 8180140502015e0602015e0704000000
2020-05-13 12:22:23.816 #1   001bc50c6006f4cd <log> 0:01:06.120 [debug] [        hdlc] {     dlms}: tx: (2/2): 01080400000001
2020-05-13 12:22:23.816 #1   001bc50c6006f4cd <log> 0:01:06.128 [debug] [        hdlc] {     dlms}: tx: (1/1): 51af
2020-05-13 12:22:23.816 #1   001bc50c6006f4cd <log> 0:01:06.134 [debug] [        hdlc] {     dlms}: tx: (1/1): 7e
2020-05-13 12:22:23.880 #1   001bc50c6006f4cd <log> 0:01:06.177 [debug] [        hdlc] {     dlms}: ** Giving s_responseSem to start the timeout cycle... **
2020-05-13 12:22:23.880 #1   001bc50c6006f4cd <log> 0:01:06.187 [debug] [        hdlc] {     hdlc}: Restarting HDLC timeout due to HDLC send operation
2020-05-13 12:22:23.880 #1   001bc50c6006f4cd <log> 0:01:06.197 [debug] [        hdlc] {     hdlc}: ** Waiting for HDLC event (60000ms) **
2020-05-13 12:22:23.880 #1   001bc50c6006f4cd <log> 0:01:06.205 [debug] [        hdlc] {     hdlc}: ACTION_WAIT_FOR_RESPONSE
2020-05-13 12:22:23.880 #1   001bc50c6006f4cd <log> 0:01:06.213 [debug] [        hdlc] {     hdlc}: rx: (1/1): 7e
2020-05-13 12:22:23.923 #1   001bc50c6006f4cd <log> 0:01:06.219 [ WARN] [        hdlc] {     hdlc}: Too short frame
2020-05-13 12:22:23.923 #1   001bc50c6006f4cd <log> 0:01:06.226 [debug] [        hdlc] {     hdlc}:  (Bad result) Passing 0 bytes up the chain.
2020-05-13 12:22:23.923 #1   001bc50c6006f4cd <log> 0:01:06.235 [debug] [        hdlc] {     hdlc}: ** Waiting for HDLC event (60000ms) **
2020-05-13 12:22:23.923 #1   001bc50c6006f4cd <log> 0:01:06.244 [debug] [        hdlc] {     hdlc}: *** We should not receive an event while idling. ***
2020-05-13 12:22:23.923 #1   001bc50c6006f4cd <log> 0:01:06.254 [debug] [        hdlc] {     hdlc}: ** Waiting for HDLC event (60000ms) **
2020-05-13 12:22:23.955 #1   001bc50c6006f4cd <log> 0:01:06.263 [ WARN] [        dlms] {     dlms}: Broken HDLC (or timeout receiving response): (7) unexpected end of stream
2020-05-13 12:22:23.955 #1   001bc50c6006f4cd <log> 0:01:06.274 [debug] [        dlms] {     dlms}: Retry: send timed-out on an AARQ, requesting again
2020-05-13 12:22:24.037 #1   001bc50c6006f4cd <log> 0:01:06.334 [debug] [        hdlc] {     dlms}: Connect HDLC link
2020-05-13 12:22:24.037 #1   001bc50c6006f4cd <log> 0:01:06.341 [debug] [        hdlc] {     dlms}: tx: (1/1): 7e
2020-05-13 12:22:24.037 #1   001bc50c6006f4cd <log> 0:01:06.347 [debug] [        hdlc] {     dlms}: tx: (1/1): a020
2020-05-13 12:22:24.037 #1   001bc50c6006f4cd <log> 0:01:06.354 [debug] [        hdlc] {     dlms}: tx: (1/1): 03
2020-05-13 12:22:24.037 #1   001bc50c6006f4cd <log> 0:01:06.360 [debug] [        hdlc] {     dlms}: tx: (1/1): 03
2020-05-13 12:22:24.037 #1   001bc50c6006f4cd <log> 0:01:06.367 [debug] [        hdlc] {     dlms}: tx: (1/1): 93
2020-05-13 12:22:24.085 #1   001bc50c6006f4cd <log> 0:01:06.373 [debug] [        hdlc] {     dlms}: tx: (1/1): fec9
2020-05-13 12:22:24.085 #1   001bc50c6006f4cd <log> 0:01:06.380 [debug] [        hdlc] {     dlms}: tx: (1/2): 8180140502015e0602015e0704000000
2020-05-13 12:22:24.085 #1   001bc50c6006f4cd <log> 0:01:06.389 [debug] [        hdlc] {     dlms}: tx: (2/2): 01080400000001
2020-05-13 12:22:24.085 #1   001bc50c6006f4cd <log> 0:01:06.397 [debug] [        hdlc] {     dlms}: tx: (1/1): 51af
2020-05-13 12:22:24.085 #1   001bc50c6006f4cd <log> 0:01:06.403 [debug] [        hdlc] {     dlms}: tx: (1/1): 7e
2020-05-13 12:22:24.148 #1   001bc50c6006f4cd <log> 0:01:06.446 [debug] [        hdlc] {     dlms}: ** Giving s_responseSem to start the timeout cycle... **

tx: (1/1): 7e
tx: (1/1): a020
tx: (1/1): 03
tx: (1/1): 03
tx: (1/1): 93
tx: (1/1): fec9
tx: (1/2): 8180140502015e0602015e0704000000
tx: (2/2): 01080400000001
tx: (1/1): 51af
tx: (1/1): 7e

0x2000bfcf <uartBuffer+24>:	0xaf	0x7e	0x7e	0xa0   <0x7e	0xa0	0x20	0x03
0x2000bfd7 <uartBuffer+32>:	0x03	0x93	0xfe	0xc9	0x81	0x80	0x14	0x05
0x2000bfdf <uartBuffer+40>:	0x02	0x01	0x5e	0x06	0x02	0x01	0x5e	0x07
0x2000bfe7 <uartBuffer+48>:	0x04	0x00	0x00	0x00	0x01	0x08	0x04	0x00
0x2000bfef <uartBuffer+56>:	0x00	0x00	0x01	0x51	0xaf	0x7e>   0x7e	0xa0
0x2000bff7 <uartBuffer+64>:	0x20	0x03	0x03	0x93	0xfe	0xc9	0x81	0x80

We can see an entire transmitted message being received, byte for byte that would pass the CRC
check and be parsed as a correct HDLC message... but it wouldn't make much sense to the upperlevel).
also evidence there of messages coming from the meter that are also garbled.




With no debug cable plugged in:

(gdb) x/128xb &uartBuffer[0]
0x2000bfb7 <uartBuffer>:	0x7e	0xa0	0xfe	0x00	0x93	0xfe	0xc9	0x81
0x2000bfbf <uartBuffer+8>:	0x80	0x14	0x05	0x02	0x01	0x5e	0x06	0x02
0x2000bfc7 <uartBuffer+16>:	0x01	0x5e	0x07	0x04	0x00	0x00	0x00	0x01
0x2000bfcf <uartBuffer+24>:	0x08	0x04	0x00	0x00	0x00	0x01	0x51	0xaf
0x2000bfd7 <uartBuffer+32>:	0x7e	0x7e	0xa0	0x20	0x03	0x03	0x03	0xe9
0x2000bfdf <uartBuffer+40>:	0x00	0x00	0x01	0x08	0x04	0x00	0x00	0x00
0x2000bfe7 <uartBuffer+48>:	0x01	0x51	0xaf	0x7e	0x7e	0xa0	0x00	0x02
0x2000bfef <uartBuffer+56>:	0x01	0x5e	0x06	0x02	0x01	0x5e	0x07	0x00
0x2000bff7 <uartBuffer+64>:	0x01	0x51	0xaf	0x7e	0x7e	0xa0	0x20	0x03
0x2000bfff <uartBuffer+72>:	0x00	0x56	0x01	0x00	0x00	0x5e	0x00	0x00
0x2000c007 <uartBuffer+80>:	0x00	0x00	0x03	0x01	0x7e	0xa0	0x20	0x03
0x2000c00f <uartBuffer+88>:	0x03	0x93	0xfe	0xc9	0x81	0x80	0x14	0x05
0x2000c017 <uartBuffer+96>:	0x02	0x01	0x5e	0x06	0x02	0x01	0x5e	0x07
0x2000c01f <uartBuffer+104>:	0x04	0x00	0x00	0x00	0x01	0x08	0x04	0x00
0x2000c027 <uartBuffer+112>:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x2000c02f <uartBuffer+120>:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
(gdb) p uartBufferIndex
$5 = 112

(evidence of worse noise with no cable plugged in. CRC of received message matches what we transmitted
but the bytes are similar but worse).



With cable but with no ctrlporthub

(gdb) x/256xb &uartBuffer[0]
0x2000bfb7 <uartBuffer>:	0x7e	0xa0	0x20	0x03	0x03	0x93	0x5e	0x06
0x2000bfbf <uartBuffer+8>:	0x02	0x01	0x5e	0x07	0x04	0x00	0x00	0xed
0x2000bfc7 <uartBuffer+16>:	0xe5	0xfe	0xe0	0xa1	0x20	0x01	0x5e	0x06
0x2000bfcf <uartBuffer+24>:	0x02	0x01	0x5e	0x18	0x00	0x00	0x00	0x01
0x2000bfd7 <uartBuffer+32>:	0x51	0xaf	0x7e	0xff	0xfc	0xfc	0x0c	0x00
0x2000bfdf <uartBuffer+40>:	0x00	0x01	0x51	0xaf	0x7e	0x00	0x36	0x03
0x2000bfe7 <uartBuffer+48>:	0x93	0xfe	0xc9	0x81	0x80	0x14	0x05	0x02
0x2000bfef <uartBuffer+56>:	0x01	0x5e	0x06	0x02	0x01	0x5e	0x07	0x04
0x2000bff7 <uartBuffer+64>:	0x00	0x00	0x00	0x00	0x00	0x01	0x51	0xaf
0x2000bfff <uartBuffer+72>:	0x7e	0x7e	0xa0	0x20	0x03	0x03	0x93	0xfe
0x2000c007 <uartBuffer+80>:	0xc9	0x81	0x00	0x40	0x06	0x02	0x00	0x40
0x2000c00f <uartBuffer+88>:	0x07	0x30	0x00	0x00	0x04	0x00	0x00	0x00
0x2000c017 <uartBuffer+96>:	0x01	0x51	0xaf	0x7e	0x7e	0xa0	0x20	0x03
0x2000c01f <uartBuffer+104>:	0x03	0x13	0x01	0x14	0x05	0x02	0x01	0x5e
0x2000c027 <uartBuffer+112>:	0x06	0x02	0x01	0x5e	0x07	0x04	0x00	0x00
0x2000c02f <uartBuffer+120>:	0x00	0x01	0x08	0x04	0x00	0x00	0x00	0x01
0x2000c037 <uartBuffer+128>:	0x51	0xaf	0x7e	0x7e	0xa0	0x20	0x03	0x03
0x2000c03f <uartBuffer+136>:	0x93	0xfe	0xc9	0x81	0x80	0x14	0x05	0x02
0x2000c047 <uartBuffer+144>:	0x00	0x40	0x06	0x02	0x00	0x40	0x00	0x00
0x2000c04f <uartBuffer+152>:	0x00	0x00	0x00	0x00	0x04	0x81	0xf0	0x7e
0x2000c057 <uartBuffer+160>:	0xa0	0x20	0x03	0x02	0x01	0x5e	0x06	0x02
0x2000c05f <uartBuffer+168>:	0x01	0x5e	0x07	0x04	0x00	0x08	0x04	0x00
0x2000c067 <uartBuffer+176>:	0x00	0x00	0x01	0x51	0xaf	0x7e	0x0e	0x14
0x2000c06f <uartBuffer+184>:	0x05	0x02	0x01	0x5e	0x0e	0x81	0xc0	0x3b
0x2000c077 <uartBuffer+192>:	0x04	0x00	0x00	0x00	0xc0	0x18	0x00	0x00
0x2000c07f <uartBuffer+200>:	0x00	0x01	0x51	0xaf	0xfe	0x7e	0xa0	0x20
0x2000c087 <uartBuffer+208>:	0x03	0x03	0x93	0xfe	0xc9	0x81	0x80	0xfc
0x2000c08f <uartBuffer+216>:	0x00	0x01	0x08	0x04	0x00	0x00	0x00	0x00
0x2000c097 <uartBuffer+224>:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x2000c09f <uartBuffer+232>:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x2000c0a7 <uartBuffer+240>:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x2000c0af <uartBuffer+248>:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
(gdb) p uartBufferIndex
$7 = 221


---------------------------------------------

is cross-talk happening before buffer so is clean after it?
try loopback behaviour

---------------------------------------------

GStar credentials:

device.dlms.lls_password                 : hello
device.dlms.hls_key                      : 31313131313131313131313131313131
device.dlms.encryption_key               : 30313233343536373839414243444546
device.dlms.authentication_key           : 41314132413341344135413641374138
device.dlms.FirmwareUpgrade_key          : 30303030303030303030303030303030



-----------------------------------------------

connect disconnect flip on Genus.

-----------------------------------------------

Meter-alarm FB/LG SLA test:
- Use server time as a common time.
- Get time when power-off triggered.
- get time when LG received.

----------------------------------------------
MEA node comms bug with GStar

- default logLevel to debug
- try outputting high level as GPIO to debugtx.

----------------------------------


    ./tools/c4-tools/coap_request.py --ctrlporthub :4003 --load-key client-key /Data/Temp/ProdPack/ProdPack1000/00-1B-C5-0C-60-06-74-B0/node.key.der
    ./tools/c4-tools/coap_request.py --ctrlporthub :4003 --load-key client-cert /Data/Temp/ProdPack/ProdPack1000/00-1B-C5-0C-60-06-74-B0/node.crt.der
    ./tools/c4-tools/coap_request.py --ctrlporthub :4003 --load-key root-cert /Data/Temp/ProdPack/ProdPack1000/00-1B-C5-0C-60-06-74-B0/ca.crt.der
    ./tools/c4-tools/coap_request.py --ctrlporthub :4003 --config prod.lowpan.eui64 00-1B-C5-0C-60-06-74-B0
    ./tools/c4-tools/coap_request.py --ctrlporthub :4003 --rll-key /Data/Temp/ProdPack/ProdPack1000/00-1B-C5-0C-60-06-74-B0/mac_keys.txt



------------------------------------



----------------------------------------

- 3ph from sundby. Turned on, is in prod mode. red flash every 60sec ish before crashing every few minutes.
- PROFILE_DISCOVERY_DELAY at 10s
- PROFILE_DISCOVERY_DELAY at 60s
- SEND_HDLC_BYTES_ALL_AT_ONCE
- icog10in 3ph test
- with 5v ftdi instead of 3v3
- with and without FTDI.
- with ftdi but without ctrlporthub




without SEND_HDLC_BYTES_ALL_AT_ONCE defined, info-level fails, debug-level works.
with SEND_HDLC_BYTES_ALL_AT_ONCE, info-level works, debug-level works.

ipa3-bl-insecure:v20.4.0+b18854+g7615a5
ipa3-gstar-dlms-insecure:v20.4.0+b18854+g7615a5

== release 20.4.0

commit 27615a581edbd9654b222d0326a9a38109c472be (HEAD, tag: v20.5, tag: v20.4, origin/release/v20.4.x)
Merge: 84b851922 2bdcc4d1f
Author: SteveTickle <steve.tickle@cyanconnode.com>
Date:   Fri Mar 27 12:20:43 2020 +0000


Change done in 89baa287f8 (Meter fw upgrade change for gstar)


-----------------------------------------------------------------
GStar comms issue

- Damaged Tx/Rx on node causing crosstalk, was that node in a 3ph?
- Damaged PFail on node in 3ph causing continuous reboot and no comms.
- Damaged hex-buffer on 1ph (icog-10) that prevents transmit to meter.
- Stronger pull-up on rx on line required (or was tha also damaged?) new icog-10s work fine.
- timing issue that DMA output resolves. Possibly response->request delay (~0.5ms when fail, >1ms when works).


Note: STM32 on IPA1 is 5v tolerant.

------------------------------------------------

Release process:
- Gitlab: repository->tags->new tag.
- Enter tag name and message with even-numbered tag name & message. (e.g. v21.2)
- Create tag.
- Repeat for dev tag (odd numbered). (e.g. v21.3)
- Repository->branches->new branch
- Create "release/v20.8.x" branch
- Enter branch name
- Create Branch
- Request build of new branch, CI/CD->pipelines->Run pipeline-> Run for branch, run pipeline

even == release
odd = dev

--------------------------------

s_sendFirstBreathWhenWeHaveMeterTime

------------------
SMA 2.8C review
- ...during the <time which> the meter HW and SW are still in flux.
- The point about FB and LG in the same set not being interpreted as FB is incorrect,
- The reverse ordering can happen even with regard to the times (in the case where a time-sync jumped
it backwards between the two). This is the crux of the problem, times can't be relied upon to make
sense in these cases.
-------------------------------------------

- Although our alarm API is controlled by us, the content is not.
- The MDM, as the consumer of the API needs to know the detail of the meter content (i.e. which bits mean what in the ESW).
- The node events should be used for a "processed"/"interpreted" view of this data that CC can control.

---------------------------------
meter alarms doc:
- EWS == ESW
- "allows the meter *to* clear"
- "And, there is no timing information is recorded associated with the alarm."
- "Meter Discovery and Network Logging" == "Meter discovery and network login"
- "if the other network elements, such as Gateways and other nodes, power up concurrently due to a system wide power outage, the completion of the meter discovery and
the network initialisation/logging in operations could take many hours."
Its not so much the other Omnimesh network elements that could cause that delay, (tho there is some of that), but cellular outages (which are not uncommon in these areas).
- ", the time synchronisation process itself would drift the time to the desired point over a number of minutes"
This *should* happen, but doesn't. Instead, we set time absolutely, causing time discontinuities (both forward and backward).

------------------------------
Hard fault
BVipa3-gstar-dlms-insecure:v20.8.2+b19934+gc688c2c Hde BFb5b5b5b9@470d2L470d3S2000a508

-----------------------------
opkg install luci
 * resolve_conffiles: Existing conffile /etc/config/uhttpd is different from the conffile in the new package. The new conffile will be placed at /etc/config/uhttpd-opkg.
 * resolve_conffiles: Existing conffile /etc/config/rpcd is different from the conffile in the new package. The new conffile will be placed at /etc/config/rpcd-opkg.
 * resolve_conffiles: Existing conffile /etc/config/luci is different from the conffile in the new package. The new conffile will be placed at /etc/config/luci-opkg.

-------------------------------------
GStar 1ph upgraded to latest image
Gstar 3ph left on old firmware

Gstar 1ph & 3ph with Forth board and old devlivered code:
- PFAIL
- Alarm ISR seen on power-fail, but could be due to power-fail and not controlled?
- comms issue with debug/info

Gstar 1ph/3ph test with icog10/icog20
- no PFAIL
- restart on power-restoration.

Gstar 1ph/3ph test with Forth i/f board.
- PFAIL works.
- Discovery works all the time.


unable to test without FTDI plugged in as I currently have no 442 gateway to determine success.

./build/host-genus-insecure/bin/blfwupload -ctrlport 5000 -loglevel debug -image build/ipa3-gstar-dlms-insecure/release/agent-ipa3-gstar-dlms-insecure-v20.9.12.image -dev /dev/serial/by-id/usb-FTDI_TTL232R-3V3_FT9S9STV-if00-port0


---------------------------------------------


Load Profile
Demand integration period
Billing Date
Load Curtailment
Meter Upgrade
DLMS credentials
Node Upgrade
Event Thresholds
Special days
---------------------------------------

2020-06-02 13:25:37.450 DisconnectCommand
2020-06-02 13:25:37.451 Send :  7E A0 0A 00 02 00 21 03 53 2F 12 7E
2020-06-02 13:25:37.658 Receive :  7E A0 0A 03 00 02 00 21 1F A0 F0 7E
2020-06-02 13:25:37.659 DisconnectSuccess
2020-06-02 13:25:37.710 HDLCConnectCommand
2020-06-02 13:25:37.711 Send :  7E A0 0A 00 02 00 21 03 93 23 D4 7E
2020-06-02 13:25:37.934 Receive :  7E A0 23 03 00 02 00 21 73 70 7B 81 80 14 05 02 01 00 06 02 01 00 07 04 00 00 00 01 08 04 00 00 00 01 69 6D 7E
2020-06-02 13:25:38.057 ConnMeterSuccess
2020-06-02 13:25:38.090 AARQCommand
2020-06-02 13:25:38.094 Send :  7E A0 47 00 02 00 21 03 10 F9 8B E6 E6 00 60 36 A1 09 06 07 60 85 74 05 08 01 01 8A 02 07 80 8B 07 60 85 74 05 08 02 02 AC 0A 80 08 57 5A 4C 43 58 39 4E 43 BE 10 04 0E 01 00 00 00 06 5F 1F 04 00 00 FE 1F 01 00 D4 BA 7E
2020-06-02 13:25:38.501 Receive :  7E A0 5B 03 00 02 00 21 30 4F C4 E6 E7 00 61 4A A1 09 06 07 60 85 74 05 08 01 01 A2 03 02 01 00 A3 05 A1 03 02 01 0E 88 02 07 80 AA 12 80 10 9A 4D A6 D3 E9 F4 7A BD DE 6F 37 1B 8D 46 A3 D1 89 07 60 85 74 05 08 02 02 BE 10 04 0E 08 00 06 5F 1F 04 00 00 1A 1D 01 00 00 07 23 8C 7E
2020-06-02 13:25:38.501 AARQSuccess
2020-06-02 13:25:38.502 HLSAuthentication
2020-06-02 13:25:38.502 Send :  7E A0 3E 00 02 00 21 03 32 9C D9 E6 E6 00 C3 01 C1 00 0F 00 00 28 00 00 FF 01 01 09 20 BD B2 D0 8D 45 48 54 48 06 BF 63 3C DF 34 00 BD DD 6B 2B 45 B8 ED AF 96 7B 78 7F E4 DE B9 BF B2 EE 82 7E
2020-06-02 13:25:38.786 Receive :  7E A0 27 03 00 02 00 21 52 8D 24 E6 E7 00 C7 01 C1 00 01 00 09 10 9D 71 2F C4 55 D4 52 3B D0 4E B5 08 C5 44 5F 28 27 55 7E
02/06/2020 01:25:38 PM strValBackage[0]: 0001
2020-06-02 13:25:38.888 Send :  7E A0 1F 00 02 00 21 03 54 FA 23 E6 E6 00 C3 01 C1 00 09 00 02 0A 00 00 FF 01 01 12 00 01 44 65 7E
2020-06-02 13:25:40.117 Receive :  7E A0 14 03 00 02 00 21 74 9D 1E E6 E7 00 C7 01 C1 00 00 FC B4 7E
SetOrAction  Success
2020-06-02 13:25:40.340 DisconnectCommand
2020-06-02 13:25:40.341 Send :  7E A0 0A 00 02 00 21 03 53 2F 12 7E
2020-06-02 13:25:40.574 Receive :  7E A0 23 03 00 02 00 21 73 70 7B 81 80 14 05 02 01 00 06 02 01 00 07 04 00 00 00 01 08 04 00 00 00 01 69 6D 7E



<HDLC len="30" >
<TargetAddress Value="16400" />
<SourceAddress Value="1" />
<!--I frame.-->
<FrameType Value="54" />
<PDU>
<ActionRequest>
  <ActionRequestNormal>
    <!--Priority: HIGH ServiceClass: CONFIRMED invokeID: 1-->
    <InvokeIdAndPriority Value="193" />
    <MethodDescriptor>
      <!--SCRIPT_TABLE-->
      <ClassId Value="9" />
      <!--0.2.10.0.0.255-->
      <InstanceId Value="00020A0000FF" />
      <MethodId Value="1" />
    </MethodDescriptor>
    <MethodInvocationParameters>
      <UInt16 Value="1" />
    </MethodInvocationParameters>
  </ActionRequestNormal>
</ActionRequest>
</PDU>

</HDLC>
<HDLC len="19" >
<TargetAddress Value="1" />
<SourceAddress Value="16400" />
<!--I frame.-->
<FrameType Value="74" />
<PDU>
<ActionResponse>
  <ActionResponseNormal>
    <!--Priority: HIGH ServiceClass: CONFIRMED invokeID: 1-->
    <InvokeIdAndPriority Value="193" />
    <Result Value="Success" />
  </ActionResponseNormal>
</ActionResponse>
</PDU>
</HDLC>

Ch. 0 Alarm filter object  #1
0.0.97.98.10.255

Alarm Bit No    Alarm Name  L1  L2  L3
Bit31   OPEN COVER STATE    yes yes yes
Bit30   OPEN TERMER STATE     yes yes yes
Bit29   OVER LOAD STATE yes yes yes
Bit28   OVER VOLTAGE STATE    yes yes yes
Bit27   UNDER VOLTAGE STATE yes yes yes
Bit26   LOSS VOLTAGE STATE  yes yes yes
Bit25   PHASE FAILURE STATE    no  yes yes
Bit24   FAILURE PHASE N STATE  no  yes yes
Bit23   OVER CURRENT STATE     yes yes yes
Bit22   LOSS CURRENT STATE     yes yes yes
Bit21   CURRENT FAILURE STATE     yes yes yes
Bit20   UNBALANCE VOLTAGE STATE    yes yes yes
Bit19   "  UNBALANCE CURRENT STATE  " yes yes yes
Bit18   PHASE REVERSE STATE    no  yes yes
Bit17   INVERSE VOLTAGE STATE  yes yes yes
Bit16   INVERSE CURRENT STATE     yes yes yes
Bit15   DEMAND OVER STATE  yes yes yes
Bit14   UNDER BATTERY STATE yes yes yes
Bit13   MAGNET DISTURB STATE      yes yes yes
Bit12   "  SHORT CURRENT STATE "  yes yes yes
Bit11   OPEN BOX STATE     yes yes yes
Bit10   "  UNBALANCE ACT POWER STATE" yes yes yes
Bit9    BYPASS STATE   yes yes yes
Bit8    OVER THDV STATE yes yes yes
Bit7    OVER THDC STATE yes yes yes
Bit6    OVER REACTLOAD STATE    yes yes yes
Bit5    RESERVED    yes yes yes
Bit4    PHASE OUTAGE STATE       no  yes yes
Bit3    NO LOAD STATE  yes yes yes
Bit2    RELAYOFF ERROR STATE   yes yes yes
Bit1    TEMP ERROR STATE      yes yes yes
Bit0    UNDER MONEY STATE  yes yes yes
Bit85   LASTGASP    yes yes yes
Bit86   FIRSTBREATH yes yes yes

Value before:
00 00 00 00

After:
10 00 00 00

--------------------------------------
- v20.4.0 insecure
- v20.8.2 secure


-----------------------------------------

Measuring last-gasp SLA.
- minimise meter time-sync periods.
- monitor log to ensure time-sync is accurate.
- set minthreshold to minimum.
- increase rate of mesh-time sync.
- wait until time-sync period has just passed.
- use node-time of alarm.
- if meters are under out control, note server-time when powered-off.
- Use server time of receipt to calculate delta (one timebase).


---------------------------------------


good:
6003b236008e11402a1100000000000000000000000000012a11000000000000020102030405060002230222008e d879 02 5deb17  0002000a00030001907282764bbe0001000a00030006010203040506005200040000003c00170010fd09253454fc0000000000000000000100190046000000000000546000008700001a00190000a8  c00000a8  c03e2a0023c5b39163040000000000000000001a00190000a8 c0 0000a8 c0 3efd09253454fc00040000000000000000
6003b236008e11402a1100000000000000000000000000012a11000000000000020102030405060002230222008e 737f 02 15505a  0002000a00030001907282764bbe0001000a00030006010203040506005200040000003c00170010fd09253454fc0000000000000000000100190046000000000000546000008700001a00190000a8  c00000a8  c03e2a0023c5b39163040000000000000000001a00190000a8 c0 0000a8 c0 3efd09253454fc00040000000000000000

bad:
6003b236008e11402a1100000000000000000000000000012a11000000000000020102030405060002230222008e 45db db 029a7d790002000a00030001907282764bbe0001000a00030006010203040506005200040000003c00170010fd09253454fc0000000000000000000100190046000000000000546000008700001a00190000a8  db0000a8  db3e2a0023c5b39163040000000000000000001a00190000a8db0000a8db3efd09253454fc00040000000000000000



good:
6003b236008e11402a1100000000000000000000000000012a11000000000000020102030405060002230222008e26b202a59c970002000a00030001907282764bbe0001000a00030006010203040506005200040000003c00170010fd09253454fc0000000000000000000100190046000000000000546000008700001a00190000a8c00000a8c03e2a0023c5b39163040000000000000000001a00190000a8c00000a8c03efd09253454fc00040000000000000000
bad:
6003b236008e11402a1100000000000000000000000000012a11000000000000020102030405060002230222008e26b202a59c970002000a00030001907282764bbe0001000a00030006010203040506005200040000003c00170010fd09253454fc0000000000000000000100190046000000000000546000008700001a00190000a8db0000a8db3e2a0023c5b39163040000000000000000001a00190000a8db0000a8db3efd09253454fc00040000000000000000


-------------------------
martians (bad source adddress)

/etc/sysctl.d/99-sysctl.conf
net.ipv4.conf.all.log_martians = 1

sudo sysctl -p /etc/sysctl.d/99-sysctl.conf


------------------------------------------------------


python coapclient.py  -o GET -p coap://[2a11::0201:203:405:600]:5683/conf/m/all


---------------------------------
meter alarms:

- New alarm bits for synthFB and synthLG.
    - time == node-time rather than meter-time
    - What ESW bits do you fill in? cached?
    - No comparison possible to other bits.
- Make user use the event-log
    - latency? maybe separate quick-reports from accurate-reports?
- Read event-log and parse into alarms?
- Use node-events
    - they go to NMS, not SMA.
- Estimate of meter-time based on last-read-meter-time & elapses-time.
    - Not 100% guaranteed still.
- Always send FB before LG, explicitly order? what about time-diff?
- Send node-event with outage-time? calculated on node from meter-events?
- Server to calculate outage-time from event-log?
- Add sequence-number to alarm-UI API-response and sort-by sequence number.
- Don't report meter-FB and meter-LG at all.

- Time sync issue.
- Ordering is critical, timing is suggestive and may be wrong.

Rules:
- To determine order, examine the sequence number.
- To examine duration between related alarms, use the event-log.


Last-Gasp SLA:
- Configure for maximum time-sync frequency & lowest min-threshold to meter.
- Wait until a time-sync has just happened.
- Repeatedly read meter-time from server to determine average latency. This is the average-read-duration.
- Generate power-down.
- Upon receipt of last-gap, read meter-time from server. This is the receive-meter-time.
- Time taken = ((receive-meter-time - average-read-duration) - reported-alarm-time-from-meter)


First-breath SLA:


First-breath - Last-Gasp:

020-06-10 18:00:32.853 [dtls-pool-1] TRACE c.c.s.t.s.coap.IncomingCoapExchange - Received request POST /mq from peer /fdaa:1865:6aee:0:21b:c50c:6006:73fb:5684 with payload [08f1bb0a12c40208e8a483f70572bb020a0a55535431303030303032120601005e5b00ff1a0e090c07e4060a0311380fff014a001a0517000000001a0517000000001a0517000000001a05174370b3331a05174370b3331a05174370999a1a0517000000001a0517000000001a0517000000001a0517000000001a05174248ab021a0517404000001a0517000000001a0517404000001a031200551a0506000358ac1a031200011a0506000000231a0211d41a0e090c07e40513ff000000ff014a001a05174546c0001a0517000000001a0517466ec0001a0517000000001a0517412000001a0e090c07e40513ff040000ff014a001a0517412000001a0e090c07e40513ff010000ff014a001a0203011a0506000006401a0517465db8001a0517000000001a0517000000001a051744ad20002210ab7cb8818212ffd3b415b6375a9862e528e7a283f705].
2020-06-10 18:00:32.853 [dtls-pool-1] TRACE c.c.s.t.resources.MqCoapResource - Node 00-1b-c5-0c-60-06-73-fb with dbId9 sent 1 messages starting with sequence number 171505.
2020-06-10 18:00:32.853 [dtls-pool-1] INFO c.c.s.t.m.b.MessageQueuePersister - Sending to queue Queue-10 message for nodeId=9 of  type class com.connode.service.terminal.mq.MessagesFromNode and seqNum: 171505. Message={}
2020-06-10 18:00:32.854 [dtls-pool-1] DEBUG c.c.s.t.m.b.MessageQueuePersister -  Message=MessagesFromNode{dbNodeId=9, scheduledPush=false, startSequenceNumber=171505, messages=[MessageWithPayloads{message=Message{resetCounter=0, sequenceNumber=171505, status=PUSH, timestamp=Wed Jun 10 18:00:32 IST 2020, timestampUnreliable=false}, payloads=[DataProfileSamplePayload{deviceId='UST1000002', profile=[1, 0, 94, 91, 0, -1], profileHash=[-85, 124, -72, -127, -126, 18, -1, -45, -76, 21, -74, 55, 90, -104, 98, -27], sampleTime=Wed Jun 10 17:56:15 IST 2020, message=Message{resetCounter=0, sequenceNumber=171505, status=PUSH, timestamp=Wed Jun 10 18:00:32 IST 2020, timestampUnreliable=false}, createTime=null}]}]}

payload=08f1bb0a12c40208e8a483f70572bb020a0a55535431303030303032120601005e5b00ff1a0e090c07e4060a0311380fff014a001a0517000000001a0517000000001a0517000000001a05174370b3331a05174370b3331a05174370999a1a0517000000001a0517000000001a0517000000001a0517000000001a05174248ab021a0517404000001a0517000000001a0517404000001a031200551a0506000358ac1a031200011a0506000000231a0211d41a0e090c07e40513ff000000ff014a001a05174546c0001a0517000000001a0517466ec0001a0517000000001a0517412000001a0e090c07e40513ff040000ff014a001a0517412000001a0e090c07e40513ff010000ff014a001a0203011a0506000006401a0517465db8001a0517000000001a0517000000001a051744ad20002210ab7cb8818212ffd3b415b6375a9862e528e7a283f705

sampleTime=Wed Jun 10 17:56:15 IST 2020

~/pbd 08f1bb0a12c40208e8a483f70572bb020a0a55535431303030303032120601005e5b00ff1a0e090c07e4060a0311380fff014a001a0517000000001a0517000000001a0517000000001a05174370b3331a05174370b3331a05174370999a1a0517000000001a0517000000001a0517000000001a0517000000001a05174248ab021a0517404000001a0517000000001a0517404000001a031200551a0506000358ac1a031200011a0506000000231a0211d41a0e090c07e40513ff000000ff014a001a05174546c0001a0517000000001a0517466ec0001a0517000000001a0517412000001a0e090c07e40513ff040000ff014a001a0517412000001a0e090c07e40513ff010000ff014a001a0203011a0506000006401a0517465db8001a0517000000001a0517000000001a051744ad20002210ab7cb8818212ffd3b415b6375a9862e528e7a283f705

1: 171505
2 {
  1: 1591792232         == " timestamp=Wed Jun 10 18:00:32 IST 2020" from c.c.s.t.m.b.MessageQueuePersister line
  14 {
    1: "UST1000002"
    2: "\001\000^[\000\377"
    3: "\t\014\007\344\006\n\003\0218\017\377\001J\000"
    3: "\027\000\000\000\000"
    3: "\027\000\000\000\000"
    3: "\027\000\000\000\000"
    3: "\027Cp\2633"
    3: "\027Cp\2633"
    3: "\027Cp\231\232"
    3: "\027\000\000\000\000"
    3: "\027\000\000\000\000"
    3: "\027\000\000\000\000"
    3: "\027\000\000\000\000"
    3: "\027BH\253\002"
    3: "\027@@\000\000"
    3: "\027\000\000\000\000"
    3: "\027@@\000\000"
    3: "\022\000U"
    3: "\006\000\003X\254"
    3: "\022\000\001"
    3: "\006\000\000\000#"
    3: "\021\324"
    3: "\t\014\007\344\005\023\377\000\000\000\377\001J\000"
    3: "\027EF\300\000"
    3: "\027\000\000\000\000"
    3: "\027Fn\300\000"
    3: "\027\000\000\000\000"
    3: "\027A \000\000"
    3: "\t\014\007\344\005\023\377\004\000\000\377\001J\000"
    3: "\027A \000\000"
    3: "\t\014\007\344\005\023\377\001\000\000\377\001J\000"
    3: "\003\001"
    3: "\006\000\000\006@"
    3: "\027F]\270\000"
    3: "\027\000\000\000\000"
    3: "\027\000\000\000\000"
    3: "\027D\255 \000"
    4: "\253|\270\201\202\022\377\323\264\025\2667Z\230b\345"
    5: 1591791975
  }
}



-------------------------------------

extraledsSignalState(UI_SOURCE_METER, );

deviceDlmsAlertAsserted()

------------------------------

GPIO_PIN_PWM0 = DEVSTAT green   B13
GPIO_PIN_PWM1 = NETSTAT yellow  B12

GPIO3   = toggling status pin. J2 Pin 8

DEVSTAT = s_meterLedPin which from the code is the only one beingn toggled based on these
conditions:

normal==4Hz, nEVENT==2Hz, PFAIL==8Hz

-------------------------------------------
idea:
- database compiler
- from schema description, generates source to an application-specific
database library that stores data exactly as required.
- Can be tailored to any types of db.
- Need to specify queries in SQL (insert/update/select/join/etc)
- C source is generated to store data oefficiently in block-device.
- incremental view update / materialised views? / continuous views/ continuous aggregates
- schema updates?? problematic.

---------------------------------------
flash id:

Good 865:
Flash ID: 1f 86 01
Mounting with 512 x 4096 KiB sectors = 2048 KiB


Bad 442:
Flash ID: 1f 84 01
Mounting with 128 x 4096 KiB sectors = 512 KiB


blfwupload -ctrlport 5000 -loglevel debug -image agent.image -dev /dev/serial/by-id/usb-FTDI_TTL232R-3V3_FT9S9STV-if00-port0

--------------------------------
ProdPak instructions:
- Goto (https://confluence.cyco.io/display/ENG/Demo+Node+Production+Pack) and register the EUI(s).
- Create a tree structure as follows fro teh certs & keys that you registered:

$PRODPAKNAME
├── 00-1B-C5-0C-60-06-76-00
│   ├── ca.crt.der
│   ├── config
│   ├── mac_key
│   ├── mac_keys.txt
│   ├── node.crt.der
│   └── node.key.der
├── 00-1B-C5-0C-60-06-76-01
│   ├── ca.crt.der
│   ├── config
│   ├── mac_key
│   ├── mac_keys.txt
│   ├── node.crt.der
│   └── node.key.der
├── 00-1B-C5-0C-60-06-76-02
│   ├── ca.crt.der
│   ├── config
│   ├── mac_key
│   ├── mac_keys.txt
│   ├── node.crt.der
│   └── node.key.der
├── 00-1B-C5-0C-60-06-76-03
│   ├── ca.crt.der
│   ├── config
│   ├── mac_key
│   ├── mac_keys.txt
│   ├── node.crt.der
│   └── node.key.der
├── image
│   ├── agent.elf
│   └── bootloader.elf
└── manifest.yaml

- cd $PRODPAK_NAME
- cp -R /Data/Temp/ProdPack/ProdPack1000/00-1B-C5-0C-60-06-77-9D .
- cp -R /Data/Temp/ProdPack/ProdPack1000/00-1B-C5-0C-60-06-77-9E .
- Create a "manifest.yml" file that contains the following:

created_by: stickle
created_date: Fri Mar 19 14:00:00 2020
created_host: prod
format_version: 1
hw_variant: ipa3
images:
- image/agent.elf
- image/bootloader.elf

node_count: 2
node_first: 00-1B-C5-0C-60-06-77-9D
node_last: 00-1B-C5-0C-60-06-77-9E

- tar jcvf ../$PRODPAK_NAME.prodpak.tbz2 --xform s:'./'::  ./*

-------------------------------------
DHCPv6 request IAPD option:

0000 a8dbc000 00a8dbc0 3e fd09253454fc00040000000000...
     0000a8db c00000a8 db c03efd09253454fc00040000000000...




dhcp:  00190029000000000000546000008700001a00190000a8c00000a8c03efd09253454fc00040000000000000000
xdhcp: 00190029000000000000546000008700001a00190000a8dbdc0000a8dbdc3efd09253454fc00040000000000000000

TUN:                                           0000a8dbc00000a8dbc03efd09253454fc00040000000000

0019 0029 00000000 00005460 00008700   001a 0019 0000a8c0 0000a8c0 3e fd09253454fc00040000000000000000


----------------------------------------------------

{
  "jobName": "upgradeJob1",
  "meters": [{
      "id": "5701333",
      "firmwareIdent": "idgoeshere"
    }],
  "jobType": "METER_FIRMWARE_UPGRADE",
  "jobConfiguration": {
    "commands": [{
        "type": "FIRMWARE_IMAGE",
        "firmwareImage": "",
        "firmwareHash": "dccb41e6c505bde1034172b18ee48197"
        "firmwareIdent": "idgoeshere"
      }]
  }
}

---------------------------
SMA API Doc.
- upgrade API completely wrong.
- WAITING does not exist.
- Response code to meterStatusForJob is 200, not 201
- Response code to meter job cancelling is 200, not 201

-------------------------------------------
Integration doc:

- Kaifa exception (for nEVENT)? Kaifa uses two GPIOs with handshaking.
- internal pull-up on nEVENT doesn't happen right now (it should). Need ticket.
- seq diagram needs more resolution, its very blurry.
- "copletes". spell check.
- Definitely need a disclaimer that the provided frames are not guaranteed to be exact. The
parameters *will* vary.
- The paragraph beginning "To ensure optimum test efficiency..." is not correct. They need to
support setting those values anyway.


-------------------------------------------------
meter alarms:

Guarantees:
- Last-gasp will be delivered within x seconds y %age of the time to the SMA from the point of PFAIL assertion.
- First-Breath will be delivered within x seconds y %age of the time to the SMA from the point of power-up.
- A first-breath will always have a matching last-gasp (except for the current run).
- The ordering of synthesized alarms is guaranteed to be correct according to the sequence number (not time of the alarm due to time-sync issues).
- The time on a synthesized alarm shall be marked unreliable due to the inherent inaccuracies involved.
- The status-bits unrelated to the synthesized alarm will be kept up to date in a "best-effort" fashion.
- Meter-generated-alarms will be reported to the SMA within x seconds y %age of the time to the SMA from the point of nEVENT being asserted.
- The time of "matching" synthesized alarms will be comparable.
- There should be a 1:1 match between first-breath alarms and node-boot events.
- "matching" synthesized alarms (e.g. FB/LG) shall always have a duration of more than 1 (?) second between them.
- If an alarm is synthesized, the corresponding meter-alarm shall not be reported (if implemented).

Explicit non-guarantees:
- We cannot guarantee that the synthesized first-breath will be delivered until after a node logs in to the NMS/SMA.
- We cannot guarantee that the time difference between the server and meter shall be closer than (+-x minutes). (This needs to be calculated).
- We cannot guarantee that the time difference between a meter and a sibling meter shall be closer than (+-x minutes). (This needs to be calculated).
- We cannot guarantee that the time recorded for a synthesized alarm will be comparable to non-related meter-generated-alarms.
- We cannot guarantee that the time recorded for a synthesized alarm will be comparable to the corresponding meter-event in the log.
- We cannot guarantee that the status-word bits not related to the synthesize-alarms shall be up-to-date when compared to the equivalent meter-event.
- We cannot guarantee that short duration "pulsed" events will be provided in meters without a true "PUSH" mechanism.
- We cannot guarantee that If a "set" meter-time sync occurs (as opposed to an "adjust") between events, that the time related to those events will be correctly ordered or that the duration between
those events will be close to reality.
- We cannot guarantee that communications issues between node and meter will not affect the timely delivery of alarms.
- We cannot guarantee that network issues between NMS/SMA and node will not affect the timely delivery of the alarms.
- We cannot guarantee that the duration between a first-breath and last-gasp as measured by the provided "meter times" will be similar to that between the corresponding meter-events.

If we can agree on those points, then I think we're nearly there.

Design deltas that fall out of this:
- The sequence number of the delivered alarm message will provide ordering (currently we rely on the time).
- Time-sync means time is not reliable.
- meter needs to push up time status as well as time. Server shall display time-status and sequence number on UI and present to API.
- In relation to the meter-time, node-time (and the snapshot of meter-time) has obvious inaccuracies. Synthesized alarms shall always report the time-status as unreliable.


------------------------------
dev-stack

https://confluence.cyco.io/display/ENG/Development+Stack
from dev-stack repo:
git submodule init
git submodule update
python3 setup.py develop --user


setup:
Setup a single NMS/SMA stack and host agent using local development versions:

$ dev-stack -n 1 -s 1 -a 1 --agent-version ./terminal --server-version ./server
Setup a 3-node cluster (SMA and NMS) using local server development and 1000 emulated terminals using latest version.

$ dev-stack -n 3 -s 3 -e -a 1000 --server-version ./server
Setup a panmesh instance using latest server and terminal.

$ dev-stack -n 1 -a 1 -p panmesh

Running:

start the entire stack (or a setup of named services):

$ dev-stack start [SERVICE-1 SERVICE-2 ...]
To stop the entire stack (or a setup of named services)

$ dev-stack stop [SERVICE-1 SERVICE-2 ...]
To access a shell on a running service:

$ dev-stack shell SERVICE
To clean all persistent data:

$ dev-stack clean

------------------------------------------
dev-stack:

dev-stack setup -n 1 -s 1 -e -a 1

-------------------------------------------
Test machine:

ssh stickle@gwuk.cyanconnode.com -p 2222

/opt/omnimesh/c4-agent-tools/v151.2/c4-agent-tools-v151.2/coap_request.py --ctrlporthub :4000 --eui64 00-1b-c5-0c-60-06-f4-ef --fs-read /macsec_state
/var/log/ctrlporthub

--------------------------
replay attack
2020-06-24 13:39:31.121 :: [004:58:37.505] [ info] [mac_security] {   mac_rx}: Possible replay attack: 02-1b-c5-0c-60-06-74-1b counter 0 expected > 113458

ctrlport-00-1b-c5-0c-60-06-f4-ee.log.1:2020-06-24 15:48:19.933 :: [000:00:00.787] [ERROR] [mac_security] { terminal}: Failed to open mac security state file: not found
---------------------------
meter configurator:
- Add help text at bottom.
- Can paste comma-separated lists into it.
- separate backend code for unit tests.
- form validation.
- UploadedFiles does not highlight stepper.
- JobCompleteSubmit does not highlight stepper.
- meterList should be search box.
- choose file button should be custom file input.
- Bit of a mess on phone screen.
- choose meters by group name.
- JObs marked as FINISHED without full set of results? Do we detect that?
- Import validator from submodule.
- style of "choose file" button.
- Adding or removing special days clears list.
- node upgrade
- node chooser like meter chooser.

-----------------------------------------
remote meter:

To wait for a connection on /dev/remoteSerial and then open a connection to 192.168.x.x:yyyy to
forward requests to:
socat -d -d pty,link=/dev/remoteSerial,raw,echo=0,waitslave tcp:192.168.x.x:yyyy;

to listen on tcp port 1234 and redirect traffic into serial port:
socat tcp-l:1234,reuseaddr,fork file:/dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0,b9600,raw,echo=0

To tunnel a port thru ssh onto a remote machine:
ssh -L 127.0.0.1:80:intra.example.com:80 gw.example.com


So...

ssh stickle@gwuk.cyanconnode.com -p 2222
hw-test-server-uk-01

Change username and port name appropriately:

Run this locally:
  ssh -L 127.0.0.1:1234:hw-test-server-uk-01:1234  stickle@gwuk.cyanconnode.com -p 2222
In the ssh session that opens:
  socat tcp-l:1234,reuseaddr,fork file:/dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0,b9600,raw,echo=0
In a local bash, run:
  sudo socat -d -d pty,link=/dev/remoteSerial,raw,echo=0,waitslave tcp:127.0.0.1:1234

-----------------------------------------------------
node firmware upgrade:

omnitools: job_fwup_create

-------------------------------------------------------
mbedtls:

Internet Protocol Version 6, Src: 2a00:23c5:b391:be04::2, Dst: fd00::1
    0110 .... = Version: 6
    .... 0000 0000 .... .... .... .... .... = Traffic Class: 0x00 (DSCP: CS0, ECN: Not-ECT)
        .... 0000 00.. .... .... .... .... .... = Differentiated Services Codepoint: Default (0)
        .... .... ..00 .... .... .... .... .... = Explicit Congestion Notification: Not ECN-Capable Transport (0)
    .... .... .... 0000 0000 0000 0000 0000 = Flow Label: 0x00000
    Payload Length: 124
    Next Header: UDP (17)
    Hop Limit: 32
    Source: 2a00:23c5:b391:be04::2
    Destination: fd00::1
User Datagram Protocol, Src Port: 5684, Dst Port: 5684
    Source Port: 5684
    Destination Port: 5684
    Length: 124
    Checksum: 0xda46 [unverified]
    [Checksum Status: Unverified]
    [Stream index: 2]
Datagram Transport Layer Security
    DTLS Record Layer: Handshake Protocol: Client Hello
        Content Type: Handshake (22)
        Version: DTLS 1.2 (0xfefd)
        Epoch: 0
        Sequence Number: 0
        Length: 103
        Handshake Protocol: Client Hello
            Handshake Type: Client Hello (1)
            Length: 91
            Message Sequence: 0
            Fragment Offset: 0
            Fragment Length: 91
            Version: DTLS 1.2 (0xfefd)
            Random: 127d05e778859401ee2a957c9dd1fa7653a089230d7914b2...
                GMT Unix Time: Oct 31, 1979 02:03:19.000000000 GMT
                Random Bytes: 78859401ee2a957c9dd1fa7653a089230d7914b29a44fba1...
            Session ID Length: 0
            Cookie Length: 0
            Cipher Suites Length: 2
            Cipher Suites (1 suite)
                Cipher Suite: TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8 (0xc0ae)
            Compression Methods Length: 1
            Compression Methods (1 method)
                Compression Method: null (0)
            Extensions Length: 47
            Extension: signature_algorithms (len=4)
                Type: signature_algorithms (13)
                Length: 4
                Signature Hash Algorithms Length: 2
                Signature Hash Algorithms (1 algorithm)
                    Signature Algorithm: ecdsa_secp256r1_sha256 (0x0403)
                        Signature Hash Algorithm Hash: SHA256 (4)
                        Signature Hash Algorithm Signature: ECDSA (3)
            Extension: trusted_ca_keys (len=21)
                Type: trusted_ca_keys (3)
                Length: 21
                Data: 01a864172a19c18875381168b63ab34155094d72ea
            Extension: ec_point_formats (len=2)
                Type: ec_point_formats (11)
                Length: 2
                EC point formats Length: 1
                Elliptic curves point formats (1)
                    EC point format: uncompressed (0)
            Extension: supported_groups (len=4)
                Type: supported_groups (10)
                Length: 4
                Supported Groups List Length: 2
                Supported Groups (1 group)
                    Supported Group: secp256r1 (0x0017)


DTLS ciper suite: TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8 (secp256r1)
options:
- signature_algorithms=13 (RFC8446)(restrict curves to ecdsa_secp256r1_sha256)
- trusted_ca_keys=3, (RFC6066) (size optimisation and avoids back-and-forth for multiple level of certs).
- ec_point_formats=11 (RFC8422),
- supported_groups=10 (RFC8422/RFC7919)


RFC6066: section 6 Trusted CA Indication
Constrained clients that, due to memory limitations, possess only a
   small number of CA root keys may wish to indicate to servers which
   root keys they possess, in order to avoid repeated handshake
   failures.

   In order to indicate which CA root keys they possess, clients MAY
   include an extension of type "trusted_ca_keys" in the (extended)
   client hello.  The "extension_data" field of this extension SHALL
   contain "TrustedAuthorities" where:
...

extension list:
https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xml

more Information at:
http://www.watersprings.org/pub/id/draft-ietf-dice-profile-05.html#rfc.section.13

Trusted CA Indication
This RFC 6066 extension allows clients to indicate what trust anchor they support. With certificate-based authentication a DTLS server conveys its end entity certificate to the client during the DTLS exchange provides. Since the server does not necessarily know what trust anchors the client has stored it includes intermediate CA certs in the certificate payload as well to facilitate with certification path construction and path validation.

Today, in most IoT deployments there is a fairly static relationship between the IoT device (and the software running on them) and the server- side infrastructure and no such dynamic indication of trust anchors is needed.

Recommendation: For IoT deployments where clients talk to a fixed, pre-configured set of servers and where a software update mechanism is available this extension is not recommended. Environments where the client needs to interact with dynamically discovered DTLS servers this extension may be useful to reduce the communication overhead. Note, however, in that case the TLS cached info extension may help to reduce the communication overhead for everything but the first protocol interaction.

-------------------------------------
mbedtls:
create include/mbedtls/config.h from template in configs/
make
make check

./programs/ssl/ssl_server2 dtls=1 ecjpake_pw=passwd
./programs/ssl/ssl_client2 server_addr=127.0.0.1 dtls=1 ecjpake_pw=passwd

 #define MBEDTLS_SSL_CIPHERSUITES                        \
     MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8


define MBEDTLS_DEBUG_C for debugging.

return list of ciphersuites.
mbedtls_ssl_list_ciphersuites()


-----------------------------------------------
MeterConfigurator tickets:
Task CND-10509 MeterConfigurator: Apache/WSGI integration. (3 days)
Task CND-10508 MeterConfigurator: Build system (3 days)
Task CND-10507 MeterConfigurator: UI tweaks (4 days)
Task CND-10506 MeterConfigurator: Special days UI needs improvement (2 days))
Task CND-10505 MeterConfigurator: Selection by predefined group (4 days)
Task CND-10504 MeterConfigurator: Add help text to forms (3 days).

--------------------------
CND-10361 Tangedco time sync:
- reproduce on local.
- observe time sync wrong way around
- 3 days.

----------------------------------------

TLS-ECDHE-ECDSA-WITH-AES-128-CCM-8

ssl_client2 server_addr=127.0.0.1 dtls=1_2  debug_level=9 force_ciphersuite=TLS-ECDHE-ECDSA-WITH-AES-128-CCM-8

"TLS-ECJPAKE-WITH-AES-128-CCM-8"


CFLAGS="-g" make clean all

./programs/ssl/ssl_server2 server_addr=127.0.0.1 dtls=1  debug_level=9 \
ca_file=/Data/Temp/MBedTLSCerts/rootca.crt \
crt_file=/Data/Temp/MBedTLSCerts/user.crt \
key_file=/Data/Temp/MBedTLSCerts/user.key




gdb --args ./programs/ssl/ssl_server2 server_addr=127.0.0.1 dtls=1  debug_level=9 ca_file=/Data/Temp/MBedTLSCerts/ca.crt.pem crt_file=/Data/Temp/MBedTLSCerts/server.crt.pem key_file=/Data/Temp/MBedTLSCerts/server.key.pem

MBEDTLS_ERR_X509_UNKNOWN_SIG_ALG    = 0x2600
MBEDTLS_ERR_OID_NOT_FOUND           = 0x002e

Show certiface text:
openssl x509 -in /Data/Temp/MBedTLSCerts/ca.crt.pem -text -noout

Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number:
            b6:e1:22:75:f3:bf:ee:f7
        Signature Algorithm: ecdsa-with-SHA1
        Issuer: C = SE, ST = Stockholm, L = Stockholm, O = Connode AB, OU = R&D, CN = c4.connode.com
        Validity
            Not Before: Apr 23 09:52:17 2014 GMT
            Not After : Apr 20 09:52:17 2024 GMT
        Subject: C = SE, ST = Stockholm, L = Stockholm, O = Connode AB, OU = R&D, CN = c4.connode.com
        Subject Public Key Info:
            Public Key Algorithm: id-ecPublicKey
                Public-Key: (256 bit)
                pub:
                    04:33:30:57:77:36:4b:cc:6f:88:3b:b8:36:e1:92:
                    d0:47:15:fe:75:66:8c:b8:dc:de:eb:cd:77:2a:9f:
                    5b:cd:ed:95:e0:c5:7c:35:16:e7:8f:a3:02:b2:8c:
                    55:40:6e:a9:4c:3d:53:f2:62:20:3e:77:6e:3d:92:
                    88:2a:ca:84:c6
                ASN1 OID: prime256v1
                NIST CURVE: P-256
        X509v3 extensions:
            X509v3 Subject Key Identifier:
                58:B2:60:48:32:DE:F5:62:FA:28:EB:C4:8E:5F:3B:8E:2D:21:C8:F5
            X509v3 Authority Key Identifier:
                keyid:58:B2:60:48:32:DE:F5:62:FA:28:EB:C4:8E:5F:3B:8E:2D:21:C8:F5

            X509v3 Basic Constraints:
                CA:TRUE
    Signature Algorithm: ecdsa-with-SHA1
         30:44:02:20:70:d2:c3:0f:b6:ad:54:a6:6d:f5:a2:54:16:c7:
         4f:49:08:93:b4:5c:41:55:82:60:d4:90:d9:80:9f:68:99:11:
         02:20:1f:d1:34:e4:a0:de:fa:b0:0a:32:8e:68:80:54:0c:fa:
         be:24:2f:a2:39:f0:47:83:63:4b:d8:eb:49:6f:e9:dc

-----------------------------------------------------
Crypto requirements:
- ECDSA_ECDHE_AES128_CCM_8
- cert signature ecdsa with SHA1
- AES256 for SMIP
- AES128 for MAC secirity
- AES128 for CNDFS security.

---------------------------------------------------
openssl verify cert:

openssl verify -verbose -CAfile ca.crt.pem server.crt.pem<Paste>

----------------------------------------------------------------
MBedTLS Working setup:

./programs/ssl/ssl_client2 server_addr=127.0.0.1 dtls=1_2  debug_level=0 \
   force_ciphersuite=TLS-ECDHE-ECDSA-WITH-AES-128-CCM-8 \
   ca_file=/Data/Temp/MBedTLSCerts/ca.crt.pem \
   crt_file=/Data/Temp/MBedTLSCerts/node.crt.pem \
   key_file=/Data/Temp/MBedTLSCerts/node.key.pem \
   server_name=server

./programs/ssl/ssl_server2 server_addr=127.0.0.1 dtls=1 debug_level=9 \
    ca_file=/Data/Temp/MBedTLSCerts/ca.crt.pem \
    crt_file=/Data/Temp/MBedTLSCerts/server.crt.pem \
    key_file=/Data/Temp/MBedTLSCerts/server.key.pem


include/mbedtls/config.h

#ifndef MBEDTLS_CONFIG_H
#define MBEDTLS_CONFIG_H

/* System support */
#define MBEDTLS_HAVE_ASM

#define MBEDTLS_DEBUG_C

/* mbed TLS feature support */
#define MBEDTLS_AES_ROM_TABLES
#define MBEDTLS_ECP_DP_SECP256R1_ENABLED
#define MBEDTLS_ECDH_C
#define MBEDTLS_ECDSA_C
#define MBEDTLS_ECP_NIST_OPTIM

// CC mods:
#define MBEDTLS_SHA1_C
#define MBEDTLS_SHA256_C
#define MBEDTLS_KEY_EXCHANGE_RSA_ENABLED
#define MBEDTLS_RSA_C
#define MBEDTLS_PKCS1_V15
#define MBEDTLS_PKCS1_V21
#define MBEDTLS_BASE64_C
#define MBEDTLS_PEM_PARSE_C
#define MBEDTLS_FS_IO
#define MBEDTLS_AES_C
#define MBEDTLS_ASN1_PARSE_C
#define MBEDTLS_ASN1_WRITE_C
#define MBEDTLS_BIGNUM_C
#define MBEDTLS_CIPHER_C
#define MBEDTLS_CTR_DRBG_C
#define MBEDTLS_ECDH_C
#define MBEDTLS_ECDSA_C
#define MBEDTLS_ECP_C
#define MBEDTLS_ENTROPY_C
#define MBEDTLS_GCM_C
#define MBEDTLS_MD_C
#define MBEDTLS_NET_C
#define MBEDTLS_OID_C
#define MBEDTLS_PK_C
#define MBEDTLS_PK_PARSE_C
#define MBEDTLS_SHA256_C
#define MBEDTLS_SHA512_C
#define MBEDTLS_SSL_CLI_C
#define MBEDTLS_SSL_SRV_C
#define MBEDTLS_SSL_TLS_C
#define MBEDTLS_SSL_CLI_C
#define MBEDTLS_SSL_SRV_C
#define MBEDTLS_SSL_TLS_C
#define MBEDTLS_X509_USE_C
#define MBEDTLS_X509_CRT_PARSE_C
#define MBEDTLS_ECP_DP_SECP256R1_ENABLED
#define MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED

#define MBEDTLS_SSL_MAX_FRAGMENT_LENGTH
#define MBEDTLS_SSL_PROTO_TLS1_2
#define MBEDTLS_SSL_PROTO_DTLS
#define MBEDTLS_SSL_DTLS_ANTI_REPLAY
#define MBEDTLS_SSL_DTLS_HELLO_VERIFY
#define MBEDTLS_SSL_EXPORT_KEYS

/* mbed TLS modules */
#define MBEDTLS_AES_C
#define MBEDTLS_ASN1_PARSE_C
#define MBEDTLS_ASN1_WRITE_C
#define MBEDTLS_BIGNUM_C
#define MBEDTLS_CCM_C
#define MBEDTLS_CIPHER_C
#define MBEDTLS_CTR_DRBG_C
#define MBEDTLS_CMAC_C
#define MBEDTLS_ECJPAKE_C
#define MBEDTLS_ECP_C
#define MBEDTLS_ENTROPY_C
#define MBEDTLS_HMAC_DRBG_C
#define MBEDTLS_MD_C
#define MBEDTLS_OID_C
#define MBEDTLS_PK_C
#define MBEDTLS_PK_PARSE_C
#define MBEDTLS_SHA256_C
#define MBEDTLS_SSL_COOKIE_C
#define MBEDTLS_SSL_CLI_C
#define MBEDTLS_SSL_SRV_C
#define MBEDTLS_SSL_TLS_C
#define MBEDTLS_CERTS_C

/* For tests using ssl-opt.sh */
#define MBEDTLS_NET_C
#define MBEDTLS_TIMING_C

/* Save RAM at the expense of ROM */
#define MBEDTLS_AES_ROM_TABLES

/* Save RAM by adjusting to our exact needs */
#define MBEDTLS_ECP_MAX_BITS             256
#define MBEDTLS_MPI_MAX_SIZE              32 // 256 bits is 32 bytes

/* Save ROM and a few bytes of RAM by specifying our own ciphersuite list */
#define MBEDTLS_SSL_CIPHERSUITES MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8

#include "mbedtls/check_config.h"

#endif /* MBEDTLS_CONFIG_H */


-------------------------------------------------
certificate convert pem der

- openssl x509 -inform der -in ca.crt.der -out ca.crt.pem
- openssl x509 -inform der -in node.crt.der -out node.crt.pem
- openssl ec -inform der -in node.key.der -outform pem -out node.key.pem
- openssl rsa -inform pem -in client-key.pem -outform der -out client-key.der

show key info:
- openssl ec -inform der -in node.key.der  -text -noout

----------------------------------------------
stevesbiglaptop.lan setup:

https://unix.stackexchange.com/questions/337008/activate-tap-to-click-on-touchpad
https://unix.stackexchange.com/questions/317591/gdm3-change-default-wm-from-gnome-to-i3

------------------------------------------
dtls_server:
- make host-genus-dlms-insecure


---------------------

dev-stack setup -n 1 -s 1 -e -a 1 -g 1

---------------------------------
mbedtls trusted_ca_keys extension https://github.com/ARMmbed/mbedtls/pull/3371/commits

-----------------------------------------------

- download packages from Artifactory, place into /Data/Temp/DevStack/pkg
- extract "etc" directories from nms and sma pkgs and put into /Data/Temp/DevStack/pkg/nms/etc

dev-stack --datadir /Data/Temp/DevStack/.data --pkgdir /Data/Temp/DevStack/pkg setup -n 1 -s 1 -e -a 1 -g 1 --tund-version tun6d-v8.0.5.tar.gz  --agent-version host-agent-v20.11.8.tar.gz --nms-version nms-v20.11.10.tar.gz --sma-version sma-v20.11.10.tar.gz

--------------------------------------
modem trace:

./tools/c4-tools/coap_request.py --ctrlporthub :5001 --modem-at-enable
./tools/c4-tools/coap_request.py --ctrlporthub :5001 --modem-at-cmd AT+UUSBCONF=0
./tools/c4-tools/coap_request.py --ctrlporthub :5001 --modem-at-cmd AT+CFUN=1,1
./tools/c4-tools/coap_request.py --ctrlporthub :5001 --modem-at-cmd AT+TRACE=1,115200,,,,,"CDC-ACM"
./tools/c4-tools/coap_request.py --ctrlporthub :5001 --modem-at-cmd AT+CFUN=1,1

----------------
Test

----------------------------------
ipv6 disable until next reboot:

sudo sysctl -w net.ipv6.conf.all.disable_ipv6=1
sudo sysctl -w net.ipv6.conf.default.disable_ipv6=1

------------------------------------------
pip install issue:
https://github.com/pypa/pip/issues/7883

add to .bashrc:

# 1-May-2020: Fix for Keyring error with pip. Hopefully new pip will fix it
# soon https://github.com/pypa/pip/issues/7883
export PYTHON_KEYRING_BACKEND=keyring.backends.null.Keyring
-----------------------------------
Dockerfile:
pip3 install --proxy squid:3128

--------------------------------------
docker change storage path:

https://linuxconfig.org/how-to-move-docker-s-default-var-lib-docker-to-another-directory-on-ubuntu-debian-linux<Paste>

----------------------------------------
.gitlab-ci.yml build stage:
/build-tools/ca-wrapper run "PATH=/build/.local/bin:$PATH; pip3 install --proxy squid:3128 virtualenv tox && tox"

-------------------------------------
uwsgi running locally:

uwsgi --ini wsgi.ini

----------------------------------------
uwsgi
https://uwsgi-docs.readthedocs.io/en/latest/WSGIquickstart.html

Keys SSL cert:
openssl genrsa -out foobar.key 2048
openssl req -new -key foobar.key -out foobar.csr
openssl x509 -req -days 365 -in foobar.csr -signkey foobar.key -out foobar.crt

wsgi.ini
[uwsgi]
https = :9090,foobar.crt,foobar.key

------------------------------------
dev-stack,metertool:

dev-stack --datadir /Data/Temp/DevStack/.data --pkgdir /Data/Temp/DevStack/pkg setup -n 1 -s 1 -e -a 1 -g 1 --tund-version tun6d-v8.0.5.tar.gz  --agent-version host-agent-v20.11.8.tar.gz --nms-version nms-v20.11.10.tar.gz --sma-version sma-v20.11.10.tar.gz --metertool-version=metertool-v0.0.0.tar.gz

-----------------------------------------
apt update
apt install -y python3 python3-pip vim
pip3 install --upgrade pip setuptools wheel uwsgi
pip3 install /metertool/whl/metertool-0.1-py3-none-any.whl

cd /usr/local/lib/python3.7/dist-packages/metertool
uwsgi --ini wsgi.ini

------------------------------------------
Bootstrap validator

https://1000hz.github.io/bootstrap-validator/

----------------------------------------------

# Create group with two meters

POST https://omnidev-in-01.dev.cyanconnode.com/sma/ws/meterGroup {"meterGroupName": "groupForSession_2049442294", "meterGroupType": "STATIC", "meters": ["00-1B-C5-0C-60-06-77-B7", "002003699018"]}

{
  "meterGroupName": "groupForSession_2049442294",
  "meterGroupType": "STATIC",
  "meters": [
    "1B-C5-0C-60-06-77-B7",
    "002003699018"
  ]
}

201

# Create job using that group.

POST https://omnidev-in-01.dev.cyanconnode.com/sma/ws/meterJob
{
  "jobName": "jobForSession_2049442294",
  "jobType": "METER_COMMAND_SET",
  "jobConfiguration": {
    "commands": [
      {
        "type": "PROFILE_CAPTURE_PERIOD",
        "activationTime": "2018-01-01T00:00:00+0530",
        "profileType": "BLOCK_LOAD",
        "capturePeriod": "900"
      }
    ]
  },
  "meterGroup": "groupForSession_2049442294",
  "timeoutTime": "2020-07-22T10:10:21+0000"
}

201

# Start the job.

POST https://omnidev-in-01.dev.cyanconnode.com/sma/ws/manageMeterJob/jobForSession_2049442294

{"instruction": "START"}

200

# Get status for job (Note: one processed device).

GET https://omnidev-in-01.dev.cyanconnode.com/sma/ws/queryMeterJob/jobForSession_2049442294

200

{
  "jobName": "jobForSession_2049442294",
  "meterGroup": "groupForSession_2049442294",
  "scheduledTime": null,
  "timeoutTime": "2020-07-22T15:40:21+05:30",
  "createTime": "2020-07-22T15:38:22+05:30",
  "updateTime": "2020-07-22T15:38:22+05:30",
  "status": "FINISHED",
  "jobType": "METER_COMMAND_SET",
  "jobConfiguration": {
    "commands": [
      {
        "type": "PROFILE_CAPTURE_PERIOD",
        "profileType": "BLOCK_LOAD",
        "capturePeriod": 900,
        "activationTime": "2018-01-01T00:00:00+05:30",
        "active": false
      }
    ]
  },
  "totalProcessedDevices": 1,
  "totalSuccessfulDevices": 0,
  "totalFailedDevices": 0
}

# Get meter statuses for job. (Only one meter status, not two).

POST https://omnidev-in-01.dev.cyanconnode.com/sma/ws/meterStatusForJob/jobForSession_2049442294
{"startId": 0, "count": 1000}

200

{
  "meters": [
    {
      "meterId": "00-1B-C5-0C-60-06-77-B7",
      "status": "DEVICE_UNREACHABLE",
      "failureStep": "0",
      "progress": null
    }
  ]
}

# Get job status again. (FINISHED, only one processed, not two).

GET https://omnidev-in-01.dev.cyanconnode.com/sma/ws/queryMeterJob/jobForSession_2049442294

200

{
  "jobName": "jobForSession_2049442294",
  "meterGroup": "groupForSession_2049442294",
  "scheduledTime": null,
  "timeoutTime": "2020-07-22T15:40:21+05:30",
  "createTime": "2020-07-22T15:38:22+05:30",
  "updateTime": "2020-07-22T15:38:22+05:30",
  "status": "FINISHED",
  "jobType": "METER_COMMAND_SET",
  "jobConfiguration": {
    "commands": [
      {
        "type": "PROFILE_CAPTURE_PERIOD",
        "profileType": "BLOCK_LOAD",
        "capturePeriod": 900,
        "activationTime": "2018-01-01T00:00:00+05:30",
        "active": false
      }
    ]
  },
  "totalProcessedDevices": 1,
  "totalSuccessfulDevices": 0,
  "totalFailedDevices": 0
}

------------------------------
to add to loadcurtailment:
- currentLimitEmergency
- currentLimitMinOverThresholdDuration
- currentLimitMinUnderThresholdDuration
- currentLimitNormal
- powerLimitEmergency
--------------------------------------
timesheets:
+ 17/3/20 - 20/3/20 : TangedCo + SW
+ 23/3/20 - 27/3/20 : TangedCo + SW
+ 30/3/20 - 3/4/20  : TangedCo + SW
+ 6/4/20  - 10/4/20 : TangedCo + SW
+ 13/4/20 - 17/4/20 : TangedCo + SW
+ 20/4/20 - 24/4/20 : TangedCo + SW
+ 27/4/20 - 1/5/20  : MEA + SW
+ 4/5/20  - 8/5/20  : MEA + SW
+ 11/5/20 - 15/5/20 : TangedCo + SW
+ 18/5/20 - 22/5/20 : TangedCo + SW
+ 25/5/20 - 29/5/20 : MEA + SW
+ 1/6/20  - 5/6/20  : MEA + SW
+ 8/6/20  - 12/6/20 : MEA + SW
+ 15/6/20 - 19/6/20 : SW
+ 22/6/20 - 26/6/20 : TLS
+ 29/6/20 - 3/7/20  : TLS
+ 6/7/20  - 10/7/20 : MEA + TLS
+ 13/7/20 - 17/7/20 : MEA + SW
+ 20/7/20 - 24/7/20 : MEA + SW
+ 27/7/20 - 31/7/20 : MEA + SW
+ 03/8/20 - 07/8/20 : holiday
+ 10/8/20 - 14/8/20 : MEA + SW
+ 17/8/20 - 21/8/20 : MEA + SMIP + SW
+ 24/8/20 - 28/8/20 : holiday
+ 31/8/20 -  4/9/20 : bank hol? +  MEA + SW + SMIP
+ 07/9/20 - 11/9/20 : MEA + SW + SMIP
+ 14/9/20 - 18/9/20 : MEA + SW + SMIP
+ 21/9/20 - 25/9/20 : MEA + SW
+ 28/9/20 -  2/10/20: MEA + SW
+ 5/10/20 -  9/10/20: SW
+12/10/20 - 16/10/20: SW
+19/10/20 - 23/10/20: SW
+26/10/20 - 30/10/20: SW
+ 2/11    -  6/11/20: SW (mbedtls)
+ 9/11    - 13/11/20: SW (mbedtls)
+16/11    - 20/11/20: SW (mbedtls)
+23/11    - 27/11/20: SW (wisun)
+30/11    -  4/12/20: SW (mbedtls)
+30/11    - 11/12/20: cnic & mbedtls + SW
+30/11    - 18/12/20: cnic & mbedtls + SW
+30/11    - 25/12/20: cnic + hol

+28/12    -   1/1/21: hol
+ 4/1     -   8/1/21: mbedtls
+11/1     -  15/1/21: mbedtls
+18/1     -  22/1/21: mbedtls
+25/1     -  29/1/21: mbedtls

+ 1/2     -   5/2/21: mbedtls
+ 8/2     -  12/2/21: mbedtls
+15/2     -  19/2/21: mbedtls + SW
+22/2     -  26/2/21: mbedTLS + SW

+28/2     -   5/3/21: SW
+ 7/2     -  12/3/21: SMIP
+14/2     -  19/3/21: SMIP + 2d hol
+21/2     -  26/3/21: SMIP

 28/2     -   2/4/21: SW + 4d hol

mbedtls=EUK0-112-1

          - 31/7/20 : MEA + SW (MeterTool & support)

+ 5/4      -  9/4/21: SMIP server + SW
+12/4      - 16/4/21: SMIP server + SW
+19/4      - 23/4/21: SMIP server + SW
+26/4      - 30/4/21: SMIP server + SW

+ 3/5      -  7/5/21: SW + WiSUN
+10/5      - 14/5/21: SW + WiSUN
+17/5      - 21/5/21: SW + WiSUN
+24/5      - 28/5/21: SW + WiSUN

+31/5      -  4/6/21: SW + WiSUN
+ 7/6      - 11/6/21: SW + WiSUN + 2d hol
+14/6      - 18/6/21: SW + WiSUN
+21/6      - 25/6/21: SW + WiSUN + 1d hol
+28/6      -  2/7/21: SW + WiSUN + brownout mods.

+5/7      -  9/7/21: SW + WiSUN


-------------------------------------------------
dev-stack
dev-stack --datadir /Data/Temp/DevStack/.data --pkgdir /Data/Temp/DevStack/pkg setup -n 1 -s 1 -a 1


-------------------------------------------------
ideas:
- Analytics, provide value-added analysis with AI/ML.
- Load control devices (plug-with-nodes). Close loop with analytics to provide load-smoothing for power network, etc.
- Above provides "local" load-shedding, i.e. real-time local control of devices to ensure load never rises above set threshold. Easy to manage.
- Low power for gas & water meters.
    - Application level
        - Application boots, attaches to mesh, syncs requests, generates responses, samples, sends responses to gw, shuts down.
        - Implement SMA stored "last-timestamp" pointer rather than on node to allow removal of (high powered, expensive) external flash.
        - Implement persistent-circular-buffers for deterministic power-usage for persistent data.
    - Transport level
        - Modelled on SMETS2 "gas-proxy", i.e. gateway presents a psuedo node that communicates with server. Sync of proxy to real device happens on-the-hour.
        - Could keep the illusion of IPv6/LoWPAN with very high-latency.
    - Routing
        - RPL is slow to start, consider alternatives, even very simple network flooding with de-duplication on gw.
    - Platform level
        - normally off operation. no state retention. RTC wakes via alarm int every 30 minutes.
- Secure local CoAP for modeless/secure operation
- FLASH removal. BOM cost reduction.
- Replace platform with OpenThread to reduce software maintainance. CC becomesa pure SmartMetering company.
- Declarative configuration for more deterministic & (hopefully) reliable configuration of meters.
- Multicast based jobs for scalable network comms.
- Time-series db on server for separation of sample data from metadata/control-data. Different access patterns warrant different storage patterns. Improve scalability.
- OpenSource IoT platform & dev kit? "Consumer" level gateway.
- presence detection.
- liquid level monitoring (e.g. oil tank), hook up with oil delivery service to give cheaper bulk oil delivery.
- water tank monitoring & sprinkler control (gardens tend to be out of wifi-range).

------------------------------
SMIP library uploaded to sftp.cyco.io
/home/toshiba/data/Development_Libraries/smip-v97.0.63.tar.gz

-----------------------------------------
gcc
https://developer.arm.com/-/media/Files/downloads/gnu-rm/8-2019q3/RC1.1/gcc-arm-none-eabi-8-2019-q3-update-linux.tar.bz2?revision=c34d758a-be0c-476e-a2de-af8c6e16a8a2?product=GNU%20Arm%20Embedded%20


gdb --args ./build/host-genus-insecure/bin/agent -eui64 00-1B-C5-0C-60-06-77-B8 \
 -pythonScript myTest \
 -meter /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0 \
 -initrtc \
 -ctrlhub 127.0.0.1 \
 -ctrlhubport 4242 \
 -loglevel debug \
 -param device.dlms.lls_password=3141324233433444 \
 -param device.dlms.authentication_key=756776636c656b616b67313836616263 \
 -param device.dlms.encryption_key=756776636c656b616b67313836616263 \
 -param device.dlms.hls_key=756776636c686c737567313836616263 \
 -param device.time.sync_timer=1 \
 -param server.ip=fd00::1 \
 -param server.port=5684 \
 -param modem.tun6.ip=omnidev-in-01.dev.cyanconnode.com \
 -param modem.tun6.secret=ZV9IPCHFvINmOEKv \
 -param modem.apn=4g.tele2.se \
 -param server.mq.push_now=1 \
 -param server.mq.push_delay=30 \
 -param device.capabilities.dlmspipe.push=0 \
 -param device.dlms.pipe_enabled=0 \
 -param capabilities.meter.device_testing=0 \
 -param dev.udp.log.ip=fd00::1 \
 -param dev.udp.log.port=1234 \
 -rootcert /Data/Temp/ProdPack/ProdPack1000/00-1B-C5-0C-60-06-77-B8/ca.crt.der  \
 -cert /Data/Temp/ProdPack/ProdPack1000/00-1B-C5-0C-60-06-77-B8/node.crt.der  \
 -key /Data/Temp/ProdPack/ProdPack1000/00-1B-C5-0C-60-06-77-B8/node.key.der  \
 -mackey /Data/Temp/ProdPack/ProdPack1000/00-1B-C5-0C-60-06-77-B8/mac_keys.txt \
 -gateway \
 -statedir AgentState \
 -socket

--------------------------------------------------------
wolf ssl advisories since 3.10.2

INFO	CVE ID	SEVERITY	DESCRIPTION	TIME TO FIX	FIXED IN VERSION
LINK	CVE-2020-11713	Low	wolfSSL versions prior to 4.4.0 have mulmod code in wc_ecc_mulmod_ex in ecc.c that does not properly resist timing side-channel attacks. Version 4.4.0 fixes this to be constant time and cache resistant. Thank you to Pietro Borrello at Sapienza University of Rome.	Fixed 4 days prior to CVE issuance	4.4.0
LINK	CVE-2020-11735	Low	wolfSSL versions prior to 4.4.0 using fast math do not use a constant-time modular inverse when mapping to affine coordinates. Version 4.4.0 uses a constant time modular inverse when mapping to affine when operation involves a private key - keygen, calc shared secret, sign. Thank you to Alejandro Cabrera Aldaya, Cesar Pereida García and Billy Bob Brumley from the Network and Information Security Group (NISEC) at Tampere University for the report.	Fixed 36 days prior to CVE issuance	4.4.0
CVE-2019-18840	High	In wolfSSL 4.1.0 through 4.2.0c, there are missing sanity checks of memory accesses in parsing ASN.1 certificate data while handshaking. Specifically, there is a one-byte heap-based buffer overflow inside the DecodedCert structure in GetName in wolfcrypt/src/asn.c because the domain name location index is mishandled. Because a pointer is overwritten, there is an invalid free	0 days	4.3.0
LINK	N/A	Low	In wolfSSL versions prior to 4.2.0, there is a potential program hang when ocspstapling2 is enabled. This is a moderate level fix that affects users who have ocspstapling2 enabled(off by default) and are on the server side. In parsing a CSR2 (Certificate Status Request v2 ) on the server side, there was the potential for a malformed extension to cause a program hang. Discovered by Robert Hoerr.	5 days	4.2.0
LINK	CVE-2019-16748	High	In wolfSSL through 4.1.0, there is a missing sanity check of memory accesses in parsing ASN.1 certificate data while handshaking. Specifically, there is a one-byte heap-based buffer over-read in CheckCertSignature_ex in wolfcrypt/src/asn.c.	1 days	4.2.0
LINK	CVE-2019-15651	High	wolfSSL 4.1.0 has a one-byte heap-based buffer over-read in DecodeCertExtensions in wolfcrypt/src/asn.c because reading the ASN_BOOLEAN byte is mishandled for a crafted DER certificate in GetLength_ex.	1 days	4.2.0
LINK	N/A	Low	wolfSSL versions before 4.2.0 have potential for an invalid read when TLS 1.3 and pre-shared keys is enabled. Users without TLS 1.3 enabled are unaffected. Users with TLS 1.3 enabled and HAVE_SESSION_TICKET defined or NO_PSK not defined should update wolfSSL versions. Discovered by Robert Hoerr.	0 days	4.2.0
LINK	CVE-2019-14317	Low	Versions of wolfSSL before 4.2.0 are vulnerable to DSA operations involving an attack on recovering DSA private keys. This affects users that have DSA enabled and are performing DSA operations (off by default). ECDSA is NOT affected by this and TLS code is NOT affected by this issue. Discovered by Ján Jan?ár at Masaryk University.	0 days	4.2.0
LINK	CVE-2019-13628	Medium	Versions of wolfSSL before 4.1.0 are vulnerable to the potential leak of nonce sizes when performing ECDSA signing operations. The leak is considered to be difficult to exploit but it could potentially be used maliciously to perform a lattice based timing attack against previous wolfSSL versions. Discovered by Ján Jan?ár at Masaryk University.	5 days	4.1.0
LINK	CVE-2019-11873	High	In wolfSSL version 4.0.0, there is a potential buffer overflow case with the TLSv1.3 PSK extension parsing. This affects users that are enabling TLSv1.3 (--enable-tls13). Discovered by Robert Hoerr.	0 days	4.1.0
LINK	CVE-2018-16870	Medium	Versions of wolfSSL prior to 3.15.7 are vulnerable to a new variant of the Bleichenbacher attack to perform downgrade attacks against TLS, which may lead to leakage of sensible data.	0 days	3.15.7
LINK	CVE-2018-12436	Medium	Versions of wolfSSL up to and including 3.15.0 are vulnerable to a Key Extraction Side Channel Attack. A patch (wolfssl-3.15.1.patch) is available for download now on our website and a full release will be available next week containing the patch.	0 days	3.15.3
LINK	CVE-2017-13099	Medium	Versions of wolfSSL up to 3.12.2 have a weak Bleichenbacher vulnerability with suites that use an RSA-encrypted premaster secret. Discovered by Hanno Böck, Juraj Somorovsky, Craig Young.	9 days	3.13.0
LINK	CVE-2017-2800	Critical	Versions of wolfSSL before 3.11.0 have a possible out-of-bounds write by one from a crafted certificate being passed to the function wolfSSL_X509_NAME_get_text_by_NID. Discovered by Aleksandar Nikolic of Cisco Talos.	Fixed 20 days prior to CVE issuance	3.11.0
LINK	CVE-2017-8855	High	In versions of wolfSSL before 3.11.0 there are cases where a malformed DH key is not rejected by the function wc_DhAgree. Thanks to Yueh-Hsun Lin and Peng Li at KNOX Security at Samsung Research America.	Fixed 5 days prior to CVE issuance	3.11.0

-----------------------------------------
deviceconfigurator metertoool log
journalctl -xe --unit=omnimesh-metertool

-----------------------------------------
LOG = logging.basicConfig(filename='SMA.log', format='%(asctime)-15s %(message)s')
LOG = logging.getLogger('sma')


-------------------------------------------------------------------
special days failure


2020-08-10 16:17:48,195 >>> POST https://omnireltest1.dev.cyanconnode.com/sma/ws/meterGroup {"meterGroupName": "groupForSession_1852918579", "meterGroupType": "STATIC", "meters": ["002003999032"]}
2020-08-10 16:17:48,350 <<< 201
2020-08-10 16:17:48,350 >>> POST https://omnireltest1.dev.cyanconnode.com/sma/ws/meterJob {"jobName": "jobForSession_1852918579", "jobType": "METER_COMMAND_SET", "jobConfiguration": {"commands": [{"type": "TARIFF_CALENDAR", "activationTime": "2018-01-01T00:00:00+0530", "seasons": [{"start": {"dayOfMonth": 1, "month": 1}, "week": 0}], "weeks": [{"days": [1, 2, 3, 1, 2, 3, 1]}], "days": [{"schedule": [{"time": "00:00", "zone": 1}, {"time": "12:00", "zone": 2}, {"time": "18:00", "zone": 3}]}, {"schedule": [{"time": "00:00", "zone": 4}, {"time": "12:00", "zone": 5}, {"time": "18:00", "zone": 6}]}, {"schedule": [{"time": "00:00", "zone": 7}, {"time": "12:00", "zone": 8}, {"time": "18:00", "zone": 9}]}], "specialDay": [{"dayOfMonth": 30, "month": 7, "year": 2020, "dayId": 2}, {"dayOfMonth": 15, "month": 8, "year": 2020, "dayId": 2}]}]}, "meterGroup": "groupForSession_1852918579", "timeoutTime": "2020-08-10T15:19:48+0000"}
2020-08-10 16:17:48,400 <<< 201
2020-08-10 16:17:48,400 >>> POST https://omnireltest1.dev.cyanconnode.com/sma/ws/manageMeterJob/jobForSession_1852918579 {"instruction": "START"}
2020-08-10 16:17:48,456 <<< 200
2020-08-10 16:17:48,457 127.0.0.1 - - [10/Aug/2020 16:17:48] "POST /Step3Submit HTTP/1.1" 200 -
2020-08-10 16:17:48,580 >>> GET https://omnireltest1.dev.cyanconnode.com/sma/ws/queryMeterJob/jobForSession_1852918579 None
2020-08-10 16:17:48,625 <<< 200 {"jobName":"jobForSession_1852918579","meterGroup":"groupForSession_1852918579","scheduledTime":null,"timeoutTime":"2020-08-10T15:19:48Z","createTime":"2020-08-10T15:17:48Z","updateTime":"2020-08-10T15:17:48Z","status":"RUNNING","jobType":"METER_COMMAND_SET","jobConfiguration":{"commands":[{"type":"TARIFF_CALENDAR","active":false,"activationTime":"2017-12-31T18:30:00Z","seasons":[{"week":0,"start":{"dayOfMonth":1,"month":1}}],"weeks":[{"days":[1,2,3,1,2,3,1]}],"days":[{"schedule":[{"time":"00:00","zone":1},{"time":"12:00","zone":2},{"time":"18:00","zone":3}]},{"schedule":[{"time":"00:00","zone":4},{"time":"12:00","zone":5},{"time":"18:00","zone":6}]},{"schedule":[{"time":"00:00","zone":7},{"time":"12:00","zone":8},{"time":"18:00","zone":9}]}],"specialDay":[{"dayId":2,"year":2020,"dayOfMonth":30,"month":7},{"dayId":2,"year":2020,"dayOfMonth":15,"month":8}]}]},"totalProcessedDevices":0,"totalSuccessfulDevices":0,"totalFailedDevices":0}
2020-08-10 16:17:48,626 >>> POST https://omnireltest1.dev.cyanconnode.com/sma/ws/meterStatusForJob/jobForSession_1852918579 {"startId": 0, "count": 1000}
2020-08-10 16:17:48,669 <<< 200 {"meters":[]}
2020-08-10 16:17:48,671 127.0.0.1 - - [10/Aug/2020 16:17:48] "GET /Progress HTTP/1.1" 200 -






2020-08-10 16:17:53,581 >>> GET https://omnireltest1.dev.cyanconnode.com/sma/ws/queryMeterJob/jobForSession_1852918579 None
2020-08-10 16:17:53,642 <<< 200 {"jobName":"jobForSession_1852918579","meterGroup":"groupForSession_1852918579","scheduledTime":null,"timeoutTime":"2020-08-10T15:19:48Z","createTime":"2020-08-10T15:17:48Z","updateTime":"2020-08-10T15:17:48Z","status":"RUNNING","jobType":"METER_COMMAND_SET","jobConfiguration":{"commands":[{"type":"TARIFF_CALENDAR","active":false,"activationTime":"2017-12-31T18:30:00Z","seasons":[{"week":0,"start":{"dayOfMonth":1,"month":1}}],"weeks":[{"days":[1,2,3,1,2,3,1]}],"days":[{"schedule":[{"time":"00:00","zone":1},{"time":"12:00","zone":2},{"time":"18:00","zone":3}]},{"schedule":[{"time":"00:00","zone":4},{"time":"12:00","zone":5},{"time":"18:00","zone":6}]},{"schedule":[{"time":"00:00","zone":7},{"time":"12:00","zone":8},{"time":"18:00","zone":9}]}],"specialDay":[{"dayId":2,"year":2020,"dayOfMonth":30,"month":7},{"dayId":2,"year":2020,"dayOfMonth":15,"month":8}]}]},"totalProcessedDevices":0,"totalSuccessfulDevices":0,"totalFailedDevices":0}
2020-08-10 16:17:53,642 >>> POST https://omnireltest1.dev.cyanconnode.com/sma/ws/meterStatusForJob/jobForSession_1852918579 {"startId": 0, "count": 1000}
2020-08-10 16:17:53,709 <<< 200 {"meters":[]}
2020-08-10 16:17:53,711 127.0.0.1 - - [10/Aug/2020 16:17:53] "GET /Progress HTTP/1.1" 200 -
2020-08-10 16:17:58,581 >>> GET https://omnireltest1.dev.cyanconnode.com/sma/ws/queryMeterJob/jobForSession_1852918579 None
2020-08-10 16:17:58,655 <<< 200 {"jobName":"jobForSession_1852918579","meterGroup":"groupForSession_1852918579","scheduledTime":null,"timeoutTime":"2020-08-10T15:19:48Z","createTime":"2020-08-10T15:17:48Z","updateTime":"2020-08-10T15:17:58Z","status":"FINISHED","jobType":"METER_COMMAND_SET","jobConfiguration":{"commands":[{"type":"TARIFF_CALENDAR","active":false,"activationTime":"2017-12-31T18:30:00Z","seasons":[{"week":0,"start":{"dayOfMonth":1,"month":1}}],"weeks":[{"days":[1,2,3,1,2,3,1]}],"days":[{"schedule":[{"time":"00:00","zone":1},{"time":"12:00","zone":2},{"time":"18:00","zone":3}]},{"schedule":[{"time":"00:00","zone":4},{"time":"12:00","zone":5},{"time":"18:00","zone":6}]},{"schedule":[{"time":"00:00","zone":7},{"time":"12:00","zone":8},{"time":"18:00","zone":9}]}],"specialDay":[{"dayId":2,"year":2020,"dayOfMonth":30,"month":7},{"dayId":2,"year":2020,"dayOfMonth":15,"month":8}]}]},"totalProcessedDevices":1,"totalSuccessfulDevices":0,"totalFailedDevices":0}
2020-08-10 16:17:58,655 >>> POST https://omnireltest1.dev.cyanconnode.com/sma/ws/meterStatusForJob/jobForSession_1852918579 {"startId": 0, "count": 1000}
2020-08-10 16:17:58,733 <<< 200 {"meters":[{"meterId":"002003999032","status":"FAILED","failureStep":"0","progress":null}]}
2020-08-10 16:17:58,735 127.0.0.1 - - [10/Aug/2020 16:17:58] "GET /Progress HTTP/1.1" 200 -
2020-08-10 16:18:01,828 127.0.0.1 - - [10/Aug/2020 16:18:01] "GET / HTTP/1.1" 200 -

---------------------------------------------
TODO
- Groups real use of.
- Sessions not pickling.

--------------------------------------------------
MNO integration:
- IMEI, IMSI returned from gw on startup
- Always unique, therefore no point in having hash.
- Never changes tho, so thats argument for hash, but hash overhead could be larger than actual data.
- New protobuf & CoAP endpoint on NMS to deliver data to.
- gws have modems, but so do IMGWs and CNICs

-----------------------------------------------------

{
  "jobName": "jobForSession_3467398692",
  "jobType": "METER_COMMAND_SET",
  "jobConfiguration": {
    "commands": [
      {
        "type": "SECURITY_CREDENTIALS",
        "credentials": [
          {
            "accessLevel": "METER_ACCESS_UTILITY ",
            "password": "31313131313131313131313131313131",
            "wrappedPassword": "ad0110483d0559d12e8cb97203e6c908"
          }
        ]
      }
    ]
  },
  "meterGroup": "groupForSession_3467398692"
}


400 Cannot deserialize value of type `com.cyanconnode.sma.job.objects.MeterAccessLevel` from String "METER_ACCESS_UTILITY": value not one of declared Enum instance names: [METER_ACCESS_READER, METER_GLOBAL_KEY, METER_ACCESS_PUBLIC, METER_ACCESS_UTILITY, METER_ACCESS_FWUP

---------------------------------------------
building smip

CA_PROFILE=SMIP ca docker_pull smip/buildenv_terminal
CA_PROFILE=SMIP ./build-tools/ca-wrapper setup
CA_PROFILE=SMIP ./build-tools/ca-wrapper run "PROJECT=smip make smip"
CA_PROFILE=SMIP ./build-tools/ca-wrapper run "PROJECT=smip make build"
CA_PROFILE=SMIP ./build-tools/ca-wrapper run "PROJECT=smip make package"


---------------
pi@raspberrypi:~ $ ifconfig | grep global
        inet6 2a00:23c5:b394:dd00:e82d:8dbd:2a66:aaa1  prefixlen 64  scopeid 0x0<global>
        inet6 fd09:2534:54fc:0:f926:d444:ef43:4ffe  prefixlen 64  scopeid 0x0<global>
        inet6 fd09:2534:54fc::abf  prefixlen 128  scopeid 0x0<global>
        inet6 2a00:23c5:b394:dd00::abf  prefixlen 128  scopeid 0x0<global>


-------------------------------------------------
pki-create.sh

server certs (SMIP and Omni):
pki-create.sh /Data/Temp/DevStack/.data/pki /Data/Temp/DevStack/.data/pki server server

SMIP node certs:
SMIP=yes ./pki-create.sh /Data/Temp/DevStack/.data/pki /Data/Temp/DevStack/.data/pki/00-00-00-00-00-00-00-01 node 00-00-00-00-00-00-00-01
SMIP=yes /Data/Projects/dev-stack2/src/omnimesh/devstack/data/scripts/pki-create.sh /Data/Temp/DevStack/.data/pki /Data/Temp/DevStack/.data/pki/00-00-00-00-00-00-00-02 node 00-00-00-00-00-00-00-02

---------------------------
rm -rf /Data/Temp/DevStack/.data/pki
mkdir -p /Data/Temp/DevStack/.data/pki
cp certs/ca.crt.pem /Data/Temp/DevStack/.data/pki
cp certs/ca.key.pem /Data/Temp/DevStack/.data/pki

./pki-create.sh /Data/Temp/DevStack/.data/pki /Data/Temp/DevStack/.data/pki server server

mkdir -p /Data/Temp/DevStack/.data/pki/00-00-00-00-00-00-00-02
SMIP=yes ./pki-create.sh /Data/Temp/DevStack/.data/pki /Data/Temp/DevStack/.data/pki/00-00-00-00-00-00-00-02 node 00-00-00-00-00-00-00-02

-------------------------------------
videos
- "Screen recorder" chrome extension
- "veed" to add subtitles. (veed.io)

-----------------------------------------
MISRA start point:
21 agent.lint.MISRA.mandatory.uniq
1239 agent.lint.MISRA.required.uniq
559 agent.lint.MISRA.advisory.uniq

After mods:
0 agent.lint.MISRA.mandatory.uniq
354 agent.lint.MISRA.required.uniq
295 agent.lint.MISRA.advisory.uniq

---------------------------------------------------
Fuzz testing for SMIP (AFL)

make fuzzable
sudo su
echo core >/proc/sys/kernel/core_pattern
dd if=/dev/urandom of=testcases/seed bs=1024 count=1
afl-fuzz -t 500 -m 600 -i testcases/ -o findings/ build/fuzzable/bin/fuzzable_mac_frame -timemode fast -heap 8000

parallel fuzzing.
https://github.com/mirrorer/afl/blob/master/docs/parallel_fuzzing.txt

Or use script: tools/fuzzing/fuzzy-wuzzy.sh

then use "afl-whatsup findings/" to check status
----------------------------------------------------------


status check tool for afl-fuzz by <lcamtuf@google.com>

Individual fuzzers
==================

>>> fuzzer0 (0 days, 14 hrs) <<<

  cycle 14, lifetime speed 457 execs/sec, path 999/1009 (99%)
  pending 0/81, coverage 7.62%, no crashes yet

>>> fuzzer1 (0 days, 14 hrs) <<<

  cycle 116, lifetime speed 487 execs/sec, path 834/1057 (78%)
  pending 0/2, coverage 7.58%, no crashes yet

>>> fuzzer2 (0 days, 14 hrs) <<<

  cycle 107, lifetime speed 480 execs/sec, path 598/1158 (51%)
  pending 0/4, coverage 7.77%, no crashes yet

>>> fuzzer3 (0 days, 14 hrs) <<<

  cycle 111, lifetime speed 481 execs/sec, path 640/1139 (56%)
  pending 0/2, coverage 7.75%, no crashes yet

Summary stats
=============

       Fuzzers alive : 4
      Total run time : 2 days, 9 hours
         Total execs : 99 million
    Cumulative speed : 1905 execs/sec
       Pending paths : 0 faves, 89 total
  Pending per fuzzer : 0 faves, 22 total (on average)
       Crashes found : 0 locally unique



------------------------------------------------------------------------


status check tool for afl-fuzz by <lcamtuf@google.com>

Individual fuzzers
==================

>>> fuzzer0 (0 days, 15 hrs) <<<

  cycle 17, lifetime speed 457 execs/sec, path 652/1013 (64%)
  pending 0/56, coverage 7.62%, no crashes yet

>>> fuzzer1 (0 days, 15 hrs) <<<

  cycle 123, lifetime speed 487 execs/sec, path 562/1061 (52%)
  pending 0/1, coverage 7.59%, no crashes yet

>>> fuzzer2 (0 days, 15 hrs) <<<

  cycle 113, lifetime speed 480 execs/sec, path 397/1163 (34%)
  pending 0/1, coverage 7.78%, no crashes yet

>>> fuzzer3 (0 days, 15 hrs) <<<

  cycle 117, lifetime speed 481 execs/sec, path 534/1144 (46%)
  pending 0/1, coverage 7.76%, no crashes yet

Summary stats
=============

       Fuzzers alive : 4
      Total run time : 2 days, 12 hours
         Total execs : 104 million
    Cumulative speed : 1905 execs/sec
       Pending paths : 0 faves, 59 total
  Pending per fuzzer : 0 faves, 14 total (on average)
       Crashes found : 0 locally unique


------------------------------------------------------------------------------------

4.98V - ok
3.7V  - ok
2.74  - ok
2.50  - ok
2.40  - terminal:114, in task terminal: LoWPAN EUI-64 is missing, set prod.lowpan.eui64
2.30  - terminal:114, in task terminal: LoWPAN EUI-64 is missing, set prod.lowpan.eui6terminal:114, in task terminal: LoWPAN EUI-64 is missing, set prod.lowpan.euiterminal:114, in task terminal: LoWPAN EUI-64 is missing, set prod.lowpan.eui64
2.50  - terminal:114, in task terminal: LoWPAN EUI-64 is missing, set prod.lowpan.eui64
3.00  - terminal:114, in task terminal: LoWPAN EUI-64 is missing, set prod.lowpan.eui64
power-cycle- ok.

2.79V - ok
2.60V - ok
2.50V - ok
2.40V - terminal:114, in task terminal: LoWPAN EUI-64 is missing, set prod.lowpan.eui64
2.50V - ok
2.40V - terminal:114, in task terminal: LoWPAN EUI-64 is missing, set prod.lowpan.eui64
2.50V - ok
2.40V - terminal:114, in task terminal: LoWPAN EUI-64 is missing, set prod.lowpan.eui64
2.50V - terminal:114, in task terminal: LoWPAN EUI-64 is missing, set prod.lowpan.eui64
2.60V - terminal:114, in task terminal: LoWPAN EUI-64 is missing, set prod.lowpan.eui64


-------------------------------------------

http://127.0.0.1:8088/Step1Submit
http://127.0.0.1:8088/Step1Submit
http://127.0.0.1:8088/Step2Submit
http://127.0.0.1:8088/Step3Submit

----------------------------------------------------------------
smip v20.0.0

status check tool for afl-fuzz by <lcamtuf@google.com>

Individual fuzzers
==================

>>> fuzzer0 (0 days, 23 hrs) <<<

  cycle 22, lifetime speed 398 execs/sec, path 641/1220 (52%)
  pending 0/30, coverage 8.96%, no crashes yet

>>> fuzzer1 (0 days, 23 hrs) <<<

  cycle 152, lifetime speed 425 execs/sec, path 1139/1202 (94%)
  pending 0/3, coverage 8.54%, no crashes yet

>>> fuzzer2 (0 days, 23 hrs) <<<

  cycle 161, lifetime speed 428 execs/sec, path 342/1191 (28%)
  pending 0/4, coverage 8.55%, no crashes yet

>>> fuzzer3 (0 days, 23 hrs) <<<

  cycle 157, lifetime speed 419 execs/sec, path 423/1260 (33%)
  pending 0/0, coverage 8.67%, no crashes yet

Summary stats
=============

       Fuzzers alive : 4
      Total run time : 3 days, 20 hours
         Total execs : 138 million
    Cumulative speed : 1670 execs/sec
       Pending paths : 0 faves, 37 total
  Pending per fuzzer : 0 faves, 9 total (on average)
       Crashes found : 0 locally unique

---------------------------------------------------------------------
.data/db is mapped to /var/lib/mysql

This needs to be writable but gets created with user & group 999.
chusr -R ubuntu .data/db
chgrp -R ubuntu .data/db

fixes that.

---------------------------------------
dev-stack:

Need for each NMS:
dev-stack shell nms-0 "chmod -R a+rw /tmp"
for each

sudo -u #1000 -E

-------------------------------------------------
dtls server side.
driven from:
network.getConnectionRegistry().queueSessionInfoForStoring(this);
getTerminalLicenseId() retuns licenceId from cert?

DTLSSessionScavenger : thread
 -


-----------------------------------
DTLSNetwork:::

--------------------------------------
docker login

docker login docker-dev.artifactory.cyco.io
docker login smip-docker-dev.artifactory.cyco.io

----------------------------------------
MISRA checking process:

- run tools/MISRA/MakeMISRAReport.sh on new code.
- run tools/MISRA/MakeMISRAReport.sh on baseline code from MISRABaseline branch.
- Copy old agent.lint.MISRA.required.uniq to 'baseline'
- Copy new agent.lint.MISRA.required.uniq to 'new'
- Run tools/MISRA/CompareMISRAReport.py to find probable new issues.
- Manually check all output from above comparison.
- Repeat with 'mandatory' and 'advisory' in place of 'required'.

-------------------------------------
energimax:

12:35:56 Initializing serial connection.
12:35:57 Send SNRM request.
7E A0 07 03 21 93 0F 01 7E
12:35:57
7E A0 1E 21 03 73 C3 7A 81 80 12 05 01 80 06 01 80 07 04 00 00 00 01 08 04 00 00 00 01 53 3B 7E
12:35:57 Parsing UA reply succeeded.
12:35:57 Send AARQ request.
7E A0 2B 03 21 10 FB AF E6 E6 00 60 1D A1 09 06 07 60 85 74 05 08 01 01 BE 10 04 0E 01 00 00 00 06 5F 1F 04 00 00 1E 1D FF FF C5 E4 7E
12:35:58
7E A0 37 21 03 30 6C 7C E6 E7 00 61 29 A1 09 06 07 60 85 74 05 08 01 01 A2 03 02 01 00 A3 05 A1 03 02 01 00 BE 10 04 0E 08 00 06 5F 1F 04 00 00 10 10 00 F3 00 07 8A F2 7E
12:35:58 Parsing AARE reply succeeded.
12:35:58 Reading object 0.2.43.1.0.255, interface Data
7E A0 19 03 21 32 6F D8 E6 E6 00 C0 01 C1 00 01 00 02 2B 01 00 FF 02 00 C6 B8 7E
12:35:58
7E A0 15 21 03 52 5D 8A E6 E7 00 C4 01 C1 00 06 00 00 04 35 33 19 7E
12:35:58 Disconnect request
12:35:58 Disconnect request


12:35:58
7E A0 1E 21 03 73 C3 7A 81 80 12 05 01 80 06 01 80 07 04 00 00 00 01 08 04 00 00 00 01 53 3B 7E
12:35:58 Send SNRM request.
7E A0 07 03 03 93 8C 11 7E
12:35:58
7E A0 1E 03 03 73 40 CC 81 80 12 05 01 80 06 01 80 07 04 00 00 00 01 08 04 00 00 00 01 53 3B 7E
12:35:58 Parsing UA reply succeeded.
12:35:58 Send AARQ request.
7E A0 6B 03 03 10 CF A9 E6 E6 00 60 5D A1 09 06 07 60 85 74 05 08 01 03 A6 0A 04 08 73 65 72 76 65 72 30 31 8A 02 07 80 8B 07 60 85 74 05 08 02 05 AC 12 80 10 33 17 09 34 05 13 26 1F 23 42 07 6A 1C 0A 49 74 BE 23 04 21 21 1F 30 00 00 04 36 DB C4 E1 C0 00 9F 39 71 A8 3B 51 B6 38 2E 8C 89 F7 A4 B6 9A B2 3D AE 5A 66 E8 25 68 7E
12:35:58
7E A0 77 03 03 30 58 DC E6 E7 00 61 69 A1 09 06 07 60 85 74 05 08 01 03 A2 03 02 01 00 A3 05 A1 03 02 01 0E A4 0A 04 08 5A 54 59 01 31 34 3B 09 88 02 07 80 89 07 60 85 74 05 08 02 05 AA 12 80 10 43 58 08 F3 9D 9C 25 1A B9 A0 8C BB 48 1F F5 F7 BE 23 04 21 28 1F 30 00 00 05 80 9B 78 82 6A 8C CF C6 B1 67 44 82 CD A6 8F 3C F2 90 50 7C 44 64 55 07 47 01 F3 7E 7E 7E
12:35:58 Parsing AARE reply succeeded.
12:35:58 Authenticating.
7E A0 3F 03 03 32 25 0C E6 E6 00 CB 31 30 00 00 04 37 82 4C 15 A4 58 2F A7 CC F2 4C E7 AA E4 35 35 66 EB DE E2 C9 BD F4 4C C6 75 85 44 5B 26 52 0D E1 54 4B C7 5E 75 CA FB 96 53 6C 50 28 8A 03 7E
12:35:58
7E A0 38 03 03 52 02 38 E6 E7 00 CF 2A 30 00 00 05 81 BF FE DC 0C D2 0D E0 AC 0E EC 07 D8 8B 4B D1 D4 A5 75 D4 FC F3 D0 98 AD A9 38 E7 2E 63 C1 20 B9 4A BE 05 B2 8C 9A C3 7E
12:36:00 --- Collecting objects. ---
12:36:00 Collecting objects
7E A0 2C 03 03 54 79 EC E6 E6 00 C8 1E 30 00 00 04 38 F8 C4 F8 C9 23 F8 34 8B 63 CE 39 CB 4C 00 8D 27 EA BF C9 47 49 67 41 E2 85 7C EB 7E
12:36:00
7E A8 89 03 03 74 31 5B E6 E7 00 CC 81 C1 30 00 00 05 82 77 A6 54 25 0E F7 E2 01 9A 70 EA 7B F2 64 33 41 05 CD 23 86 86 55 A0 DE 3E DE EA 24 60 73 BD 0F BC 7E A6 17 BF 85 E5 C6 1E E6 CE 58 61 14 ED 70 5B D0 A9 83 ED 2D 67 2E AD CC 0A 93 17 4C 5F EA BC FC 95 00 70 D6 69 61 35 77 AC 86 C4 E4 E7 4D 63 DD 3F 17 BE C4 B2 41 A5 98 2B FB 7D C4 DE 2C 5E 4D B5 FC FF 3F 8F 36 5E E0 71 BB F7 B9 B5 86 27 00 47 C8 50 FB B8 7E
12:36:00 Get next frame.
12:36:00 Collecting objects
7E A0 07 03 03 71 90 D5 7E
12:36:00
7E A0 50 03 03 76 18 23 D8 AB CB 97 14 5D 8D 26 B7 67 8E 16 0E CF 7B 15 59 7E 8F F9 F5 E4 D8 07 33 85 19 88 AB 74 ED 1F 44 39 01 A4 AC 6C 0A D9 BD 4B 76 A8 0C D0 54 03 53 23 B7 57 8F E1 F8 57 15 FA 1C B1 71 95 6E C1 2E CF 6D 99 5F F2 BF 20 26 7E
12:36:00 Get Next Data block.
12:36:00 Collecting objects
7E A0 26 03 03 96 C9 D5 E6 E6 00 C8 18 30 00 00 04 39 D3 E3 96 A6 FA C3 AC E6 68 D0 F2 D3 B4 38 DD 7B D1 4B 7C 47 E0 7E
12:36:00
7E A8 89 03 03 98 53 76 E6 E7 00 CC 81 C0 30 00 00 05 83 2D C1 3E 7D 0D 87 7B EE F2 B9 CF B1 0D D2 DE 45 10 3A CE 22 75 F7 B5 A4 05 2F 36 1D 43 46 D3 12 D9 81 4F 6F 5E A9 A6 33 45 F8 0F 29 DA 15 6E 10 54 74 EE 21 B7 49 A2 33 C4 18 67 BA D3 16 E1 32 FD 26 A7 08 B5 51 29 1C 13 63 97 25 80 0B 25 E9 C2 F4 8D 34 CB BB 7C 1C 9D 86 10 C3 3A DB 36 63 BC B2 AF E9 0F C9 64 0E 91 51 79 14 FC 05 8A 46 CC BC B8 2E 19 FD 77 7E
12:36:00 Get next frame.
12:36:00 Collecting objects
7E A0 07 03 03 B1 9C 13 7E
12:36:00
7E A0 4F 03 03 9A 22 7F 30 C5 0B BB 39 BC 60 6C 70 50 B8 E5 A6 ED CE EC D9 EF 7A 75 8F 20 BC 38 AB EC ED 72 3C 5E 8F 51 8A F5 B6 CA 86 64 47 6E 13 C0 E0 C1 A7 20 0C B9 AE 99 F9 8B BB EE 5F 0C 7E 2C 4F 25 1B 9B 75 3B 16 42 4C E5 2D 2E 40 CB 7E


------------------------------------

working: 7E A0 07 03 21 93 0F 01 7E

failing:
TX:	 7E A0 07 03 2D 93 AF A8 7E
11:40:45 11:40:45.525	Sent	7E A0 07 03 2D 93 AF A8 7E
11:40:45 11:40:45.558	Received	7C 00 1C 08 02 62 40 9E 00 00 00 00 00
11:40:45 11:40:45.564	Received	00 00 04 00 00 06 00
11:40:45 11:40:45.567	Received	00 00 00
11:40:45 11:40:45.570	Received	00 00 00
11:40:45 11:40:45.573	Received	00 00 00
11:40:45 11:40:45.589	Received	00 02 32
11:40:50 Data send failed. Try to resend 1/3
11:40:50 11:40:50.531	Sent	7E A0 07 03 2D 93 AF A8 7E
11:40:50 11:40:50.568	Received	7C 00 1C 08 02 62 40 9E 00 00 00 00 00
11:40:50 11:40:50.575	Received	00 00 04 00 00 06 00
11:40:50 11:40:50.578	Received	00 00 00
11:40:50 11:40:50.581	Received	00 00 00
11:40:50 11:40:50.583	Received	00 00 00
11:40:50 11:40:50.600	Received	00 02 32



----------------------------------------------------------------------
emax:

O1 2020-09-16 13:28:47.774 PORT Baud Rate: 9600 StopBits: One Parity: None DataBits: 8
2 2020-09-16 13:28:48.292 PORT Port(COM4) opened
3 2020-09-16 13:28:48.348 SEND 7E A0 0A 1E E8 02 B9 23 93 81 9D 7E
4 2020-09-16 13:28:48.382 RECEIVE 7E A0 21 23 1E E8 02 B9 73 52 16 81
5 2020-09-16 13:28:48.396 RECEIVE 80 12 05 01 80 06 01 80 07 04 00 00 00 01 08
6 2020-09-16 13:28:48.412 RECEIVE 04 00 00 00 01 53 3B 7E
7 2020-09-16 13:28:48.474 SEND 7E A0 47 1E E8 02 B9 23 10 5B C2 E6 E6 00 60 36
8 2020-09-16 13:28:48.488 SEND A1 09 06 07 60 85 74 05 08 01 01 8A 02 07 80 8B
9 2020-09-16 13:28:48.501 SEND 07 60 85 74 05 08 02 01 AC 0A 80 08 31 32 33 34
10 2020-09-16 13:28:48.514 SEND 35 36 37 38 BE 10 04 0E 01 00 00 00 06 5F 1F 04
11 2020-09-16 13:28:48.524 SEND 00 00 7E 1F 04 B0 D0 F5 7E

<HDLC len="70" >
<TargetAddress Value="33358044" />
<SourceAddress Value="17" />
<!--AARQ frame.-->
<FrameType Value="10" />
<PDU>
<AssociationRequest>
  <ApplicationContextName Value="LN" />
  <SenderACSERequirements Value="1" />
  <MechanismName Value="Low" />
  <CallingAuthentication Value="3132333435363738" />
  <InitiateRequest>
    <ProposedDlmsVersionNumber Value="6" />
    <ProposedConformance>
      <ConformanceBit Name="Action" />
      <ConformanceBit Name="EventNotification" />
      <ConformanceBit Name="SelectiveAccess" />
      <ConformanceBit Name="Set" />
      <ConformanceBit Name="Get" />
      <ConformanceBit Name="MultipleReferences" />
      <ConformanceBit Name="BlockTransferWithAction" />
      <ConformanceBit Name="BlockTransferWithSetOrWrite" />
      <ConformanceBit Name="BlockTransferWithGetOrRead" />
      <ConformanceBit Name="Attribute0SupportedWithGet" />
      <ConformanceBit Name="PriorityMgmtSupported" />
    </ProposedConformance>
    <ProposedMaxPduSize Value="1200" />
  </InitiateRequest>
</AssociationRequest>
</PDU>
</HDLC>

12 2020-09-16 13:28:48.572 RECEIVE 7E A0 3A 23
13 2020-09-16 13:28:48.588 RECEIVE 1E E8 02 B9 30 86 A5 E6 E7 00 61 29 A1 09 06
14 2020-09-16 13:28:48.608 RECEIVE 07 60 85 74 05 08 01 01 A2 03 02 01 00 A3 05
15 2020-09-16 13:28:48.621 RECEIVE A1 03 02 01 00 BE 10 04 0E 08 00 06 5F 1F 04
16 2020-09-16 13:28:48.637 RECEIVE 00 00 1A
17 2020-09-16 13:28:48.638 RECEIVE 1D 00 F3 00 07 F0 A7 7E
18 2020-09-16 13:28:48.717 SEND    7E A0 1C 1E E8 02 B9 23 32 06 C4 E6 E6 00 C0 01
19 2020-09-16 13:28:48.751 SEND    81 00 01 00 00 2A 00 00 FF 02 00 17 4D 7E
20 2020-09-16 13:28:48.766 RECEIVE 7E A0 25 23 1E E8 02 B9
21 2020-09-16 13:28:48.782 RECEIVE 52 AF 49 E6 E7 00 C4 01 81 00 0A 10 5A 54 59
22 2020-09-16 13:28:48.799 RECEIVE 31 30 30 30 37 32 30 32 30 30 32 30 34 30 23
23 2020-09-16 13:28:48.819 RECEIVE 7E
24 2020-09-16 13:28:48.902 SEND    7E A0 1C 1E E8 02 B9 23 54 36 C2 E6 E6 00 C0 01
25 2020-09-16 13:28:48.953 SEND    81 00 01 00 00 60 01 00 FF 02 00 8C 6D 7E
26 2020-09-16 13:28:48.972 RECEIVE 7E A0 20 23 1E E8 02 B9 74 38
27 2020-09-16 13:28:48.993 RECEIVE FD E6 E7 00 C4 01 81 00 0A 0B 30 31 32 32 30
28 2020-09-16 13:28:49.013 RECEIVE 32 30 30 32 30 34 DD 30 7E
29 2020-09-16 13:28:49.091 SEND    7E A0 1C 1E E8 02 B9 23 76 26 C0 E6 E6 00 C0 01
30 2020-09-16 13:28:49.142 SEND    81 00 01 00 00 60 01 01 FF 02 00 37 71 7E
31 2020-09-16 13:28:49.181 RECEIVE 7E A0 1D 23 1E E8 02 B9 96 21 C1 E6
32 2020-09-16 13:28:49.214 RECEIVE E7 00 C4 01 81 00 0A 08 30 30 30 30 30 30 30 32 3A 37 7E
33 2020-09-16 13:28:49.290 SEND    7E A0 1C 1E E8 02 B9 23 98 56 CE E6 E6 00 C0 01
34 2020-09-16 13:28:49.316 SEND    81 00 01 00 00 60 01 02 FF 02 00 FA 54 7E
35 2020-09-16 13:28:49.341 RECEIVE 7E A0 14
36 2020-09-16 13:28:49.364 RECEIVE 23 1E E8 02 B9 B8 64 48 E6 E7 00 C4 01 81 01
37 2020-09-16 13:28:49.387 RECEIVE 04 BA F0 7E
38 2020-09-16 13:28:49.463 SEND    7E A0 1C 1E E8 02 B9 23 BA 46 CC E6 E6 00 C0 01
39 2020-09-16 13:28:49.514 SEND    81 00 01 00 00 60 01 03 FF 02 00 41 48 7E
40 2020-09-16 13:28:49.547 RECEIVE 7E A0 14 23 1E E8 02 B9 DA 70
41 2020-09-16 13:28:49.570 RECEIVE 08 E6 E7 00 C4 01 81 01 04 BA F0 7E
42 2020-09-16 13:28:49.653 SEND    7E A0 1C 1E E8 02 B9 23 DC 76 CA E6 E6 00 C0 01
43 2020-09-16 13:28:49.699 SEND    81 00 01 00 00 60 01 04 FF 02 00 60 1F 7E
44 2020-09-16 13:28:49.739 RECEIVE 7E A0 24 23 1E E8 02 B9 FC 0E 9A E6
45 2020-09-16 13:28:49.770 RECEIVE E7 00 C4 01 81 00 0A 0F 5A 54 59 38 2E 30 36
46 2020-09-16 13:28:49.793 RECEIVE 37 2E 33 30 30 36 56 31 43 66 7E
47 2020-09-16 13:28:49.871 SEND    7E A0 1C 1E E8 02 B9 23 FE 66 C8 E6 E6 00 C0 01
48 2020-09-16 13:28:49.924 SEND    81 00 01 01 00 00 02 00 FF 02 00 4E 76 7E
49 2020-09-16 13:28:49.962 RECEIVE 7E A0 31 23 1E
50 2020-09-16 13:28:49.987 RECEIVE E8 02 B9 1E 78 1B E6 E7 00 C4 01 81 00 0A 1C
51 2020-09-16 13:28:50.011 RECEIVE 54 48 53 31 33 30 30 34 31 4E 32 33 30 35 5B 31 30 30 5D 31 30 34 31 56 31 2E 30 31 E8 1F
52 2020-09-16 13:28:50.035 RECEIVE 7E
53 2020-09-16 13:28:50.111 SEND    7E A0 1C 1E E8 02 B9 23 10 16 C6 E6 E6 00 C0 01
54 2020-09-16 13:28:50.159 SEND    81 00 01 01 00 00 02 08 FF 02 00 96 93 7E
55 2020-09-16 13:28:50.203 RECEIVE 7E A0 1D 23 1E E8 02 B9 30 1D 01 E6 E7
56 2020-09-16 13:28:50.229 RECEIVE 00 C4 01 81 00 0A 08 36 34 32 30 35 43 46 46
57 2020-09-16 13:28:50.252 RECEIVE F7 DD 7E
58 2020-09-16 13:28:50.326 SEND    7E A0 1C 1E E8 02 B9 23 32 06 C4 E6 E6 00 C0 01
59 2020-09-16 13:28:50.355 SEND    81 00 01 00 00 60 01 05 FF 02 00 DB 03 7E
60 2020-09-16 13:28:50.378 RECEIVE 7E
61 2020-09-16 13:28:50.400 RECEIVE A0 14 23 1E E8 02 B9 52 30 00 E6 E7 00 C4 01
62 2020-09-16 13:28:50.423 RECEIVE 81 01 04 BA F0 7E
63 2020-09-16 13:28:50.500 SEND    7E A0 1C 1E E8 02 B9 23 54 36 C2 E6 E6 00 C0 01
64 2020-09-16 13:28:50.548 SEND    81 00 01 00 00 60 01 06 FF 02 00 16 26 7E
65 2020-09-16 13:28:50.580 RECEIVE 7E A0 1A
66 2020-09-16 13:28:50.608 RECEIVE 23 1E E8 02 B9 74 25 C2 E6 E7 00 C4 01 81
67 2020-09-16 13:28:50.633 RECEIVE 00 0A 05 43 48 49 4E 54 72 ED 7E
68 2020-09-16 13:28:50.709 SEND    7E A0 0A 1E E8 02 B9 23 53 8D 5B 7E
69 2020-09-16 13:28:50.758 RECEIVE 7E A0 21 23 1E E8 02 B9 73 52
70 2020-09-16 13:28:50.783 RECEIVE 16 81 80 12 05 01 80 06 01 80 07 04 00 00 00 01 08 04 00 00 00 01 53 3B 7E
71 2020-09-16 13:28:50.983 PORT Port(COM4) closed.





13:29





13:29



                                                                                  7e
2020-09-16 15:08:07.135 [debug] [              hdlc] {        hdlc}: tx: ( 1/ 1): a040
2020-09-16 15:08:07.135 [debug] [              hdlc] {        hdlc}: tx: ( 1/ 1): 03
2020-09-16 15:08:07.135 [debug] [              hdlc] {        hdlc}: tx: ( 1/ 1): 21
2020-09-16 15:08:07.135 [debug] [              hdlc] {        hdlc}: tx: ( 1/ 1): 10
2020-09-16 15:08:07.135 [debug] [              hdlc] {        hdlc}: tx: ( 1/ 1): 0af6
2020-09-16 15:08:07.135 [debug] [              hdlc] {        hdlc}: tx: ( 1/ 1): e6e600
2020-09-16 15:08:07.136 [debug] [              hdlc] {        hdlc}: tx: ( 1/ 4): 6032a1090607608574050801018a0207
2020-09-16 15:08:07.136 [debug] [              hdlc] {        hdlc}: tx: ( 2/ 4): 808b0760857405080201ac0680041234
2020-09-16 15:08:07.136 [debug] [              hdlc] {        hdlc}: tx: ( 3/ 4): 5678be10040e01000000065f1f040000
2020-09-16 15:08:07.136 [debug] [              hdlc] {        hdlc}: tx: ( 4/ 4): 1e1dffff
2020-09-16 15:08:07.136 [debug] [              hdlc] {        hdlc}: tx: ( 1/ 1): 1cb7
2020-09-16 15:08:07.136 [debug] [              hdlc] {        hdlc}: tx: ( 1/ 1): 7e
2020-09-16 15:08:07.136 [debug] [              hdlc] {        hdlc}: ** Giving s_responseSem to s



Somehow we need to get 33358044 from 1220200204... we also need to be able to read 1220200204 from the meter with a target-address of 0x01.

--------------------------------------------------

<HDLC len="106" >
<TargetAddress Value="1" />
<SourceAddress Value="1" />
<!--AARQ frame.-->
<FrameType Value="10" />
<PDU>
<AssociationRequest>
  <ApplicationContextName Value="LN_WITH_CIPHERING" />
  <CallingAPTitle Value="5A54590131343B09" />
  <SenderACSERequirements Value="1" />
  <MechanismName Value="HighGMac" />
  <CallingAuthentication Value="1E03280E0C074369433B274D5A6C4E4E" />
  <glo_InitiateRequest Value="3000000012ABB52DE45AEE0BE876FE7FCFD0C83FE81AD727CE11EFF40E1098" />
</AssociationRequest>
</PDU>
</HDLC>

<HDLC len="118" >
<TargetAddress Value="1" />
<SourceAddress Value="1" />
<!--AARE frame.-->
<FrameType Value="30" />
<PDU>
<AssociationResponse>
  <ApplicationContextName Value="LN_WITH_CIPHERING" />
  <AssociationResult Value="0" />
  <ResultSourceDiagnostic>
    <!--AUTHENTICATION_REQUIRED-->
    <ACSEServiceUser Value="14" />
  </ResultSourceDiagnostic>
  <RespondingAPTitle Value="5A54590131343B0C" />
  <ResponderACSERequirement Value="1" />
  <MechanismName Value="HighGMac" />
  <RespondingAuthentication Value="9B6358803A79576456DF73C239006ADD" />
  <glo_InitiateResponse Value="300000001175D6DDA6B2D17BA4610FAD5422F957A41C9D0FEDC7C27B07A896" />
</AssociationResponse>
</PDU>
</HDLC>



7365727665723031
7365727665723031



not working:
<HDLC len="106" >
<TargetAddress Value="1" />
<SourceAddress Value="16" />
<!--AARQ frame.-->
<FrameType Value="10" />
<PDU>
<AssociationRequest>
  <ApplicationContextName Value="LN_WITH_CIPHERING" />
  <CallingAPTitle Value="7365727665723031" />
  <SenderACSERequirements Value="1" />
  <MechanismName Value="HighGMac" />
  <CallingAuthentication Value="30654537456363633938356635344342" />
  <glo_InitiateRequest Value="3000000002460790BCD438C149A712F6F017F1555C73B5D45B9CDD3B07399A" />
</AssociationRequest>
</PDU>
</HDLC>
gives:
COSEM AA is rejected: application-context-name not supported


working:
<HDLC len="6A" >
<TargetAddress Value="1" />
<SourceAddress Value="1" />
<!-- AARQ frame. -->
<FrameType Value="10" />
<PDU>
<AssociationRequest>
  <ApplicationContextName Value="LN_WITH_CIPHERING" />
  <CallingAPTitle Value="7365727665723031" />
  <SenderACSERequirements Value="1" />
  <MechanismName Value="HighGMAC" />
  <CallingAuthentication Value="07352A1E20751A4C610A422355375E08" />
  <!-- Decrypted data:
    Security: 48
    Invocation Counter: 1
    <InitiateRequest>
      <ProposedDlmsVersionNumber Value="06" />
      <ProposedConformance>
        <ConformanceBit Name="BlockTransferWithGetOrRead" />
        <ConformanceBit Name="BlockTransferWithSetOrWrite" />
        <ConformanceBit Name="BlockTransferWithAction" />
        <ConformanceBit Name="MultipleReferences" />
        <ConformanceBit Name="Get" />
        <ConformanceBit Name="Set" />
        <ConformanceBit Name="SelectiveAccess" />
        <ConformanceBit Name="Action" />
      </ProposedConformance>
      <ProposedMaxPduSize Value="FFFF" />
    </InitiateRequest>
  -->
  <glo_InitiateRequest Value="3000000001351D528876A05B23E805F9BF85370F3D7B05E5906240E16C49CA" />
</AssociationRequest>
</PDU>
</HDLC>


400 Cannot deserialize value of type `com.cyanconnode.sma.job.objects.MeterCredentialKeyId` from String "KEY_ID_BROADCAST_ENCRYPTION": value not one of declared Enum instance name
    s: [KEY_ID_AUTHENTICATION, KEY_ID_BROADCAST_ENCRYPTION, KEY_ID_UNICAST_ENCRYPTION]


{
  "jobName": "jobForSession_263509559",
  "jobType": "METER_COMMAND_SET",
  "jobConfiguration": {
    "commands": [
      {
        "type": "SECURITY_CREDENTIALS",
        "credentials": [
          {
            "accessLevel": "METER_GLOBAL_KEY",
            "password": "1",
            "wrappedPassword": "2",
            "keyId": "KEY_ID_AUTHENTICATION"
          },
          {
            "accessLevel": "METER_GLOBAL_KEY",
            "password": "3",
            "wrappedPassword": "4",
            "keyId": "KEY_ID_AUTHENTICATION"
          },
          {
            "accessLevel": "METER_GLOBAL_KEY",
            "password": "5",
            "wrappedPassword": "6",
            "keyId": "KEY_ID_BROADCAST_ENCRYPTION"
          }
        ]
      }
    ]
  },
  "meterGroup": "groupForSession_263509559"
}


Works:

{
  "jobName": "jobForSession_3491317259",
  "jobType": "METER_COMMAND_SET",
  "jobConfiguration": {
    "commands": [
      {
        "type": "SECURITY_CREDENTIALS",
        "credentials": [
          {
            "accessLevel": "METER_GLOBAL_KEY",
            "password": "1",
            "wrappedPassword": "2",
            "keyId": "KEY_ID_AUTHENTICATION"
          },
          {
            "accessLevel": "METER_GLOBAL_KEY",
            "password": "3",
            "wrappedPassword": "4",
            "keyId": "KEY_ID_UNICAST_ENCRYPTION"
          }
        ]
      }
    ]
  },
  "meterGroup": "groupForSession_3491317259"
}

------------------------------------------

PR-1918-0003:
- Falls into Agent-side MNO-integration work also (IMEI/IMSI/etc).
- NMS: Allow CELLULAR nodes in protobuf/interface. Allow selection of nodes for jobs & groups by CELLULAR. (guess 10d)
- Agent: read modem info from modem, send it up via new protobuf (MNO integration work) (5d)
- Agent: read GPIO to peform h/w identification and publish to NMS. (2d design issues, 3d implementation).

PR-1918-0004:
- Falls into above (hw identification).

PR-1918-0005:
- Falls into above NMS work (selection & grouping for jobs).

PR-1918-0006:
- Falls into above NMS work (selection & grouping for jobs).

PR-1918-0008:
- Nope. (or add ~4->6 months extra work to add a TCP stack and spec-compliant TCP-Profile DLMS).
- Also has encryption issues that likely make this unfeasible (the node is not the security endpoint).

PR-1918-0013:
- This was waiting on the new PSU spec which hadn't been designed previously. Do we have a design now? (rough guess, 5d).

- dual SIM
- MTS

-----------------------------------------------------------
Dual SIM:

- SIM change == tamper?
- fallback/rotate SIM usage
- report both in MNO integration work on login?


MNO integration:
- Configuration of fallback/rotation/selection of SIM. Primary/secondary?


-------------------------------------------
sample reading process:

driverActivateDp()                          - called at initialisation.
 setDataProfileSampling()                   - sets the cron job to read samples.

activateSampleComplexProfiles()             - called periodically (15 minutes) by cron task
 driverPostMsg(MessageSampleComplexProfile) - posts message to read the profiles.

sampleComplexProfiles()                     - called by driver task as a result of the above. Iterates over all profiles.
 selectiveAccessRead()                      - called for each profile in turn to perform the SA read of the profile data from the meter.
  profileSampleCreate()                     - Called to create a profile sample message after reading from meter.
   s_dpSampleCb/saveDataProfileSample       - called through a callback setup as "config.sampleCb = saveDataProfileSample". Forms the protobuf mesage from sample data.
     mqCreate()                             - puts the protobuf sample into the mq.


Periodically:
 sendMq()                                   - called by scheduletask to send mq entries to NMS

On server side:
- NMS receives MQ entries and forwards to SMA.
- SMA stores sample data in DB.
- UI/MDMS reads data from database via SMA API.

-----------------------------------
omnireltest1.dev.cyanconnode.com server and Precise 1ph & 3ph meter (edited)
15:01
0000000064610807
15:02
0000000006460309

I used following for Precice meters:
Password : 31313131313131313131313131313132
Wrapped Password : 8AB6BD02DE7F5BFA8BF565DE848EEACCB0763241C41D9338
Password : D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF (default AK)
Wrapped Password : E8B8CBF0663B79A456FB47B6E7412F5B2ACE14293403460E

--------------------------------------------

GET /meterPing/METER%20123
{
}

curl --insecure --verbose -X GET https://sysadmin:sysadmin@localhost:8080/sma/ws/meterPing/METER_D1_002972

------------------------------------------------------
Ideas

- Internal Analytics
    - Anomaly detection (being able to correctly predict normal behaviour is essential) then differences from norm.
    - Analyse Agent logs.
        - Proactively detect bugs
        - Save developer time
    - Meter-failure prediction. Replace before failure.
        - Monitor current/voltage fluctutations w.r.t time
        - value-add for industrial clients who need greater uptime?
        - Ability to plan for field visit reduces cost of having on-call field engineers.
        - Can compare patterns against sibling meters which individual systems cannot.
    - RF network analysis, periodic snapshot.
- External analytics
    - Power network monitoring
    - Power network prediction.
    - Feedback loop to demand-side management.
    - Anomaly detection (being able to correctly predict normal behaviour is essential) then differences from norm.
    - Standard management style reporting, data reduction/statistics.
    - Maintenance reporting.
    - predictive maintenance of power network.
    - fault monitoring of power network.
    - trends
    - filtering of outages if feeder has had an outage (data reduction).
        - Infer that feeder is out when all downstream meters are out.
        - Gateway can also filter out last-gasps from all child nodes if LGs are received from all (data reduction).
        - Validation of restoration at gw and feeder level.
    - Can we obtain data to train on?
    - real time pricing.
    - structured/unstructured data
    - Interact with FFA (Field Force Automation) tools, (https://en.wikipedia.org/wiki/Field_force_automation) (Where to go, what to take, best route, what action).
- Reporting
- Visualisation
    - geographic
    - power network (hierarchy) for energy audit
    -
- Network planning
- Push into OmniMDMS
    - back-fill
    - cleansing of data
    - billing.
    - Prepayment
    - theft detection
    - plant maintenance
    - asset management
    - network automation
    - outage management
    - VEE: Validation, Estimation, Editing.
- Distributed MDMS (MDMS at edge).
    - just send metadata & control over network, no bulk data.
    - no back-fill needed, reliability increase.
    - legal record would be hashes of data as below hash-chain produces.
        - alternate NMS to feed data into SMA?
        - separation of DTLS/CoAP from NMS?
    - Problem: Interface with other head-end systems??
- Flexible architecture to allow for multiple technologies & pluggability.
    - alternate NMS to feed data into SMA?
    - separation of DTLS/CoAP from NMS?
- Low power
- Likelihood-of-communication. Predict how likely communication is to get thru. Background momitoring.
- Proactive recovery to improve likelihood-of-communication.
    - communications watchdog to recover
    - cellular fallback
    - adaptive mq-push to reduce mesh traffic under high-load.
- OSCORE
- CoAP replacement
- LwM2M
- Data fusion (they all feed into energy consumption) Prediction can feed into power generation.
    - weather
        - wind power
        - solar power
        - air con
        - fans
        - heating
        - lighting
    - traffic
        - electric car charging prediction.
    - air quality
        - purifiers/humidifiers
    - Smart building systems
        - occupancy
        - energy usage.
    - Energy storage (batteries)
- Business value
- network optimisation thru data reduction at edge.
    - preprocess DLMS profile data into fitted curves over time (application-specific compression).
- hash-chain of profile data.
    - Use for "online" audit.
    - meter-unique provides evidence of source (legality?).
- Demand-side management / Demand-Response.
    - Give client discount for ability to turn on/off low priority equipment?
    - "consumer facing" IFTTT style integration?
        - plugs
        - lights
        - notifications
        - In-home displays? probably should use phone instead.
- Network architecture
    - use of multicast to lighten the load.
- Low power architecture.
    - Don't assume always-on.
    - pushing decisions to edge facilitates this as network-use is reduced.
    - Even ESMEs can be a low-power design.
- Push down into meter
    - flattened design.
    - library + SPI-attached tranceiver.
    - removes overhead of DLMS.
    - Move away from "old-school" DLMS to more efficient protocols.
- Outage management system (OMS)
    - identify outages
    - provide alerts to affected customers
    - 100% outage on feeder == fuse blown at feeder station, less than that indicates consumer-side fuse. So can direct team to correct location of feeder or customer.
    - record history
    - insight
    - status of repairs and crew management.
    - Prediction of future outages.
    - SCADA integration.
    - Restoration Verification
- RF Planning
    - more efficient meshes.
- Agent-side fault monitoring
    - quick polling of instantaneous parameters to determine issues (phases/voltages/etc).
    adds more intelligence to events.


Networking technologies:
- CHIP
- ZigBee
- Bluetooth
- LoRA
- Senate
- Amazon sidewalk
- Thread/OpenThread
- OSCORR
- WiSUN



--------------------------------------------------------

 [{"type": "TARIFF_CALENDAR",
   "activationTime":"2018-01-01T00:00:00+05:30",
   "seasons": [
               { "start": {"dayOfMonth":10,"month":10}, "week":0},
               ],
   "weeks": [{ "days": [ 2, 1, 1, 1, 1, 1, 1 ] }],
   "days": [
               {
                   "schedule": [
                       { "time":"00:00", "zone":3 },
                       { "time":"02:30", "zone":4 },
                       { "time":"11:30", "zone":3 },
                    ]
               },
               {
                   "schedule": [
                       { "time":"00:00", "zone":3 },
                    ]
               },
               {
                   "schedule": [
                       { "time":"00:00", "zone":2 },
                    ]
               },
               {
                   "schedule": [
                       { "time":"00:00", "zone":1 },
                    ]
               },
           ],
   "specialDay": specialDays,
   }]


------------------------------------------
coap reversions:
- b77f5b34ba7bfad55e44c9165fb35e429662f849
- 087066f79d9e9c2143a817ddae91c0c31627ef7c
- d4e20af6ac7900c758214dbcf42adcce9f89481f
- f5c4631b29e89cf902cdfc16c152871b95a1c2a7
- 11fb38ac2f079d92638ff2e3dc0ae942fb0679a9
- 16fcc3c293fc6ae0f98443ba6f3d129ed4683759

--------------------------------------------
MDMS/MDAS
- Validation
- Estimation (of missing samples, constant/interpolate/duplicate).
- Editing (UI for manual update of samples for correction).
- billing (simplistic case, export to CSV/XLS or integrate with other packages).
- prepayment
- theft detection
- asset management
- outage management
- predictive maintenance
- fault monitoring
- demand-side management
- real-time pricing
- business analytics
- home energy management/IHD


----------------------------------------------------------

Metering mode	0-0-94-91-19-255	1	0

00005e5b13ff



13:44
Class id 1
13:44
so i think it will attribute 2
13:44
dont know the data type..
13:45
let me check the guruc files
13:46
OK its Unit8

<SetRequest>
  <SetRequestNormal>
    <InvokeIdAndPriority Value="C1" />
    <AttributeDescriptor>
      <ClassId Value="0001" />
      <InstanceId Value="00005e5b13ff" />
      <AttributeId Value="02" />
    </AttributeDescriptor>
    <Value>
      <Uint8 Value="00" />
    </Value>
  </SetRequestNormal>
</SetRequest>

C1 01 C1 00 01 00 00 5E 5B 13 FF 02 00 11 00
--device-op SET 1 0.0.94.91.19.255 2 1100
./coap_request.py --agent fdfc:2378:7b6c:0:21b:c50c:6001:a2a1 --device 5701333 --device-op SET 1 0.0.94.91.19.255 2 1100

./coap_request.py --server 127.0.0.1:8080 --agent fdfc:2378:7b6c:0:21b:c50c:6001:a2a1 --device 20022002 --device-op GET 7 1.0.99.1.0.255 2 \
    010204020412000809060000010000ff0f02120000090c07e30418ff06000000014a00090c07e30418ff060a0000014a000100

c0018100070100630100ff0201 010204020412000809060000010000ff0f02120000090c07e304060600001dff007800090c07e304060605001cff0078000100

-----------------------------------------------------------------
last-gasp first-breath LG FB


Time statuses:
server: UNRELIABLE/RELIABLE. (determine threshold for this)
agent: UNKNOWN/UNCERTAIN/IN_SYNC
meter: INVALID/DOUBTFUL/DIFFERENT_CLOCK_BASE/GOOD

So, the union of the sets, in order of accuracy (low to high):
- SERVER_UNRELIABLE
- AGENT_UNKNOWN
- METER_INVALID
- METER_DIFFERENT_CLOCK_BASE
- AGENT_UNCERTAIN
- METER_DOUBTFUL
- AGENT_IN_SYNC
- SERVER_RELIABLE
- METER_TRUTH

Agent->SMA:
- Have a flag on each FB/LG indicating quality of time, e.g. UNKNOWN/UNRELIABLE/RELIABLE/TRUTH.
- On PFAIL, send low-latency notification with current node time-status (AGENT_UNKNOWN/AGENT_IN_SYNC/etc).
- Node won't always have time (time status AGENT_UNKNOWN). This is ok to send to server.
- Meter won't always have time (time status METER_INVALID). This is ok to send to server.
- If server received LG notification with a low time-status (e.g. UNKNOWN/UNRELIABLE) and it's own status is better, fill in timestamp with server-time & set time-status to SERVER_RELIABLE.
- On power-up, Agent reads meter-event-log to obtain correct LG/FB timings and resends events
with appropriate "TRUTH" indicator with timestamps from meter.
- Multiple events will be recived on server which reflects latency/accuracy trade-off. These can now be distinguished.

SMA->UI/API:
- On server-side, filter out existing FB/LG flags from alarm-status-bits.
- Replace existing bits with with server-generated bits:
    - LAST_GASP_RELIABLE
    - FIRST_BREATH_RELIABLE
- Add two new server-generated bits:
    - LAST_GASP_UNRELIABLE
    - FIRST_BREATH_UNRELIABLE
- Any source time-status less than METER_TRUTH is classed as UNRELIABLE.
- UI/API should sort-by-meter-time by default, not sequence-number or time-of-arrival.

- User/Outage-Management-System has to check for both sets of bits and use the highest reliability value it has at the time.
- Typical/possible sequence (as received on the SMA, not display-order) for an outage would be:
    - LAST_GASP_UNRELIABLE      (sent on PFAIL).
    - FIRST_BREATH_UNRELIABLE   (sent from Agent when network is up).
    - LAST_GASP_RELIABLE        (sent from Agent when event-log is read from meter on start-up).
    - FIRST_BREATH_RELIABLE     (sent from Agent when event-log is read from meter on start-up).
  But when sorted by meter-time after time has been allowed for all events to arrive would result in:
    - LAST_GASP_RELIABLE        (meter time)
    - LAST_GASP_UNRELIABLE      (node/server time)
    - FIRST_BREATH_RELIABLE     (meter time)
    - FIRST_BREATH_UNRELIABLE   (node/server time)
- Low-latency requirements can be satisfied by the LAST_GASP_UNRELIABLE/FIRST_BREATH_UNRELIABLE events.
- High-accuracy requirements can be satisfied by the LAST_GASP_RELIABLE/FIRST_BREATH_RELIABLE events.

Outage-management system:
- For every FIRST_BREATH, identify the previous LAST_GASP. (ideally _RELIABLE).
- For every pair of LG/FB, produce a span. Tag it as UNRELIABLE or RELIABLE.
- Work up the meter->feeder chain to identify the root failure.
- Determine location.
- Update on new data.


-------------------------------------------------------------
mbedtls notes:

- CSR generation can be dropped.
- session_cache can be delayed.
- cert & key reading is needed.

----------------------------------------
perf test

iperf -s -u
iperf -c 127.0.0.1 -u -b 1000m

netstat -anus

sudo sysctl -w net.core.rmem_max=33554432
sudo sysctl -w net.core.netdev_max_backlog=2000
https://linux-tips.com/t/udp-packet-drops-and-packet-receive-error-difference/237

apt install libnl-3-genl-dev libnl-3-dev libpcap-dev binutils-dev
https://github.com/nhorman/dropwatch


echo 100000 > /proc/sys/net/core/netdev_max_backlog
echo 21299200 > /proc/sys/net/core/rmem_default
echo 21299200 > /proc/sys/net/core/rmem_max
echo 21299200 > /proc/sys/net/core/wmem_default
echo 21299200 > /proc/sys/net/core/wmem_max

sysctl net.core.netdev_max_backlog
sysctl net.core.rmem_default
sysctl net.core.rmem_max
sysctl net.core.wmem_default
sysctl net.core.wmem_max

------------------------------------------
mbedtls:

mbedtls_ssl_flush_output()
ssl_write_client_hello

ssl_get_next_record->mbedtls_ssl_fetch_input->mbedtls_net_recv_timeout

recv_cb->mbedtls_net_recv

recv_timeout_cb()

-------------------------------
last-gasp

- fs writes already suspended.
- more benefit from scheduling transmissions.
- OMS

- Scheduling of transmissions.
- Aggressive retries on last-gasps.
- power-management to reduce collisions.
- unconfirmed CoAP message for last-gasp to reduce contention.
- Filtering/post-processing in proto-OMS.
- Send up time-accuracy with alert flags, allow improvement based on meter (truth) after power-up.

<<<<<<< HEAD
--------------------------------------------
lwm2m:

https://omaspecworks.org/end-to-end-security-for-the-internet-of-things/
=======
------------------------------------------------


[{'activationTime': '2018-01-01T00:00:00+05:30',
  'days': [{'schedule': [{'time': '00:00', 'zone': 3},
                         {'time': '02:30', 'zone': 4},
                         {'time': '11:30', 'zone': 3}]},
           {'schedule': [{'time': '00:00', 'zone': 3}]},
           {'schedule': [{'time': '00:00', 'zone': 2}]},
           {'schedule': [{'time': '00:00', 'zone': 1}]}],
  'seasons': [{'start': {'dayOfMonth': 10, 'month': 10}, 'week': 0}],
  'specialDay': [{'dayId': 2, 'dayOfMonth': 11, 'month': 10, 'year': 2020}],
  'type': 'TARIFF_CALENDAR',
  'weeks': [{'days': [2, 1, 1, 1, 1, 1, 1]}]}]


-------------------------------------------------------


{'season0_start': '2020-10-02', 'season0_weekId': '0', 'season1_start': '2020-10-25', 'season1_weekId': '1', 'week0_day0': '0', 'week0_day1': '1', 'week0_day2': '0', 'week0_day3': '1', 'week0_day4': '0', 'week0_day5': '1', 'week0_day6': '0', 'week1_day0': '1', 'week1_day1': '0', 'week1_day2': '1', 'week1_day3': '0', 'week1_day4': '1', 'week1_day5': '0', 'week1_day6': '1', 'day0_startTime0': '00:00', 'day0_ID0': '1', 'day0_startTime1': '01:30', 'day0_ID1': '2', 'day0_startTime2': '02:30', 'day0_ID2': '3', 'day1_startTime0': '03:45', 'day1_ID0': '4', 'day1_startTime1': '03:45', 'day1_ID1': '5', 'specialday0_date': '2020-10-09', 'specialday0_ID': '1', 'specialday1_date': '2020-10-29', 'specialday1_ID': '0'}
[{'type': 'TARIFF_CALENDAR', 'activationTime': '2018-01-01T00:00:00+05:30', 'seasons': [{'start': {'dayOfMonth': 2, 'month': 10}, 'week': 0}, {'start': {'dayOfMonth': 25, 'month': 10}, 'week': 1}], 'weeks': [{'days': [0, 1, 0, 1, 0, 1, 0]}, {'days': [1, 0, 1, 0, 1, 0, 1]}], 'days': [{'schedule': [{'time': '00:00', 'zone': 1}, {'time': '01:30', 'zone': 2}, {'time': '02:30', 'zone': 3}]}, {'schedule': [{'time': '03:45', 'zone': 4}, {'time': '03:45', 'zone': 5}]}], 'specialDay': [{'dayOfMonth': 9, 'month': 10, 'year': 2020, 'dayId': 2}, {'dayOfMonth': 29, 'month': 10, 'year': 2020, 'dayId': 1}]}]

----------------------------------------------------------
Last-Gasp improvement plan

- Use simulation of ~500 nodes to verify current performance (~18% of LG events received within 5 minutes). This can
be used as a baseline for the following work.
- When a real-life deployment can be tested, mimic the physical layout as much as possible within the simulation to
validate the performance of the simulation against reality.

- Use aggressive retries for "urgent" messages such as LG. Parameters will have to be determined thru simulation
but principle is to extend the MAC-level retries from 4 to a much larger number (potentially with better scheduling/random backoff).
- Improve scheduling of transmissions given expected time-before-power-failure (i.e. choose a random point in that time
to transmit the LG to avoid contention with other nodes). Basically if we know we can survive for 2min, send the LG alert
at a random point within those 2min.
- priority mq. plus initial push.
- Change "urgent" CoAP requests to use unconfirmed messages (this prevents the server sending ACKs back to sender and
thus will halve the contention). Note that the MAC-level ACKs and retries are still enabled.
- Incorporate time-status (quality) data along with the alert sent to the server to allow for successive refinement of
the LG-time. This allows us to send known-inaccurate alerts immediately with the knowledge that we can improve the tiemstamp
later. This provides a low-accuracy/low-latency alert that will be followed by a high-accuracy/high-latency alert when
available (details below).
- Add a post-processing stage at the SMA (Outage Management) that parses the raw alerts and provides a view of outages
given its view across the whole network.


-------------------------------------------------
mbedtls


dtlsSend from transport_switch.c
MBEDTLS_X509_BADCERT_CN_MISMATCH
mbedtls_x509_crt_verify_restartable
ssl_parse_certificate_verify
mbedtls_net_recv_timeout
mbedtls_ssl_read_record
mbedtls_ssl_handle_message_type
ssl_write_client_hello
ssl_parse_server_hello
mbedtls_ssl_parse_certificate
ssl_parse_server_key_exchange
ssl_parse_certificate_request
ssl_parse_server_hello_done

ssl_cli.c:1863

only partially bufffered

MBEDTLS_ERR_SSL_BAD_HS_CERTIFICATE_VERIFY

---------------------------------------------------------
Genus changes:
- IS: additions of a few parameters.
- BP: addition of a few more registers.
-


Reversions:
- 63ca79c9ddbb9be9721a78b7b5e445cd274c8392
- 5ac21265349dc5660b28aebe4a585ce560fa1442
- e76083020cdb3ba1cf777547d9801f1db8d66597
- 97d582b05e860e9a3bb22a177be278224f71fdfc
- c27a39adc42ede1a5f2c9ffdc41b8b6eb51241ee
- 98051aa8f4c67da6fb98b3267490f992970b8c74

--------------------------------------------------

17fefd000100000000001c03dc000000000000001c79f9cd983c72a4a5aa5fc5fc65492ee65c4ab8bd8dbbb8a9bc7d93a6b6f80f25e6a15a0f5cbc6c73392387a0819d2334872369e8beb1862239c38c676167760745c0550eb0c7b2597594dde3a19a1ad803011a92dd8540ca17ffe1b47ac966124f9b0e60db19b511ea18557fc6da4d7eb88dd3c9ede5537176119f2ac243c557264e2e5a4a22420dab30c59cf068a7735435a20b7c466595d0fea18a31f44a9bd9dfe49c06b41e3438d8d3e0bf069b961575a0c8c832ecda63fc0cc9e2c415d26963eb843a32e35a6d30b7c911905363e08b2e0bb126a499311f74d195b628f5fd4818d69089d600dc1e9febef50c5dd0abddb1b77944141814a27ff34570404f369a764d496888906dc9b2ce47c5b238b60d7c91284f700a23a6b5d15ad5d2fbcbe28a126ff85d93a3a93fb97e15b4c283a27cb80a75f7ebf8cb4ea6e9b6b3eb95f2e4a14e6431de805eb3ff5ac7d217b29665e5be8df2bb343f2a556736aa5090de7cbfee2af96a1338558ee10eaf8ba0dd1b17933081c96ca2b07d7d86b368dfcecb3f1f490f0d9664d12044faa78fd5c5f69bcaf3f84c685e0d605bf043b297afd9b06ded563bdef723bd3816032b70ec57db8b55cf225348d99904a63044dab50bc59f2f88c77bc4e76e1d16d36c1f668b1c23465b2345772a2ba25e3cfd06986a5569e59b5d556f6b41418b7e5c461a7fd836ea623b8ba8fd00acd30ec6a04191022c07436656acabf3c3980ab1421a5b070a26780203107b8dca83e79c9594bd0f7900b05970a1b240b23adda68afd9e5bce875ad53b7b5d7fdbed43a6659bdddb29b0671ca723985e63f8bed1f371d830d113a9cd4899e069afaf57c9850801d1858f59e674aa5b93d3ee57818a34541e1a2af6b2d9dad04d44e79c5c144c4bfb614f5cf704cd8e49b4353397dfdd4e03ffdb0a3c5516da6801f67e67591d3ccd0e97361fa1698fff601c074f137932177c1818b99d19b8d606313480e4f3cad23d07b4da0774fba576de30e199faf78159ea8ee026085d661aac5524b0971c57e633f320af4a47539143e6f30002f0ca53cfb37a85a52e7fabb216073120a56a1ca379455d0de9d08a55e54783207eac43437683e11c25e02c561ef23d22f5e1cf9bced10ddcef10286d7e5c281eaaffe3eba86f2a8519dde08acaa9116caa3d51ba18c381f37592151b3516f87d6d89c380eda2f3466438c489a6fb3ebedf6bf64e9b9f4698442adcd80692d4411ea6c4ee5c37e5bfd07d9cd0db767a95e9d871ba16772782785983b9fa7995c6a1d6b00d730924aa82e17f7e0f46c814b086666ed42bc6da84927798a3e6f0ed63377349439ded238bd3785f5bad762c07872400c3ec9a120f979867b6a7a981bfd
-----------------------------------------
last-gasp notes
- last-gasp equal priority to first-breath. They're start & end of the outage, need both for higher level.
- mq de-dupes... so thats taken account of.
- early-lG will be first... if it comes at all. it may be that it never comes and LLG is the only one.
- There may be CoAP messaging from the server (not under our control) in PFAIL time.
- ICMP is not just echo services.... the whole network is based on it (RPL). (*may* be safe to disable)
- Think you need to prioritise nodes *furthest* from the gw not *closest*... to avoid having whole subtrees failing to get LG thru.
- IPv6 header compression already implemented.
- On MAC level, we're beaconless and always use ACKs (except for broadcast obviously).

-------------------------------------
 Request from [fd00::100]:5684: GET sm/00-00-00-00-00-00-00-02/profiles (T=CON, MID=0x187a): 0 B (0:empty)
 deviceId=00-00-00-00-00-00-00-02

 Response to [fd00::100]:5684: 4.04 (T=ACK, MID=0x187a): 16 B: Device not found

-----------------------------------------------------------
agent keys and server keys:

mkdir -p /Data/Temp/DevStack/.data/pki/00-00-00-00-00-00-00-03

/Data/Projects/dev-stack/src/omnimesh/devstack/data/scripts/pki-create.sh /Data/Temp/DevStack/.data/pki /Data/Temp/DevStack/.data/pki/00-00-00-00-00-00-00-03 node 00-00-00-00-00-00-00-03

creates:
/Data/Temp/DevStack/.data/pki/00-00-00-00-00-00-00-03/node.crt.der
/Data/Temp/DevStack/.data/pki/00-00-00-00-00-00-00-03/node.key.der
from:
/Data/Temp/DevStack/.data/pki/ca.crt.pem
/Data/Temp/DevStack/.data/pki/ca.key.pem


agent keys from server keys (dont recreate):
mkdir -p /Data/Temp/DevStack/.data/pki/00-00-00-00-00-00-00-03
/Data/Projects/dev-stack/src/omnimesh/devstack/data/scripts/pki-create-additional.sh /Data/Temp/DevStack/.data/pki /Data/Temp/DevStack/.data/pki/00-00-00-00-00-00-00-03 node 00-00-00-00-00-00-00-03

assumes:
/Data/Temp/DevStack/.data/pki/ca.crt.pem
/Data/Temp/DevStack/.data/pki/ca.key.pem
creates:
/Data/Temp/DevStack/.data/pki/00-00-00-00-00-00-00-03/node.crt.der
/Data/Temp/DevStack/.data/pki/00-00-00-00-00-00-00-03/node.key.der

--------------------------------------------------------
crypto algs.

- General app:
    MD5 hash (device & profile hashes).
- Firmware image
    AES CTR mode
- DTLS
    - AES-128, ECDHE key exchange ECDSA signing, CCM8 mode.
- DLMS
    - GMAC
    - AES GCM mode
    - AES ECB mode (single 16-byte block) for challenge response in HLS
- Filesystem
    AES-128 CTR mode
    HMAC
- MAC layer
    AES-128 CCM
- tun6d
    HMAC, SHA1 (challenge response)
- IPSEC
    AES-128 CCM

RNG:
- filesystem
- devicekeys

------------------------------------------------------------------
MbedTLS status:
- host-agent build          Done.
- ipa3 build                Done.
- general hashing           Done.
- firmware image            .
- Basic DTLS                Done.
- DLMS                      Done.
- Filesystem                DOne.
- MAC layer                 Done.
- tun6d                     Done.
- Genus meter               Done.
- L&T meter                 .
- GStar meter               .
- timeouts                  .
- "trusted CA" extension    .
- DTLS session saving       .
- DTLS session renewal      .
- Random number generator   .
- device keys               .
- unit tests                .
- ctrlporthub (RNG)         .

- Test all node/meter variants with mbedtls    .
- Test all node/meter variants with WolfSSL    .

- Reduce config options     .
- Check resource usage      .
- error paths               .

--------------------------------------------------------
hdlc bus utilisation:

ag "hdlc.*tx:|hdlc.*rx:" /Data/Logs/node216.log | ag -o "log\>.*\[debug" | cut -d ' ' -f 2 > trafficTimes

import re

f=open('trafficTimes').read().splitlines()

activity    = []
for line in f:
    h,m,s   = re.findall('([\d\.]+)[:$]*',line,re.MULTILINE)
    activity.append( (3600*int(h))+(int(m)*60)+float(s) )

lastEnd = 0.0
totalGap    = 0.0
totalInUse  = 0.0
start       = activity[0]
end         = start
gapMinWidth = 0.5

for a in activity:
    gap = a-lastEnd
    if(gap > gapMinWidth):
        print('@%f active=%f gap=%f'%(start, end-start,gap))

        totalInUse  = totalInUse + end-start
        totalGap    = totalGap + gap

        start   = a
    else:
        end = a

    lastEnd = a

print('totalInUse = %f totalGap = %f, total=%f, busUtilisation=%f'%(totalInUse, totalGap, totalInUse+totalGap, (100/(totalInUse+totalGap)*totalInUse) ))

----------------------------------------
mDCU:

Green book:
In some cases, the supporting layer protocol(s) do (does) not allow sending a protocol data unit in a
real, unsolicited manner. In these cases, the client has to explicitly solicit sending an
EventNotification frame, by invoking the TriggerEventNotificationSending service primitive.

To be able reporting events, a server may initiate a connection to the client, using the unsolicited
EventNotification / InformationReport services. As events in several or all meters connected to a
multidrop may occur simultaneously – for example in the case of a power failure – they may initiate a
call to the client simultaneously. For such cases, two problems have to be handled:
• collision on the logical bus: For the reasons explained above, several physical devices may try to
access the shared resource (for example sending AT commands to the modem) simultaneously.
Such situations must be handled by the manufacturers;
• identification of the originator of the event report: this is possible by using the CALLING Physical
Device Address, as described in 8.4.5.4.8.

-----------------------------------------

CND-11033 Image add features flag
CND-10906 : HPL Phase1 - AMI Readings Agent Fixes

--------------------------------------------------------

stty -F /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0 9600 raw
stty -F /dev/serial/by-id/usb-FTDI_TTL232R-3V3_FTA01CAS-if00-port0 9600 raw
socat -x /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0,raw,echo=0,crnl /dev/serial/by-id/usb-FTDI_TTL232R-3V3_FTA01CAS-if00-port0,raw,echo=0,crnl

--------------------------------------------------------------

POST /meterSamples
{
 "startId": 1,
 "count": 2,
}
RESPONSE CODE : 200
[
 {
 "createTime": "2017-12-15T11:11:23+0000",
 "deviceId": "METER 123",
 "formattedProfileObisCode": '1.0.94.91.0.255',
 "meterSampleId": 1,
 "registerValues": [
 {
 "attributeId": 2,
 "formattedRegisterObisCode": "0.0.1.0.0.255",
 "formattedValue": "2017-12-15T11:03:03",
 },
 {
 "attributeId": 2,
 "formattedRegisterObisCode": "1.0.31.7.0.255",
 "formattedValue": "0 A",
 }
 ]
 },
 {
 "createTime": "2017-12-15T11:16:23+0000",
 "deviceId": "METER 123",
 "formattedProfileObisCode": '1.0.94.91.0.255',
 "meterSampleId": 2,
 "registerValues": [
 {
 "attributeId": 2,
 "formattedRegisterObisCode": "0.0.1.0.0.255",
 "formattedValue": "2017-12-15T11:08:03",
 },
 {
 "attributeId": 2,
 "formattedRegisterObisCode": "1.0.31.7.0.255",
 "formattedValue": "0 A",
 }
 ]
 },
]



{'createTime': '2020-08-05T16:15:35+05:30',
 'deviceId': 'UST1000002',
 'formattedProfileObisCode': '1.0.99.1.0.255',
 'meterSampleId': 159309,
 'nodeId': '00-1b-c5-0c-60-06-73-fb',
 'profileObisCode': 'AQBjAQD/',
 'registerValues': [{'attributeId': 2,
                     'formattedRegisterObisCode': '0.0.1.0.0.255',
                     'formattedValue': '2020-08-05T16:00:00+05:30',
                     'registerObisCode': 'AAABAAD/',
                     'registerValue': 'CQwH5AgF/xAAAP8BSgA=',
                     'scalar': 0,
                     'unit': 0},
                    {'attributeId': 2,
                     'formattedRegisterObisCode': '1.0.31.27.0.255',
                     'formattedValue': '0 A',
                     'registerObisCode': 'AQAfGwD/',
                     'registerValue': 'FwAAAAA=',
                     'scalar': 0,
                     'unit': 33},
                    {'attributeId': 2,
                     'formattedRegisterObisCode': '1.0.51.27.0.255',
                     'formattedValue': '0 A',
                     'registerObisCode': 'AQAzGwD/',
                     'registerValue': 'FwAAAAA=',
                     'scalar': 0,
                     'unit': 33},
                    {'attributeId': 2,
                     'formattedRegisterObisCode': '1.0.71.27.0.255',
                     'formattedValue': '0 A',
                     'registerObisCode': 'AQBHGwD/',
                     'registerValue': 'FwAAAAA=',
                     'scalar': 0,
                     'unit': 33},
                    {'attributeId': 2,
                     'formattedRegisterObisCode': '1.0.32.27.0.255',
                     'formattedValue': '239.3000030517578125 V',
                     'registerObisCode': 'AQAgGwD/',
                     'registerValue': 'F0NvTM0=',
                     'scalar': 0,
                     'unit': 35},
                    {'attributeId': 2,
                     'formattedRegisterObisCode': '1.0.52.27.0.255',
                     'formattedValue': '0 V',
                     'registerObisCode': 'AQA0GwD/',
                     'registerValue': 'FwAAAAA=',
                     'scalar': 0,
                     'unit': 35},
                    {'attributeId': 2,
                     'formattedRegisterObisCode': '1.0.72.27.0.255',
                     'formattedValue': '0 V',
                     'registerObisCode': 'AQBIGwD/',
                     'registerValue': 'FwAAAAA=',
                     'scalar': 0,
                     'unit': 35},
                    {'attributeId': 2,
                     'formattedRegisterObisCode': '1.0.1.29.0.255',
                     'formattedValue': '0 Wh',
                     'registerObisCode': 'AQABHQD/',
                     'registerValue': 'FwAAAAA=',
                     'scalar': 0,
                     'unit': 30},
                    {'attributeId': 2,
                     'formattedRegisterObisCode': '1.0.9.29.0.255',
                     'formattedValue': '0 VAh',
                     'registerObisCode': 'AQAJHQD/',
                     'registerValue': 'FwAAAAA=',
                     'scalar': 0,
                     'unit': 31},
                    {'attributeId': 2,
                     'formattedRegisterObisCode': '1.0.2.29.0.255',
                     'formattedValue': '0 Wh',
                     'registerObisCode': 'AQACHQD/',
                     'registerValue': 'FwAAAAA=',
                     'scalar': 0,
                     'unit': 30},
                    {'attributeId': 2,
                     'formattedRegisterObisCode': '1.0.10.29.0.255',
                     'formattedValue': '0 VAh',
                     'registerObisCode': 'AQAKHQD/',
                     'registerValue': 'FwAAAAA=',
                     'scalar': 0,
                     'unit': 31},
                    {'attributeId': 2,
                     'formattedRegisterObisCode': '0.0.96.10.1.255',
                     'formattedValue': '0',
                     'registerObisCode': 'AABgCgH/',
                     'registerValue': 'EgAA',
                     'scalar': 0,
                     'unit': 0}],
 'sampleTime': '2020-08-05T16:00:00+05:30',
 'sequenceNumber': 181012}

[{'alarmActive': ['METER_CONNECT_DISCONNECT', 'METER_FIRST_BREATH'],
  'alarmTime': '2020-07-27T21:30:55+00:00',
  'createTime': '2020-07-27T21:32:34Z',
  'meterAlarmId': 1,
  'meterId': '4400005',
  'sequenceNumber': 16098},
 {'alarmActive': ['METER_OVER_VOLTAGE',
                  'METER_COVER_OPEN',
                  'METER_FIRST_BREATH'],
  'alarmTime': '2020-07-28T04:26:41+00:00',
  'createTime': '2020-07-28T04:28:12Z',
  'meterAlarmId': 2,
  'meterId': 'GS5500131',
  'sequenceNumber': 165201},
 {'alarmActive': ['METER_COVER_OPEN', 'METER_FIRST_BREATH'],
  'alarmTime': '2020-07-28T04:38:00+00:00',
  'createTime': '2020-07-28T04:38:08Z',
  'meterAlarmId': 3,
  'meterId': 'UST 0000007',
  'sequenceNumber': 11122},
 {'alarmActive': ['METER_FIRST_BREATH'],
  'alarmTime': '2020-07-28T05:07:02+00:00',
  'createTime': '2020-07-28T05:07:15Z',
  'meterAlarmId': 4,
  'meterId': 'GS5500331',
  'sequenceNumber': 27854},
 {'alarmActive': ['METER_BILLING_INCREMENT',
                  'METER_COVER_OPEN',
                  'METER_FIRST_BREATH'],
  'alarmTime': '2020-07-08T03:15:41+00:00',
  'createTime': '2020-07-28T05:10:43Z',
  'meterAlarmId': 5,
  'meterId': '8000002',
  'sequenceNumber': 11064},
 {'alarmActive': ['METER_BILLING_INCREMENT',
                  'METER_COVER_OPEN',
                  'METER_FIRST_BREATH'],
  'alarmTime': '2020-07-08T03:16:12+00:00',
  'createTime': '2020-07-28T05:10:43Z',
  'meterAlarmId': 6,
  'meterId': '8000002',
  'sequenceNumber': 11065},
 {'alarmActive': ['METER_BILLING_INCREMENT',
                  'METER_COVER_OPEN',
                  'METER_FIRST_BREATH'],
  'alarmTime': '2020-07-08T03:16:33+00:00',
  'createTime': '2020-07-28T05:10:43Z',
  'meterAlarmId': 7,
  'meterId': '8000002',
  'sequenceNumber': 11066},
 {'alarmActive': ['METER_BILLING_INCREMENT',
                  'METER_COVER_OPEN',
                  'METER_FIRST_BREATH'],
  'alarmTime': '2020-07-08T03:16:54+00:00',
  'createTime': '2020-07-28T05:10:43Z',
  'meterAlarmId': 8,
  'meterId': '8000002',
  'sequenceNumber': 11067},
 {'alarmActive': ['METER_BILLING_INCREMENT',
                  'METER_COVER_OPEN',
                  'METER_FIRST_BREATH'],
  'alarmTime': '2020-07-08T03:17:16+00:00',
  'createTime': '2020-07-28T05:10:43Z',
  'meterAlarmId': 9,
  'meterId': '8000002',
  'sequenceNumber': 11068},
 {'alarmActive': ['METER_BILLING_INCREMENT',
                  'METER_COVER_OPEN',
                  'METER_FIRST_BREATH'],
  'alarmTime': '2020-07-08T03:17:38+00:00',
  'createTime': '2020-07-28T05:10:43Z',
  'meterAlarmId': 10,
  'meterId': '8000002',
  'sequenceNumber': 11069}]


-----------------------------------------------------
mdms ingestor.py

select * from "profile1.0.94.91.0.255" where "0.0.1.0.0.255_2" between "2020-08-06T19:00:18+05:30" and "2020-08-06T19:31:17+05:30";


-----------------------------------
smip misra compare:

checkout MISRABaseline branch
run ./tools/MISRA/MakeMISRAReport.sh


checkout HEAD
run ./tools/MISRA/MakeMISRAReport.sh


run "CompareMISRAReport.py old new"

./tools/MISRA/CompareMISRAReport.py ../terminalSMIP3/agent.lint.MISRA.required.uniq agent.lint.MISRA.required.uniq > required.comparison

examine required.comparison
duplicates can be discarded.

--------------------------------
smip misra:
filter out:
- /bootloader_service_fs.c
- asyncio

----------------------------------------------------
strip symbols

arm-none-eabi-strip -w --strip-dwo --strip-debug --discard-locals --strip-symbol=wolf\* libc4.a -o libc4_stripped.a

arm-none-eabi-objcopy --wildcard --localize-symbol wolf\* --localize-symbol wc_\* --strip-debug libc4.a libc4_stripped.a



----------------------------------------
CNIC server-side changes

- job creation
- What is difference between a multi-device node and a gateway-node? Presence of metering Agent?

--------------------------------------------
SMIP v98 re release:

git tag -a v98r3 -m "v98r3"  040d212621b050c399436dbee4f7fad6ee284f09

------------------------------------------------
Interface identifier (IID) compared to EUI-64
ipv6 neighbour discovery

--------------------------------------------
Wi-SUN:
- Is EAP-TLS needed? can we get away with DTLS? Similar protocols... whats the difference?

In mbed-os:
nanostack is in: mbed-os/connectivity/nanostack
Also supports lwipstack

FAN nodes must join their FAN interface to the following IPv6 multicast groups.
Link scope:
1. A FAN node MUST join to the link-local-scope all-nodes group (ff02::1) [RFC4291].
2. A FAN node MUST join to the link-local-scope all-routers group (ff02::2) [RFC4291].
3. A FAN node MUST join to the link-local-scope all-RPL-nodes group (ff02::1a) [RFC6550].
Realm scope:
4. A FAN node MUST join to the realm-scope all-nodes group (ff03::1).
5. A FAN node MUST join to the realm-scope all-routers group (ff03::2).
6. A FAN node MUST join to the realm-scope all-mpl-forwarders group (ff03::fc).
Site and Global scope:
7. For each GUA/ULA acquired, a FAN node SHOULD subscribe to the equivalent unicast-prefix-based IPv6
multicast group (as described in [RFC3306]) supporting a MPL domain on that multicast address.

----------------------------------------------------
fuzz test report for 20.2

status check tool for afl-fuzz by <lcamtuf@google.com>

Individual fuzzers
==================

>>> fuzzer0 (1 days, 0 hrs) <<<

  cycle 54, lifetime speed 411 execs/sec, path 675/1045 (64%)
  pending 0/2, coverage 8.03%, no crashes yet

>>> fuzzer1 (1 days, 0 hrs) <<<

  cycle 149, lifetime speed 431 execs/sec, path 187/1089 (17%)
  pending 0/1, coverage 7.94%, no crashes yet

>>> fuzzer2 (1 days, 0 hrs) <<<

  cycle 181, lifetime speed 424 execs/sec, path 496/1054 (47%)
  pending 0/2, coverage 7.89%, no crashes yet

>>> fuzzer3 (1 days, 0 hrs) <<<

  cycle 164, lifetime speed 418 execs/sec, path 26/1108 (2%)
  pending 0/2, coverage 7.99%, no crashes yet

Summary stats
=============

       Fuzzers alive : 4
      Total run time : 4 days, 1 hours
         Total execs : 148 million
    Cumulative speed : 1684 execs/sec
       Pending paths : 0 faves, 7 total
  Pending per fuzzer : 0 faves, 1 total (on average)
       Crashes found : 0 locally unique


------------------------------------------------
mbedtls RAM usage:

after login, discovery, ping & validate relay: 28817 bytes

30777
32737
33577
34977


------------------------------------------------------
SWCLKTCKPEN
Serial Wire Clock and JTAG Test Clock Pin Enable
Enable Serial Wire and JTAG Clock connection to pin. WARNING: When this pin is disabled, the device can no longer be
accessed by a debugger. A reset will set the pin back to a default state as enabled. If you disable this pin, make sure you
have at least a 3 second timeout at the start of you program code before you disable the pin. This way, the debugger will
have time to halt the device after a reset before the pin is disabled.

----------------------------------------
ipvs ipvsadm

ipvsadm -L -n --stats
load balancing setup in health-check script in dev-stack.

ipvsadm -L -n --connection

----------------------------------------------
source address rewrite

outgoing requests from the NMS do not get their source-address rewritten unless the connection
has been setup from an incoming packet from the agent. This connection times out after 5 mins.

sudo modprobe ip6table_filter
ip6tables -t nat -A POSTROUTING --source fd00::101 -j SNAT --to-source fd00::100

---------------------------------------------------
CA trusted keys DTLS extension

TrustedCaKeysExtension.java
DTLSFullHandshakeProcedure.java
DTLSECDHKeyExchange.java

createCertificateMessage()

Described in RFC 6066
trusted_ca_keys = 3;

Can use either SHA1 hash of key or x509 name (Distinguished Name or DN).
getKeySha1Hash()
getX509Name()

findServerDtlsDomainBySha1Hash()
searchDomainBySha1Hash()
getIssuerPublicKeyHash()
PkiLoader.java: getPublicKeyHash()
SHA1 hash over publicKeyInfo.getPublicKeyData()


cacert in dtls_mbedtls.c
x509_crt.h
mbedtls_x509_crt.pk
or pk_raw

mbedtls_x509_buf or mbedtls_pk_context

pk.h

mbedtls_ssl_get_key_exchange_md_tls1_2()







ssl_cli.c
ssl_write_client_hello()

-------------------------------------------------------
cnic7 bootloader from reset:

pc             0xfe10000           0xfe10000    EFR32
pc             0xfe10002           0xfe10002    EFM32

EFR32: Jumps to Reset_Handler

EFM32:
Info : Previous state query failed, trying to reconnect
Error: jtag status contains invalid mode value - communication failure
Polling target efm32.cpu failed, trying to reexamine


pc             0xad8               0xad8 <Reset_Handler>


-----------------------------------------------------------------
Device identity

- Agent to push identity data to NMS & NMS to accept identity for CNIC and populate identity tables & NMS to accept old-style identity (isGateway) and populate identity tables.
- Panmesh to display product name instead of gateway/mesh.
- Panmesh to allow filtering of devices based on single network-type.
- Panmesh to allow filtering of devices based on multiple network-types and network-identity (mfg name, etc).
- Panmesh to allow creation of jobs based on network-identity filters.

----------------------------------------------------
clear root fs

sudo journalctl --vacuum-size=100M

---------------------------------------------------------

2020-11-26 17:20:28,939 INFO  [http-114] [user=sysadmin] PkiLoader - SHA1 of 0433305777364bcc6f883bb836e192d04715fe75668cb8dcdeebcd772a9f5bcded95e0c57c3516e78fa302b28c55406ea94c3d53f262203e776e3d92882aca84c6 is 58b2604832def562fa28ebc48e5f3b8e2d21c8f5

2020-11-26 17:20:28,916 INFO  [http-114] UserOperations - inactivePeriod  30
2020-11-26 17:20:28,936 INFO  [http-114] [user=sysadmin] PkiLoader - SHA1 of 04cf73852dd259a9d1f8cab8553c48134ee6b4d092da02a843c3564979b81080d43b58e1757e6226599e8de76fd872ab2349c8529c458481fc2937c5db1d1dfe1f is b66493c693295da258d40675bc74d2d5b6231ee8
2020-11-26 17:20:28,937 INFO  [http-114] [user=sysadmin] PkiLoader - SHA1 of 04cf73852dd259a9d1f8cab8553c48134ee6b4d092da02a843c3564979b81080d43b58e1757e6226599e8de76fd872ab2349c8529c458481fc2937c5db1d1dfe1f is b66493c693295da258d40675bc74d2d5b6231ee8
2020-11-26 17:20:28,939 INFO  [http-114] [user=sysadmin] PkiLoader - SHA1 of 0433305777364bcc6f883bb836e192d04715fe75668cb8dcdeebcd772a9f5bcded95e0c57c3516e78fa302b28c55406ea94c3d53f262203e776e3d92882aca84c6 is 58b2604832def562fa28ebc48e5f3b8e2d21c8f5
2020-11-26 17:20:28,966 INFO  [http-116] UserOperations - inactivePeriod  30
2020-11-26 17:20:28,990 INFO  [http-116] [user=sysadmin] PkiLoader - SHA1 of 0433305777364bcc6f883bb836e192d04715fe75668cb8dcdeebcd772a9f5bcded95e0c57c3516e78fa302b28c55406ea94c3d53f262203e776e3d92882aca84c6 is 58b2604832def562fa28ebc48e5f3b8e2d21c8f5
2020-11-26 17:20:29,457 INFO  [mq-perf-monitor] MqPerfMonitor - Message Queue Processing speed =0 msg per 1 sec
2020-11-26 17:20:30,465 INFO  [mq-perf-monitor] MqPerfMonitor - Message Queue Processing speed =0 msg per 1 sec


020-11-26 17:20:58,042 INFO  [dtls-pool-5] DTLSECDHKeyExchange - createCertificateMessage
2020-11-26 17:20:58,043 INFO  [dtls-pool-5] DTLSECDHKeyExchange - createCertificateMessage has trustedKeys
2020-11-26 17:20:58,043 INFO  [dtls-pool-5] DTLSECDHKeyExchange - createCertificateMessage has trustedKeys with SHA1 hash
2020-11-26 17:20:58,043 INFO  [dtls-pool-5] ServerDtlsDomainCache - searchDomainBySha1Hash
2020-11-26 17:20:58,043 INFO  [dtls-pool-5] ServerDtlsDomainCache - searchDomainBySha1Hash target=58b2604832def562fa28ebc48e5f3b8e2d21c8f5 from 58b2604832def562fa28ebc48e5f3b8e2d21c8f5
2020-11-26 17:20:58,043 INFO  [dtls-pool-5] ServerDtlsDomainCache - (matched) searchDomainBySha1Hash target=58b2604832def562fa28ebc48e5f3b8e2d21c8f5 from 58b2604832def562fa28ebc48e5f3b8e2d21c8f5
2020-11-26 17:20:58,050 INFO  [dtls-pool-6] DTLSECDHKeyExchange - createCertificateMessage
2020-11-26 17:20:58,056 INFO  [dtls-pool-6] DTLSECDHKeyExchange - createCertificateMessage has trustedKeys
2020-11-26 17:20:58,056 INFO  [dtls-pool-6] DTLSECDHKeyExchange - createCertificateMessage has trustedKeys with SHA1 hash
2020-11-26 17:20:58,057 INFO  [dtls-pool-6] ServerDtlsDomainCache - searchDomainBySha1Hash
2020-11-26 17:20:58,058 INFO  [dtls-pool-6] ServerDtlsDomainCache - searchDomainBySha1Hash target=58b2604832def562fa28ebc48e5f3b8e2d21c8f5 from 58b2604832def562fa28ebc48e5f3b8e2d21c8f5
2020-11-26 17:20:58,059 INFO  [dtls-pool-6] ServerDtlsDomainCache - (matched) searchDomainBySha1Hash target=58b2604832def562fa28ebc48e5f3b8e2d21c8f5 from 58b2604832def562fa28ebc48e5f3b8e2d21c8f5
2020-11-26 17:20:58,888 INFO  [mq-perf-monitor] MqPerfMonitor - Message Queue Processing speed =0 msg per 1 sec
2020-11-26 17:20:59,806 INFO  [dtls-pool-4] MessageQueuePersister - Sending to queue Queue-03 message for nodeId=2 of  type class com.connode.service.terminal.mq.MessagesFromNode and seqNum: 2381. Message={}
2020-11-26 17:20:59,806 INFO  [dtls-pool-1] MessageQueuePersister - Sending to queue Queue-02 message for nodeId=1 of  type class com.connode.service.terminal.mq.MessagesFromNode and seqNum: 2384. Message={}
2020-11-26 17:20:59,893 INFO  [mq-perf-monitor] MqPerfMonitor - Message Queue Processing speed =0 msg per 1 sec


---------------------------------------------------------------

stty -F /dev/serial/by-id/usb-FTDI_TTL232R-3V3_FTA01CAS-if00-port0 9600 raw
stty -F /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0 9600 raw
socat -x /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0,raw,echo=0,crnl /dev/serial/by-id/usb-FTDI_TTL232R-3V3_FTA01CAS-if00-port0,raw,echo=0,crnl

GStar: event parity from node, no-parity to opto
socat -x /dev/serial/by-id/usb-FTDI_KMK116_A5G6O7M-if00-port0,raw,echo=0,crnl /dev/serial/by-id/usb-FTDI_TTL232R-3V3_FTA01CAS-if00-port0,raw,echo=0,crnl,parenb=1,parodd=0

build/host-ctrlporthub/bin/ctrlporthub -serial /dev/serial/by-id/usb-FTDI_TTL232R_FTG4DEXG-if00-port0 -controllerport 5000 -loglevel debug -logfile /Data/Logs/node228.log

-----------------------------------
NMS SMA logging debug

in logback.xml, change all DENY to ACCEPT

--------------------------------------------

./tools/c4-tools/coap_request.py --ctrlporthub :5000  --config-list
./tools/c4-tools/coap_request.py --ctrlporthub 5000 --load-key client-cert /Data/Temp/DevStack/.data/pki/00-00-00-00-00-00-00-04/node.crt.der
./tools/c4-tools/coap_request.py --ctrlporthub :5000 --load-key client-cert /Data/Temp/DevStack/.data/pki/00-00-00-00-00-00-00-04/node.crt.der
./tools/c4-tools/coap_request.py --ctrlporthub :5000 --load-key client-key /Data/Temp/DevStack/.data/pki/00-00-00-00-00-00-00-04/node.key.der
./tools/c4-tools/coap_request.py --ctrlporthub :5000 --load-key root-cert /Data/Temp/DevStack/.data/pki/00-00-00-00-00-00-00-04/ca.crt.der
./tools/c4-tools/coap_request.py --ctrlporthub :5000 --load-key root-cert /Data/Temp/DevStack/.data/pki/ca.crt.der

./tools/c4-tools/coap_request.py --ctrlporthub :5000 --load-key client-cert /Data/Temp/DevStack/.data/pki/00-00-00-00-00-00-00-04/node.crt.der
./tools/c4-tools/coap_request.py --ctrlporthub :5000 --load-key client-key /Data/Temp/DevStack/.data/pki/00-00-00-00-00-00-00-04/node.key.der
./tools/c4-tools/coap_request.py --ctrlporthub :5000 --load-key root-cert /Data/Temp/DevStack/.data/pki/ca.crt.der
./tools/c4-tools/coap_request.py --ctrlporthub :5000 --load-key client-cert /Data/Temp/NewCA/node.crt.der
./tools/c4-tools/coap_request.py --ctrlporthub :5000 --load-key client-key /Data/Temp/NewCA/node.key.der
./tools/c4-tools/coap_request.py --ctrlporthub :5000 --load-key root-cert /Data/Temp/NewCA/ca.crt.der


------------------------------------------
Future tech
analysis & reporting:

- Analysis of NMS data, netork topology, etx, etc, geographic presentation.
- declarative jobs (declare the desired end state, not the operation). e.g. fw upgrade.
- declarative configuration (declare the desired configuration to Agent, allow it to modify as needed). Robustness.
- MS Power BI, Amazon QuickSight, ELK


------------------------
mbedtls

- disabled cookies by not using MBEDTLS_SSL_DTLS_HELLO_VERIFY.
- amplification attack mitigation.

--------------------------
elasticsearch
POST test-index/_search
{
    "query": {"exists":{"field":"outageStart"}}
}


POST test-index/_doc/_mapping
{
        "properties" : {
            "outageStart" : {"type" : "date"},
            "outageEnd" : {"type" : "date"},
        }
}
-----------------------------------------------
mbedtls remaining work.

- RNG
- tidying of dtls_mbedtls.
- make config and test all builds (IPA1, HW1, IAP3, GW, CNIC).
- proper certificate loading from module.
- session caching and resumption.
- characterisation (RAM & CPU usage).
- timeout & heartbeat functionality.
- Firmware upgrade (may just work).
- session renewal.

------------------------------------------
mdcu aeml meter-driver mods

- have to isolate meter-specific state and "context swap" this state as we iterate
over all the configured meters.
- Do we need to scan for the meters?
- "device" level can already handle multiple meters, but dev-dlms will need to
swap the data to a file "/meterstate.0", "/meterstate.2", etc.
- Likely have to at least start off with alarm polling rather than push.
- discovery of 38 meters will take almost 90 minutes as-is. Need to optimise this and
also have meters in different states. Sampling of some meters will be happening when
discovery is still happening for others.


Meter context:
- DevDiscoveryState
- DeviceInfo
- firstBreathAlreadyTriggered
- s_sendFirstBreathWhenWeHaveAlarmProfile
- s_profiles & s_numProfiles
- s_alarmInProcess
- s_alarmInProcessClearSchedule
- s_alarmIsrSkipCounter
- DeviceAlarmsActivationRequest
- State
- s_registerIx
- ReadingState
- s_regValue
- s_regType
- s_requestCompletedDrop
- MeterProfile
- s_firstProfileField
- s_profileRegIndex
- s_profilesHash
- s_alarmHash
- s_alarmsMask
- DataProfileSampleCb
- DataProfileCtxChangedCb
- MeterTime
- s_meterTimeDifferAvaliable
- s_meterTimeDiffer
- SelectiveAccessData
- OnDemandProfilesReadingState
- s_scalerUnitBufferAttr2
- s_scalerUnitBufferAttr3
- s_scalerUnitBufferLenAttr2
- s_scalerUnitBufferLenAttr3
- s_complexDataProfileScheduleId
- s_complexDataProfileCronId
- s_progressCounter
- s_message



- Collect all context data into a global context structure that is suitable for being switched.
- Add ability to save & restore this context.
- (possibly) use this as an optimisation to not require discovery at all on startup if meter
state can be restored.
- Initially, use a preconfigred set of addresses. at each point that a scheduled operation is
kicked off, iterate over all devices.
- Add scanning to discover the devices.


---------------------------------------------

commit 63b764d841a98b63d20c1bb46218dde99f274d4b
Author: Tuomas Maattanen <Tuomas.Maattanen@silabs.com>
Date:   Tue Apr 28 16:32:52 2020 +0200

    Initial Commit


-----------------------------------------
PUT test-index/_mapping
{
        "properties" : {
            "outageStart" : {"type" : "date"},
            "outageEnd" : {"type" : "date"},
        }
}


Elastic

Trial - 9 days left

T
Cloud
Deployments
i-o-optimized-deployment
Elasticsearch
API console
Deployments
i-o-optimized-deployment
Edit
Elasticsearch
Snapshots
API console
Kibana
APM
Enterprise Search
Logs and metrics
Activity
Security
Performance
Extensions
API keys
Traffic filters
Help
API console
US East (N. Virginia)
Perform operations-related tasks from this console. You can run search queries, review the list of snapshots, check the health of your clusters, and more.

GET
test-index/_mapping

Recent

Submit

Advanced
200 — OK (510 ms)
{
  "test-index": {
    "mappings": {
      "properties": {
        "AverageVoltage": {
          "type": "long"
        },
        "author": {
          "fields": {
            "keyword": {
              "ignore_above": 256,
              "type": "keyword"
            }
          },
          "type": "text"
        },
        "text": {
          "fields": {
            "keyword": {
              "ignore_above": 256,
              "type": "keyword"
            }
          },
          "type": "text"
        },
        "TimeOfAlarm": {
          "type": "date"
        },
        "outageStart": {
          "fields": {
            "keyword": {
              "ignore_above": 256,
              "type": "keyword"
            }
          },
          "type": "text"
        },
        "AlarmType": {
          "fields": {
            "keyword": {
              "ignore_above": 256,
              "type": "keyword"
            }
          },
          "type": "text"
        },
        "AverageCurrent": {
          "type": "long"
        },
        "timestamp": {
          "type": "date"
        },
        "outageEnd": {
          "fields": {
            "keyword": {
              "ignore_above": 256,
              "type": "keyword"
            }
          },
          "type": "text"
        },
        "MeterID": {
          "fields": {
            "keyword": {
              "ignore_above": 256,
              "type": "keyword"
            }
          },
          "type": "text"
        },
        "TimeOfSample": {
          "type": "date"
        },
        "employee-id": {
          "index": false,
          "type": "keyword"
        }
      }
    }
  }
}


{
	"test-index": {
		"mappings": {
			"properties": {
				"AverageVoltage": {
					"type": "long"
				},
				"author": {
					"fields": {
						"keyword": {
							"ignore_above": 256,
							"type": "keyword"
						}
					},
					"type": "text"
				},
				"text": {
					"fields": {
						"keyword": {
							"ignore_above": 256,
							"type": "keyword"
						}
					},
					"type": "text"
				},
				"TimeOfAlarm": {
					"type": "date"
				},
				"outageStart": {
					"type": "date"
				}
			},
			"outageEnd": {
				"type": "date"
			}
		},
		"AlarmType": {
			"fields": {
				"keyword": {
					"ignore_above": 256,
					"type": "keyword"
				}
			},
			"type": "text"
		},
		"AverageCurrent": {
			"type": "long"
		},
		"timestamp": {
			"type": "date"
		},
		"outageEnd": {
			"fields": {
				"keyword": {
					"ignore_above": 256,
					"type": "keyword"
				}
			},
			"type": "text"
		},
		"MeterID": {
			"fields": {
				"keyword": {
					"ignore_above": 256,
					"type": "keyword"
				}
			},
			"type": "text"
		},
		"TimeOfSample": {
			"type": "date"
		},
		"employee-id": {
			"index": false,
			"type": "keyword"
		}
	}
}


{
	"test-index": {
		"mappings": {
			"properties": {
				"AverageVoltage": {
					"type": "long"
				},
				"author": {
					"fields": {
						"keyword": {
							"ignore_above": 256,
							"type": "keyword"
						}
					},
					"type": "text"
				},
				"text": {
					"fields": {
						"keyword": {
							"ignore_above": 256,
							"type": "keyword"
						}
					},
					"type": "text"
				},
				"TimeOfAlarm": {
					"type": "date"
				},
				"outageStart": {
					"type": "date"
				}
			},
			"outageEnd": {
				"type": "date"
			}
		},
		"AlarmType": {
			"fields": {
				"keyword": {
					"ignore_above": 256,
					"type": "keyword"
				}
			},
			"type": "text"
		},
		"AverageCurrent": {
			"type": "long"
		},
		"timestamp": {
			"type": "date"
		},
		"outageEnd": {
			"fields": {
				"keyword": {
					"ignore_above": 256,
					"type": "keyword"
				}
			},
			"type": "text"
		},
		"MeterID": {
			"fields": {
				"keyword": {
					"ignore_above": 256,
					"type": "keyword"
				}
			},
			"type": "text"
		},
		"TimeOfSample": {
			"type": "date"
		},
		"employee-id": {
			"index": false,
			"type": "keyword"
		}
	}
}



PUT test-index
{
  "properties": {
    "MeterID": { "type": "keyword" },
    "outageStart": { "type": "date" },
    "outageEnd": { "type": "date" }
  }
}

----------------------------------------------------
elastic search container


docker pull nshou/elasticsearch-kibana
docker run -d -p 9200:9200 -p 5601:5601 nshou/elasticsearch-kibana

Kibana@
https://localhost:5601

elasticsearch api @ localhost:9200

To start off:

PUT metering-blockload

PUT /metering-blockload/_mapping
{
      "properties" : {
        "AverageCurrent" : {
          "type" : "float"
        },
        "AverageVoltage" : {
          "type" : "float"
        },
        "MeterID" : {
          "type" : "text",
          "fields" : {
            "keyword" : {
              "type" : "keyword",
              "ignore_above" : 256
            }
          }
        },
        "TimeOfSample" : {
          "type" : "date"
        }
      }
    }




PUT metering-alarms

PUT /metering-alarms/_mapping
{
      "properties" : {
        "AlarmType" : {
          "type" : "text",
          "fields" : {
            "keyword" : {
              "type" : "keyword",
              "ignore_above" : 256
            }
          }
        },
        "MeterID" : {
          "type" : "text",
          "fields" : {
            "keyword" : {
              "type" : "keyword",
              "ignore_above" : 256
            }
          }
        },
        "TimeOfAlarm" : {
          "type" : "date"
        }
      }
    }



PUT metering-outages

PUT /metering-outages/_mapping
{
      "properties" : {
        "outageStart" : {
          "type" : "date"
        },
        "outageEnd" : {
          "type" : "date"
        },
        "MeterID" : {
          "type" : "text",
          "fields" : {
            "keyword" : {
              "type" : "keyword",
              "ignore_above" : 256
            }
          }
        }
      }
    }

----------------------------------------
kibana vega gantt chart

{

  $schema: https://vega.github.io/schema/vega-lite/v2.json
  title: Gantt Visualization Using Vega


  data: {
    url: {
      // Apply dashboard context filters when set
      %context%: true
      // Filter the time picker (upper right corner) with this field
      %timefield%: outageStart

/*
See .search() documentation for :  https://www.elastic.co/guide/en/elasticsearch/client/javascript-api/current/api-reference.html#api-search
*/

      // Which index to search
      index: metering-outages

      body: {

      }
    }

    format: {property: "hits.hits"}
  }

"mark": "bar",
  "encoding": {
    "y": {"field": "MeterID", "type": "nominal"},
    "x": {"field": "outageStart", "type": "nominal"},
    "x2": {"field": "outageEnd", "type": "nominal"}
  }
}

-------------------------------------
mbedtls unittest work:
- ipsec_sad.c
- test_dtls.c

----------------------------------------------
regulator on efm32
halInitChipSpecific()
R5VOUTLEVEL

-----------------------------------

 mysql> grant all on mdms.* to 'root'@'%';flush privileges;

------------------------------------
technology group
- NB-IoT interaction. PPP? dev-board & SIM?
- OSCORE?
- LWM2M?

--------------------------------------------
last gasp


~/c4-agent-tools-v149.5/coap_request.py --ctrlporthub :4001 --eui64 "00-1b-c5-0c-60-09-13-6b" --config-list

node.power_fail.fake_delay               : 3600
node.power_fail.expected_lifetime        : 100
node.power_fail.disable_mq_scheduled_push : 0
node.power_fail.disable_coap_ack         : 0
node.power_fail.disable_event            : 0
node.power_fail.no_radio_disable         : 0

----------------------------------
superset:

select Devices.nodeId,Devices.deviceId,nodeType,parentNodeId,status,updateTime,address,currentFirmwareVersion,latitude,longitude,gatewayNodeId,hardwareVersion,createTime from Devices left join Nodes on Devices.nodeId = Nodes.nodeId;

mysql://root:blaa@172.21.0.6/superset
mysql://root:blaa@172.21.0.6/mdms

------------------------------
Billing 1.0.98.1.0.255
Block load 1.0.99.1.0.255
Daily load 1.0.99.2.0.255
Instantaneous 1.0.94.91.0.255

Block-load/Voltage: 1.0.72.27.0.255/2
Daily-load/Cum. Apparent Import Energy: 1.0.9.8.0.255/2
Daily-load/Cum. Active Import Energy: 1.0.1.8.0.255/2
Instantaneous/L3 voltage: 1.0.72.7.0.255/2
billing/power-on-duration: 1.0.94.91.13.255/2

-------------------------------
FTDI/SWD

D0 - SWCLK
D1 - DO   ---|
D2 - DI   ---|--- SWDIO
D5 - TRST

------------------------------------
host-agent drop connection to server:

drop:
sudo iptables -A INPUT -s omnidev-in-01.dev.cyanconnode.com -j DROP

restore:
sudo iptables -D INPUT -s omnidev-in-01.dev.cyanconnode.com -j DROP

------------------------------------------

gareth@mea-cc-hes-2:~$ coap_request.py --server localhost:8080 --agent fd74:9b23:b2ce:0:21b:c50c:6008:9376 --net-stats
rxFramesToMe: 233351
rxDroppedWrongCRC: 0
rxDroppedNotDestinedToMe: 2047379
rxDroppedOther: 4
rxDroppedAuthFailed: 1239
rxAcksSent: 125438
rxAcksSendErrors: 0
rxAckFrames: 1441563
rxUniqueFrames: 214904
txDataFrames: 49789
txRetransmits: 34514
txCollisions: 835668
txDropNoAck: 10951
txDropCollision: 0
txQuotaLimited: 50304
internetTxPackets: 30605
internetTxErrors: 210
internetRxPackets: 32857
modemResets: 12
rxToMePackets: 172555
rxToMeBytes: 7169574
rxForwardPackets: 58488
rxForwardBytes: 8506120
txForwardPackets: 56133
txForwardBytes: 9766853
txFromMePackets: 41448
txFromMeBytes: 2230031
rxErrors: 0
dropIpToInternet: 4
dropIpToLowpan: 2577
dropHoplimit: 0
bcastBlocks: 0
unicastBlocks: 0
errorBlocks: 0
rankErrors: 0
joins: 0
leaves: 9
rankUpdates: 4
ppChanges: 0
dagSwitches: 0
login: 12
logout: 12
loginFail: 0
keepAliveOk: 0
keepAliveError: 5
relogin: 11
dtlsStart: 3
dtlsFinish: 3
coapPacketsSent: 1797
coapPacketsReceived: 1759

-----------------------------
NMS API
soap
https://omnidev-in-01.dev.cyanconnode.com/nms/ws/

--------------------------------------
session resumption requires secure database access:

2021-01-18 22:04:06.604 [dtls-pool-2] WARN c.c.s.t.session.NodeStorageProvider - Unable to decode terminal session info from db - server security private key is not defined
2021-01-18 22:04:06.604 [dtls-pool-2] TRACE c.c.d.DTLSHandshakeProcedureFactory - Cannot read session info from the database - reverting to full handshake, clientSessionId=SessionId(5a413c6ae4c1b408de25b6c2e42b8e586dbc4646e220787b01bfb5ffb465677e)


---------------------------------------------
EFR32 transmit stream on GPIO PRS tx output

PRS Peripheral Reflex System
https://www.silabs.com/community/wireless/proprietary/knowledge-base.entry.html/2018/06/26/rail_tutorial_debug-NbEG

https://www.silabs.com/community/wireless/proprietary/forum.topic.html/efr32_rail_getting-sqdH

section 4.1.2:
https://www.silabs.com/documents/public/application-notes/an972-efr32-rf-eval-guide.pdf

https://www.silabs.com/community/mcu/32-bit/forum.topic.html/prs_and_le_periphera-2AhC

Aim is to get modem-clock and modem-data out of two GPIOs as a SPI format waveform to record
via Logic analyser.

EFR32FG12P231F1024GM48 (QFN48) 31 GPIO, 1MB FLASH, 128KB RAM

Device/SiliconLabs/EFR32FG12P/Include/efr32fg12p_prs.h

https://silabs-prod.adobecqms.net/content/usergenerated/asi/cloud/content/siliconlabs/en/community/wireless/proprietary/knowledge-base/jcr:content/content/primary/blog/rail_tutorial_debug-NbEG.social.0.10.html

#include "em_cmu.h"
#include "em_gpio.h"
#include <string.h>
#include "hal_common.h"

void enablePrs(char *debugPinName, uint16_t prsSig){
  uint32_t count;
  uint32_t pin = 0;
  const debugPin_t *debugPins = halGetDebugPins(&count);
  while ( pin<count && strcmp(debugPins[pin].name, debugPinName) ){
    pin++;
  }
  if (pin<count){
    CMU_ClockEnable(cmuClock_GPIO, true);
    GPIO_PinModeSet(debugPins[pin].gpioPort, debugPins[pin].gpioPin, gpioModePushPull, 0);
    halEnablePrs(debugPins[pin].prsChannel, debugPins[pin].prsLocation,
                 prsSig>>8, prsSig&0xff);
  }

}

void setupDebugPins(){
  enablePrs("PC11", PRS_RAC_TX);
}
You can also use the comments in hal-efr32/hal_efr.c to figure out where are these wired on a WSTK:

{
  .name = "PC10", // EFR32xG1/EFR32xG12/EFR32xG13 - EXP_HEADER15, WSTK_P12
  .prsChannel = 9, // PRS 0/12 9/15 10/4 11/3
  .prsLocation = 15,
  .gpioPort = gpioPortC,
  .gpioPin = 10
},
This means it's on the EXP connector, pin 15, or P12, on the connector below (and above) the display. Note that not all pins are available on all boards, e.g., PC9 is only available on xG12 (xG14 is never mentioned, but it's always pin-compatible with xG1). Sometimes these pins share functionality, e.g., PF4 is also LED0 on xG1/xG13/xG14.

----------------------------------------------------
generate root certificate:

https://confluence.cyco.io/display/ENG/Security+credentials+and+Order+Generation

$ /var/prod/release/prod/prodserver/bin/generate_import_ca_crt.pl --name customer-name --days 3650
2019-06-10T17:37:38|INFO: /var/prod/release/prod/prodserver/bin/generate_import_ca_crt.pl --name customer-name --days 3650
2019-06-10T17:37:38|INFO: {"days":"3650","help":null,"name":"customer-name","outdir":"/tmp"}
[19027] debug @0.000006> trying to find CA ca_customer-name.crt on the database in /var/prod/release/prod/prodserver/bin/generate_import_ca_crt.pl l. 47
[19027] debug @0.000134> select id, name from ca_crt where name = "ca_customer-name.crt" in /var/prod/release/prod/prodserver/bin/../lib/PROD.pm l. 90
[19027] debug @0.000887> number of rows:0 in /var/prod/release/prod/prodserver/bin/../lib/PROD.pm l. 90
2019-06-10T17:37:38|INFO: openssl ecparam -out /tmp/ca_customer-name.key -name prime256v1 -genkey
2019-06-10T17:37:38|INFO: openssl req -new -key /tmp/ca_customer-name.key -x509 -nodes -days 3650 -out /tmp/ca_customer-name.crt -subj '/C=UK/ST=Cambridge/L=Cambridge/O=CyanConnode/OU=R&D/CN=customer-name.cyanconnode.com'
[19027] debug @0.011537> create_ca_crt{"crt_path":"/tmp/ca_customer-name.crt","key_path":"/tmp/ca_customer-name.key"} in /var/prod/release/prod/prodserver/bin/generate_import_ca_crt.pl l. 59
[19027] debug @0.012099> openssl x509 -in /tmp/ca_customer-name.crt -outform DER -out /tmp/zl_fpcxyOg/ca_customer-name.crt.crt.der in /var/prod/release/prod/prodserver/bin/../lib/PROD.pm l. 413
[19027] debug @0.017102> openssl ec -in /tmp/ca_customer-name.key -outform DER -out /tmp/zl_fpcxyOg/ca_customer-name.crt.key.der in /var/prod/release/prod/prodserver/bin/../lib/PROD.pm l. 414
read EC key
writing EC key
[19027] debug @0.022932> INSERT INTO ca_crt (ca_crt_der,ca_key_der_md5sum,ca_key_pem,create_time,ca_key_der,ca_crt_pem,name,ca_crt_der_md5sum) VALUES (?,?,?,?,?,?,?,?) in /var/prod/release/prod/prodserver/bin/../lib/PROD.pm l. 192
[19027] debug @0.027343> insert to ca_crt in /var/prod/release/prod/prodserver/bin/../lib/PROD.pm l. 417
[19027]  info @0.027491> {"stdout":"\ninsert into ca_crt OK\n"} in /var/prod/release/prod/prodserver/bin/generate_import_ca_crt.pl l. 59

-----------------------------------
docker pull failure

wrong repository, so do it manually:

docker pull docker-dev.artifactory.cyco.io/omnimesh/devstack

----------------------------------------------------
virtualenv for dev-stack
. ~/.venv/omnimesh/bin/activate

generate additional certs for node:
./src/omnimesh/devstack/data/scripts/pki-create-additional.sh ~/.devstack/.data/pki ~/.devstack/.data/pki/00-00-00-00-00-00-00-03 node 00-00-00-00-00-00-00-03

Install dev-stack as developer:
pip3 install -e .

-------------------------------------------
DTLS testing:

Using the "AddTShark" branch of dev-stack (which produces ~/.devstack/.data/nms-0/logs/dtls_trace.log)

This command:
'grep "DTLSv1.2 Record Layer:" ~/.devstack/.data/nms-0/logs/dtls_trace.log'
Produces this on a "short"/"resumed" session:
DTLSv1.2 Record Layer: Handshake Protocol: Client Hello
DTLSv1.2 Record Layer: Handshake Protocol: Hello Verify Request
DTLSv1.2 Record Layer: Handshake Protocol: Client Hello
DTLSv1.2 Record Layer: Handshake Protocol: Server Hello
DTLSv1.2 Record Layer: Change Cipher Spec Protocol: Change Cipher Spec
DTLSv1.2 Record Layer: Change Cipher Spec Protocol: Change Cipher Spec

and this for a full handshake (with no session-cache):
DTLSv1.2 Record Layer: Handshake Protocol: Client Hello
DTLSv1.2 Record Layer: Handshake Protocol: Hello Verify Request
DTLSv1.2 Record Layer: Handshake Protocol: Client Hello
DTLSv1.2 Record Layer: Handshake Protocol: Server Hello
DTLSv1.2 Record Layer: Handshake Protocol: Certificate
DTLSv1.2 Record Layer: Handshake Protocol: Server Key Exchange
DTLSv1.2 Record Layer: Handshake Protocol: Certificate Request
DTLSv1.2 Record Layer: Handshake Protocol: Server Hello Done
DTLSv1.2 Record Layer: Handshake Protocol: Certificate
DTLSv1.2 Record Layer: Handshake Protocol: Client Key Exchange
DTLSv1.2 Record Layer: Handshake Protocol: Certificate Verify
DTLSv1.2 Record Layer: Change Cipher Spec Protocol: Change Cipher Spec
DTLSv1.2 Record Layer: Change Cipher Spec Protocol: Change Cipher Spec

For the cipher-suites verification:
'grep -A 3 "Cipher Suites" ~/.devstack/.data/nms-0/logs/dtls_trace.log'
Gives the following:
Cipher Suites Length: 4
Cipher Suites (2 suites)
    Cipher Suite: TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8 (0xc0ae)
    Cipher Suite: TLS_EMPTY_RENEGOTIATION_INFO_SCSV (0x00ff)
Compression Methods Length: 1


--------------------------
ToDo:

- session renewal (periodically)
- memory leak during resumption/session-cache.

----------------------------------

Thread 9 "dtls" hit Breakpoint 1, myCalloc (n=4, sizeElement=8)
    at build/3pp/mbedtls/library/platform.c:91
91	    uint32_t*   ptr = (uint32_t*)MALLOCZ( (n*sizeElement) + sizeof(uint32_t) );
(gdb) where
#0  myCalloc (n=4, sizeElement=8) at build/3pp/mbedtls/library/platform.c:91
#1  0x00005555557e2b14 in mbedtls_calloc (nmemb=4, size=8) at build/3pp/mbedtls/library/platform.c:117
#2  0x00005555557b5ba3 in mbedtls_mpi_grow (X=0x614000004174, nblimbs=4)
    at build/3pp/mbedtls/library/bignum.c:125
#3  0x00005555557b6ca7 in mbedtls_mpi_read_binary (X=0x614000004174,
    buf=0x6190000803ec "30Ww6K\314o\210;\270\066\341\222\320G\025\376uf\214\270\334\336\353\315w*\237[\315\355\225\340\305|5\026珣\002\262\214U@n\251L=S\362b >wn=\222\210*ʄƣP0N0\035\006\003U\035\016\004\026\004\024X\262`H2\336\365b\372(\353Ď_;\216-!\310\365\060\037\006\003U\035#\004\030\060\026\200\024X\262`H2\336\365b\372(\353Ď_;\216-!\310\365\060\f\006\003U\035\023\004\005\060\003\001\001\377\060\t\006\a*\206H\316=\004\001\003G", buflen=32) at build/3pp/mbedtls/library/bignum.c:891
#4  0x00005555557c6efc in mbedtls_ecp_point_read_binary (grp=0x614000004064, pt=0x614000004174,
    buf=0x6190000803eb "\004\063\060Ww6K\314o\210;\270\066\341\222\320G\025\376uf\214\270\334\336\353\315w*\237[\315\355\225\340\305|5\026珣\002\262\214U@n\251L=S\362b >wn=\222\210*ʄƣP0N0\035\006\003U\035\016\004\026\004\024X\262`H2\336\365b\372(\353Ď_;\216-!\310\365\060\037\006\003U\035#\004\030\060\026\200\024X\262`H2\336\365b\372(\353Ď_;\216-!\310\365\060\f\006\003U\035\023\004\005\060\003\001\001\377\060\t\006\a*\206H\316=\004\001\003G", ilen=65) at build/3pp/mbedtls/library/ecp.c:986
#5  0x00005555557dfd31 in pk_get_ecpubkey (p=0x7fffefaf7990,
    end=0x61900008042c "\243P0N0\035\006\003U\035\016\004\026\004\024X\262`H2\336\365b\372(\353Ď_;\216-!\310\365\060\037\006\003U\035#\004\030\060\026\200\024X\262`H2\336\365b\372(\353Ď_;\216-!\310\365\060\f\006\003U\035\023\004\005\060\003\001\001\377\060\t\006\a*\206H\316=\004\001\003G",
    key=0x614000004064) at build/3pp/mbedtls/library/pkparse.c:500
#6  0x00005555557e0931 in mbedtls_pk_parse_subpubkey (p=0x7fffefaf7990,
    end=0x61900008042c "\243P0N0\035\006\003U\035\016\004\026\004\024X\262`H2\336\365b\372(\353Ď_;\216-!\310\365\060\037\006\003U\035#\004\030\060\026\200\024X\262`H2\336\365b\372(\353Ď_;\216-!\310\365\060\f\006\003U\035\023\004\005\060\003\001\001\377\060\t\006\a*\206H\316=\004\001\003G",
    pk=0x555555b8fb28 <cacert+360>) at build/3pp/mbedtls/library/pkparse.c:659
#7  0x00005555557fc0d3 in x509_crt_parse_der_core (crt=0x555555b8f9c0 <cacert>,
    buf=0x6190000802a8 "0\202\002&0\202\001Π\003\002\001\002\002\t", buflen=554, make_copy=0, cb=0x0,
    p_ctx=0x0) at build/3pp/mbedtls/library/x509_crt.c:1236
#8  0x00005555557fc9d0 in mbedtls_x509_crt_parse_der_internal (chain=0x555555b8f9c0 <cacert>,
    buf=0x6190000802a8 "0\202\002&0\202\001Π\003\002\001\002\002\t", buflen=554, make_copy=0, cb=0x0,
    p_ctx=0x0) at build/3pp/mbedtls/library/x509_crt.c:1372
#9  0x00005555557fca71 in mbedtls_x509_crt_parse_der_nocopy (chain=0x555555b8f9c0 <cacert>,
    buf=0x6190000802a8 "0\202\002&0\202\001Π\003\002\001\002\002\t", buflen=554)
    at build/3pp/mbedtls/library/x509_crt.c:1391
#10 0x0000555555614ec2 in setupSession (session=0x60d000012340)
    at src/communication/dtls/dtls_mbedtls.c:973
#11 0x0000555555612ba4 in setupSessions () at src/communication/dtls/dtls_mbedtls.c:426
#12 0x0000555555613a16 in dtlsTask (arg=0x0) at src/communication/dtls/dtls_mbedtls.c:687
#13 0x0000555555795e96 in taskWrapper (arg=0x555555b8ed00 <s_dtlsTask>)
    at src/platform/osal/osal-posix/osal_posix.c:134
#14 0x00007ffff6c026db in start_thread (arg=0x7fffefaf8700) at pthread_create.c:463
#15 0x00007ffff692ba3f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95




Thread 9 "dtls" hit Breakpoint 1, myCalloc (n=4, sizeElement=8)
    at build/3pp/mbedtls/library/platform.c:91
91	    uint32_t*   ptr = (uint32_t*)MALLOCZ( (n*sizeElement) + sizeof(uint32_t) );
(gdb) where
#0  myCalloc (n=4, sizeElement=8) at build/3pp/mbedtls/library/platform.c:91
#1  0x00005555557e2b14 in mbedtls_calloc (nmemb=4, size=8) at build/3pp/mbedtls/library/platform.c:117
#2  0x00005555557b5ba3 in mbedtls_mpi_grow (X=0x61400000418c, nblimbs=4) at build/3pp/mbedtls/library/bignum.c:125
#3  0x00005555557b6ca7 in mbedtls_mpi_read_binary (X=0x61400000418c,
    buf=0x61900008040c "\225\340\305|5\026珣\002\262\214U@n\251L=S\362b >wn=\222\210*ʄƣP0N0\035\006\003U\035\016\004\026\004\024X\262`H2\336\365b\372(\353Ď_;\216-!\310\365\060\037\006\003U\035#\004\030\060\026\200\024X\262`H2\336\365b\372(\353Ď_;\216-!\310\365\060\f\006\003U\035\023\004\005\060\003\001\001\377\060\t\006\a*\206H\316=\004\001\003G", buflen=32) at build/3pp/mbedtls/library/bignum.c:891
#4  0x00005555557c6f2c in mbedtls_ecp_point_read_binary (grp=0x614000004064, pt=0x614000004174,
    buf=0x6190000803eb "\004\063\060Ww6K\314o\210;\270\066\341\222\320G\025\376uf\214\270\334\336\353\315w*\237[\315\355\225\340\305|5\026珣\002\262\214U@n\251L=S\362b >wn=\222\210*ʄƣP0N0\035\006\003U\035\016\004\026\004\024X\262`H2\336\365b\372(\353Ď_;\216-!\310\365\060\037\006\003U\035#\004\030\060\026\200\024X\262`H2\336\365b\372(\353Ď_;\216-!\310\365\060\f\006\003U\035\023\004\005\060\003\001\001\377\060\t\006\a*\206H\316=\004\001\003G", ilen=65) at build/3pp/mbedtls/library/ecp.c:987
#5  0x00005555557dfd31 in pk_get_ecpubkey (p=0x7fffefaf7990,
    end=0x61900008042c "\243P0N0\035\006\003U\035\016\004\026\004\024X\262`H2\336\365b\372(\353Ď_;\216-!\310\365\060\037\006\003U\035#\004\030\060\026\200\024X\262`H2\336\365b\372(\353Ď_;\216-!\310\365\060\f\006\003U\035\023\004\005\060\003\001\001\377\060\t\006\a*\206H\316=\004\001\003G", key=0x614000004064) at build/3pp/mbedtls/library/pkparse.c:500
#6  0x00005555557e0931 in mbedtls_pk_parse_subpubkey (p=0x7fffefaf7990,
    end=0x61900008042c "\243P0N0\035\006\003U\035\016\004\026\004\024X\262`H2\336\365b\372(\353Ď_;\216-!\310\365\060\037\006\003U\035#\004\030\060\026\200\024X\262`H2\336\365b\372(\353Ď_;\216-!\310\365\060\f\006\003U\035\023\004\005\060\003\001\001\377\060\t\006\a*\206H\316=\004\001\003G", pk=0x555555b8fb28 <cacert+360>) at build/3pp/mbedtls/library/pkparse.c:659
#7  0x00005555557fc0d3 in x509_crt_parse_der_core (crt=0x555555b8f9c0 <cacert>, buf=0x6190000802a8 "0\202\002&0\202\001Π\003\002\001\002\002\t", buflen=554, make_copy=0, cb=0x0, p_ctx=0x0)
    at build/3pp/mbedtls/library/x509_crt.c:1236
#8  0x00005555557fc9d0 in mbedtls_x509_crt_parse_der_internal (chain=0x555555b8f9c0 <cacert>, buf=0x6190000802a8 "0\202\002&0\202\001Π\003\002\001\002\002\t", buflen=554, make_copy=0, cb=0x0, p_ctx=0x0)
    at build/3pp/mbedtls/library/x509_crt.c:1372
#9  0x00005555557fca71 in mbedtls_x509_crt_parse_der_nocopy (chain=0x555555b8f9c0 <cacert>, buf=0x6190000802a8 "0\202\002&0\202\001Π\003\002\001\002\002\t", buflen=554)
    at build/3pp/mbedtls/library/x509_crt.c:1391
#10 0x0000555555614ec2 in setupSession (session=0x60d000012340) at src/communication/dtls/dtls_mbedtls.c:973
#11 0x0000555555612ba4 in setupSessions () at src/communication/dtls/dtls_mbedtls.c:426
#12 0x0000555555613a16 in dtlsTask (arg=0x0) at src/communication/dtls/dtls_mbedtls.c:687
#13 0x0000555555795e96 in taskWrapper (arg=0x555555b8ed00 <s_dtlsTask>) at src/platform/osal/osal-posix/osal_posix.c:134
#14 0x00007ffff6c026db in start_thread (arg=0x7fffefaf8700) at pthread_create.c:463
#15 0x00007ffff692ba3f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95



Thread 9 "dtls" hit Breakpoint 1, myCalloc (n=4, sizeElement=8) at build/3pp/mbedtls/library/platform.c:91
91	    uint32_t*   ptr = (uint32_t*)MALLOCZ( (n*sizeElement) + sizeof(uint32_t) );
(gdb) where
#0  myCalloc (n=4, sizeElement=8) at build/3pp/mbedtls/library/platform.c:91
#1  0x00005555557e2b14 in mbedtls_calloc (nmemb=4, size=8) at build/3pp/mbedtls/library/platform.c:117
#2  0x00005555557b5ba3 in mbedtls_mpi_grow (X=0x7fffefaf7390, nblimbs=4) at build/3pp/mbedtls/library/bignum.c:125
#3  0x00005555557b614b in mbedtls_mpi_copy (X=0x7fffefaf7390, Y=0x7fffefaf7690) at build/3pp/mbedtls/library/bignum.c:212
#4  0x00005555557b8d68 in mbedtls_mpi_sub_abs (X=0x7fffefaf7690, A=0x7fffefaf7510, B=0x7fffefaf7690) at build/3pp/mbedtls/library/bignum.c:1387
#5  0x00005555557ccfcd in fix_negative (N=0x7fffefaf7690, c=-2 '\376', C=0x7fffefaf7510, bits=256) at build/3pp/mbedtls/library/ecp_curves.c:1057
#6  0x00005555557d1723 in ecp_mod_p256 (N=0x7fffefaf7690) at build/3pp/mbedtls/library/ecp_curves.c:1116
#7  0x00005555557c7664 in ecp_modp (N=0x7fffefaf7690, grp=0x614000004064) at build/3pp/mbedtls/library/ecp.c:1183
#8  0x00005555557c778a in mbedtls_mpi_mul_mod (grp=0x614000004064, X=0x7fffefaf7690, A=0x61400000418c, B=0x61400000418c) at build/3pp/mbedtls/library/ecp.c:1230
#9  0x00005555557cbad3 in ecp_check_pubkey_sw (grp=0x614000004064, pt=0x614000004174) at build/3pp/mbedtls/library/ecp.c:2739
#10 0x00005555557cc125 in mbedtls_ecp_check_pubkey (grp=0x614000004064, pt=0x614000004174) at build/3pp/mbedtls/library/ecp.c:2949
#11 0x00005555557dfd54 in pk_get_ecpubkey (p=0x7fffefaf7990,
    end=0x61900008042c "\243P0N0\035\006\003U\035\016\004\026\004\024X\262`H2\336\365b\372(\353Ď_;\216-!\310\365\060\037\006\003U\035#\004\030\060\026\200\024X\262`H2\336\365b\372(\353Ď_;\216-!\310\365\060\f\006\003U\035\023\004\005\060\003\001\001\377\060\t\006\a*\206H\316=\004\001\003G", key=0x614000004064) at build/3pp/mbedtls/library/pkparse.c:503
#12 0x00005555557e0931 in mbedtls_pk_parse_subpubkey (p=0x7fffefaf7990,
    end=0x61900008042c "\243P0N0\035\006\003U\035\016\004\026\004\024X\262`H2\336\365b\372(\353Ď_;\216-!\310\365\060\037\006\003U\035#\004\030\060\026\200\024X\262`H2\336\365b\372(\353Ď_;\216-!\310\365\060\f\006\003U\035\023\004\005\060\003\001\001\377\060\t\006\a*\206H\316=\004\001\003G", pk=0x555555b8fb28 <cacert+360>) at build/3pp/mbedtls/library/pkparse.c:659
#13 0x00005555557fc0d3 in x509_crt_parse_der_core (crt=0x555555b8f9c0 <cacert>, buf=0x6190000802a8 "0\202\002&0\202\001Π\003\002\001\002\002\t", buflen=554, make_copy=0, cb=0x0, p_ctx=0x0)
    at build/3pp/mbedtls/library/x509_crt.c:1236
#14 0x00005555557fc9d0 in mbedtls_x509_crt_parse_der_internal (chain=0x555555b8f9c0 <cacert>, buf=0x6190000802a8 "0\202\002&0\202\001Π\003\002\001\002\002\t", buflen=554, make_copy=0, cb=0x0, p_ctx=0x0)
    at build/3pp/mbedtls/library/x509_crt.c:1372
#15 0x00005555557fca71 in mbedtls_x509_crt_parse_der_nocopy (chain=0x555555b8f9c0 <cacert>, buf=0x6190000802a8 "0\202\002&0\202\001Π\003\002\001\002\002\t", buflen=554)
    at build/3pp/mbedtls/library/x509_crt.c:1391
#16 0x0000555555614ec2 in setupSession (session=0x60d000012340) at src/communication/dtls/dtls_mbedtls.c:973
#17 0x0000555555612ba4 in setupSessions () at src/communication/dtls/dtls_mbedtls.c:426
#18 0x0000555555613a16 in dtlsTask (arg=0x0) at src/communication/dtls/dtls_mbedtls.c:687
#19 0x0000555555795e96 in taskWrapper (arg=0x555555b8ed00 <s_dtlsTask>) at src/platform/osal/osal-posix/osal_posix.c:134
#20 0x00007ffff6c026db in start_thread (arg=0x7fffefaf8700) at pthread_create.c:463
#21 0x00007ffff692ba3f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

------------------------------------

Thread 9 "dtls" hit Breakpoint 1, myCalloc (n=1, sizeElement=32)
    at build/3pp/mbedtls/library/platform.c:78
78	        LOG_DEBUG("32 bytes allocated.(%zd,%zd)",n,sizeElement);
(gdb) where
#0  myCalloc (n=1, sizeElement=32) at build/3pp/mbedtls/library/platform.c:78
#1  0x00005555557e29e6 in mbedtls_calloc (nmemb=1, size=32) at build/3pp/mbedtls/library/platform.c:108
#2  0x0000555555815fdd in ssl_flight_append (ssl=0x555555b8ff80 <ssl>)
    at build/3pp/mbedtls/library/ssl_msg.c:2196
#3  0x0000555555818c55 in mbedtls_ssl_write_handshake_msg (ssl=0x555555b8ff80 <ssl>)
    at build/3pp/mbedtls/library/ssl_msg.c:2680
#4  0x0000555555837852 in mbedtls_ssl_write_finished (ssl=0x555555b8ff80 <ssl>)
    at build/3pp/mbedtls/library/ssl_tls.c:3461
#5  0x0000555555811b95 in mbedtls_ssl_handshake_client_step (ssl=0x555555b8ff80 <ssl>)
    at build/3pp/mbedtls/library/ssl_cli.c:4337
#6  0x000055555583b6bb in mbedtls_ssl_handshake_step (ssl=0x555555b8ff80 <ssl>)
    at build/3pp/mbedtls/library/ssl_tls.c:5668
#7  0x000055555583b7c8 in mbedtls_ssl_handshake (ssl=0x555555b8ff80 <ssl>)
    at build/3pp/mbedtls/library/ssl_tls.c:5692
#8  0x00005555556153f4 in setupSession (session=0x60d000010530)
    at src/communication/dtls/dtls_mbedtls.c:1095
#9  0x0000555555612ac4 in setupSessions () at src/communication/dtls/dtls_mbedtls.c:426
#10 0x000055555561391b in dtlsTask (arg=0x0) at src/communication/dtls/dtls_mbedtls.c:687
#11 0x0000555555795db6 in taskWrapper (arg=0x555555b8ec40 <s_dtlsTask>)
    at src/platform/osal/osal-posix/osal_posix.c:134
#12 0x00007ffff6c026db in start_thread (arg=0x7fffefaf8700) at pthread_create.c:463
#13 0x00007ffff692ba3f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95
(gdb)


Thread 9 "dtls" hit Breakpoint 1, myCalloc (n=1, sizeElement=32)
    at build/3pp/mbedtls/library/platform.c:78
78	        LOG_DEBUG("32 bytes allocated.(%zd,%zd)",n,sizeElement);
(gdb) where
#0  myCalloc (n=1, sizeElement=32) at build/3pp/mbedtls/library/platform.c:78
#1  0x00005555557e29e6 in mbedtls_calloc (nmemb=1, size=32) at build/3pp/mbedtls/library/platform.c:108
#2  0x000055555583b43b in ssl_session_load (session=0x555555b908c0 <savedSession.10039>,
    omit_header=0 '\000', buf=0x555555b90340 <sessionCache> "\002\030", len=128)
    at build/3pp/mbedtls/library/ssl_tls.c:5566
#3  0x000055555583b5d6 in mbedtls_ssl_session_load (session=0x555555b908c0 <savedSession.10039>,
    buf=0x555555b90340 <sessionCache> "\002\030", len=128) at build/3pp/mbedtls/library/ssl_tls.c:5648
#4  0x0000555555615304 in setupSession (session=0x60d000010ae0)
    at src/communication/dtls/dtls_mbedtls.c:1079
#5  0x0000555555612ac4 in setupSessions () at src/communication/dtls/dtls_mbedtls.c:426
#6  0x000055555561391b in dtlsTask (arg=0x0) at src/communication/dtls/dtls_mbedtls.c:687
#7  0x0000555555795db6 in taskWrapper (arg=0x555555b8ec40 <s_dtlsTask>)
    at src/platform/osal/osal-posix/osal_posix.c:134
#8  0x00007ffff6c026db in start_thread (arg=0x7fffefaf8700) at pthread_create.c:463
#9  0x00007ffff692ba3f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95


Thread 9 "dtls" hit Breakpoint 1, myCalloc (n=1, sizeElement=32)
    at build/3pp/mbedtls/library/platform.c:78
78	        LOG_DEBUG("32 bytes allocated.(%zd,%zd)",n,sizeElement);
(gdb) where
#0  myCalloc (n=1, sizeElement=32) at build/3pp/mbedtls/library/platform.c:78
#1  0x00005555557e29e6 in mbedtls_calloc (nmemb=1, size=32) at build/3pp/mbedtls/library/platform.c:108
#2  0x0000555555830e17 in mbedtls_ssl_session_copy (dst=0x610000010c64,
    src=0x555555b908c0 <savedSession.10039>) at build/3pp/mbedtls/library/ssl_tls.c:215
#3  0x0000555555839b69 in mbedtls_ssl_set_session (ssl=0x555555b8ff80 <ssl>,
    session=0x555555b908c0 <savedSession.10039>) at build/3pp/mbedtls/library/ssl_tls.c:4169
#4  0x0000555555615342 in setupSession (session=0x60d000010ae0)
    at src/communication/dtls/dtls_mbedtls.c:1081
#5  0x0000555555612ac4 in setupSessions () at src/communication/dtls/dtls_mbedtls.c:426
#6  0x000055555561391b in dtlsTask (arg=0x0) at src/communication/dtls/dtls_mbedtls.c:687
#7  0x0000555555795db6 in taskWrapper (arg=0x555555b8ec40 <s_dtlsTask>)
    at src/platform/osal/osal-posix/osal_posix.c:134
#8  0x00007ffff6c026db in start_thread (arg=0x7fffefaf8700) at pthread_create.c:463
#9  0x00007ffff692ba3f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95



---------------------------------

2021-01-25 16:06:42.655 #1   001bc50c600677b6 <log> 0:05:02.480 [debug] [        dtls] {     dtls}: ssl_msg.c:1215: |2| => decrypt buf
2021-01-25 16:06:42.655 #1   001bc50c600677b6 <log> 0:05:02.489 [debug] [        dtls] {     dtls}: ssl_msg.c:1325: |4| dumping 'additional data used for AEAD' (13 bytes)
2021-01-25 16:06:42.655 #1   001bc50c600677b6 <log> 0:05:02.501 [debug] [        dtls] {     dtls}: ssl_msg.c:1325: |4| 0000:  00 01 00 00 00 00 00 00 16 fe fd 00 18           .............
2021-01-25 16:06:42.700 #1   001bc50c600677b6 <log> 0:05:02.514 [debug] [        dtls] {     dtls}: ssl_msg.c:1333: |4| dumping 'IV used' (12 bytes)
2021-01-25 16:06:42.700 #1   001bc50c600677b6 <log> 0:05:02.524 [debug] [        dtls] {     dtls}: ssl_msg.c:1333: |4| 0000:  f2 8c 58 73 00 01 00 00 00 00 00 00              ..Xs........
2021-01-25 16:06:42.700 #1   001bc50c600677b6 <log> 0:05:02.537 [debug] [        dtls] {     dtls}: ssl_msg.c:1335: |4| dumping 'TAG used' (8 bytes)
2021-01-25 16:06:42.700 #1   001bc50c600677b6 <log> 0:05:02.547 [debug] [        dtls] {     dtls}: ssl_msg.c:1335: |4| 0000:  4a bb 4e f6 b1 b0 18 a6                          J.N.....
2021-01-25 16:06:42.744 #1   001bc50c600677b6 <log> 0:05:02.561 [debug] [        dtls] {     dtls}: ssl_msg.c:1761: |2| <= decrypt buf
2021-01-25 16:06:42.744 #1   001bc50c600677b6 <log> 0:05:02.569 [debug] [        dtls] {     dtls}: ssl_msg.c:3815: |4| dumping 'input payload after decrypt' (24 bytes)
2021-01-25 16:06:42.744 #1   001bc50c600677b6 <log> 0:05:02.581 [debug] [        dtls] {     dtls}: ssl_msg.c:3815: |4| 0000:  14 00 00 0c 00 06 00 00 00 00 00 0c ed a6 06 dc  ................
2021-01-25 16:06:42.744 #1   001bc50c600677b6 <log> 0:05:02.595 [debug] [        dtls] {     dtls}: ssl_msg.c:3815: |4| 0010:  4c 20 f4 0e 23 27 25 d9                          L ..#'%.
2021-01-25 16:06:42.788 #1   001bc50c600677b6 <log> 0:05:02.608 [debug] [        dtls] {     dtls}: ssl_msg.c:3040: |3| handshake message: msglen = 24, type = 20, hslen = 24
2021-01-25 16:06:42.788 #1   001bc50c600677b6 <log> 0:05:02.620 [debug] [        dtls] {     dtls}: ssl_msg.c:3996: |2| <= read record
2021-01-25 16:06:42.788 #1   001bc50c600677b6 <log> 0:05:02.628 [debug] [        dtls] {     dtls}: ssl_msg.c:0072: |3| set_timer to 0 ms
2021-01-25 16:06:42.788 #1   001bc50c600677b6 <log> 0:05:02.637 [debug] [        dtls] {     dtls}: ssl_tls.c:3561: |2| <= parse finished
2021-01-25 16:06:42.832 #1   001bc50c600677b6 <log> 0:05:02.646 [debug] [        dtls] {     dtls}: ssl_cli.c:4249: |2| client state: 14
2021-01-25 16:06:42.832 #1   001bc50c600677b6 <log> 0:05:02.654 [debug] [        dtls] {     dtls}: ssl_msg.c:2124: |2| => flush output
2021-01-25 16:06:42.832 #1   001bc50c600677b6 <log> 0:05:02.663 [debug] [        dtls] {     dtls}: ssl_msg.c:2136: |2| <= flush output
2021-01-25 16:06:42.832 #1   001bc50c600677b6 <log> 0:05:02.671 [debug] [        dtls] {     dtls}: ssl_cli.c:4360: |2| handshake: done
2021-01-25 16:06:42.832 #1   001bc50c600677b6 <log> 0:05:02.680 [debug] [        dtls] {     dtls}: ssl_cli.c:4249: |2| client state: 15
2021-01-25 16:06:42.832 #1   001bc50c600677b6 <log> 0:05:02.688 [debug] [        dtls] {     dtls}: ssl_msg.c:2124: |2| => flush output
2021-01-25 16:06:42.877 #1   001bc50c600677b6 <log> 0:05:02.697 [debug] [        dtls] {     dtls}: ssl_msg.c:2136: |2| <= flush output
2021-01-25 16:06:42.877 #1   001bc50c600677b6 <log> 0:05:02.705 [debug] [        dtls] {     dtls}: ssl_tls.c:3305: |3| => handshake wrapup
2021-01-25 16:06:42.877 #1   001bc50c600677b6 <log> 0:05:02.714 [debug] [        dtls] {     dtls}: ssl_tls.c:3278: |3| => handshake wrapup: final free
2021-01-25 16:06:42.877 #1   001bc50c600677b6 <log> 0:05:02.726 [debug] [        dtls] {     dtls}: ssl_tls.c:3298: |3| <= handshake wrapup: final free
2021-01-25 16:06:42.920 #1   001bc50c600677b6 <log> 0:05:02.736 [debug] [        dtls] {     dtls}: ssl_tls.c:3360: |3| <= handshake wrapup
2021-01-25 16:06:42.921 #1   001bc50c600677b6 <log> 0:05:02.745 [debug] [        dtls] {     dtls}: ssl_tls.c:5698: |2| <= handshake
2021-01-25 16:06:42.921 #1   001bc50c600677b6 <log> 0:05:02.753 [debug] [        dtls] {     dtls}: ssl_msg.c:3922: |2| => read record
2021-01-25 16:06:42.921 #1   001bc50c600677b6 <log> 0:05:02.761 [debug] [        dtls] {     dtls}: ssl_msg.c:1904: |2| => fetch input
2021-01-25 16:06:42.921 #1   001bc50c600677b6 <log> 0:05:02.770 [debug] [        dtls] {     dtls}: ssl_msg.c:1965: |2| in_left: 0, nb_want: 13
2021-01-25 16:06:42.969 #1   001bc50c600677b6 <log> 0:05:02.779 [debug] [        dtls] {     dtls}: ssl_msg.c:2006: |3| f_recv_timeout: 0 ms
2021-01-25 16:06:42.969 #1   001bc50c600677b6 <log> 0:05:02.788 [debug] [        dtls] {     dtls}: ssl_msg.c:2014: |2| ssl->f_recv(_timeout)() returned 0 (-0x0000)
2021-01-25 16:06:42.969 #1   001bc50c600677b6 <log> 0:05:02.799 [debug] [        dtls] {     dtls}: ssl_msg.c:4590: |1| mbedtls_ssl_fetch_input() returned -29312 (-0x7280)
2021-01-25 16:06:42.969 #1   001bc50c600677b6 <log> 0:05:02.811 [debug] [        dtls] {     dtls}: ssl_msg.c:3955: |1| ssl_get_next_record() returned -29312 (-0x7280)

---------------------------------------------------
0x00013cbe in setupSession (session=0x20016890) at src/communication/dtls/dtls_mbedtls.c:962
962	    ret = mbedtls_x509_crt_parse_der( &clicert, agentCertBuffer->data, agentCertBuffer->len );
(gdb) where
#0  0x00013cbe in setupSession (session=0x20016890) at src/communication/dtls/dtls_mbedtls.c:962
#1  setupSessions () at src/communication/dtls/dtls_mbedtls.c:427
#2  dtlsTask (arg=<optimized out>) at src/communication/dtls/dtls_mbedtls.c:689
#3  0x0004e274 in pvTaskIncrementMutexHeldCount () at build/3pp/freertos/FreeRTOS/Source/tasks.c:4250
Backtrace stopped: previous frame identical to this frame (corrupt stack?)



--------------------------------
RAM usage:
ipa3-wolfssl: after login:
Heap usage: 3110 (max 14323)

ipa3-mbedtls: after login:
Heap usage: 9244 (max 16393)

-------------------------------
memory leak:
- no free for mbed_AesDecryptDirect/mbed_AesEcbSetKey
- in dlms.c, paths exist for SetKey to allocate and the corresponding free operation
in the Decrypt calls not to be called.

dlms.c:3352, 3251, 3220

--------------------------------------------------------
possible leak during session renewal:

296969 2021-01-29 17:17:17.944 #2   0000000000000003 <log> 1:53:58.901 [debug] [        dtls] { schedule}: session timed out and needs to be renewed (max duration) (Session 56)
296970 2021-01-29 17:17:17.944 #2   0000000000000003 <log> 1:53:58.901 [ info] [       login] { schedule}: Renewing session.
296971 2021-01-29 17:17:17.944 #2   0000000000000003 <log> 1:53:58.901 [debug] [        dtls] { schedule}: session 56 marked for removal
296972 2021-01-29 17:17:17.944 #2   0000000000000003 <log> 1:53:58.901 [debug] [       login] { schedule}: Starting login procedure
296973 2021-01-29 17:17:17.944 #2   0000000000000003 <log> 1:53:58.902 [debug] [        dtls] { schedule}: Session 57: Created
296974 2021-01-29 17:17:17.944 #2   0000000000000003 <log> 1:53:58.902 [debug] [       login] { schedule}: Changing state: logged in -> negotiating DTLS
296975 2021-01-29 17:17:17.945 #2   0000000000000003 <log> 1:53:58.902 [debug] [  dtls/cache] { schedule}: dtlsSessionCacheLoad: Loading 128 bytes
296976 2021-01-29 17:17:17.945 #2   0000000000000003 <log> 1:53:58.902 [debug] [        dtls] {     dtls}: Session 56: Removed
296977 2021-01-29 17:17:17.945 #2   0000000000000003 <log> 1:53:58.902 [debug] [        dtls] {     dtls}: Freeing previous DTLS session.
296978 2021-01-29 17:17:17.945 #2   0000000000000003 <log> 1:53:58.902 [debug] [      fs_api] { schedule}: fsOpen (/dtls_state, , fd=11)
296979 2021-01-29 17:17:17.945 #2   0000000000000003 <log> 1:53:58.902 [debug] [      fs_api] { schedule}: fsClose (fd=11)
296980 2021-01-29 17:17:17.945 #2   0000000000000003 <log> 1:53:58.902 [ info] [  dtls/cache] { schedule}: DTLS session restored
296981 2021-01-29 17:17:17.945 #2   0000000000000003 <log> 1:53:58.902 [debug] [        dtls] {     dtls}: ssl_tls.c:6693: |2| => free

----------------------------------------------
mbedtls leftovers:
- CSR generation
- STM32 random-nuber-generator
- STM32 bootloader
- CONFIG_ENABLE_DTLS_DEBUG_LOG
- SMIP / CPA
- IPSEC testing.
- unit test dependencies on particular random sequence.
- Check new WolfSSL builds to ensure no regression.
- Check entropy-generation is working correctly.

----------------------------------------

Thread 9 "dtls" hit Breakpoint 1, myCalloc (n=1, sizeElement=24)
    at build/3pp/mbedtls/library/platform.c:78
78	        LOG_DEBUG("24 bytes allocated.(%zd,%zd)",n,sizeElement);
(gdb) where
#0  myCalloc (n=1, sizeElement=24) at build/3pp/mbedtls/library/platform.c:78
#1  0x00005555557d936f in mbedtls_calloc (nmemb=1, size=24) at build/3pp/mbedtls/library/platform.c:108
#2  0x00005555558305e3 in ssl_append_key_cert (head=0x555555b85868 <conf+136>, cert=0x61a000000308,
    key=0x61a000000570) at build/3pp/mbedtls/library/ssl_tls.c:4215
#3  0x0000555555830799 in mbedtls_ssl_conf_own_cert (conf=0x555555b857e0 <conf>,
    own_cert=0x61a000000308, pk_key=0x61a000000570) at build/3pp/mbedtls/library/ssl_tls.c:4243
#4  0x000055555561544e in mbedtlsSSL_new (ctx=0x61a0000000a0, timeoutMinMs=8000, timeoutMaxMs=127000,
    ioCtx=0x60d000010120, fSend=0x555555611ec5 <sendData>, fRecv=0x555555611afc <recvData>)
    at src/communication/dtls/mbedtls_client.c:203
#5  0x0000555555613086 in setupSession (session=0x60d000010120) at src/communication/dtls/dtls.c:659
#6  0x0000555555613250 in setupSessions () at src/communication/dtls/dtls.c:697
#7  0x000055555561457d in dtlsTask (arg=0x0) at src/communication/dtls/dtls.c:1011
#8  0x000055555578c72b in taskWrapper (arg=0x555555b84ac0 <s_dtlsTask>)
    at src/platform/osal/osal-posix/osal_posix.c:134
#9  0x00007ffff6c026db in start_thread (arg=0x7fffefaf8700) at pthread_create.c:463
#10 0x00007ffff692ba3f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95
(gdb)



Thread 9 "dtls" hit Breakpoint 1, myCalloc (n=1, sizeElement=24)
    at build/3pp/mbedtls/library/platform.c:78
78	        LOG_DEBUG("24 bytes allocated.(%zd,%zd)",n,sizeElement);
(gdb) where
#0  myCalloc (n=1, sizeElement=24) at build/3pp/mbedtls/library/platform.c:78
#1  0x00005555557d936f in mbedtls_calloc (nmemb=1, size=24) at build/3pp/mbedtls/library/platform.c:108
#2  0x000055555580c9e9 in ssl_flight_append (ssl=0x555555b858e0 <ssl>) at build/3pp/mbedtls/library/ssl_msg.c:2203
#3  0x000055555580f5de in mbedtls_ssl_write_handshake_msg (ssl=0x555555b858e0 <ssl>) at build/3pp/mbedtls/library/ssl_msg.c:2680
#4  0x000055555582e1db in mbedtls_ssl_write_finished (ssl=0x555555b858e0 <ssl>) at build/3pp/mbedtls/library/ssl_tls.c:3461
#5  0x000055555580851e in mbedtls_ssl_handshake_client_step (ssl=0x555555b858e0 <ssl>) at build/3pp/mbedtls/library/ssl_cli.c:4337
#6  0x0000555555832091 in mbedtls_ssl_handshake_step (ssl=0x555555b858e0 <ssl>) at build/3pp/mbedtls/library/ssl_tls.c:5668
#7  0x000055555583219e in mbedtls_ssl_handshake (ssl=0x555555b858e0 <ssl>) at build/3pp/mbedtls/library/ssl_tls.c:5692
#8  0x0000555555612e29 in negotiate (session=0x60d000010120) at src/communication/dtls/dtls.c:579
#9  0x000055555561362c in processIncomingPacket (session=0x60d000010120) at src/communication/dtls/dtls.c:743
#10 0x0000555555613a72 in readFromFifo () at src/communication/dtls/dtls.c:798
#11 0x0000555555614584 in dtlsTask (arg=0x0) at src/communication/dtls/dtls.c:1015
#12 0x000055555578c72b in taskWrapper (arg=0x555555b84ac0 <s_dtlsTask>) at src/platform/osal/osal-posix/osal_posix.c:134
#13 0x00007ffff6c026db in start_thread (arg=0x7fffefaf8700) at pthread_create.c:463
#14 0x00007ffff692ba3f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Thread 9 "dtls" hit Breakpoint 1, myCalloc (n=1, sizeElement=24)
    at build/3pp/mbedtls/library/platform.c:78
78	        LOG_DEBUG("24 bytes allocated.(%zd,%zd)",n,sizeElement);
(gdb) where
#0  myCalloc (n=1, sizeElement=24) at build/3pp/mbedtls/library/platform.c:78
#1  0x00005555557d936f in mbedtls_calloc (nmemb=1, size=24) at build/3pp/mbedtls/library/platform.c:108
#2  0x00005555558305e3 in ssl_append_key_cert (head=0x555555b85868 <conf+136>, cert=0x61a000000308,
    key=0x61a000000570) at build/3pp/mbedtls/library/ssl_tls.c:4215
#3  0x0000555555830799 in mbedtls_ssl_conf_own_cert (conf=0x555555b857e0 <conf>,
    own_cert=0x61a000000308, pk_key=0x61a000000570) at build/3pp/mbedtls/library/ssl_tls.c:4243
#4  0x000055555561544e in mbedtlsSSL_new (ctx=0x61a0000000a0, timeoutMinMs=8000, timeoutMaxMs=127000,
    ioCtx=0x60d000010d50, fSend=0x555555611ec5 <sendData>, fRecv=0x555555611afc <recvData>)
    at src/communication/dtls/mbedtls_client.c:203
#5  0x0000555555613086 in setupSession (session=0x60d000010d50) at src/communication/dtls/dtls.c:659
#6  0x0000555555613250 in setupSessions () at src/communication/dtls/dtls.c:697
#7  0x000055555561457d in dtlsTask (arg=0x0) at src/communication/dtls/dtls.c:1011
#8  0x000055555578c72b in taskWrapper (arg=0x555555b84ac0 <s_dtlsTask>)
    at src/platform/osal/osal-posix/osal_posix.c:134
#9  0x00007ffff6c026db in start_thread (arg=0x7fffefaf8700) at pthread_create.c:463
#10 0x00007ffff692ba3f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

---------------------------------------------

Thread 9 "dtls" hit Breakpoint 2, myCalloc (n=1, sizeElement=32)
    at build/3pp/mbedtls/library/platform.c:78
78	        LOG_DEBUG("32 bytes allocated.(%zd,%zd)",n,sizeElement);
(gdb) where
#0  myCalloc (n=1, sizeElement=32) at build/3pp/mbedtls/library/platform.c:78
#1  0x00005555557d9399 in mbedtls_calloc (nmemb=1, size=32) at build/3pp/mbedtls/library/platform.c:108
#2  0x0000555555831e3b in ssl_session_load (session=0x555555b85ae0 <savedSession>,
    omit_header=0 '\000', buf=0x555555b85b80 <sessionCache> "\002\030", len=128)
    at build/3pp/mbedtls/library/ssl_tls.c:5566
#3  0x0000555555831fd6 in mbedtls_ssl_session_load (session=0x555555b85ae0 <savedSession>,
    buf=0x555555b85b80 <sessionCache> "\002\030", len=128) at build/3pp/mbedtls/library/ssl_tls.c:5648
#4  0x00005555556155d2 in mbedtlsSSL_new (ctx=0x61a0000000a0, timeoutMinMs=8000, timeoutMaxMs=127000,
    ioCtx=0x60d000012ea0, fSend=0x555555611ec5 <sendData>, fRecv=0x555555611afc <recvData>)
    at src/communication/dtls/mbedtls_client.c:236
#5  0x0000555555613086 in setupSession (session=0x60d000012ea0) at src/communication/dtls/dtls.c:659
#6  0x0000555555613250 in setupSessions () at src/communication/dtls/dtls.c:697
#7  0x000055555561458c in dtlsTask (arg=0x0) at src/communication/dtls/dtls.c:1017
#8  0x000055555578c755 in taskWrapper (arg=0x555555b84ac0 <s_dtlsTask>)
    at src/platform/osal/osal-posix/osal_posix.c:134
#9  0x00007ffff6c026db in start_thread (arg=0x7fffefaf8700) at pthread_create.c:463
#10 0x00007ffff692ba3f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95




Thread 9 "dtls" hit Breakpoint 2, myCalloc (n=1, sizeElement=32) at build/3pp/mbedtls/library/platform.c:78
78	        LOG_DEBUG("32 bytes allocated.(%zd,%zd)",n,sizeElement);
(gdb) where
#0  myCalloc (n=1, sizeElement=32) at build/3pp/mbedtls/library/platform.c:78
#1  0x00005555557d9399 in mbedtls_calloc (nmemb=1, size=32) at build/3pp/mbedtls/library/platform.c:108
#2  0x00005555558277ca in mbedtls_ssl_session_copy (dst=0x610000012364, src=0x555555b85ae0 <savedSession>) at build/3pp/mbedtls/library/ssl_tls.c:215
#3  0x0000555555830569 in mbedtls_ssl_set_session (ssl=0x555555b858e0 <ssl>, session=0x555555b85ae0 <savedSession>) at build/3pp/mbedtls/library/ssl_tls.c:4169
#4  0x0000555555615612 in mbedtlsSSL_new (ctx=0x61a0000000a0, timeoutMinMs=8000, timeoutMaxMs=127000, ioCtx=0x60d000012ea0, fSend=0x555555611ec5 <sendData>, fRecv=0x555555611afc <recvData>)
    at src/communication/dtls/mbedtls_client.c:238
#5  0x0000555555613086 in setupSession (session=0x60d000012ea0) at src/communication/dtls/dtls.c:659
#6  0x0000555555613250 in setupSessions () at src/communication/dtls/dtls.c:697
#7  0x000055555561458c in dtlsTask (arg=0x0) at src/communication/dtls/dtls.c:1017
#8  0x000055555578c755 in taskWrapper (arg=0x555555b84ac0 <s_dtlsTask>) at src/platform/osal/osal-posix/osal_posix.c:134
#9  0x00007ffff6c026db in start_thread (arg=0x7fffefaf8700) at pthread_create.c:463
#10 0x00007ffff692ba3f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95



Thread 9 "dtls" hit Breakpoint 2, myCalloc (n=1, sizeElement=32)
    at build/3pp/mbedtls/library/platform.c:78
78	        LOG_DEBUG("32 bytes allocated.(%zd,%zd)",n,sizeElement);
(gdb) where
#0  myCalloc (n=1, sizeElement=32) at build/3pp/mbedtls/library/platform.c:78
#1  0x00005555557d9399 in mbedtls_calloc (nmemb=1, size=32) at build/3pp/mbedtls/library/platform.c:108
#2  0x000055555580c990 in ssl_flight_append (ssl=0x555555b858e0 <ssl>)
    at build/3pp/mbedtls/library/ssl_msg.c:2196
#3  0x000055555580f608 in mbedtls_ssl_write_handshake_msg (ssl=0x555555b858e0 <ssl>)
    at build/3pp/mbedtls/library/ssl_msg.c:2680
#4  0x0000555555800ada in ssl_write_client_hello (ssl=0x555555b858e0 <ssl>)
    at build/3pp/mbedtls/library/ssl_cli.c:1399
#5  0x0000555555808480 in mbedtls_ssl_handshake_client_step (ssl=0x555555b858e0 <ssl>)
    at build/3pp/mbedtls/library/ssl_cli.c:4283
#6  0x00005555558320bb in mbedtls_ssl_handshake_step (ssl=0x555555b858e0 <ssl>)
    at build/3pp/mbedtls/library/ssl_tls.c:5668
#7  0x00005555558321c8 in mbedtls_ssl_handshake (ssl=0x555555b858e0 <ssl>)
    at build/3pp/mbedtls/library/ssl_tls.c:5692
#8  0x0000555555612e29 in negotiate (session=0x60d000012ea0) at src/communication/dtls/dtls.c:579
#9  0x00005555556130e6 in setupSession (session=0x60d000012ea0) at src/communication/dtls/dtls.c:673
#10 0x0000555555613250 in setupSessions () at src/communication/dtls/dtls.c:697
#11 0x000055555561458c in dtlsTask (arg=0x0) at src/communication/dtls/dtls.c:1017
---Type <return> to continue, or q <return> to quit---
#12 0x000055555578c755 in taskWrapper (arg=0x555555b84ac0 <s_dtlsTask>) at src/platform/osal/osal-posix/osal_posix.c:134
#13 0x00007ffff6c026db in start_thread (arg=0x7fffefaf8700) at pthread_create.c:463
#14 0x00007ffff692ba3f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95



void mbedtlsSSL_free(mbedtls_ssl_context* ssl)
{
    mbedtls_ssl_session_free( &savedSession );
    mbedtls_ssl_config_free( &conf );
    mbedtls_ssl_free(ssl);
}


-------------------------------------------------------------------

Breakpoint 2, myCalloc (n=8, sizeElement=4) at build/3pp/mbedtls/library/platform.c:76
76	    uint32_t    size    = n * sizeElement;
(gdb) where
#0  myCalloc (n=8, sizeElement=4) at build/3pp/mbedtls/library/platform.c:76
#1  0x0003fb7c in mbedtls_mpi_grow (nblimbs=8, X=0x200028c4 <s_dtlsTaskStack+6508>)
    at build/3pp/mbedtls/library/bignum.c:125
#2  mbedtls_mpi_grow (X=0x200028c4 <s_dtlsTaskStack+6508>, nblimbs=8)
    at build/3pp/mbedtls/library/bignum.c:115
#3  0x0003fc4a in mbedtls_mpi_copy (X=X@entry=0x200028c4 <s_dtlsTaskStack+6508>,
    Y=Y@entry=0x2000291c <s_dtlsTaskStack+6596>) at build/3pp/mbedtls/library/bignum.c:212
#4  0x00040272 in mbedtls_mpi_sub_abs (X=X@entry=0x2000291c <s_dtlsTaskStack+6596>,
    A=A@entry=0x20002c08 <s_dtlsTaskStack+7344>, B=B@entry=0x2000291c <s_dtlsTaskStack+6596>)
    at build/3pp/mbedtls/library/bignum.c:1387
#5  0x00040324 in mbedtls_mpi_add_mpi (X=X@entry=0x2000291c <s_dtlsTaskStack+6596>,
    A=A@entry=0x2000291c <s_dtlsTaskStack+6596>, B=B@entry=0x20002c08 <s_dtlsTaskStack+7344>)
    at build/3pp/mbedtls/library/bignum.c:1445
#6  0x00042522 in ecp_modp (grp=0x20002c04 <s_dtlsTaskStack+7340>, N=0x2000291c <s_dtlsTaskStack+6596>)
    at build/3pp/mbedtls/library/ecp.c:1187
#7  mbedtls_mpi_mul_mod (A=<optimized out>, B=<optimized out>, X=0x2000291c <s_dtlsTaskStack+6596>,
    grp=0x20002c04 <s_dtlsTaskStack+7340>) at build/3pp/mbedtls/library/ecp.c:1230
--Type <RET> for more, q to quit, c to continue without paging--
#8  mbedtls_mpi_mul_mod (grp=0x20002c04 <s_dtlsTaskStack+7340>, X=0x2000291c <s_dtlsTaskStack+6596>, A=<optimized out>, B=<optimized out>) at build/3pp/mbedtls/library/ecp.c:1223
#9  0x000429ae in ecp_double_jac (grp=grp@entry=0x20002c04 <s_dtlsTaskStack+7340>, R=0x20018d54, P=0x20018d54) at build/3pp/mbedtls/library/ecp.c:1521
#10 0x0004352a in ecp_precompute_comb (rs_ctx=<optimized out>, d=52, w=<optimized out>, P=<optimized out>, T=0x20018cc4, grp=0x20002c04 <s_dtlsTaskStack+7340>) at build/3pp/mbedtls/library/ecp.c:1892
#11 ecp_mul_comb (rs_ctx=<optimized out>, p_rng=0x200029b0 <s_dtlsTaskStack+6744>, f_rng=0x423c3 <ecp_drbg_random>, P=<optimized out>, m=0x20002b3c <s_dtlsTaskStack+7140>, R=0x20002ad4 <s_dtlsTaskStack+7036>,
    grp=0x20002c04 <s_dtlsTaskStack+7340>) at build/3pp/mbedtls/library/ecp.c:2338
#12 mbedtls_ecp_mul_restartable (rs_ctx=0x0, p_rng=<optimized out>, f_rng=<optimized out>, P=<optimized out>, m=0x20002b3c <s_dtlsTaskStack+7140>, R=0x20002ad4 <s_dtlsTaskStack+7036>,
    grp=0x20002c04 <s_dtlsTaskStack+7340>) at build/3pp/mbedtls/library/ecp.c:2684
#13 mbedtls_ecp_mul_restartable (grp=0x20002c04 <s_dtlsTaskStack+7340>, R=0x20002ad4 <s_dtlsTaskStack+7036>, m=0x20002b3c <s_dtlsTaskStack+7140>, P=<optimized out>, f_rng=<optimized out>,
    p_rng=<optimized out>, rs_ctx=0x0) at build/3pp/mbedtls/library/ecp.c:2637
#14 0x00043816 in mbedtls_ecp_mul_shortcuts (grp=0x20002c04 <s_dtlsTaskStack+7340>, R=0x20002ad4 <s_dtlsTaskStack+7036>, m=0x20002b3c <s_dtlsTaskStack+7140>, P=0x20002c2c <s_dtlsTaskStack+7380>, rs_ctx=0x0)
    at build/3pp/mbedtls/library/ecp.c:2791
#15 0x00043848 in mbedtls_ecp_muladd_restartable (grp=grp@entry=0x20002c04 <s_dtlsTaskStack+7340>, R=R@entry=0x20002b54 <s_dtlsTaskStack+7164>, m=m@entry=0x20002b3c <s_dtlsTaskStack+7140>,
    P=P@entry=0x20002c2c <s_dtlsTaskStack+7380>, n=n@entry=0x20002b48 <s_dtlsTaskStack+7152>, Q=Q@entry=0x20002c8c <s_dtlsTaskStack+7476>, rs_ctx=rs_ctx@entry=0x0) at build/3pp/mbedtls/library/ecp.c:2847
#16 0x000421a8 in ecdsa_verify_restartable (grp=grp@entry=0x20002c04 <s_dtlsTaskStack+7340>,
    buf=buf@entry=0x20002d14 <s_dtlsTaskStack+7612> "6\"\265\253\373\336Z\330\367lo\341d<\252\262E\332X\303\035]ԯ4uw\357\020\020\244X\\\213\001 ", blen=blen@entry=32,
    Q=Q@entry=0x20002c8c <s_dtlsTaskStack+7476>, r=r@entry=0x20002ba0 <s_dtlsTaskStack+7240>, s=s@entry=0x20002bac <s_dtlsTaskStack+7252>, rs_ctx=0x0) at build/3pp/mbedtls/library/ecdsa.c:663
#17 0x0004234c in mbedtls_ecdsa_read_signature_restartable (ctx=ctx@entry=0x20002c04 <s_dtlsTaskStack+7340>,
    hash=hash@entry=0x20002d14 <s_dtlsTaskStack+7612> "6\"\265\253\373\336Z\330\367lo\341d<\252\262E\332X\303\035]ԯ4uw\357\020\020\244X\\\213\001 ", hlen=hlen@entry=32,
    sig=sig@entry=0x20016d82 "0E\002 L~\222\273\063\025<V!\273\243\223\207\252u\341\371\270J4Ek\211\345U\340\320M\257zy\n\002!", slen=slen@entry=71, rs_ctx=rs_ctx@entry=0x0)
    at build/3pp/mbedtls/library/ecdsa.c:881
#18 0x0004237a in mbedtls_ecdsa_read_signature (ctx=ctx@entry=0x20002c04 <s_dtlsTaskStack+7340>,
    hash=hash@entry=0x20002d14 <s_dtlsTaskStack+7612> "6\"\265\253\373\336Z\330\367lo\341d<\252\262E\332X\303\035]ԯ4uw\357\020\020\244X\\\213\001 ", hlen=hlen@entry=32,
    sig=sig@entry=0x20016d82 "0E\002 L~\222\273\063\025<V!\273\243\223\207\252u\341\371\270J4Ek\211\345U\340\320M\257zy\n\002!", slen=slen@entry=71) at build/3pp/mbedtls/library/ecdsa.c:832
#19 0x00045ff4 in ecdsa_verify_wrap (ctx=ctx@entry=0x20002c04 <s_dtlsTaskStack+7340>, md_alg=md_alg@entry=MBEDTLS_MD_SHA256,
    hash=hash@entry=0x20002d14 <s_dtlsTaskStack+7612> "6\"\265\253\373\336Z\330\367lo\341d<\252\262E\332X\303\035]ԯ4uw\357\020\020\244X\\\213\001 ", hash_len=hash_len@entry=32,
    sig=sig@entry=0x20016d82 "0E\002 L~\222\273\063\025<V!\273\243\223\207\252u\341\371\270J4Ek\211\345U\340\320M\257zy\n\002!", sig_len=sig_len@entry=71) at build/3pp/mbedtls/library/pk_wrap.c:633
#20 0x00046036 in eckey_verify_wrap (ctx=<optimized out>, md_alg=<optimized out>,
    hash=0x20002d14 <s_dtlsTaskStack+7612> "6\"\265\253\373\336Z\330\367lo\341d<\252\262E\332X\303\035]ԯ4uw\357\020\020\244X\\\213\001 ", hash_len=32,
    sig=0x20016d82 "0E\002 L~\222\273\063\025<V!\273\243\223\207\252u\341\371\270J4Ek\211\345U\340\320M\257zy\n\002!", sig_len=71) at build/3pp/mbedtls/library/pk_wrap.c:252
#21 0x00045ba2 in mbedtls_pk_verify (ctx=ctx@entry=0x200159b4, md_alg=<optimized out>, hash=<optimized out>, hash_len=<optimized out>,
    sig=0x20016d82 "0E\002 L~\222\273\063\025<V!\273\243\223\207\252u\341\371\270J4Ek\211\345U\340\320M\257zy\n\002!", sig_len=71) at build/3pp/mbedtls/library/pk.c:326
#22 0x00045d20 in mbedtls_pk_verify_ext (type=<optimized out>, options=<optimized out>, ctx=ctx@entry=0x200159b4, md_alg=<optimized out>, hash=<optimized out>,
    hash@entry=0x20002d14 <s_dtlsTaskStack+7612> "6\"\265\253\373\336Z\330\367lo\341d<\252\262E\332X\303\035]ԯ4uw\357\020\020\244X\\\213\001 ", hash_len=<optimized out>, hash_len@entry=32,
    sig=0x20016d82 "0E\002 L~\222\273\063\025<V!\273\243\223\207\252u\341\371\270J4Ek\211\345U\340\320M\257zy\n\002!", sig_len=71) at build/3pp/mbedtls/library/pk.c:390
#23 0x0004a84e in x509_crt_check_signature (rs_ctx=<optimized out>, parent=0x200158e8, child=0x20018b5c) at build/3pp/mbedtls/library/x509_crt.c:2474
#24 x509_crt_find_parent_in (rs_ctx=<optimized out>, self_cnt=<optimized out>, path_cnt=<optimized out>, top=<optimized out>, r_signature_is_good=<optimized out>, r_parent=<optimized out>,
    candidates=<optimized out>, child=<optimized out>) at build/3pp/mbedtls/library/x509_crt.c:2612
#25 x509_crt_find_parent (rs_ctx=<optimized out>, self_cnt=<optimized out>, path_cnt=<optimized out>, signature_is_good=<optimized out>, parent_is_trusted=<optimized out>, parent=<optimized out>,
    trust_ca=<optimized out>, child=<optimized out>) at build/3pp/mbedtls/library/x509_crt.c:2709
#26 x509_crt_verify_chain (ca_crl=<optimized out>, f_ca_cb=<optimized out>, p_ca_cb=<optimized out>, rs_ctx=<optimized out>, ver_chain=0x20002d34 <s_dtlsTaskStack+7644>,
    profile=0x6d964 <mbedtls_x509_crt_profile_default>, trust_ca=0x200158e8, crt=0x20018b5c) at build/3pp/mbedtls/library/x509_crt.c:2919
#27 x509_crt_verify_restartable_ca_cb (crt=crt@entry=0x20018b5c, trust_ca=trust_ca@entry=0x200158e8, profile=0x6d964 <mbedtls_x509_crt_profile_default>, cn=<optimized out>, flags=0x2001647c, f_vrfy=0x0,
    p_vrfy=0x0, rs_ctx=<optimized out>, p_ca_cb=<optimized out>, f_ca_cb=<optimized out>, ca_crl=<optimized out>) at build/3pp/mbedtls/library/x509_crt.c:3150
#28 0x0004b274 in mbedtls_x509_crt_verify_restartable (crt=crt@entry=0x20018b5c, trust_ca=trust_ca@entry=0x200158e8, ca_crl=<optimized out>, profile=<optimized out>, cn=<optimized out>, flags=<optimized out>,
    f_vrfy=<optimized out>, p_vrfy=0x0, rs_ctx=rs_ctx@entry=0x0) at build/3pp/mbedtls/library/x509_crt.c:3257
#29 0x00054910 in ssl_parse_certificate_verify (rs_ctx=0x0, chain=0x20018b5c, authmode=<optimized out>, ssl=0x20003bd0 <ssl>) at build/3pp/mbedtls/library/ssl_tls.c:2542
#30 mbedtls_ssl_parse_certificate (ssl=ssl@entry=0x20003bd0 <ssl>) at build/3pp/mbedtls/library/ssl_tls.c:2795
#31 0x0004d3ac in mbedtls_ssl_handshake_client_step (ssl=0x20003bd0 <ssl>) at build/3pp/mbedtls/library/ssl_cli.c:4298
#32 0x00053ba4 in mbedtls_ssl_handshake_step (ssl=ssl@entry=0x20003bd0 <ssl>) at build/3pp/mbedtls/library/ssl_tls.c:5668
#33 0x00053be2 in mbedtls_ssl_handshake (ssl=0x20003bd0 <ssl>) at build/3pp/mbedtls/library/ssl_tls.c:5692
#34 mbedtls_ssl_handshake (ssl=0x20003bd0 <ssl>) at build/3pp/mbedtls/library/ssl_tls.c:5681
#35 0x0001372e in negotiate (session=0x20017888) at src/communication/dtls/dtls.c:582
#36 0x00013bea in processIncomingPacket (session=0x20017888) at src/communication/dtls/dtls.c:746
#37 readFromFifo () at src/communication/dtls/dtls.c:803
#38 dtlsTask (arg=<optimized out>) at src/communication/dtls/dtls.c:1020
#39 0x0003d28c in pvTaskIncrementMutexHeldCount () at build/3pp/freertos/FreeRTOS/Source/tasks.c:4250
Backtrace stopped: previous frame identical to this frame (corrupt stack?)




(gdb) where
#0  myCalloc (n=9, sizeElement=4) at build/3pp/mbedtls/library/platform.c:76
#1  0x0003fb7c in mbedtls_mpi_grow (nblimbs=9, X=0x20002c50 <s_dtlsTaskStack+7416>) at build/3pp/mbedtls/library/bignum.c:125
#2  mbedtls_mpi_grow (X=0x20002c50 <s_dtlsTaskStack+7416>, nblimbs=9) at build/3pp/mbedtls/library/bignum.c:115
#3  0x00040428 in mbedtls_mpi_mul_mpi (X=X@entry=0x20002c50 <s_dtlsTaskStack+7416>, A=A@entry=0x20002c5c <s_dtlsTaskStack+7428>, B=B@entry=0x20002c3c <s_dtlsTaskStack+7396>)
    at build/3pp/mbedtls/library/bignum.c:1628
#4  0x000404ae in mbedtls_mpi_mul_int (X=X@entry=0x20002c50 <s_dtlsTaskStack+7416>, A=A@entry=0x20002c5c <s_dtlsTaskStack+7428>, b=b@entry=3) at build/3pp/mbedtls/library/bignum.c:1658
#5  0x00042962 in ecp_double_jac (grp=grp@entry=0x2001608c, R=0x20017b34, P=0x20017b34) at build/3pp/mbedtls/library/ecp.c:1499
#6  0x0004352a in ecp_precompute_comb (rs_ctx=<optimized out>, d=52, w=<optimized out>, P=0x28, T=0x20017aa4, grp=0x2001608c) at build/3pp/mbedtls/library/ecp.c:1892
#7  ecp_mul_comb (rs_ctx=<optimized out>, p_rng=0x2001472c <ctr_drbg>, f_rng=0x41bd9 <mbedtls_ctr_drbg_random>, P=0x28, m=0x20016108, R=0x20016114, grp=0x2001608c) at build/3pp/mbedtls/library/ecp.c:2338
#8  mbedtls_ecp_mul_restartable (rs_ctx=0x0, p_rng=<optimized out>, f_rng=<optimized out>, P=0x28, m=0x20016108, R=0x20016114, grp=0x2001608c) at build/3pp/mbedtls/library/ecp.c:2684
#9  mbedtls_ecp_mul_restartable (grp=grp@entry=0x2001608c, R=R@entry=0x20016114, m=m@entry=0x20016108, P=P@entry=0x200160b4, f_rng=<optimized out>, f_rng@entry=0x41bd9 <mbedtls_ctr_drbg_random>,
    p_rng=<optimized out>, p_rng@entry=0x2001472c <ctr_drbg>, rs_ctx=0x0) at build/3pp/mbedtls/library/ecp.c:2637
#10 0x00041c14 in ecdh_gen_public_restartable (rs_ctx=0x0, p_rng=0x2001472c <ctr_drbg>, f_rng=0x41bd9 <mbedtls_ctr_drbg_random>, Q=0x20016114, d=0x20016108, grp=0x2001608c)
    at build/3pp/mbedtls/library/ecdh.c:86
#11 mbedtls_ecdh_gen_public (grp=grp@entry=0x2001608c, d=d@entry=0x20016108, Q=Q@entry=0x20016114, f_rng=f_rng@entry=0x41bd9 <mbedtls_ctr_drbg_random>, p_rng=p_rng@entry=0x2001472c <ctr_drbg>)
    at build/3pp/mbedtls/library/ecdh.c:104
#12 0x00041df6 in ecdh_make_public_internal (restart_enabled=0, p_rng=0x2001472c <ctr_drbg>, f_rng=0x41bd9 <mbedtls_ctr_drbg_random>, blen=1000, buf=0x20016bed "", point_format=0,
    olen=0x20002e68 <s_dtlsTaskStack+7952>, ctx=0x2001608c) at build/3pp/mbedtls/library/ecdh.c:548
#13 mbedtls_ecdh_make_public (ctx=0x20016088, olen=olen@entry=0x20002e68 <s_dtlsTaskStack+7952>, buf=0x20016bed "", blen=blen@entry=1000, f_rng=0x41bd9 <mbedtls_ctr_drbg_random>, p_rng=0x2001472c <ctr_drbg>)
    at build/3pp/mbedtls/library/ecdh.c:587
#14 0x0004da64 in ssl_write_client_key_exchange (ssl=0x20003bd0 <ssl>) at build/3pp/mbedtls/library/ssl_cli.c:3668
#15 mbedtls_ssl_handshake_client_step (ssl=0x20003bd0 <ssl>) at build/3pp/mbedtls/library/ssl_cli.c:4325
#16 0x00053ba4 in mbedtls_ssl_handshake_step (ssl=ssl@entry=0x20003bd0 <ssl>) at build/3pp/mbedtls/library/ssl_tls.c:5668
#17 0x00053be2 in mbedtls_ssl_handshake (ssl=0x20003bd0 <ssl>) at build/3pp/mbedtls/library/ssl_tls.c:5692
#18 mbedtls_ssl_handshake (ssl=0x20003bd0 <ssl>) at build/3pp/mbedtls/library/ssl_tls.c:5681
#19 0x0001372e in negotiate (session=0x20016458) at src/communication/dtls/dtls.c:582
#20 0x00013bea in processIncomingPacket (session=0x20016458) at src/communication/dtls/dtls.c:746
#21 readFromFifo () at src/communication/dtls/dtls.c:803
#22 dtlsTask (arg=<optimized out>) at src/communication/dtls/dtls.c:1020
#23 0x0003d28c in pvTaskIncrementMutexHeldCount () at build/3pp/freertos/FreeRTOS/Source/tasks.c:4250
Backtrace stopped: previous frame identical to this frame (corrupt stack?)
(gdb)


-------------------------------------------------
memory leak in fs_crypt.

- fscryptClose needs to perform an mbedtls_free() operation in fscryptClose().
- SOmething like: aesCtrCleanUp(&fd.security->aes);

(gdb) p t0  OFFSET_PREAMBLE -4
(gdb) p t1  LEN_PREFIX = 8
(gdb) p t2  ALIGN_SIZE = 8
(gdb) p t3  LEN_PREFIXDATA = 4
(gdb)

-------------------------------------------


Breakpoint 3, myCalloc (n=8, sizeElement=4) at build/3pp/mbedtls/library/platform.c:78
78	        LOG_DEBUG("32 bytes allocated.(%zd,%zd)",n,sizeElement);
(gdb) where
#0  myCalloc (n=8, sizeElement=4) at build/3pp/mbedtls/library/platform.c:78
#1  0x0003fd5c in mbedtls_mpi_grow (nblimbs=8, X=0x200028c4 <s_dtlsTaskStack+6508>) at build/3pp/mbedtls/library/bignum.c:125
#2  mbedtls_mpi_grow (X=0x200028c4 <s_dtlsTaskStack+6508>, nblimbs=8) at build/3pp/mbedtls/library/bignum.c:115
#3  0x0003fe2a in mbedtls_mpi_copy (X=X@entry=0x200028c4 <s_dtlsTaskStack+6508>, Y=Y@entry=0x20002934 <s_dtlsTaskStack+6620>) at build/3pp/mbedtls/library/bignum.c:212
#4  0x00040452 in mbedtls_mpi_sub_abs (X=X@entry=0x20002934 <s_dtlsTaskStack+6620>, A=A@entry=0x20002c08 <s_dtlsTaskStack+7344>, B=B@entry=0x20002934 <s_dtlsTaskStack+6620>)
    at build/3pp/mbedtls/library/bignum.c:1387
#5  0x00040504 in mbedtls_mpi_add_mpi (X=X@entry=0x20002934 <s_dtlsTaskStack+6620>, A=A@entry=0x20002934 <s_dtlsTaskStack+6620>, B=B@entry=0x20002c08 <s_dtlsTaskStack+7344>)
    at build/3pp/mbedtls/library/bignum.c:1445
#6  0x00042666 in mbedtls_mpi_sub_mod (A=<optimized out>, B=<optimized out>, X=<optimized out>, grp=<optimized out>) at build/3pp/mbedtls/library/ecp.c:1250
#7  mbedtls_mpi_sub_mod (grp=<optimized out>, X=0x20002934 <s_dtlsTaskStack+6620>, A=<optimized out>, B=<optimized out>) at build/3pp/mbedtls/library/ecp.c:1243
#8  0x00042b1c in ecp_double_jac (grp=grp@entry=0x20002c04 <s_dtlsTaskStack+7340>, R=0x20018fd4, P=0x20018fd4) at build/3pp/mbedtls/library/ecp.c:1497
#9  0x0004370a in ecp_precompute_comb (rs_ctx=<optimized out>, d=64, w=<optimized out>, P=<optimized out>, T=0x20018f8c, grp=0x20002c04 <s_dtlsTaskStack+7340>) at build/3pp/mbedtls/library/ecp.c:1892
#10 ecp_mul_comb (rs_ctx=<optimized out>, p_rng=0x200029b0 <s_dtlsTaskStack+6744>, f_rng=0x425a3 <ecp_drbg_random>, P=<optimized out>, m=0x20002b48 <s_dtlsTaskStack+7152>, R=0x20002b54 <s_dtlsTaskStack+7164>,
    grp=0x20002c04 <s_dtlsTaskStack+7340>) at build/3pp/mbedtls/library/ecp.c:2338
#11 mbedtls_ecp_mul_restartable (rs_ctx=0x0, p_rng=<optimized out>, f_rng=<optimized out>, P=<optimized out>, m=0x20002b48 <s_dtlsTaskStack+7152>, R=0x20002b54 <s_dtlsTaskStack+7164>,
    grp=0x20002c04 <s_dtlsTaskStack+7340>) at build/3pp/mbedtls/library/ecp.c:2684
#12 mbedtls_ecp_mul_restartable (grp=0x20002c04 <s_dtlsTaskStack+7340>, R=0x20002b54 <s_dtlsTaskStack+7164>, m=0x20002b48 <s_dtlsTaskStack+7152>, P=<optimized out>, f_rng=<optimized out>,
    p_rng=<optimized out>, rs_ctx=0x0) at build/3pp/mbedtls/library/ecp.c:2637
#13 0x000439f6 in mbedtls_ecp_mul_shortcuts (grp=0x20002c04 <s_dtlsTaskStack+7340>, R=0x20002b54 <s_dtlsTaskStack+7164>, m=0x20002b48 <s_dtlsTaskStack+7152>, P=0x20002c8c <s_dtlsTaskStack+7476>, rs_ctx=0x0)
    at build/3pp/mbedtls/library/ecp.c:2791
#14 0x00043a3a in mbedtls_ecp_muladd_restartable (grp=grp@entry=0x20002c04 <s_dtlsTaskStack+7340>, R=R@entry=0x20002b54 <s_dtlsTaskStack+7164>, m=m@entry=0x20002b3c <s_dtlsTaskStack+7140>,
    P=P@entry=0x20002c2c <s_dtlsTaskStack+7380>, n=n@entry=0x20002b48 <s_dtlsTaskStack+7152>, Q=Q@entry=0x20002c8c <s_dtlsTaskStack+7476>, rs_ctx=rs_ctx@entry=0x0) at build/3pp/mbedtls/library/ecp.c:2854
#15 0x00042388 in ecdsa_verify_restartable (grp=grp@entry=0x20002c04 <s_dtlsTaskStack+7340>,
    buf=buf@entry=0x20002d14 <s_dtlsTaskStack+7612> "6\"\265\253\373\336Z\330\367lo\341d<\252\262E\332X\303\035]ԯ4uw\357\020\020\244X\314u\001 ", blen=blen@entry=32,
    Q=Q@entry=0x20002c8c <s_dtlsTaskStack+7476>, r=r@entry=0x20002ba0 <s_dtlsTaskStack+7240>, s=s@entry=0x20002bac <s_dtlsTaskStack+7252>, rs_ctx=0x0) at build/3pp/mbedtls/library/ecdsa.c:663
#16 0x0004252c in mbedtls_ecdsa_read_signature_restartable (ctx=ctx@entry=0x20002c04 <s_dtlsTaskStack+7340>,
    hash=hash@entry=0x20002d14 <s_dtlsTaskStack+7612> "6\"\265\253\373\336Z\330\367lo\341d<\252\262E\332X\303\035]ԯ4uw\357\020\020\244X\314u\001 ", hlen=hlen@entry=32,
    sig=sig@entry=0x20016762 "0E\002 L~\222\273\063\025<V!\273\243\223\207\252u\341\371\270J4Ek\211\345U\340\320M\257zy\n\002!", slen=slen@entry=71, rs_ctx=rs_ctx@entry=0x0)
    at build/3pp/mbedtls/library/ecdsa.c:881
#17 0x0004255a in mbedtls_ecdsa_read_signature (ctx=ctx@entry=0x20002c04 <s_dtlsTaskStack+7340>,
    hash=hash@entry=0x20002d14 <s_dtlsTaskStack+7612> "6\"\265\253\373\336Z\330\367lo\341d<\252\262E\332X\303\035]ԯ4uw\357\020\020\244X\314u\001 ", hlen=hlen@entry=32,
    sig=sig@entry=0x20016762 "0E\002 L~\222\273\063\025<V!\273\243\223\207\252u\341\371\270J4Ek\211\345U\340\320M\257zy\n\002!", slen=slen@entry=71) at build/3pp/mbedtls/library/ecdsa.c:832
#18 0x000461d4 in ecdsa_verify_wrap (ctx=ctx@entry=0x20002c04 <s_dtlsTaskStack+7340>, md_alg=md_alg@entry=MBEDTLS_MD_SHA256,
    hash=hash@entry=0x20002d14 <s_dtlsTaskStack+7612> "6\"\265\253\373\336Z\330\367lo\341d<\252\262E\332X\303\035]ԯ4uw\357\020\020\244X\314u\001 ", hash_len=hash_len@entry=32,
    sig=sig@entry=0x20016762 "0E\002 L~\222\273\063\025<V!\273\243\223\207\252u\341\371\270J4Ek\211\345U\340\320M\257zy\n\002!", sig_len=sig_len@entry=71) at build/3pp/mbedtls/library/pk_wrap.c:633
#19 0x00046216 in eckey_verify_wrap (ctx=<optimized out>, md_alg=<optimized out>,
    hash=0x20002d14 <s_dtlsTaskStack+7612> "6\"\265\253\373\336Z\330\367lo\341d<\252\262E\332X\303\035]ԯ4uw\357\020\020\244X\314u\001 ", hash_len=32,
    sig=0x20016762 "0E\002 L~\222\273\063\025<V!\273\243\223\207\252u\341\371\270J4Ek\211\345U\340\320M\257zy\n\002!", sig_len=71) at build/3pp/mbedtls/library/pk_wrap.c:252
#20 0x00045d82 in mbedtls_pk_verify (ctx=ctx@entry=0x200159b4, md_alg=<optimized out>, hash=<optimized out>, hash_len=<optimized out>,
    sig=0x20016762 "0E\002 L~\222\273\063\025<V!\273\243\223\207\252u\341\371\270J4Ek\211\345U\340\320M\257zy\n\002!", sig_len=71) at build/3pp/mbedtls/library/pk.c:326
#21 0x00045f00 in mbedtls_pk_verify_ext (type=<optimized out>, options=<optimized out>, ctx=ctx@entry=0x200159b4, md_alg=<optimized out>, hash=<optimized out>,
    hash@entry=0x20002d14 <s_dtlsTaskStack+7612> "6\"\265\253\373\336Z\330\367lo\341d<\252\262E\332X\303\035]ԯ4uw\357\020\020\244X\314u\001 ", hash_len=<optimized out>, hash_len@entry=32,
    sig=0x20016762 "0E\002 L~\222\273\063\025<V!\273\243\223\207\252u\341\371\270J4Ek\211\345U\340\320M\257zy\n\002!", sig_len=71) at build/3pp/mbedtls/library/pk.c:390
#22 0x0004aa2e in x509_crt_check_signature (rs_ctx=<optimized out>, parent=0x200158e8, child=0x200175cc) at build/3pp/mbedtls/library/x509_crt.c:2474
#23 x509_crt_find_parent_in (rs_ctx=<optimized out>, self_cnt=<optimized out>, path_cnt=<optimized out>, top=<optimized out>, r_signature_is_good=<optimized out>, r_parent=<optimized out>,
    candidates=<optimized out>, child=<optimized out>) at build/3pp/mbedtls/library/x509_crt.c:2612
#24 x509_crt_find_parent (rs_ctx=<optimized out>, self_cnt=<optimized out>, path_cnt=<optimized out>, signature_is_good=<optimized out>, parent_is_trusted=<optimized out>, parent=<optimized out>,
    trust_ca=<optimized out>, child=<optimized out>) at build/3pp/mbedtls/library/x509_crt.c:2709
#25 x509_crt_verify_chain (ca_crl=<optimized out>, f_ca_cb=<optimized out>, p_ca_cb=<optimized out>, rs_ctx=<optimized out>, ver_chain=0x20002d34 <s_dtlsTaskStack+7644>,
    profile=0x6dbb4 <mbedtls_x509_crt_profile_default>, trust_ca=0x200158e8, crt=0x200175cc) at build/3pp/mbedtls/library/x509_crt.c:2919
#26 x509_crt_verify_restartable_ca_cb (crt=crt@entry=0x200175cc, trust_ca=trust_ca@entry=0x200158e8, profile=0x6dbb4 <mbedtls_x509_crt_profile_default>, cn=<optimized out>, flags=0x200163ac, f_vrfy=0x0,
    p_vrfy=0x0, rs_ctx=<optimized out>, p_ca_cb=<optimized out>, f_ca_cb=<optimized out>, ca_crl=<optimized out>) at build/3pp/mbedtls/library/x509_crt.c:3150
#27 0x0004b454 in mbedtls_x509_crt_verify_restartable (crt=crt@entry=0x200175cc, trust_ca=trust_ca@entry=0x200158e8, ca_crl=<optimized out>, profile=<optimized out>, cn=<optimized out>, flags=<optimized out>,
    f_vrfy=<optimized out>, p_vrfy=0x0, rs_ctx=rs_ctx@entry=0x0) at build/3pp/mbedtls/library/x509_crt.c:3257
#28 0x00054af0 in ssl_parse_certificate_verify (rs_ctx=0x0, chain=0x200175cc, authmode=<optimized out>, ssl=0x20003bd0 <ssl>) at build/3pp/mbedtls/library/ssl_tls.c:2542
#29 mbedtls_ssl_parse_certificate (ssl=ssl@entry=0x20003bd0 <ssl>) at build/3pp/mbedtls/library/ssl_tls.c:2795
#30 0x0004d58c in mbedtls_ssl_handshake_client_step (ssl=0x20003bd0 <ssl>) at build/3pp/mbedtls/library/ssl_cli.c:4298
#31 0x00053d84 in mbedtls_ssl_handshake_step (ssl=ssl@entry=0x20003bd0 <ssl>) at build/3pp/mbedtls/library/ssl_tls.c:5668
--Type <RET> for more, q to quit, c to continue without paging--
#32 0x00053dc2 in mbedtls_ssl_handshake (ssl=0x20003bd0 <ssl>) at build/3pp/mbedtls/library/ssl_tls.c:5692
#33 mbedtls_ssl_handshake (ssl=0x20003bd0 <ssl>) at build/3pp/mbedtls/library/ssl_tls.c:5681
#34 0x0001372e in negotiate (session=0x20016490) at src/communication/dtls/dtls.c:582
#35 0x00013bea in processIncomingPacket (session=0x20016490) at src/communication/dtls/dtls.c:746
#36 readFromFifo () at src/communication/dtls/dtls.c:803
#37 dtlsTask (arg=<optimized out>) at src/communication/dtls/dtls.c:1020
#38 0x0003d474 in pvTaskIncrementMutexHeldCount () at build/3pp/freertos/FreeRTOS/Source/tasks.c:4250
Backtrace stopped: previous frame identical to this frame (corrupt stack?)
(gdb) b x509_crt_check_signature



ecp_double_jac

ecp_precompute_comb() repeats


ecp.c:2042 ecp_mul_comb_core

-----------------------------------

1455235-2021-02-02 22:15:32.703 #1   001bc50c60067631 <log> 7:02:49.203
1455236-2021-02-02 22:15:32.703 #1   001bc50c60067631 <log> 7:02:49.203 BVgw200-insecure:v20.27.6+g1f7a9c0b6 H BFa01ad0c0@0L0S0
1455237-2021-02-02 22:15:56.194 #1   001bc50c60067631 <hub> 0:00:00.004 [ info] Expected message# 1109094 but got 1, node restarted?
--
2480483:2021-02-03  5:29:29.949 #1   001bc50c60067631 <log> 7:13:29.736 ======== Hard fault ========
J�<�fzxM�U�ق����J�  5:29:29.949 #1   001bc50c60067631 <log> 7:13:29.736 I
                        -|E� g�͙n
                                  �q��Qi�9����!{j�|����B>!�_M������ȱ��
 BFc6a2d890@0L0S03  5:29:29.949 #1   001bc50c60067631 <log> 7:13:29.736 BVgw200-insecure:v20.27.6+g1f7a9c0b6 HI
2480486-2021-02-03  5:29:52.919 #1   001bc50c60067631 <hub> 0:00:00.004 [ info] Expected message# 1025870 but got 1, node restarted?

------------------------------
(gdb) info reg
r0             0x1d0b0b16          487262998
r1             0x2001472c          536954668
r2             0x80198f70          -2145808528
r3             0x20014150          536953168
r4             0x0                 0
r5             0x20014218          536953368
r6             0xe6db6b81          -421827711
r7             0x20014144          536953156
r8             0xb0b07bcb          -1330611253
r9             0x0                 0
r10            0x3c                60
r11            0x0                 0
r12            0x30eced69          820833641
sp             0x2001ff70          0x2001ff70
lr             0xfffffff1          -15
pc             0x28666             0x28666 <HardFault_Handler+18>
xPSR           0x61000003          1627389955
fpscr          0x0                 0
msp            0x2001ff70          0x2001ff70
psp            0x20012c08          0x20012c08 <s_ethdrvTaskStack+1688>
primask        0x0                 0
basepri        0xa0                -96
faultmask      0x0                 0
control        0x0                 0
(gdb)



------------------------------------------------------------

MBEDTLS_SSL_MSG_CHANGE_CIPHER_SPEC
ssl_swap_epochs
cur_out_ctr

2021-02-03 15:39:34.000 [dtls-pool-4] TRACE com.connode.dtls.DTLSConnection - Wrong epoch address=/fd80:302b:6c43:8:21b:c50c:6006:740b:5684, gotEpoch=1, gotSeqNo=643
2021-02-03 15:39:35.635 [dtls-pool-3] TRACE com.connode.dtls.DTLSConnection - Wrong epoch address=/fd80:302b:6c43:8:21b:c50c:6006:740b:5684, gotEpoch=1, gotSeqNo=644
2021-02-03 15:39:43.791 [dtls-pool-2] TRACE com.connode.dtls.DTLSConnection - Wrong epoch address=/fd80:302b:6c43:28:21b:c50c:6006:7631:5684, gotEpoch=1, gotSeqNo=26895
2021-02-03 15:39:46.492 [dtls-pool-3] TRACE com.connode.dtls.DTLSConnection - Wrong epoch address=/fd80:302b:6c43:28:21b:c50c:6006:7631:5684, gotEpoch=1, gotSeqNo=26896
2021-02-03 15:39:56.114 [dtls-pool-1] TRACE com.connode.dtls.DTLSConnection - Wrong epoch address=/fd80:302b:6c43:8:21b:c50c:6006:740b:5684, gotEpoch=1, gotSeqNo=645
2021-02-03 15:39:58.295 [dtls-pool-4] TRACE com.connode.dtls.DTLSConnection - Wrong epoch address=/fd80:302b:6c43:28:21b:c50c:6006:7631:5684, gotEpoch=1, gotSeqNo=26897
2021-02-03 15:40:20.991 [dtls-pool-4] TRACE com.connode.dtls.DTLSConnection - Wrong epoch address=/fd80:302b:6c43:28:21b:c50c:6006:7631:5684, gotEpoch=1, gotSeqNo=26898
2021-02-03 15:41:43.804 [dtls-pool-2] TRACE com.connode.dtls.DTLSConnection - Wrong epoch address=/fd80:302b:6c43:28:21b:c50c:6006:7631:5684, gotEpoch=1, gotSeqNo=26899
2021-02-03 15:42:03.937 [dtls-pool-4] TRACE com.connode.dtls.DTLSConnection - Wrong epoch address=/fd80:302b:6c43:28:21b:c50c:6006:7631:5684, gotEpoch=1, gotSeqNo=26900
2021-02-03 15:42:14.088 [dtls-pool-2] TRACE com.connode.dtls.DTLSConnection - Wrong epoch address=/fd80:302b:6c43:28:21b:c50c:6006:7631:5684, gotEpoch=1, gotSeqNo=26901
2021-02-03 15:42:34.452 [dtls-pool-2] TRACE com.connode.dtls.DTLSConnection - Wrong epoch address=/fd80:302b:6c43:28:21b:c50c:6006:7631:5684, gotEpoch=1, gotSeqNo=26902
2021-02-03 15:43:21.045 [dtls-pool-2] TRACE com.connode.dtls.DTLSConnection - Wrong epoch address=/fd80:302b:6c43:28:21b:c50c:6006:7631:5684, gotEpoch=1, gotSeqNo=26903
2021-02-03 15:43:33.345 [dtls-pool-4] TRACE com.connode.dtls.DTLSConnection - Wrong epoch address=/fd80:302b:6c43:28:21b:c50c:6006:7631:5684, gotEpoch=1, gotSeqNo=26904
2021-02-03 15:43:43.792 [dtls-pool-2] TRACE com.connode.dtls.DTLSConnection - Wrong epoch address=/fd80:302b:6c43:28:21b:c50c:6006:7631:5684, gotEpoch=1, gotSeqNo=26905
2021-02-03 15:43:57.155 [dtls-pool-2] TRACE com.connode.dtls.DTLSConnection - Wrong epoch address=/fd80:302b:6c43:28:21b:c50c:6006:7631:5684, gotEpoch=1, gotSeqNo=26906
2021-02-03 15:45:43.794 [dtls-pool-2] TRACE com.connode.dtls.DTLSConnection - Wrong epoch address=/fd80:302b:6c43:28:21b:c50c:6006:7631:5684, gotEpoch=1, gotSeqNo=26907



/Data/Logs/node214.log:31158:2020-10-16 13:44:28.445 #20  0000000000000002 <log> 0:00:05.750 [debug] [        dtls] {     dtls}: ssl_msg.c:3703: |1| record from another epoch: expected 0, received 1

mbedtls_ssl_parse_change_cipher_spec()
- Incremements in_epoch.
- Checks for wrapping.

/* Increment epoch */
if( ++ssl->in_epoch == 0 )
{
    MBEDTLS_SSL_DEBUG_MSG( 1, ( "DTLS epoch would wrap" ) );
    /* This is highly unlikely to happen for legitimate reasons, so
       treat it as an attack and don't send an alert. */
    return( MBEDTLS_ERR_SSL_COUNTER_WRAPPING );
}

------------------------------------------------------------------------
gw crash

(gdb) info reg
r0             0x44                68
r1             0x2001472c          536954668
r2             0x80198f70          -2145808528
r3             0x20014150          536953168
r4             0x0                 0
r5             0x20014218          536953368
r6             0x47                71
r7             0x20014144          536953156
r8             0xbaba6fd5          -1162186795
r9             0x1                 1
r10            0x2ca0843f          748717119
r11            0x0                 0
r12            0x5de62f31          1575366449
sp             0x2001ff70          0x2001ff70
lr             0xfffffff1          -15
pc             0x28656             0x28656 <HardFault_Handler+18>
xPSR           0x61000003          1627389955
fpscr          0x0                 0
msp            0x2001ff70          0x2001ff70
psp            0x20012c08          0x20012c08 <s_ethdrvTaskStack+1688>
primask        0x0                 0
basepri        0xa0                -96
faultmask      0x0                 0
control        0x0                 0


(gdb) disas HardFault_Handler
Dump of assembler code for function HardFault_Handler:
   0x00028644 <+0>:	movs	r3, #0
   0x00028646 <+2>:	sub	sp, #8
   0x00028648 <+4>:	strb.w	r3, [sp, #7]
   0x0002864c <+8>:	ldrb.w	r3, [sp, #7]
   0x00028650 <+12>:	cmp	r3, #0
   0x00028652 <+14>:	beq.n	0x2864c <HardFault_Handler+8>
   0x00028654 <+16>:	add	sp, #8
   0x00028656 <+18>:	bx	lr

(gdb) info reg
r0             0x44                68
r1             0x2001472c          536954668
r2             0x80198f70          -2145808528
r3             0x20014150          536953168
r4             0x0                 0
r5             0x20014218          536953368
r6             0x47                71
r7             0x20014144          536953156
r8             0xbaba6fd5          -1162186795
r9             0x1                 1
r10            0x2ca0843f          748717119
r11            0x0                 0
r12            0x5de62f31          1575366449
sp             0x2001ff70          0x2001ff70
lr             0xfffffff1          -15
pc             0x28656             0x28656 <HardFault_Handler+18>
xPSR           0x61000003          1627389955
fpscr          0x0                 0
msp            0x2001ff70          0x2001ff70
psp            0x20012c08          0x20012c08 <s_ethdrvTaskStack+1688>
primask        0x0                 0
basepri        0xa0                -96
faultmask      0x0                 0
control        0x0                 0


(gdb) disas HardFault_Handler
Dump of assembler code for function HardFault_Handler:
   0x00028644 <+0>:	movs	r3, #0
   0x00028646 <+2>:	sub	sp, #8
   0x00028648 <+4>:	strb.w	r3, [sp, #7]
   0x0002864c <+8>:	ldrb.w	r3, [sp, #7]
   0x00028650 <+12>:	cmp	r3, #0
   0x00028652 <+14>:	beq.n	0x2864c <HardFault_Handler+8>
   0x00028654 <+16>:	add	sp, #8                              <--- set $pc=<here>
   0x00028656 <+18>:	bx	lr


------------------------------------------------------
mbedtls review
- #error in empty #ifdef MBEDTLS clauses
- mbedts keys file?
- ipsec_sad.c #error


-----------------------------------------

149758 2021-02-09 12:44:07.072 :: [014:07:51.068] device
149759 2021-02-09 12:44:07.073 :: [014:07:51.068] BVipa3-genus-dlms-insecure:v21.1.8+b26646+g5c47dd0 Hde DV0@3cbeeL35d1bS2000c9b8
149760 2021-02-09 12:44:32.121 :: [000:00:00.003] [ info] [  bootloader] {       bl}: Bootloader starting. Version ipa3-bl-insecure:v21.1.8+b26646+g5c47dd0


2021-02-10 01:30:16.408 :: [000:00:03.028] [ info] [    terminal] { terminal}: Reboot reason: S~BVipa3-genus-dlms-insecure:v21.1.8+b26646+g5c47dd0 H 400:0/0@6ecaeL4f1efS20008ba8

2021-02-10 03:59:06.045 :: [000:00:05.886] [ info] [    terminal] { terminal}: Reboot reason: S~BVipa3-genus-dlms-insecure:v21.1.8+b26646+g5c47dd0 H 400:0/0@6ecaeL4f1efS20008ba8<Paste>


--------------------------------------------

Program received signal SIGINT, Interrupt.
0x00052910 in mbedtls_mpi_cmp_mpi (X=X@entry=0x20001a70 <s_dtlsTaskStack+2416>,
    Y=Y@entry=0x20001d50 <s_dtlsTaskStack+3152>) at build/3pp/mbedtls/library/bignum.c:1147
1147	    if( i > j ) return(  X->s );
(gdb) where
#0  0x00052910 in mbedtls_mpi_cmp_mpi (X=X@entry=0x20001a70 <s_dtlsTaskStack+2416>, Y=Y@entry=0x20001d50 <s_dtlsTaskStack+3152>) at build/3pp/mbedtls/library/bignum.c:1147
#1  0x00054c5a in mbedtls_mpi_add_mod (grp=0x20001d4c <s_dtlsTaskStack+3148>, X=0x20001a70 <s_dtlsTaskStack+2416>, B=<optimized out>, A=<optimized out>) at build/3pp/mbedtls/library/ecp.c:1264
#2  0x00055168 in ecp_double_jac (grp=grp@entry=0x20001d4c <s_dtlsTaskStack+3148>, R=0x2001773c, P=0x2001773c) at build/3pp/mbedtls/library/ecp.c:1496
#3  0x00055d6a in ecp_precompute_comb (rs_ctx=<optimized out>, d=52, w=<optimized out>, P=<optimized out>, T=0x20017718, grp=0x20001d4c <s_dtlsTaskStack+3148>) at build/3pp/mbedtls/library/ecp.c:1892
#4  ecp_mul_comb (rs_ctx=<optimized out>, p_rng=0x20001af8 <s_dtlsTaskStack+2552>, f_rng=0x54c03 <ecp_drbg_random>, P=<optimized out>, m=0x20001c84 <s_dtlsTaskStack+2948>, R=0x20001c1c <s_dtlsTaskStack+2844>,
    grp=0x20001d4c <s_dtlsTaskStack+3148>) at build/3pp/mbedtls/library/ecp.c:2338
#5  mbedtls_ecp_mul_restartable (rs_ctx=0x0, p_rng=<optimized out>, f_rng=<optimized out>, P=<optimized out>, m=0x20001c84 <s_dtlsTaskStack+2948>, R=0x20001c1c <s_dtlsTaskStack+2844>,
    grp=0x20001d4c <s_dtlsTaskStack+3148>) at build/3pp/mbedtls/library/ecp.c:2684
#6  mbedtls_ecp_mul_restartable (grp=0x20001d4c <s_dtlsTaskStack+3148>, R=0x20001c1c <s_dtlsTaskStack+2844>, m=0x20001c84 <s_dtlsTaskStack+2948>, P=<optimized out>, f_rng=<optimized out>,
    p_rng=<optimized out>, rs_ctx=0x0) at build/3pp/mbedtls/library/ecp.c:2637
#7  0x00056056 in mbedtls_ecp_mul_shortcuts (grp=0x20001d4c <s_dtlsTaskStack+3148>, R=0x20001c1c <s_dtlsTaskStack+2844>, m=0x20001c84 <s_dtlsTaskStack+2948>, P=0x20001d74 <s_dtlsTaskStack+3188>, rs_ctx=0x0)
    at build/3pp/mbedtls/library/ecp.c:2791
#8  0x00056088 in mbedtls_ecp_muladd_restartable (grp=grp@entry=0x20001d4c <s_dtlsTaskStack+3148>, R=R@entry=0x20001c9c <s_dtlsTaskStack+2972>, m=m@entry=0x20001c84 <s_dtlsTaskStack+2948>,
    P=P@entry=0x20001d74 <s_dtlsTaskStack+3188>, n=n@entry=0x20001c90 <s_dtlsTaskStack+2960>, Q=Q@entry=0x20001dd4 <s_dtlsTaskStack+3284>, rs_ctx=rs_ctx@entry=0x0) at build/3pp/mbedtls/library/ecp.c:2847
#9  0x000549e8 in ecdsa_verify_restartable (grp=grp@entry=0x20001d4c <s_dtlsTaskStack+3148>,
    buf=buf@entry=0x20001e5c <s_dtlsTaskStack+3420> "\366<\271\177mz\006\020v(\tմ/\362I\225\224SL\263L\027\004\032l\367\062\246\303\021\246\320~\001 ", blen=blen@entry=32,
    Q=Q@entry=0x20001dd4 <s_dtlsTaskStack+3284>, r=r@entry=0x20001ce8 <s_dtlsTaskStack+3048>, s=s@entry=0x20001cf4 <s_dtlsTaskStack+3060>, rs_ctx=0x0) at build/3pp/mbedtls/library/ecdsa.c:663
#10 0x00054b8c in mbedtls_ecdsa_read_signature_restartable (ctx=ctx@entry=0x20001d4c <s_dtlsTaskStack+3148>,
    hash=hash@entry=0x20001e5c <s_dtlsTaskStack+3420> "\366<\271\177mz\006\020v(\tմ/\362I\225\224SL\263L\027\004\032l\367\062\246\303\021\246\320~\001 ", hlen=hlen@entry=32,
    sig=sig@entry=0x20016b3f "0F\002!", slen=slen@entry=72, rs_ctx=rs_ctx@entry=0x0) at build/3pp/mbedtls/library/ecdsa.c:881
#11 0x00054bba in mbedtls_ecdsa_read_signature (ctx=ctx@entry=0x20001d4c <s_dtlsTaskStack+3148>,
    hash=hash@entry=0x20001e5c <s_dtlsTaskStack+3420> "\366<\271\177mz\006\020v(\tմ/\362I\225\224SL\263L\027\004\032l\367\062\246\303\021\246\320~\001 ", hlen=hlen@entry=32,
    sig=sig@entry=0x20016b3f "0F\002!", slen=slen@entry=72) at build/3pp/mbedtls/library/ecdsa.c:832
#12 0x00058834 in ecdsa_verify_wrap (ctx=ctx@entry=0x20001d4c <s_dtlsTaskStack+3148>, md_alg=md_alg@entry=MBEDTLS_MD_SHA256,
    hash=hash@entry=0x20001e5c <s_dtlsTaskStack+3420> "\366<\271\177mz\006\020v(\tմ/\362I\225\224SL\263L\027\004\032l\367\062\246\303\021\246\320~\001 ", hash_len=hash_len@entry=32,
    sig=sig@entry=0x20016b3f "0F\002!", sig_len=sig_len@entry=72) at build/3pp/mbedtls/library/pk_wrap.c:633
#13 0x00058876 in eckey_verify_wrap (ctx=<optimized out>, md_alg=<optimized out>,
    hash=0x20001e5c <s_dtlsTaskStack+3420> "\366<\271\177mz\006\020v(\tմ/\362I\225\224SL\263L\027\004\032l\367\062\246\303\021\246\320~\001 ", hash_len=32, sig=0x20016b3f "0F\002!", sig_len=72)
    at build/3pp/mbedtls/library/pk_wrap.c:252
#14 0x000583e2 in mbedtls_pk_verify (ctx=ctx@entry=0x20015944, md_alg=<optimized out>, hash=<optimized out>, hash_len=<optimized out>, sig=0x20016b3f "0F\002!", sig_len=72) at build/3pp/mbedtls/library/pk.c:326
#15 0x00058560 in mbedtls_pk_verify_ext (type=<optimized out>, options=<optimized out>, ctx=ctx@entry=0x20015944, md_alg=<optimized out>, hash=<optimized out>,
    hash@entry=0x20001e5c <s_dtlsTaskStack+3420> "\366<\271\177mz\006\020v(\tմ/\362I\225\224SL\263L\027\004\032l\367\062\246\303\021\246\320~\001 ", hash_len=<optimized out>, hash_len@entry=32,
    sig=0x20016b3f "0F\002!", sig_len=72) at build/3pp/mbedtls/library/pk.c:390
#16 0x0005d02a in x509_crt_check_signature (rs_ctx=<optimized out>, parent=0x20015878, child=0x20017ed0) at build/3pp/mbedtls/library/x509_crt.c:2474
#17 x509_crt_find_parent_in (rs_ctx=<optimized out>, self_cnt=<optimized out>, path_cnt=<optimized out>, top=<optimized out>, r_signature_is_good=<optimized out>, r_parent=<optimized out>,
    candidates=<optimized out>, child=<optimized out>) at build/3pp/mbedtls/library/x509_crt.c:2612
#18 x509_crt_find_parent (rs_ctx=<optimized out>, self_cnt=<optimized out>, path_cnt=<optimized out>, signature_is_good=<optimized out>, parent_is_trusted=<optimized out>, parent=<optimized out>,
    trust_ca=<optimized out>, child=<optimized out>) at build/3pp/mbedtls/library/x509_crt.c:2709
#19 x509_crt_verify_chain (ca_crl=<optimized out>, f_ca_cb=<optimized out>, p_ca_cb=<optimized out>, rs_ctx=<optimized out>, ver_chain=0x20001e7c <s_dtlsTaskStack+3452>,
    profile=0x8abcc <mbedtls_x509_crt_profile_default>, trust_ca=0x20015878, crt=0x20017ed0) at build/3pp/mbedtls/library/x509_crt.c:2919
#20 x509_crt_verify_restartable_ca_cb (crt=crt@entry=0x20017ed0, trust_ca=trust_ca@entry=0x20015878, profile=0x8abcc <mbedtls_x509_crt_profile_default>, cn=<optimized out>, flags=0x20016040, f_vrfy=0x0,
    p_vrfy=0x0, rs_ctx=<optimized out>, p_ca_cb=<optimized out>, f_ca_cb=<optimized out>, ca_crl=<optimized out>) at build/3pp/mbedtls/library/x509_crt.c:3150
#21 0x0005da50 in mbedtls_x509_crt_verify_restartable (crt=crt@entry=0x20017ed0, trust_ca=trust_ca@entry=0x20015878, ca_crl=<optimized out>, profile=<optimized out>, cn=<optimized out>, flags=<optimized out>,
    f_vrfy=<optimized out>, p_vrfy=0x0, rs_ctx=rs_ctx@entry=0x0) at build/3pp/mbedtls/library/x509_crt.c:3257
#22 0x000670fc in ssl_parse_certificate_verify (rs_ctx=0x0, chain=0x20017ed0, authmode=<optimized out>, ssl=0x20002d18 <ssl>) at build/3pp/mbedtls/library/ssl_tls.c:2542
#23 mbedtls_ssl_parse_certificate (ssl=ssl@entry=0x20002d18 <ssl>) at build/3pp/mbedtls/library/ssl_tls.c:2795
#24 0x0005fb98 in mbedtls_ssl_handshake_client_step (ssl=0x20002d18 <ssl>) at build/3pp/mbedtls/library/ssl_cli.c:4295
#25 0x00066390 in mbedtls_ssl_handshake_step (ssl=ssl@entry=0x20002d18 <ssl>) at build/3pp/mbedtls/library/ssl_tls.c:5668
#26 0x000663ce in mbedtls_ssl_handshake (ssl=0x20002d18 <ssl>) at build/3pp/mbedtls/library/ssl_tls.c:5692
#27 mbedtls_ssl_handshake (ssl=0x20002d18 <ssl>) at build/3pp/mbedtls/library/ssl_tls.c:5681
#28 0x000135ca in negotiate (session=0x20015e08) at src/communication/dtls/dtls.c:593
#29 0x00013a86 in processIncomingPacket (session=0x20015e08) at src/communication/dtls/dtls.c:757
#30 readFromFifo () at src/communication/dtls/dtls.c:814
#31 dtlsTask (arg=<optimized out>) at src/communication/dtls/dtls.c:1031
#32 0x0004fad4 in pvTaskIncrementMutexHeldCount () at build/3pp/freertos/FreeRTOS/Source/tasks.c:4250
Backtrace stopped: previous frame identical to this frame (corrupt stack?)
(gdb)


outermost fn that gets called repeatedly: mbedtls_mpi_sub_abs()


https://forums.mbed.com/t/mbedtls-never-exits-ecp-double-jac-function-call/8292/6
https://forums.mbed.com/t/the-ecdsa-ecp-mul-comb-function-take-more-than-10-minutes-to-execute-on-msp430-f6779-controller/6695


ecp.c:1496


428745 2021-02-11 00:25:08.983 :: [000:00:02.733] [ info] [    terminal] { terminal}: Reboot reason: S~BVipa3-genus-dlms-insecure:v21.1.12+b26657+ga65ec83 H 400:0/0@6ed0eL4f29fS20008ba8

nm gives:

20008e30 b s_filedlStack
                    <------------- 20008ba8 therefore RPL task was active.
20008638 b s_rplStack
20005e00 b s_macRxStack
200043d8 b s_lowpanTxStack
20001268 b s_dtlsTaskStack
200008f0 b s_coapTaskStack

memcpys in RPL:


(gdb)
0x0006e36a in memcpy ()
(gdb) where
#0  0x0006e36a in memcpy ()
#1  0x0004e990 in prvCopyDataFromQueue (pxQueue=<optimized out>, pvBuffer=<optimized out>)
    at build/3pp/freertos/FreeRTOS/Source/queue.c:1789
#2  0x0004ecfe in xQueueGenericReceive (xQueue=xQueue@entry=0x2000845c <s_queue>,
    pvBuffer=pvBuffer@entry=0x20008acc <s_rplStack+1532>, xTicksToWait=<optimized out>,
    xTicksToWait@entry=0, xJustPeeking=xJustPeeking@entry=0)
    at build/3pp/freertos/FreeRTOS/Source/queue.c:1270
#3  0x0004db5c in OS_queueReceive (q=q@entry=0x2000845c <s_queue>,
    item=item@entry=0x20008acc <s_rplStack+1532>, waitMSec=waitMSec@entry=0)
    at src/platform/osal/osal-freertos/osal_freertos.c:255
#4  0x0001fb18 in rplTask (arg=<optimized out>) at src/communication/rpl/rpl_task.c:434
#5  0x00000000 in ?? ()
(gdb)

(gdb) p pxQueue->uxItemSize
$13 = 1741597031
(gdb) p pxQueue->u.pcReadFrom
$14 = (int8_t *) 0x200084ac <s_queueData> "\001"
(gdb) p/x pxQueue
$15 = 0x2000845c
(gdb) p/x *pxQueue
$16 = {pcHead = 0x200084ac, pcTail = 0x200084cc, pcWriteTo = 0x200084b8, u = {pcReadFrom = 0x200084ac,
    uxRecursiveCallCount = 0x200084ac}, xTasksWaitingToSend = {uxNumberOfItems = 0x0,
    pxIndex = 0x20008474, xListEnd = {xItemValue = 0xffffffff, pxNext = 0x20008474,
      pxPrevious = 0x20008474}}, xTasksWaitingToReceive = {uxNumberOfItems = 0x0,
    pxIndex = 0x20008488, xListEnd = {xItemValue = 0xe31ffcfc, pxNext = 0x8940c9c9,
      pxPrevious = 0x20008570}}, uxMessagesWaiting = 0x887bc, uxLength = 0xaaaa4fe5,
  uxItemSize = 0x67cea967, cRxLock = 0x88, cTxLock = 0x10, uxQueueNumber = 0x21000000,
  ucQueueType = 0x0}

(gdb) info reg
r0             0x20008acc          536906444
r1             0x200201e2          537002466
r2             0x87cf2e13          -2016465389
r3             0x20020800          537004032
r4             0x0                 0
r5             0x887bc             559036
r6             0x200084b4          536904884
r7             0x0                 0
r8             0x20008acc          536906444
r9             0x0                 0
r10            0xe000ed04          -536810236
r11            0x101               257
r12            0x28d1b031          684830769
sp             0x20008a60          0x20008a60 <s_rplStack+1424>
lr             0x4ecff             322815
pc             0x6e36a             0x6e36a <memcpy+18>
xPSR           0x91000000          -1862270976
fpscr          0x0                 0
msp            0x20020000          0x20020000
psp            0x20008a60          0x20008a60 <s_rplStack+1424>
primask        0x0                 0
basepri        0xa0                -96
faultmask      0x0                 0
control        0x2                 2


in HardFaultHandler:

r0             0x20008acc          536906444
r1             0x200201e3          537002467
r2             0x87cf2e13          -2016465389
r3             0x20020801          537004033
r4             0x0                 0
r5             0x887bc             559036
r6             0x200084b4          536904884
r7             0x0                 0
r8             0x20008acc          536906444
r9             0x0                 0
r10            0xe000ed04          -536810236
r11            0x101               257
r12            0x28d1b031          684830769
sp             0x20020000          0x20020000
lr             0xfffffffd          -3
pc             0x2052c             0x2052c <HardFault_Handler>
xPSR           0x91000003          -1862270973
fpscr          0x0                 0
msp            0x20020000          0x20020000
psp            0x20008a40          0x20008a40 <s_rplStack+1392>
--Type <RET> for more, q to quit, c to continue without paging--
primask        0x0                 0
basepri        0xa0                -96
faultmask      0x0                 0
control        0x0                 0


https://interrupt.memfault.com/blog/cortex-m-fault-debug#cfsr

Entire CFSR - print/x *(uint32_t *) 0xE000ED28
UsageFault Status Register (UFSR) - print/x *(uint16_t *)0xE000ED2A
BusFault Status Register (BFSR) - print/x *(uint8_t *)0xE000ED29
MemManage Status Register (MMFSR) - print/x *(uint8_t *)0xE000ED28

(gdb) print/x *(uint8_t *)0xE000ED29
$34 = 0x4
(gdb)



When good:

(gdb)  p (Queue_t)s_queue
$40 = {
  pcHead = 0x200084ac <s_queueData> "\250\\\001 \250\\\001 \250\\\001 \250\\\001 \250\\\001 \250\\\001 \250\\\001 \250\\\001 ", pcTail = 0x200084cc "",
  pcWriteTo = 0x200084b0 <s_queueData+4> "\250\\\001 \250\\\001 \250\\\001 \250\\\001 \250\\\001 \250\\\001 \250\\\001 ", u = {
    pcReadFrom = 0x200084ac <s_queueData> "\250\\\001 \250\\\001 \250\\\001 \250\\\001 \250\\\001 \250\\\001 \250\\\001 \250\\\001 ", uxRecursiveCallCount = 536904876}, xTasksWaitingToSend = {
    uxNumberOfItems = 0, pxIndex = 0x20008474 <s_queue+24>, xListEnd = {xItemValue = 4294967295,
      pxNext = 0x20008474 <s_queue+24>, pxPrevious = 0x20008474 <s_queue+24>}},
  xTasksWaitingToReceive = {uxNumberOfItems = 1, pxIndex = 0x20008488 <s_queue+44>, xListEnd = {
      xItemValue = 4294967295, pxNext = 0x20008b28 <s_rplTask+24>,
      pxPrevious = 0x20008b28 <s_rplTask+24>}}, uxMessagesWaiting = 0, uxLength = 8, uxItemSize = 4,
  cRxLock = -1 '\377', cTxLock = -1 '\377', uxQueueNumber = 0, ucQueueType = 0 '\000'}
(gdb)

(gdb) p/x ((Queue_t*)&s_queue)->uxLength
$43 = 0x8
(gdb) p/x &((Queue_t*)&s_queue)->uxLength
$44 = 0x20008498
(gdb) p/x &((Queue_t*)&s_queue)->uxItemSize
$45 = 0x2000849c
(gdb)


p 'rpl_task.c'::s_queue
(gdb) p &'rpl_task.c'::s_queue
$4 = (OS_Queue *) 0x2000845c <s_queue>
(gdb) p/x &((Queue_t*)&'rpl_task.c'::s_queue)->uxLength
$5 = 0x20008498
(gdb) watch 0x20008498
Cannot watch constant value `0x20008498'.
(gdb) p/x &((Queue_t*)&'rpl_task.c'::s_queue)->uxItemSize
$6 = 0x2000849c


2nd crash:

(gdb)
Program received signal SIGTRAP, Trace/breakpoint trap.
xPortSysTickHandler ()
    at build/3pp/freertos/FreeRTOS/Source/include/../../Source/portable/GCC/ARM_CM3/portmacro.h:237
237		__asm volatile
(gdb) where
#0  xPortSysTickHandler ()
    at build/3pp/freertos/FreeRTOS/Source/include/../../Source/portable/GCC/ARM_CM3/portmacro.h:237
#1  <signal handler called>
#2  0x00000000 in ?? ()
Backtrace stopped: previous frame identical to this frame (corrupt stack?)
(gdb) disas
Dump of assembler code for function xPortSysTickHandler:
=> 0x0004f944 <+0>:	push	{r3, lr}
   0x0004f946 <+2>:	mov.w	r3, #191	; 0xbf
   0x0004f94a <+6>:	msr	BASEPRI, r3
   0x0004f94e <+10>:	isb	sy
   0x0004f952 <+14>:	dsb	sy
   0x0004f956 <+18>:	bl	0x4f198 <xTaskIncrementTick>
   0x0004f95a <+22>:	cbz	r0, 0x4f964 <xPortSysTickHandler+32>
   0x0004f95c <+24>:	mov.w	r2, #268435456	; 0x10000000
   0x0004f960 <+28>:	ldr	r3, [pc, #8]	; (0x4f96c <xPortSysTickHandler+40>)
   0x0004f962 <+30>:	str	r2, [r3, #0]
   0x0004f964 <+32>:	movs	r3, #0
   0x0004f966 <+34>:	msr	BASEPRI, r3
   0x0004f96a <+38>:	pop	{r3, pc}
   0x0004f96c <+40>:			; <UNDEFINED> instruction: 0xed04e000
End of assembler dump.
(gdb) info reg
r0             0x54c5c591          1422247313
r1             0x567d2b2b          1451043627
r2             0x20008520          536904992
r3             0x887bc             559036
r4             0xc                 12
r5             0x200085b8          536905144
r6             0xb16f6fde          -1318096930
r7             0xa56363c6          -1520213050
r8             0xd7d7b562          -673729182
r9             0x6                 6
r10            0x67cea967          1741597031
r11            0x6b6bd6bd          1802229437
r12            0x847c7cf8          -2072216328
sp             0x20020000          0x20020000
lr             0xfffffffd          -3
pc             0x4f944             0x4f944 <xPortSysTickHandler>
xPSR           0x2100000f          553648143
fpscr          0x0                 0
msp            0x20020000          0x20020000
psp            0x20008488          0x20008488 <s_queue+44>
primask        0x0                 0
basepri        0x0                 0
faultmask      0x0                 0
control        0x0                 0


after return from int.

(gdb) si
0x00050eba in mbedtls_internal_aes_encrypt (ctx=ctx@entry=0x20008580 <s_rplStack+176>,
    input=input@entry=0x20008520 <s_rplStack+80> "", output=output@entry=0x20008520 <s_rplStack+80> "")
    at build/3pp/mbedtls/library/aes.c:879
879	    for( i = ( ctx->nr >> 1 ) - 1; i > 0; i-- )
(gdb) where
#0  0x00050eba in mbedtls_internal_aes_encrypt (ctx=ctx@entry=0x20008580 <s_rplStack+176>,
    input=input@entry=0x20008520 <s_rplStack+80> "", output=output@entry=0x20008520 <s_rplStack+80> "")
    at build/3pp/mbedtls/library/aes.c:879
#1  0x0005160a in mbedtls_aes_crypt_ecb (ctx=ctx@entry=0x20008580 <s_rplStack+176>, mode=mode@entry=1,
    input=input@entry=0x20008520 <s_rplStack+80> "", output=output@entry=0x20008520 <s_rplStack+80> "")
    at build/3pp/mbedtls/library/aes.c:1053
#2  0x00053e3c in block_cipher_df (
    output=output@entry=0x20008860 <s_rplStack+912> "%`\354\370e\022B\340\271K\276Fv\211\200\035\373\213\270\001׀\242\365>F\274\032?\372n\204",
    data=data@entry=0x20008860 <s_rplStack+912> "%`\354\370e\022B\340\271K\276Fv\211\200\035\373\213\270\001׀\242\365>F\274\032?\372n\204", data_len=data_len@entry=32)
    at build/3pp/mbedtls/library/ctr_drbg.c:186
#3  0x00053ffc in mbedtls_ctr_drbg_reseed_internal (ctx=ctx@entry=0x200145f4 <ctr_drbg>,
    additional=additional@entry=0x0, len=len@entry=0, nonce_len=nonce_len@entry=0)
    at build/3pp/mbedtls/library/ctr_drbg.c:401
#4  0x0005403c in mbedtls_ctr_drbg_reseed (ctx=ctx@entry=0x200145f4 <ctr_drbg>,
    additional=additional@entry=0x0, len=len@entry=0) at build/3pp/mbedtls/library/ctr_drbg.c:417
#5  0x000540e0 in mbedtls_ctr_drbg_random_with_add (p_rng=p_rng@entry=0x200145f4 <ctr_drbg>,
    output=output@entry=0x20008a6c <s_rplStack+1436> "", output_len=output_len@entry=4,
    additional=additional@entry=0x0, add_len=add_len@entry=0)
    at build/3pp/mbedtls/library/ctr_drbg.c:531
#6  0x00054192 in mbedtls_ctr_drbg_random (p_rng=p_rng@entry=0x200145f4 <ctr_drbg>,
    output=output@entry=0x20008a6c <s_rplStack+1436> "", output_len=output_len@entry=4)
    at build/3pp/mbedtls/library/ctr_drbg.c:596
#7  0x0004a022 in rnd16 () at src/platform/core/random_mbedtls.c:75
#8  0x0004a0e2 in rnd32 () at src/platform/core/random_mbedtls.c:82
#9  0x0001fea0 in startInterval (state=0x2000836c <s_rplState+296>)
    at src/communication/rpl/trickle.c:81
#10 0x000200ca in trickleListTick (states=states@entry=0x20008ad0 <s_rplStack+1536>, num=num@entry=4)
    at src/communication/rpl/trickle.c:226
#11 0x0001fb02 in rplTask (arg=<optimized out>) at src/communication/rpl/rpl_task.c:426
#12 0x0004f844 in pvTaskIncrementMutexHeldCount () at build/3pp/freertos/FreeRTOS/Source/tasks.c:4250


Stack depth is greater than usual when a rnd16() call results in a HW-RNG reseed interval.
Because the RNG performs an AES cipher operation to randomise the data, this results in quite
a deep stack usage.
Because the stack is relatively small, and the s_queue is immediately prior to the rpl_stack, it
gets overwritten.
The values that get overwritten include the uxItemSize and uxLength.
This results in the next memcpy (from a qReceive op) to overwrite more of the stack and cause
the hard-fault.

result is this happens when a reseed interval corresponds with a timer interrupt


--------------------------------------------------

In general, the Agent is I/O bound, not CPU-bound. There will generally only be a handfull of
packets to handle per second (depending on environment). This does not present a significant
processor load.
On the receive path, there are reassebly buffers, a FIFO and multiple opportunities to drop
pacets, which means in general, the queueing happens on the transmit-path, where multiple sources
of packets may need to be transmitted through the CC1200 radio.
Since packets are transmitted with MAC-level ACKs enabled, the MAC layer must wait for the ACK
from the remote receiver and potentially retry based on that result.
This obviously can cause delays which backup through the transmit queue and ultimately become
lossy at the input (receive) side.
Ultimately, the queueing depth is determined by the environmental conditions as that will
throttle the packet transmit rate, causing packets to be queued, but exactly how that will
happen will also depend on the details of the packets themselves and what layer they make it
through to and even whether they are subject to requiring ACKs (e.g. broadcast/unicast).

Receive path:
- CC1200 (128 byte FIFO in hw). Overflow results in flushing of rx-buffer.
- MAX_RADIO_PAYLOAD_SIZE = 253, multiple cc1200 frames can make up one "MAC" frame.
- If packet fails header check or is not targetted at us, is dropped.
- otherwise, MAC module reads into a single-packet reassembly buffer (reassembles multiple
radio-level packets into a full packet).
- MAC layer can drop or continue to process the packet based on IPv6 header values and packet
validity.
- 6LoWPAN layer then places packet into a fragment-reassembly buffer.
- Depending on whether frame is compressed or not, the fragment will take up more or less space
in the buffer. Up to 8 6LoWPAN fragments can be stored simulataneously for reassembly into an
IP layer packet.
- IP layer packets are handled according to protocol (e.g. IPSEC, ICMP, UDP, CoAP, DTLS, etc) or
forwarded if the destination IPv6 address dictates.

Transmit path:
- Either the IP core forwards a packet or a packet is generated from a higher level protocol.
- Packet is passed to LoWPAN layer for fragmentation/disassembly into a buffer (which may block).
- For the 6LoWPAN interface, there is a 3 full packet (i.e. 1280 byte) queue for transmit packets.
- CC1200 has a 128-byte transmit FIFO.
- ACKs to be transmitted short-circuit the above IP-level transmit path for efficiency reasons.

So, the queueing depth you will observe depends greatly on:
- The environmental conditions (i.e time spent waiting for ACKs from remote nodes).
- The details of the packets themselves (can they be dropped early in the receive path?)
- The validity of the packets (Again, may cause them to be dropped).
- The number of fragments that need to be reassambled before forwarding.
- Whether any current activity within the node is generating packets to be transmitted also.
- The size of the packets themselves and how much space they take up in the FIFO(s).
- The degree of "interleaving" of 6LoWPAN fragments and how they interact with the other sources
of 6LoWPAN packets.

--------------------------------

In general, everything the Agent uses via the CH FILE_Service is non-critical. All of the
Agent "Configuration", i.e. EUI-64, radio-channel, etc are stored via the "SETTINGS_Service".
Having said that, this is a list of the files that you may find stored:

"Activity report": timestamp of last activity report.
"Encrypted filedl storage": Used to store the encrypted file as packets are received.
"Plaintext filedl storage": Used to decrypt the entire downloaded file (when entire file is complete)
"MAC security state": Used to store the framecounter for radio level packets
"MQ data files": Data storage for the persistent message-queue.

If a unit is being refurbished, and will have a new EUI-64, then all the files should be erased
along with the settings (via the SETTINGS_service API).
If the unit will continue to have the same EUI, then the settings will need to be retained as
well as the "Activity Report" and "MAC security state" if it is to go back into the same network.
If its is acceptable to lose the data that is in the mq (but not pushed up to the server) then
all the (ten) mq files can be removed. Either all the mq-files or none should be removed, never
partially remove the mq files.



 static const SlotEntry s_filenameToSlotMap[] = {
         { FILE_NAME_ACTIVITY_REPORT, FILE_ConActivityReportSlot },
         { FILE_NAME_FILEDL_ENCRYPTED, FILE_ConFwDlEncryptedFileSlot },
         { FILE_NAME_FILEDL_CLEARTEXT, FILE_ConFwDlFileSlot },
         { FILE_NAME_FILEDL_STATE, FILE_ConFwDlStateSlot },
         { FILE_NAME_MACSEC_STATE, FILE_ConMacSecStateSlot },
         { "/mq/000.mq", FILE_ConMsgQ0Slot },
         { "/mq/001.mq", FILE_ConMsgQ1Slot },
         { "/mq/002.mq", FILE_ConMsgQ2Slot },
         { "/mq/003.mq", FILE_ConMsgQ3Slot },
         { "/mq/004.mq", FILE_ConMsgQ4Slot },
         { "/mq/005.mq", FILE_ConMsgQ5Slot },
         { "/mq/006.mq", FILE_ConMsgQ6Slot },
         { "/mq/007.mq", FILE_ConMsgQ7Slot },
         { "/mq/008.mq", FILE_ConMsgQ8Slot },
         { "/mq/009.mq", FILE_ConMsgQ9Slot },
 };



--------------------------------------------

DtlsSession from dlist

(gdb) p s_sessions
$54 = {next = 0x20016498, prev = 0x20016498}
(gdb) p *(DtlsSession*)((s_sessions->next)-64)
$55 = {id = 0, ssl = 0x0, localAddress = {x = "pa\001 \001\a\345\002\020\000\t,\000\000\001J"}, remoteAddress = {x = '\000' <repeats 15 times>}, localPort = 0, remotePort = 536961320, callback = 0x2e50701,
  timeOfLastTransmissionMSec = 16, timeoutUpdated = false, timeout = false, negotiated = true, abandoned = 74, remove = false, connect = false, list = {next = 0x0, prev = 0x0}}
(gdb) p *(DtlsSession*)((0x20016498)-64)
$56 = {id = 51, ssl = 0x20002d20 <ssl>, localAddress = {x = "\375\200\060+lC\000(\002\033\305\f`\006w\266"}, remoteAddress = {x = "\375", '\000' <repeats 14 times>, "\001"}, localPort = 5684,
  remotePort = 5684, callback = 0x2418d <dtlsCallback>, timeOfLastTransmissionMSec = 6495018, timeoutUpdated = true, timeout = false, negotiated = true, abandoned = false, remove = false, connect = true,
  list = {next = 0x200000d4 <s_sessions>, prev = 0x200000d4 <s_sessions>}}
(gdb)


------------------------------------
remaining mbedtls work
- unit tests
- stack usage optimisation
- image size optimisation
- high-cpu usage issue.
- hard fault while renewing session, HF in calloc, called from mpi modules and handshake routines.



-----------------------------------------
Debugging hard faults:

(gdb) tar rem :3333
Remote debugging using :3333
0x0fe10000 in ?? ()
(gdb) disas HardFault_Handler
Dump of assembler code for function HardFault_Handler:
   0x00020534 <+0>:	movs	r3, #0
   0x00020536 <+2>:	sub	sp, #8
   0x00020538 <+4>:	strb.w	r3, [sp, #7]
   0x0002053c <+8>:	ldrb.w	r3, [sp, #7]
   0x00020540 <+12>:	cmp	r3, #0
   0x00020542 <+14>:	beq.n	0x2053c <HardFault_Handler+8>
   0x00020544 <+16>:	add	sp, #8
   0x00020546 <+18>:	bx	lr
End of assembler dump.
(gdb) b HardFault_Handler
Breakpoint 1 at 0x20534: file src/hw/efr32/crash.c, line 52.
(gdb) b panicHalt_
Breakpoint 2 at 0x4872c: file src/platform/core/assert.c, line 33.
(gdb) b powerDownResetEfr32
Breakpoint 3 at 0x4b450: file src/platform/drivers/powerdown/powerdown_efr32.c, line 19.
(gdb)

---------------------------------------------

#0  panicHalt_ (file=file@entry=0x71e6b "ip_core", line=line@entry=2294, message=0x200126cc <s_panicMessage> "garbled 0x200187a0 size 54 pre 0 post 4") at src/platform/core/assert.c:33
#1  0x00049268 in reallocInternal (p=<optimized out>, size=size@entry=0, zeroFill=zeroFill@entry=false, file=file@entry=0x71e6b "ip_core", line=line@entry=2294) at src/platform/core/memory.c:261
#2  0x00049390 in freeWrapper (line=2294, file=0x71e6b "ip_core", p=<optimized out>) at src/platform/core/memory.c:652
#3  freeWrapper (p=<optimized out>, file=file@entry=0x71e6b "ip_core", line=line@entry=2294) at src/platform/core/memory.c:649
#4  0x000151de in freeIPdata (data=data@entry=0x2000640c <s_macRxStack+1900>) at src/communication/ip/ip_core.c:2294
#5  0x00016474 in ipReceive (src=<optimized out>, dst=<optimized out>, payload=<optimized out>, len=<optimized out>, packetinfo=0x200067ec <s_packetInfo>) at src/communication/ip/ip_core.c:1052
#6  0x00017296 in receiveCallback (src=0x200064f8 <s_macRxStack+2136>, dst=0x20006500 <s_macRxStack+2144>, data=<optimized out>, size=<optimized out>, packetinfo=0x200067ec <s_packetInfo>)
    at src/communication/lowpan/lowpan_rx.c:44
#7  0x000187da in processReceivedDataFrame (data=0x200065e0 <s_packetData> "i\334]", packetInfo=0x200067ec <s_packetInfo>, size=110) at src/communication/mac/mac_rx.c:368
#8  macRxTask (arg=<optimized out>) at src/communication/mac/mac_rx.c:653
#9  0x0004ecfc in pvTaskIncrementMutexHeldCount () at build/3pp/freertos/FreeRTOS/Source/tasks.c:4250
Backtrace stopped: previous frame identical to this frame (corrupt stack?)


#4  0x000151de in freeIPdata (data=data@entry=0x2000640c <s_macRxStack+1900>)
    at src/communication/ip/ip_core.c:2294
2294	    FREE(data->payload);
(gdb) p *data
$9 = {src = {x = "\375", '\000' <repeats 14 times>, "\001"}, dst = {
    x = "\375\200\060+lC\000(\002\033\305\f`\006w\266"}, hopLimit = 63 '?',
  ifaceOut = INTERFACE_UNSPECIFIED, ifaceIn = INTERFACE_LOWPAN, extHeader = 0x200187f0,
  type = HDR_UDP, payload = 0x200187a0 "\026\064\026\064", len = 54, origPayload = 0x0,
  typeNHC = 1 '\001', srcIID = {x = "\002\033\305\f`\006v1"}, dstIID = {
    x = "\002\033\305\f`\006w\266"}, callback = 0x0, cbData = 0x0}


------------------------------------
tracking down heap-corruption.
- Perform mem check periodically
- Perform mem check on alloc and free.
- Trap on HardFault_Handler, panicHalt_ and powerDownResetEfr32.
- When HardFault occurs, identify location of fault. Examine stacks & data in-use.
- When panicHalt_ occurs due to memCheck issue, step back up and place mem-checs around
the operations in-use.
- check for stack-overruns by examinging stack for 0xa5 values.
- Check pxCurrentTCB to determine current task. examine values within the structure for being valid.

arm-none-eabi-objdump -x build/ipa3-gstar-dlms-insecure-mbedtls/bin/agent.elf > t.map
arm-none-eabi-objdump -S build/ipa3-gstar-dlms-insecure-mbedtls/bin/agent.elf > t.s


------------------------------------------
HardFault in mbedtls (due to heap corruption).

#0  0x0006dc72 in _malloc_r ()
#1  0x0006db74 in _calloc_r ()
#2  0x000518dc in mbedtls_mpi_grow (nblimbs=16, X=0x20001bfc <s_dtlsTaskStack+2804>) at build/3pp/mbedtls/library/bignum.c:125
#3  mbedtls_mpi_grow (X=0x20001bfc <s_dtlsTaskStack+2804>, nblimbs=16) at build/3pp/mbedtls/library/bignum.c:115
#4  0x00052188 in mbedtls_mpi_mul_mpi (X=X@entry=0x20001bfc <s_dtlsTaskStack+2804>, A=0x20001bf0 <s_dtlsTaskStack+2792>, B=0x20001bf0 <s_dtlsTaskStack+2792>) at build/3pp/mbedtls/library/bignum.c:1628
#5  0x00054200 in mbedtls_mpi_mul_mod (grp=0x20001ebc <s_dtlsTaskStack+3508>, X=0x20001bfc <s_dtlsTaskStack+2804>, A=<optimized out>, B=<optimized out>) at build/3pp/mbedtls/library/ecp.c:1229
#6  0x0005472e in ecp_double_jac (grp=grp@entry=0x20001ebc <s_dtlsTaskStack+3508>, R=0x20018cac, P=0x20018cac) at build/3pp/mbedtls/library/ecp.c:1525
#7  0x0005528a in ecp_precompute_comb (rs_ctx=<optimized out>, d=52, w=<optimized out>, P=0x20, T=0x20018c88, grp=0x20001ebc <s_dtlsTaskStack+3508>) at build/3pp/mbedtls/library/ecp.c:1892
#8  ecp_mul_comb (rs_ctx=<optimized out>, p_rng=0x20014aac <ctr_drbg>, f_rng=0x53939 <mbedtls_ctr_drbg_random>, P=0x20, m=0x20001d80 <s_dtlsTaskStack+3192>, R=0x20001da4 <s_dtlsTaskStack+3228>,
    grp=0x20001ebc <s_dtlsTaskStack+3508>) at build/3pp/mbedtls/library/ecp.c:2338
#9  mbedtls_ecp_mul_restartable (rs_ctx=0x0, p_rng=<optimized out>, f_rng=<optimized out>, P=0x20, m=0x20001d80 <s_dtlsTaskStack+3192>, R=0x20001da4 <s_dtlsTaskStack+3228>,
    grp=0x20001ebc <s_dtlsTaskStack+3508>) at build/3pp/mbedtls/library/ecp.c:2684
#10 mbedtls_ecp_mul_restartable (grp=grp@entry=0x20001ebc <s_dtlsTaskStack+3508>, R=R@entry=0x20001da4 <s_dtlsTaskStack+3228>, m=m@entry=0x20001d80 <s_dtlsTaskStack+3192>,
    P=P@entry=0x20001ee4 <s_dtlsTaskStack+3548>, f_rng=<optimized out>, f_rng@entry=0x53939 <mbedtls_ctr_drbg_random>, p_rng=<optimized out>, p_rng@entry=0x20014aac <ctr_drbg>, rs_ctx=0x0)
    at build/3pp/mbedtls/library/ecp.c:2637
#11 0x00053d34 in ecdsa_sign_restartable (grp=grp@entry=0x20001ebc <s_dtlsTaskStack+3508>, r=r@entry=0x20001e10 <s_dtlsTaskStack+3336>, s=s@entry=0x20001e1c <s_dtlsTaskStack+3348>,
    d=d@entry=0x20001f38 <s_dtlsTaskStack+3632>, buf=buf@entry=0x20001fb8 <s_dtlsTaskStack+3760> "\254O\030\374a\033&I}\360ˁh=$\272*\336jq\t\032\b\301\006\223\226\257\260\274O\267\254\020",
    blen=blen@entry=32, f_rng=f_rng@entry=0x53939 <mbedtls_ctr_drbg_random>, p_rng=p_rng@entry=0x20014aac <ctr_drbg>, f_rng_blind=f_rng_blind@entry=0x53939 <mbedtls_ctr_drbg_random>,
    p_rng_blind=p_rng_blind@entry=0x20014aac <ctr_drbg>, rs_ctx=0x0) at build/3pp/mbedtls/library/ecdsa.c:322
#12 0x00053f9a in mbedtls_ecdsa_write_signature_restartable (ctx=ctx@entry=0x20001ebc <s_dtlsTaskStack+3508>, md_alg=<optimized out>,
    hash=hash@entry=0x20001fb8 <s_dtlsTaskStack+3760> "\254O\030\374a\033&I}\360ˁh=$\272*\336jq\t\032\b\301\006\223\226\257\260\274O\267\254\020", hlen=hlen@entry=32, sig=sig@entry=0x20017735 "",
    slen=slen@entry=0x20001fb0 <s_dtlsTaskStack+3752>, f_rng=f_rng@entry=0x53939 <mbedtls_ctr_drbg_random>, p_rng=p_rng@entry=0x20014aac <ctr_drbg>, rs_ctx=rs_ctx@entry=0x0)
    at build/3pp/mbedtls/library/ecdsa.c:773
#13 0x00054026 in mbedtls_ecdsa_write_signature (ctx=ctx@entry=0x20001ebc <s_dtlsTaskStack+3508>, md_alg=md_alg@entry=MBEDTLS_MD_SHA256,
    hash=hash@entry=0x20001fb8 <s_dtlsTaskStack+3760> "\254O\030\374a\033&I}\360ˁh=$\272*\336jq\t\032\b\301\006\223\226\257\260\274O\267\254\020", hlen=hlen@entry=32, sig=sig@entry=0x20017735 "",
    slen=slen@entry=0x20001fb0 <s_dtlsTaskStack+3752>, f_rng=f_rng@entry=0x53939 <mbedtls_ctr_drbg_random>, p_rng=p_rng@entry=0x20014aac <ctr_drbg>) at build/3pp/mbedtls/library/ecdsa.c:802
#14 0x00057d36 in ecdsa_sign_wrap (p_rng=0x20014aac <ctr_drbg>, f_rng=0x53939 <mbedtls_ctr_drbg_random>, sig_len=0x20001fb0 <s_dtlsTaskStack+3752>, sig=0x20017735 "", hash_len=32,
    hash=0x20001fb8 <s_dtlsTaskStack+3760> "\254O\030\374a\033&I}\360ˁh=$\272*\336jq\t\032\b\301\006\223\226\257\260\274O\267\254\020", md_alg=MBEDTLS_MD_SHA256, ctx=0x20001ebc <s_dtlsTaskStack+3508>)
    at build/3pp/mbedtls/library/pk_wrap.c:648
#15 eckey_sign_wrap (ctx=<optimized out>, md_alg=<optimized out>, hash=0x20001fb8 <s_dtlsTaskStack+3760> "\254O\030\374a\033&I}\360ˁh=$\272*\336jq\t\032\b\301\006\223\226\257\260\274O\267\254\020",
    hash_len=32, sig=0x20017735 "", sig_len=0x20001fb0 <s_dtlsTaskStack+3752>, f_rng=0x53939 <mbedtls_ctr_drbg_random>, p_rng=0x20014aac <ctr_drbg>) at build/3pp/mbedtls/library/pk_wrap.c:270
#16 0x0005fa5e in ssl_write_certificate_verify (ssl=0x20002d20 <ssl>) at build/3pp/mbedtls/library/ssl_cli.c:4085
#17 mbedtls_ssl_handshake_client_step (ssl=0x20002d20 <ssl>) at build/3pp/mbedtls/library/ssl_cli.c:4326
#18 0x000658b0 in mbedtls_ssl_handshake_step (ssl=ssl@entry=0x20002d20 <ssl>) at build/3pp/mbedtls/library/ssl_tls.c:5668
#19 0x000658ee in mbedtls_ssl_handshake (ssl=0x20002d20 <ssl>) at build/3pp/mbedtls/library/ssl_tls.c:5692
#20 mbedtls_ssl_handshake (ssl=0x20002d20 <ssl>) at build/3pp/mbedtls/library/ssl_tls.c:5681
#21 0x000135d6 in negotiate (session=0x200168b0) at src/communication/dtls/dtls.c:593
#22 0x00013a92 in processIncomingPacket (session=0x200168b0) at src/communication/dtls/dtls.c:757
#23 readFromFifo () at src/communication/dtls/dtls.c:819
#24 dtlsTask (arg=<optimized out>) at src/communication/dtls/dtls.c:1037
#25 0x0004eff0 in pvTaskIncrementMutexHeldCount () at build/3pp/freertos/FreeRTOS/Source/tasks.c:4250
Backtrace stopped: previous frame identical to this frame (corrupt stack?)

------------------------
gnuplot chart


sed -n -e "s/.*CPU load: \(.*\)%/\1/p" < /Data/Logs/node280.log |  feedgnuplot --points --legend 0 "data 0" --title "Test plot" --y2 1 --terminal 'dumb 120,40' --exit

----------------------------

FS issues:
~/ProduceNode.sh 00-1B-C5-0C-60-09-13-81 usb-FTDI_TTL232R_FTG4DKEY-if00-port0
~/ProduceNode.sh 00-1B-C5-0C-60-09-13-80 usb-FTDI_TTL232R_FTATOW2K-if00-port0





usb-FTDI_TTL232R_FTATOVZP-if00-port0
READ flash id: 1f 47 00
Unsupported flash id: 1f 47 00
No flash


usb-FTDI_TTL232R_FTG4DKEY-if00-port
READ flash id: ff ff ff
Unsupported flash id: ff ff ff
No flash


usb-FTDI_TTL232R_FTATOW2K-if00-port0
READ flash id: 1f 47 00
Unsupported flash id: 1f 47 00
No flash



one device shows "bad config magic", HMAC failure on /configuration.pb
but when placed into different debug board allows to be configured fine and comes up fine.

one device still shows flash failures with last byte of id zeroed. All others seem to identify flash ok
when on my dev board.
flash failure seems intermittent.

two node would not receive packets unless antenna was attached, this is in the office with a
gw a few metres away.



----------------------------------------------------
oSo, regarding capturing the transmitted packet, yes that should be possible

(section 4.1.2 in https://www.silabs.com/documents/public/application-notes/an972-efr32-rf-eval-guide.pdf
AN972: EFR32 RF Evaluation Guide - Silicon Labs
AN972: EFR32 RF Evaluation Guide This evaluation guide provides an easy way to evaluate the performance of the Wire-less Gecko EFR32 devices using the Silicon Labs Radio Abstraction Interface Layer
www.silabs.com
)



Basically, the EFR32 has the ability to transmit what is effectively a SPI waveform of the data prior to it being modulated.



The complexity is in configuring the internal peripheral routing system and there is a risk that we can't configure it to come out of a (convenient) GPIO.



Guessing that it would take (roughly) a few days to a week to get it going (or at least bottom out investigating it).



Once done tho, the feature would be useful for getting the BER (instead of PER) test working, so its not entirely wasted work.



SteveT
Ok, the actual DLMS-profile content contained within a packet will make up (at a guess) ~60% of the bits transmitted. The data is also encrypted, making it non human-readable (which may work in our favour).

If needed, I think we can get the raw packet data (as transmitted) including, sync, preamble, payload, header, etc which will show the correct bit-rate, but the real picture is much more complex than that.

It may be more appropriate to setup a demo sending simulated profile samples to the server and measuring at that point (assuming the uplink isn't a bottleneck). If we do go down that route, we may also want to make it a raw UDP packet test rather than protobuf-encoded samples (which just adds overhead).

SteveT



A few points to consider before the engg team get too deep into feasibility/estimation:



Do we have a risk that packetized data is not the same as constant transmission?

i.e. Even if we had an air rate of 100kbps you would not have 100k bits coming out of the module per second?

If MEA want to count up the data and divide by the time then they will see a lower number.



Do we have a second risk that MEA see the air data is not DLMS over UDP?
This is probably what some of their team expects and demoing differently may take the lid off another can of worms.



Assuming the above risks can be managed, we could make the proposal better by also capturing the logs for the original DLMS conversation using our standard debug log.

These logs are essential for justifying our effective bitrate statements.
(I know MEA are asking to see the raw bitrate at this point but we should also stand by our RFP commitment on effective bitrate.)



Matt
-----------------------------------------------------------------
- Investigate PRS channels in the EFR32 with an aim to getting the radio symbol data to be
output from a GPIO. It should look like a SPI waveform (i.e. clock & data traces). We hopefully
can redirect the traces to LED GPIOs on an IPA3 module.
- See https://www.silabs.com/documents/public/application-notes/an972-efr32-rf-eval-guide.pdf
section 4.1.2 for an example of what we want.
- Aim is to demonstrate that the rate that we transmit data from the radio.
- The trace shown in 4.1.2 is taken from a USB logic analyser monitoring the 2xGPIOs.
- PRS == Peripheral Reflex System (https://www.silabs.com/documents/public/application-notes/an0025-efm32-prs.pdf)
and is used to wire together peripherals such that they can communicate without the use of the
processor reading and writing to/from them.
- The code is just for a demo and may involve some hardware "hacks" i.e. wiring to the GPIOs to
allow us to monitor them. During development, we should be able to get these lines out via the
headers on the dev board I think.
- Ignore all the talk about low-energy and power-modes, we're not interested in the PRS for that,
we're just looking to make a trace of the radio output.
- Some examples exist (https://www.silabs.com/community/mcu/32-bit/forum.topic.html/prs_and_le_periphera-2AhC)
that aren't quite what we want but show you the sort of code that we need. We need to select
the radio as the source(s) and GPIO's as the destination.
- Need to decide which pins to route the signals to based on the GPIO functionality table in the
EFR32 reference manual (e.g PA0 can take PRS_CH6/7/8/9).
- The RAILTest application can apparently do what we want, but we need this feature integrated
into our Agent. You can apparently generate a RAILTest application via SimplicityStudio to see
the source.
- Example on GitHub of using PRS (https://github.com/SiliconLabs/peripheral_examples/blob/master/series1/prs/logic_unit/src/em_prs.c)

#include "em_cmu.h"
#include "em_prs.h"
#include "em_gpio.h"
#include "em_device.h"
void enableDebugGpios(void)
{
  // Turn on the PRS and GPIO clocks to access their registers.
  CMU_ClockEnable(cmuClock_PRS, true);
  CMU_ClockEnable(cmuClock_GPIO, true);
  // Configure PC10 as an output.
  GPIO_PinModeSet(gpioPortC, 10, gpioModePushPull, 0);
  // Configure PRS Channel 0 to output RAC_RX.
  PRS_SourceSignalSet(0,
                      ((PRS_RAC_RX & _PRS_CH_CTRL_SOURCESEL_MASK)
                       >> _PRS_CH_CTRL_SOURCESEL_SHIFT),
                      ((PRS_RAC_RX & _PRS_CH_CTRL_SIGSEL_MASK)
                       >> _PRS_CH_CTRL_SIGSEL_SHIFT),
                      prsEdgeOff);
  // Configure PRS Channel 0 to use output location 12 (PC10 - see data sheet).
  PRS->ROUTELOC0 &= ~_PRS_ROUTELOC0_CH0LOC_MASK;
  PRS->ROUTELOC0 |= PRS_ROUTELOC0_CH0LOC_LOC12;
  // Enable PRS Channel 0.
  PRS->ROUTEPEN |= PRS_ROUTEPEN_CH0PEN;
}

(from https://docs.silabs.com/rail/2.4/efr32-main)


- The sources we want are described at (https://silabs-prod.adobecqms.net/content/usergenerated/asi/cloud/content/siliconlabs/en/community/wireless/proprietary/knowledge-base/jcr:content/content/primary/blog/rail_tutorial_debug-NbEG.social.0.10.html)
with the (unhelpful) line: "The last two signals are direct outputs of the modem (just before modulation for tx and after demodulation for rx). They don't have proper names, so the recommended way to access them is to increment PRS_MODEM_PRESENT..."
"MODEM" in this case is the radio on the EFR32.
i.e.
PRS_MODEM_PRESENT+1	CUSTOM_PRS 0x56 0x6	Modem clock out
PRS_MODEM_PRESENT+2	CUSTOM_PRS 0x56 0x7	Modem data out
(taken from the table)


----------------------------------------
radio throughput bitrate

A module named "radiostress" has been implemented that can send MAC frames and ICMPv6 pings. It is triggered by RPC commands (see the RPC page on the wiki).

The throughput on the lowpan layer is measured to about 1700 bytes/s of payload (for 100B payloads, which is the maximum). That figure was measured in a non-quiet environment, so both CSMA collisions and dropped frames makes it lower than what could be achieved in an ideal lab system.

-------------------------------------
SMIPDEV-180

- All our use of the FILE_service uses files opened with "FILE_Open"

The mappings use enumerations that we are not privy to, but our
enumerations/mappings are as follows:

static const SlotEntry s_filenameToSlotMap[] = {
        { FILE_NAME_ACTIVITY_REPORT, FILE_ConActivityReportSlot },
        { FILE_NAME_FILEDL_ENCRYPTED, FILE_ConFwDlEncryptedFileSlot },
        { FILE_NAME_FILEDL_CLEARTEXT, FILE_ConFwDlFileSlot },
        { FILE_NAME_FILEDL_STATE, FILE_ConFwDlStateSlot },
        { FILE_NAME_MACSEC_STATE, FILE_ConMacSecStateSlot },
        { "/mq/000.mq", FILE_ConMsgQ0Slot },
        { "/mq/001.mq", FILE_ConMsgQ1Slot },
        { "/mq/002.mq", FILE_ConMsgQ2Slot },
        { "/mq/003.mq", FILE_ConMsgQ3Slot },
        { "/mq/004.mq", FILE_ConMsgQ4Slot },
        { "/mq/005.mq", FILE_ConMsgQ5Slot },
        { "/mq/006.mq", FILE_ConMsgQ6Slot },
        { "/mq/007.mq", FILE_ConMsgQ7Slot },
        { "/mq/008.mq", FILE_ConMsgQ8Slot },
        { "/mq/009.mq", FILE_ConMsgQ9Slot },
};

For the SETTINGS_service:
All parameters are listed in config_parameters.xml along with their type.
Types are mapped as follows:
- CC Integer values -> CH Int.
- CC Boolean values -> CH Int.
- CC String values -> CH String.


----------------------------------------------------
GW7 review


------------------------------------------------
Wi-SUN EAPOL frames
EAP-TLS PANA using UDP?


"https://security.stackexchange.com/questions/3477/tls-at-layer-4-but-802-1x-eap-tls-at-layer-2"
"EAP-TLS is not TLS, it does not provide a tunnel for data; it is a protocol which reuses parts of the handshake which occurs at the beginning of a TLS connection"


https://tools.ietf.org/html/rfc5216
This document defines EAP-Transport Layer Security (EAP-TLS), which
   includes support for certificate-based mutual authentication and key
   derivation, utilizing the protected ciphersuite negotiation, mutual
   authentication and key management capabilities of the TLS protocol,
   described in "The Transport Layer Security (TLS) Protocol
   Version 1.1" [RFC4346].

------------------------------------------
Show contents of dp_config:

./tools/c4-tools/coap_request.py --ctrlporthub :5000 --fs-read /dp_config

 ~/pbd `cat AgentState/dp_config | od -t x1 -A none -v | sed -e "s/ //g" | tr -d "\n"`

cat AgentState/dp_config | protoc --decode_raw

protoc --decode DataProfileConfigPb src/device/addons/dataprofile/dataprofile.proto < AgentState/dp_config

--------------------------------------------
Omnimesh gateway software requirements
- Mesh
- Uplink
- Power usage
- Configurability

--------------------------------------------
GW7 requirements/tasks

IGW7/GW7 differences:
- Power supply


george@bcits-integration:~$ coap_request.py --server localhost:8080 --agent fd8f:214:4b59:d:21b:c50c:6004:985d --fs-read /dp_config
b'\n\x87\x01\n\x073793521\x12\x1c\n\x06\x01\x00^[\x00\xff\x12\x0c\x07\xe5\x02\x18\x03\x13-\x1e\x00\x01J\x00\x18\x80\x80\x8c\xa0\x08\x12\x16\n\x06\x01\x00c\x01\x00\xff\x12\x0c\x07\xe5\x02\x18\x00\x13\x1e\x00\x00\x01J\x00\x12\x16\n\x06\x01\x00b\x01\x00\xff\x12\x0c\x07\xe4\t\x01\x00\x00\x00\x00\x00\x01J\x00\x12\x16\n\x06\x00\x00cb\x02\xff\x12\x0c\x07\xe5\x02\x18\x00\x10\x06\x00\x00\x01J\x00\x12\x16\n\x06\x00\x00cb\x04\xff\x12\x0c\x07\xe5\x02\x18\x00\x10\x06\x00\x00\x01J\x00'


config {
  deviceId: "3793521"
  ctxs {
    profile: "\001\000^[\000\377"
    timestamp: "\007\345\002\030\003\023-\036\000\001J\000"
    capturePeriod: 2214789120
  }
  ctxs {
    profile: "\001\000c\001\000\377"
    timestamp: "\007\345\002\030\000\023\036\000\000\001J\000"
  }
  ctxs {
    profile: "\001\000b\001\000\377"
    timestamp: "\007\344\t\001\000\000\000\000\000\001J\000"
  }
  ctxs {
    profile: "\000\000cb\002\377"
    timestamp: "\007\345\002\030\000\020\006\000\000\001J\000"
  }
  ctxs {
    profile: "\000\000cb\004\377"
    timestamp: "\007\345\002\030\000\020\006\000\000\001J\000"
  }
}


- 1.0.94.91.0.255
- 1.0.99.1.0.255
- 1.0.98.1.0.255
- 0.0.99.98.2.255

---------------------------------------------------
mbedtls crash:
- Got one node boot event in one meter node out of 10 on 25th Jan. - "S~BVipa3-sei-dlms-mbedtls:v21.2.0+b26852+gea47914 Hdt DV14@6da72L6da41S20001c60"
(Crash in free, known & fixed, MALLOCZ & heap/platform integration issues).

-----------------------------------------
SMIP v20.2.0 resource requirements:

Regarding the library itself, 'size' reports:

   text	   data	    bss	    dec	    hex	filename
 321223	  12682	  54885	 388790	  5eeb6	c4_agent.o (ex smip-v20.2.0_libc4-smip-v20.2.0.a)

But...
Stack space is unknown as it is managed by the host-OS in SMIP, presumably via a dynamic
stack mechanism as it has an MMU. For this reason, in the library, the stack-sizes are
zero bytes long so don't reflect their actual resource requirements.
For guidance, the IPA1 (STM32) stack sizes are:

s_coapTaskStack         = 512   = 2048b
s_dtlsTaskStack         = 400   = 1600b
s_uplinkTxStack         = 150   = 600b
s_lowpanTxStack         = 250   = 1000b
s_macRxStack            = 350   = 1400b
s_rplStack              = 400   = 1600b
s_filedlStack           = 400   = 1600b
s_scheduleTaskStack     = 360   = 1440b
s_cc1200TaskStack       = 200   = 800b
s_terminalTaskStack     = 400   = 1600b

Total                           = 13688b


Heap-wise, there is (unfortunately) a lot of dynamic allocation going on, so peak usage is not
easily to determine statically.
For guidance, the heap on the IPA1 version of the above code is ~60KB in size, so that represents
a maximum.
I do know that we don't come anywhere near using all of that in the SMIP encironment which is
relatively light, so conservatively halve that to 30KB heap.


So...
Code-wise: <400KB
RAM-wise: ~70KB (static) + 16KB (stack) + ~30KB (heap) = 116KB



(Slack discussion with Matt).

Yes, we need a multitasking OS (of any description really, we currently support FreeRTOS, Linux & whatever the modem is running in SMIP). We have an abstraction layer to adapt and no difficult requirement other than basic tasks/mutex/semaphores/queues/etc.
09:58
We do have a "high-res" timer that helps us, but is not a requirement
09:58
generally, timing requirements are on the order of 10's of milliseconds, not microseconds for example.
09:59
a "Nice to have" is a dedicated debug-log channel for our ctrlporthub.... that has been a sore point in SMIP development.
09:59
We can support either a dedicated HSM (as in SMIP) or our own filesystem (which can also be adapted to the host).
10:01
CPU-usage requirements tend to be pretty low as we're dealing with ~1KB/second of data max, so on a 38MHzCortex-M, our typical CPU-usage is ~2%
10:04
Regarding how we transfer data to/from the cellular side, we have a dedicated API for that that is effectively equivalent to PPP on a modem.
10:06
Architecture-wise, we can support most. SMIP is an ARMv7 (think original RPi), we obviously support ARM-Cortex-M, x86 (linux), ARMhf (linux). Again, we have an abstraction layer for this stuff.
10:07
(Thats all that comes to mind right now).
10:09
Oh yeah... connection to the tranceiver is SPI to a CC1200 (we currently don't have drivers for anything other than CC1200 or EFR32 unfortunately).

-------------------------------------------------
mbedtls upgrade/downgrade issue:

Bad:

<HDLC len="75" >
<TargetAddress Value="1" />
<SourceAddress Value="1" />
<!--AARQ frame.-->
<FrameType Value="10" />
<PDU>
<AssociationRequest>
  <ApplicationContextName Value="LN" />
  <SenderACSERequirements Value="1" />
  <MechanismName Value="High" />
  <CallingAuthentication Value="30654537456363633938356635344342" />
  <InitiateRequest>
    <ProposedDlmsVersionNumber Value="6" />
    <ProposedConformance>
      <ConformanceBit Name="Action" />
      <ConformanceBit Name="SelectiveAccess" />
      <ConformanceBit Name="Set" />
      <ConformanceBit Name="Get" />
      <ConformanceBit Name="MultipleReferences" />
      <ConformanceBit Name="BlockTransferWithAction" />
      <ConformanceBit Name="BlockTransferWithSetOrWrite" />
      <ConformanceBit Name="BlockTransferWithGetOrRead" />
    </ProposedConformance>
    <ProposedMaxPduSize Value="65535" />
  </InitiateRequest>
</AssociationRequest>
</PDU>

</HDLC>
<HDLC len="87" >
<TargetAddress Value="1" />
<SourceAddress Value="1" />
<!--AARE frame.-->
<FrameType Value="30" />
<PDU>
<AssociationResponse>
  <ApplicationContextName Value="LN" />
  <AssociationResult Value="0" />
  <ResultSourceDiagnostic>
    <!--AUTHENTICATION_REQUIRED-->
    <ACSEServiceUser Value="14" />
  </ResultSourceDiagnostic>
  <ResponderACSERequirement Value="1" />
  <RespondingAuthentication Value="BE5F2F97CB6532994CA6D369B45A2D96" />
  <MechanismName Value="High" />
  <InitiateResponse>
    <NegotiatedDlmsVersionNumber Value="6" />
    <NegotiatedConformance>
      <ConformanceBit Name="Action" />
      <ConformanceBit Name="SelectiveAccess" />
      <ConformanceBit Name="Set" />
      <ConformanceBit Name="Get" />
      <ConformanceBit Name="MultipleReferences" />
      <ConformanceBit Name="BlockTransferWithSetOrWrite" />
      <ConformanceBit Name="BlockTransferWithGetOrRead" />
    </NegotiatedConformance>
    <NegotiatedMaxPduSize Value="256" />
    <VaaName Value="7" />
  </InitiateResponse>
</AssociationResponse>
</PDU>
</HDLC>



Good:

<HDLC len="75" >
<TargetAddress Value="1" />
<SourceAddress Value="1" />
<!--AARQ frame.-->
<FrameType Value="10" />
<PDU>
<AssociationRequest>
  <ApplicationContextName Value="LN" />
  <SenderACSERequirements Value="1" />
  <MechanismName Value="High" />
  <CallingAuthentication Value="30654537456363633938356635344342" />
  <InitiateRequest>
    <ProposedDlmsVersionNumber Value="6" />
    <ProposedConformance>
      <ConformanceBit Name="Action" />
      <ConformanceBit Name="SelectiveAccess" />
      <ConformanceBit Name="Set" />
      <ConformanceBit Name="Get" />
      <ConformanceBit Name="MultipleReferences" />
      <ConformanceBit Name="BlockTransferWithAction" />
      <ConformanceBit Name="BlockTransferWithSetOrWrite" />
      <ConformanceBit Name="BlockTransferWithGetOrRead" />
    </ProposedConformance>
    <ProposedMaxPduSize Value="65535" />
  </InitiateRequest>
</AssociationRequest>
</PDU>

</HDLC>
<HDLC len="87" >
<TargetAddress Value="1" />
<SourceAddress Value="1" />
<!--AARE frame.-->
<FrameType Value="30" />
<PDU>
<AssociationResponse>
  <ApplicationContextName Value="LN" />
  <AssociationResult Value="0" />
  <ResultSourceDiagnostic>
    <!--AUTHENTICATION_REQUIRED-->
    <ACSEServiceUser Value="14" />
  </ResultSourceDiagnostic>
  <ResponderACSERequirement Value="1" />
  <RespondingAuthentication Value="793C9ECF67B359AC56ABD56AB55A2D96" />
  <MechanismName Value="High" />
  <InitiateResponse>
    <NegotiatedDlmsVersionNumber Value="6" />
    <NegotiatedConformance>
      <ConformanceBit Name="Action" />
      <ConformanceBit Name="SelectiveAccess" />
      <ConformanceBit Name="Set" />
      <ConformanceBit Name="Get" />
      <ConformanceBit Name="MultipleReferences" />
      <ConformanceBit Name="BlockTransferWithSetOrWrite" />
      <ConformanceBit Name="BlockTransferWithGetOrRead" />
    </NegotiatedConformance>
    <NegotiatedMaxPduSize Value="256" />
    <VaaName Value="7" />
  </InitiateResponse>
</AssociationResponse>
</PDU>
</HDLC>

----------------------------------------------
technical debt

- Improve ability to debug in the field. debug-log-to-file, sniff-to-file, coordinated-net-stats.
- Meter-driver complexity. Speed up meter-integration.
- Robust credentials upgrade. Could be disastrous if it goes wrong in the field as meters could be bricked (not nodes).
- Robust (atomic, versioned) configuration (meter & node). Provide proper control over version of configuration on nodes&meter.
- Communications watchdog. Provide a recovery mechanism if comms are ever lost.
- Recovery mechanism. Ability to recover node to a safe image if OTA ever goes bad.
- Common programming mechanism. e.g. Use FTDI programmers throughout instead of Jlink/STLInk/FTDI combinations.
- Documentation (HLD). Improve development speed by sharing knowledge.
- Profiling for server (for performance issues). Server always under pressure for performance, this provides data to make that possible.
- dev-stack: integration of dev-conf, outstanding bugs, usability. Currently has different issues for everyone.
- sample-timestamps-on-SMA: At this point, we know it fixes so many issues, I consider it tech-debt.
- Static analysis. Just goood practice.
- Fuzz Testing. Just goood practice.
- Agent is over-tasked: remove some to reduce resource-usage. Allow us to flexible as to platform in future.
- Manage global meter-driver state better (needed for MDCU work).
- Simplify abstractions: "AddOns" is pointless for example. Part of reducing the amount of code we maintain.
- Prioritisation in Agent mq. Eases a lot of problems (e.g. last-gasp would have been easier if we had this).
- MISRA issues. Specifically function pointer usage and no handling of return-values. Good practice & something that we can use to indicate our quality.
- Use of AXDR library instead of direct byte manipulation. Part of makign meter-driver more maintainable & consistent.
- Meter-driver is *seriously* inefficient regarding HDLC comms with the meter, AA setup overhead is ridiculous. Needed for MDCU also. Reduces timing issues sucah as queue overflows.
- Configuration re-org (using aliases). Simplify for end-user.
- Test automation. I consider any manual-test as technical debt.
- Improve power-control.


----------------------------------------------
pcap analysis:

tshark -r 10plus10.pcap -Y "ipv6.addr eq 2a03:dd00:803:3::149" -T fields -e data | xxd -r -p | strings > tt
tshark -r 10plus10.pcap -T fields -e frame.time -e ipv6.src -e ipv6.dst -e udp.port -E header=y -E separator=,
tshark -r /mnt/Work/Logs/10plus10.pcap -T fields -e frame.time -e ipv6.src -e ipv6.dst -e udp.port -e ip.proto -e ip.len  -E header=y -E separator=& > /mnt/Work/Logs/10plus10.csv
tshark -r /mnt/Work/Logs/10plus10.pcap -T fields -e frame.time -e ipv6.src -e ipv6.dst -e udp.port -e ip.proto -e ip.len -e ip.src -e ip.dst -e _ws.col.Protocol -e _ws.col.Info  -E header=y -E separator=@ > /mnt/Work/Logs/10plus10_3.csv
cat t2.tsv | sed -e "s/$(echo -ne '\u2192')/->/g" > t3.csv

SELECT DATE_ADD(DATE(`frame.time`), INTERVAL (HOUR(`frame.time`)*60*60 + MINUTE(`frame.time`)*60 + SECOND(`frame.time`)) SECOND) AS __timestamp, COUNT(*) AS count FROM `PacketTrace` GROUP BY DATE_ADD(DATE(`frame.time`), INTERVAL (HOUR(`frame.time`)*60*60 + MINUTE(`frame.time`)*60 + SECOND(`frame.time`)) SECOND) LIMIT 50000

tshark -r 10plus10.pcap -T fields -e data | xxd -r -p | strings

tshark -r 10plus10.pcap -T fields -e data -e frame.time -E separator=@ | python3 -c $'import binascii;import sys;\nfor line in sys.stdin: r=line.split("@");r[0]=binascii.unhexlify(r[0]).decode("utf-8");print("@".join(r))'

tshark -r 10plus10.pcap -T fields -e data -e frame.time -e ipv6.src -e ipv6.dst -e udp.port -e ip.proto -e ip.len -e ip.src -e ip.dst -e _ws.col.Protocol -e _ws.col.Info  -E separator=@ | python3 -c $'import binascii;import sys;import re;\nfor line in sys.stdin: r=line.split("@");r[0]=re.sub("[^\w\{\},\\" ;:]+","",binascii.unhexlify(r[0]).decode("utf-8",errors="ignore"));print("@".join(r));' | strings

tshark -r trace3.pcap -Y "udp.port eq 45588" -V > t

PacketTrace_JGroups:
./ParsePackets.sh > t5.csv

------------------------------------
cluster issue

ClusterViewService::send()
RemoteDTLSService::expireConnection()
DTLSConnectionRegistry
DTLSConnectionMigrator

https://confluence.cyco.io/display/ENG/%5BDesignSpec%5D+C4+-+Terminal+State+Management+on+Server+Side

nms/config/cluster_view.xml:
mcast_recv_buf_size 5M
ucast_recv_buf_size 5M




{
    "payload":
    {
        "message_type":"Login",
        "message":
        "{
            "nodeId":"8a738402001a33e1",
            "aliasId":"88738402001A33E1",
            "certificateIdentity":"88738402001A33E1",
            "sourceAddress":
            {
                "address":"2a03:dd00:251:30f2:8873:8402:1a:33e1",
                "port":5684
            },
            "terminalType":"GATEWAY",
            "hardwareVersion":"PRODUCTION_SKU2",
            "firmwareVersion":"smip:v90",
            "isDnsUpdated":false,
            "dbTerminalId":877123049,
            "configurationHash":"a11b5ebce1920aa776717bb3a4e4864b"
        }",
        "class":"com.connode.service.terminal.app.Login",
        "terminal_id":"8a738402001a33e1"
    },
    "sendOffline":true,"type":"IncomingMessage"
}


Traffic rates per minute during ramp up:
UDP:        454k    296k    165k    93.1k
DTLSv1.2:   1.36k   545     25      11
multiple:   333     543     303     843


--------------------------------
holiday:

ok, for next years hols, I'll book April 5th->9th and August 2nd to 6th an 30/31st of August.



------------------------------------------------------------------
Wi-SUN notes:
- What:
    - Our naming is not great. Omnimesh-the-application and Omnimesh-the-mesh.
- Why:
    - interoperability
    - standards compliance
    - market has spoken.
- Omnimesh vs Wi-SUN overview
    - Authentication
        - bottom-up as opposed to top-down in Omnimesh.
        - Cooperates with licensing/provisioning.
    - interoperability: Omnimesh
    - FHSS (Frequency Hopping Spread Spectrum)
        - Uses a wide frequency band and only transmits on each frequency for a small amount of time (milliseconds).
        - Avoids interference (certain types of noise can be avoided)
        - Difficult to jam due to need to know hopping-schedule or use wide-band jammer which is energy intensive.
        -

Things that are the same:
    - Application (SMA & Agent)
    - RPL
    - DTLS
    - 802.15.4
    - IPv6
    - CoAP

Things that are different:
    - Authentication
    - radio/PHY layer uses different parts of 802.15.4. Not compatible with Omnimesh-mesh.
    - Gateway now has a role to play other than "dumb router".

---------------------------------------
ble bluetooth sniffer

https://jimmywongiot.com/2020/07/08/how-to-install-nrf-sniffer-through-nrf52-dk-board/

---------------------------------------

Guys,
I've been looking at the "10+10 load" dataset and have some points to share.

The above chart shows the total number of packets passed between the cluster-nodes during the period in question (JGroups traffic).
The points to note here are:
The traffic scales up smoothly and linearly up until just under the 8K packets/second mark.
After this point, the traffic rate becomes chaotic, but the average rate stays at about the 8K packets/second rate (i.e. no real increase in traffic rate after this point).
Note that there is a short period of no traffic, after which, the chaotic period appears to start. In fact, on closer inspection, the chaotic pattern actually starts just prior to that point.
From examination of both the server code and the packet trace, we can see that for every packet received from an Agent, a corresponding multicast packet is transmitted to the other cluster-nodes.
The linear ramp in traffic we see in these charts is directly due to a cluster-message being sent for every "FileBlock" request received.


The above chart is similar to the first with the exception of the fact that the data is now grouped by the source-address.
Note that now:
The first phase is still a linear and smooth increase up till the same point, but...
The maximum spread of the second (chaotic) phase now can be seen to continue its upward trend while its average stays flat at around 2K packets/second (per source address).
The interpretation of the above two charts is that in the second chart, the rate of packets does actually continue its upward trend but when combined together (as in the first chart), the total rate is exceeds a maximum and is then clipped to that maximum (roughly 2K packets/second).
The alternative here is that the rate naturally tops out at the 2K packets/second. This is unlikely due to the fact we can see the rate from each source increasing.

It is proposed that the chaotic pattern could be due to the limited size of the JGroups input queue causing lost packets and a consequent oscillation in the transfer rate which is due to the scheduling and queuing characteristics of the code in question.


This theory is borne out by the above chart showing the rate that "cluster_view_member" messages are received from each cluster-node (server).
These messages are sent out at 1Hz from each cluster-node and seem to act as a heartbeat indicating the health of each server to the rest of the cluster.

The initial part of the chart, which corresponds to the smooth/linear increase phase in the first two charts shows "heartbeats" at a constant 1Hz for all servers. During the chaotic traffic phase, we can see the heartbeat rate drop drastically and continue its downward trend slightly as the traffic rate increases.

It is proposed that the "flapping" of server alarms is a result of the amount of internal cluster-traffic overloading the JGroups input queue. This overload subsequently causes "cluster_view_member" messages (heartbeats) to be dropped.

What can we do about it?

As was already proposed (and tried out), in the short term, the "mcast_recv_buf_size" should be scaled to accomodate the number of nodes in the cluster. The reason why this had a beneficial effect can now be seen. By providing a larger receive-buffer, the threshold at which the pattern becomes chaotic is pushed back (to a new higher limit which was not quite sufficient in that case).

This should be however, a temporary fix. The real issue is that the internal cluster traffic scales linearly with the number of packets received. This is precisely the problem we have seen here, where the heaviest external traffic (file distribution) causes a storm of internal cluster traffic which ultimately overloads the receive buffer.
Since the size of the buffer handling this traffic does not scale with the size of the cluster, it will always have a threshold at which the behaviour becomes chaotic (as here).

 What we should aim for (and I think we can achieve) is to scale linearly (or better than linearly) with the number of nodes instead.
 Since the whole purpose of the cluster updates is to indicate the "liveness" of each Agent session, this can instead be done by a periodic update between servers that indicate to the rest of the cluster all the nodes that are "alive" in that period. This is as opposed to each server sending out an internal message for every packet received from an Agent. This is a mechanism that scales better than linearly with the number of nodes as opposed to the number of packets-transferred.

 It's also worth noting that this could also have a significant effect on performance during other stressful scenarios such as mass login & registration.

 The next steps should be to prove this effect internally with different size queues versus different cluster sizes and then provide a deployment guideline that scales this buffer size with the cluster-size.

 Once this is shown to be the correct interpretation of the data, then we can move to removing (or at least reducing) this factor as a performance bottleneck.

 SteveT



----------------------------------------
EFR32fg12p
QFN48

pins:
PB12 - PRS_CH6/7/8/9
PB13 - PRS_CH6/7/8/9

-------------------------------------------
setup:

gw:
./build/host-ctrlporthub/bin/ctrlporthub -controllerport 5001 -serial /dev/serial/by-id/usb-FTDI_TTL232R-3V3_FT9S9STV-if00-port0  -loglevel debug -logfile /Data/Logs/node285.log

main node:
./build/host-ctrlporthub/bin/ctrlporthub -controllerport 5000 -serial /dev/serial/by-id/usb-FTDI_TTL232R_FTG4DEXG-if00-port0 -loglevel debug -logfile /Data/Logs/node286.log

interferer node:
./build/host-ctrlporthub/bin/ctrlporthub -controllerport 5003 -serial /dev/serial/by-id/usb-FTDI_TTL232R_FTATHVEA-if00-port0 -loglevel debug

---------------------------------
sample time server time create time

DeviceMapper.java:

dto.setSampleTime(SerializationUtils.format(meterSample.getSampleTime()));
dto.setServerTime(SerializationUtils.format(meterSample.getCreateTime()));
dto.setNodeTime(SerializationUtils.format(meterSample.getMqTime()));


sampleTime/alarmTime    = Time @ meter
nodeTime                = Time @ node
serverTime              = Time @ server

MqTracker.java:
persistBatch()

195                     message.setCreateTime(now);
207                             payload.setCreateTime(now);
MessageWithPayloads
MessagePayload

[{'alarmActive': ['METER_LAST_GASP'],
  'alarmTime': '2021-03-10T19:08:23+00:00',
  'createTime': '2021-03-10T19:08:25Z',
  'meterAlarmId': 165757,
  'meterId': '5701333',
  'sequenceNumber': 12401}]


columns in SMA db:

mq_time:
    - From sample.setMqTime(profileMessage.getTimestamp());in DataProfileSampleMessageProcessor.
    -
create_time:
    - deviceAlarm.setCreateTime(new Date()); in DeviceAlarmMessageProcessor.java
    - Current time.


select id,create_time,mq_time,TIMEDIFF(create_time,mq_time) from meter_sample;


API response from:

In deviceMapper.java, function  covertDeviceAlarmToDTO()
result.setRegisteredTime(SerializationUtils.format(deviceAlarm.getCreateTime()));
        result.setAlarmTime(SerializationUtils.format(deviceAlarm.getAlarmTime()));

------------------------------
ubuntu 20.04 setup:

sudo cpan install XML::LibXML

------------------------------------------------
last gasp power fail pfail

- When PFAIL is signalled, store the current timestamp.
- at a random second between now and max-expected-lifetime, send the first last-gasp.
- When sending a last-gasp, schedule one again after max-expected-lifetime.
- At any point, if we get an ACK for a last-gasp, stop sending and turn off radio.
- after ACK is received, wait up to ten minutes to drain caps before rebooting.


improvements:
- Don't send node powerlost event until after last-gasp.
- Don't poison the mesh when leaving.


------------------------------------------
dev-stack setup non-executable scripts.
From Traceback when certs are failed to open.
/home/steve/.local/lib/python3.8/site-packages/omnimesh/devstack

chmod a+x  /home/steve/.local/lib/python3.8/site-packages/omnimesh/devstack/data/scripts/*.{sh.py}
chmod a+x  /home/steve/.local/lib/python3.8/site-packages/omnimesh/devstack/data/init/*

-------------------------------------------
dev-stack
dev-stack setup -n 1 -s 1 -e -a 1 -g 1

dev-stack setup -p smip -n 1 -s 1 -e -a 1 -g 1


---------------------------------
dynamic group rule:

firmwareVersion LIKE '%ipa3-fake-%'

-------------------------------
last gasp latency

SELECT `createTime`,`alarmTime`,TIMESTAMPDIFF(SECOND, `alarmTime`, `createTime`) AS latency,
       `MeterId` AS `MeterId`
FROM mdms.alarms
WHERE `alarmTime` >= '2021-03-16 11:00:00.000000'
  AND `alarmTime` < '2022-03-16 15:44:43.000000'
  AND TIMESTAMPDIFF(SECOND, `alarmTime`, `createTime`) < 900
  AND (((`type` = "METER_LAST_GASP")
        and (ABS(createTime-alarmTime) < 10000)
        AND (MeterId LIKE "5701333%")))
ORDER BY `alarmTime` DESC LIMIT 10000;

---------------------------------------------
host-smip

SMIP=yes ./pki-create-additional.sh ~/.devstack/.data/pki ~/.devstack/.data/pki/00-00-00-00-00-00-00-03 node 00-00-00-00-00-00-00-03

- use "-modemsocket" on gdb script
- pki-create-additional does not work for SMIP yet, overallocate using term-em then kill off term-em
- for tund IP, do "docker inspect devstack_tund" and look for IPAddress, use that for modem.ip



orignal filename = "file-1615996239-this-is-a-very-long-filename-that-is-greater-than-twenty-five-characters"

Good, truncated:
2021-03-17 16:52:05.082 [debug] [            filedl] {    schedule}: No more missing blocks; we are finished!
2021-03-17 16:52:05.083 [ info] [            filedl] {      filedl}: Finished downloading file file-1615996239-this-is, downloadOnly: 0


Bad, not truncated, but likely zero-initialised, so the garbage gets truncated anyway:
2021-03-17 16:54:07.499 [debug] [ smip_mock_cndfile] {      filedl}: event=[SuccessDownload]; jobId=6; filename=[file-1615996446-this-is-]

---------------------------------------------
big server:

ssh stickle@smipdev-uk-02.dev.cyanconnode.com

1NMS 1gw 1000nodes:
- htop no stress
- iotop no stress
- netstat no dropped packets

Emu_start_time:              2021-03-18 15:58:36
Current_time:                2021-03-18 16:22:36
----------Protocol statistic---
DTLS_start_time:              2021-03-18 15:58:36
Login_start_time:             2021-03-18 15:58:49
----------Protocol counters----
Handshake_finished:           1000
Handshake_ongoing:            0
Handshake_failed:             0
Current_HandshakeOK_speed:    0
Total_HandshakeOK_speed:      28
COAP_login_finished:          1000
COAP_login_ongoing:           0
COAP_login_failed:            0
Current_login_speed:          0
Total_login_speed:            31
Num_of_keepAlive_sent:        23000





1NMS 1gw 10000nodes:
timeouts on login. lots with two retries.
- stop tshark dtls_log

no IO stress, no CPU stress, no dropped packets.

Many timeouts, tund id dropping all the packets.

NMS is spewing these continuously:
2021-03-18 17:27:50,891 TRACE [dtls-scavenger] NodeStorageProvider - 0 node sessions related to revoked certificates were removed.
2021-03-18 17:27:50,892 TRACE [dtls-scavenger] NodeStorageProvider - 0 certificates superseded by 90258891559823006167477424692275432271042295726 were revoked.
2021-03-18 17:27:50,895 TRACE [dtls-scavenger] NodeStorageProvider - 0 node sessions related to revoked certificates were removed.
2021-03-18 17:27:50,896 TRACE [dtls-scavenger] NodeStorageProvider - 0 certificates superseded by 90258891559823006167477424692275432271042295823 were revoked.
2021-03-18 17:27:50,898 TRACE [dtls-scavenger] NodeStorageProvider - 0 node sessions related to revoked certificates were removed.
2021-03-18 17:27:50,899 TRACE [dtls-scavenger] NodeStorageProvider - 0 certificates superseded by 90258891559823006167477424692275432271042296017 were revoked.
2021-03-18 17:27:50,902 TRACE [dtls-scavenger] NodeStorageProvider - 0 node sessions related to revoked certificates were removed.
2021-03-18 17:27:50,903 TRACE [dtls-scavenger] NodeStorageProvider - 0 certificates superseded by 90258891559823006167477424692275432271042296114 were revoked.
2021-03-18 17:27:50,905 TRACE [dtls-scavenger] NodeStorageProvider - 0 node sessions related to revoked certificates were removed.
2021-03-18 17:27:50,906 TRACE [dtls-scavenger] NodeStorageProvider - 0 certificates superseded by 90258891559823006167477424692275432271042295920 were revoked.

--------------------------------------------
UDP buffer monitor

while true; do

        sleep 1
        date
        netstat -anus
done

---------------------------------------
docker all ip address

docker ps -q | xargs -n 1 docker inspect --format '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}} {{ .Name }}' | sed 's/ \// /'


sudo tshark -i enp0s3 -Y "ip.src==172.16.22.1 or ip.src==172.16.22.4"


-----------------------


sudo tshark -i br-0034c7db565c -w SteadyStateTimeouts10K.pcap -F libpcap


dtls addresses & timestamps.
tshark -r /mnt/SteadyStateTimeouts10K.pcap -Y "udp.port==5684" -T fields -e frame.time -e ipv6.src -e ipv6.dst -e udp.port -e ip.proto

dtls.handshake.session_id
dtls.record.connection_id
dtls.record.sequence_number
dtls.record.epoch
dtls.record.length
dtls.resumed

tshark -r /mnt/SteadyStateTimeouts10K.pcap -Y "udp.port==5684" -T fields -e frame.time -e ipv6.src -e ipv6.dst -e udp.port -e ip.proto -e dtls.record.sequence_number -e dtls.record.connection_id -e dtls.record.length -e dtls.resumed

tshark -r /mnt/SteadyStateTimeouts10K.pcap -Y "udp.port==5684" -T fields -e frame.time -e ipv6.src -e ipv6.dst -e udp.port -e ip.proto -e dtls.record.sequence_number -e dtls.record.length -e dtls.resumed  -E separator=, -Eheader=y




To get the debug log and packet trace of a single agent (live) do this:

docker logs -f devstack_agent-0_1 | ag "fd5b:2b5b:5bc4:33:200:34:0:5c|\[GwId=52\]\[MeshId=5240\]" | tee /mnt/SingleAgentDebug.log

sudo tshark -i br-0034c7db565c -Y "udp.port==5684" -T fields -e frame.time -e ipv6.src -e ipv6.dst -e dtls.record.sequence_number -E separator=, -Eheader=y | ag "fd5b:2b5b:5bc4:33:200:34:0:5c" | tee /mnt/SingleAgentPackets.log


"PUT alive" period seems to be 1 minute, instead of 1 hour.

to show cluster traffic:
sudo tshark -i br-0034c7db565c -Y "udp.port==45588" -T fields -e data -e frame.time -e ipv6.src -e ipv6.dst -e udp.port -e ip.proto -e ip.len -e ip.src -e ip.dst -e _ws.col.Protocol -e _ws.col.Info  -E separator=@ | python3 -c $'import binascii;import sys;import re;\nfor line in sys.stdin: r=line.split("@");r[0]=re.sub("[^\w\{\},\\" ;:]+","",binascii.unhexlify(r[0]).decode("utf-8",errors="ignore"));print("@".join(r));' | strings

to show dtls traffic:
sudo tshark -i br-0034c7db565c -Y "udp.port==5684"


-----------------------------------

S~BVipa3-sei-dlms-mbedtls:v21.2.14+b27263+g637d171 Hsc 20000:0/0@3003500L46235S20010e00


1-03-19 21:45:10.015 [debug] [               emu]: Send DTLS: buf=0x5573dc1dc990, size=48. Dtls sz=122. To 172.16.21.4:8050
===========TERM EMU STATISTIC========
----------Common info ---------
Emu_start_time:              2021-03-19 21:12:16
Current_time:                2021-03-19 21:45:16
----------Protocol statistic---
DTLS_start_time:              2021-03-19 21:12:18
Login_start_time:             2021-03-19 21:12:20
----------Protocol counters----
Handshake_finished:           9902
Handshake_ongoing:            100
Handshake_failed:             1804
Current_HandshakeOK_speed:    0
Total_HandshakeOK_speed:      5
COAP_login_finished:          9900
COAP_login_ongoing:           0
COAP_login_failed:            0
Current_login_speed:          0
Total_login_speed:            5
Num_of_keepAlive_sent:        0
Current_keepAlive_speed:      0
Num_of_event_sent:            0
Current_event_speed:          0
Num_of_reading_sent:          0
Current_reading_speed:        0

---------------------------------------

UDP 01:54  UDP         [fd5b:2b5b:5bc4:408:200:409:0:1]:5684 [fd00::100]:5684   [fd00::101]:5684
UDP 01:47  UDP         [fd5b:2b5b:5bc4:fef:200:ff0:0:1]:5684 [fd00::100]:5684   [fd00::102]:5684
UDP 06:44  ASSURED     [fd5b:2b5b:5bc4:17b8::]:0 [fd00::100]:5684   [fd00::109]:5684
UDP 01:59  UDP         [fd5b:2b5b:5bc4:817:200:818:0:1]:5684 [fd00::100]:5684   [fd00::106]:5684
UDP 06:43  ASSURED     [fd5b:2b5b:5bc4:fde::]:0 [fd00::100]:5684   [fd00::102]:5684
UDP 01:51  UDP         [fd5b:2b5b:5bc4:13e5:200:13e6:0:1]:5684 [fd00::100]:5684   [fd00::104]:5684
UDP 02:18  UDP         [fd5b:2b5b:5bc4:2384:200:2385:0:1]:5684 [fd00::100]:5684   [fd00::102]:5684
UDP 06:41  ASSURED     [fd5b:2b5b:5bc4:179f::]:0 [fd00::100]:5684   [fd00::107]:5684
UDP 01:54  UDP         [fd5b:2b5b:5bc4:bc7:200:bc8:0:1]:5684 [fd00::100]:5684   [fd00::110]:5684
UDP 02:19  UDP         [fd5b:2b5b:5bc4:13e9:200:13ea:0:1]:5684 [fd00::100]:5684   [fd00::104]:5684
UDP 01:54  UDP         [fd5b:2b5b:5bc4:3f1:200:3f2:0:1]:5684 [fd00::100]:5684   [fd00::102]:5684
UDP 01:41  UDP         [fd5b:2b5b:5bc4:bd4:200:bd5:0:1]:5684 [fd00::100]:5684   [fd00::107]:5684
UDP 06:51  NONE        [fd5b:2b5b:5bc4:2394::]:0 [fd00::100]:5684   [fd00::106]:5684
UDP 06:38  ASSURED     [fd5b:2b5b:5bc4:1f54::]:0 [fd00::100]:5684   [fd00::108]:5684
UDP 01:55  UDP         [fd5b:2b5b:5bc4:fcf:200:fd0:0:1]:5684 [fd00::100]:5684   [fd00::110]:5684
UDP 01:53  UDP         [fd5b:2b5b:5bc4:fac:200:fad:0:1]:5684 [fd00::100]:5684   [fd00::106]:5684
UDP 06:45  ASSURED     [fd5b:2b5b:5bc4:439::]:0 [fd00::100]:5684   [fd00::107]:5684
UDP 06:40  ASSURED     [fd5b:2b5b:5bc4:21::]:0 [fd00::100]:5684   [fd00::101]:5684
UDP 01:40  UDP         [fd5b:2b5b:5bc4:233b:200:233c:0:1]:5684 [fd00::100]:5684   [fd00::104]:5684
UDP 06:36  ASSURED     [fd5b:2b5b:5bc4:1f43::]:0 [fd00::100]:5684   [fd00::102]:5684
UDP 02:34  UDP         [fd5b:2b5b:5bc4:2381:200:2382:0:1]:5684 [fd00::100]:5684   [fd00::109]:5684
UDP 01:58  UDP         [fd5b:2b5b:5bc4:17d9:200:17da:0:1]:5684 [fd00::100]:5684   [fd00::101]:5684
UDP 01:57  UDP         [fd5b:2b5b:5bc4:17c8:200:17c9:0:1]:5684 [fd00::100]:5684   [fd00::102]:5684
UDP 06:44  ASSURED     [fd5b:2b5b:5bc4:fe8::]:0 [fd00::100]:5684   [fd00::104]:5684
UDP 01:57  UDP         [fd5b:2b5b:5bc4:13a2:200:13a3:0:1]:5684 [fd00::100]:5684   [fd00::101]:5684
UDP 06:37  ASSURED     [fd5b:2b5b:5bc4:1f4f::]:0 [fd00::100]:5684   [fd00::104]:5684
UDP 06:39  ASSURED     [fd5b:2b5b:5bc4:1b78::]:0 [fd00::100]:5684   [fd00::109]:5684
UDP 01:59  UDP         [fd5b:2b5b:5bc4:17c3:200:17c4:0:1]:5684 [fd00::100]:5684   [fd00::102]:5684
UDP 06:42  ASSURED     [fd5b:2b5b:5bc4:1b8a::]:0 [fd00::100]:5684   [fd00::102]:5684
UDP 01:46  UDP         [fd5b:2b5b:5bc4:1ba3:200:1ba4:0:1]:5684 [fd00::100]:5684   [fd00::108]:5684
UDP 06:40  ASSURED     [fd5b:2b5b:5bc4:7f8::]:0 [fd00::100]:5684   [fd00::107]:5684
UDP 06:36  ASSURED     [fd5b:2b5b:5bc4:3::]:0 [fd00::100]:5684   [fd00::102]:5684
UDP 01:58  UDP         [fd5b:2b5b:5bc4:1bac:200:1bad:0:1]:5684 [fd00::100]:5684   [fd00::107]:5684
UDP 02:23  UDP         [fd5b:2b5b:5bc4:2390:200:2391:0:1]:5684 [fd00::100]:5684   [fd00::106]:5684
UDP 01:59  UDP         [fd5b:2b5b:5bc4:bb9:200:bba:0:1]:5684 [fd00::100]:5684   [fd00::109]:5684
UDP 06:36  ASSURED     [fd5b:2b5b:5bc4:1391::]:0 [fd00::100]:5684   [fd00::103]:5684
UDP 01:52  UDP         [fd5b:2b5b:5bc4:bca:200:bcb:0:1]:5684 [fd00::100]:5684   [fd00::105]:5684
UDP 01:42  UDP         [fd5b:2b5b:5bc4:17:200:18:0:1]:5684 [fd00::100]:5684   [fd00::109]:5684
UDP 06:40  ASSURED     [fd5b:2b5b:5bc4:1f5e::]:0 [fd00::100]:5684   [fd00::106]:5684
UDP 06:47  ASSURED     [fd5b:2b5b:5bc4:839::]:0 [fd00::100]:5684   [fd00::103]:5684
UDP 01:50  UDP         [fd5b:2b5b:5bc4:17cc:200:17cd:0:1]:5684 [fd00::100]:5684   [fd00::104]:5684
UDP 02:10  UDP         [fd5b:2b5b:5bc4:826:200:827:0:1]:5684 [fd00::100]:5684   [fd00::104]:5684
UDP 06:39  ASSURED     [fd5b:2b5b:5bc4:fb7::]:0 [fd00::100]:5684   [fd00::102]:5684
UDP 06:40  ASSURED     [fd5b:2b5b:5bc4:1b7e::]:0 [fd00::100]:5684   [fd00::108]:5684
UDP 06:45  ASSURED     [fd5b:2b5b:5bc4:43c::]:0 [fd00::100]:5684   [fd00::108]:5684
UDP 06:44  ASSURED     [fd5b:2b5b:5bc4:1b9f::]:0 [fd00::100]:5684   [fd00::108]:5684
UDP 02:53  UDP         [fd5b:2b5b:5bc4:82d:200:82e:0:1]:5684 [fd00::100]:5684   [fd00::110]:5684
UDP 06:44  ASSURED     [fd5b:2b5b:5bc4:81c::]:0 [fd00::100]:5684   [fd00::110]:5684
UDP 06:39  ASSURED     [fd5b:2b5b:5bc4:1786::]:0 [fd00::100]:5684   [fd00::108]:5684
UDP 01:39  UDP         [fd5b:2b5b:5bc4:177c:200:177d:0:1]:5684 [fd00::100]:5684   [fd00::102]:5684
UDP 06:40  ASSURED     [fd5b:2b5b:5bc4:fc3::]:0 [fd00::100]:5684   [fd00::109]:5684
UDP 01:52  UDP         [fd5b:2b5b:5bc4:1f40:200:1f41:0:1]:5684 [fd00::100]:5684   [fd00::108]:5684
UDP 01:54  UDP         [fd5b:2b5b:5bc4:1796:200:1797:0:1]:5684 [fd00::100]:5684   [fd00::106]:5684
UDP 01:58  UDP         [fd5b:2b5b:5bc4:13d9:200:13da:0:1]:5684 [fd00::100]:5684   [fd00::107]:5684
UDP 06:44  ASSURED     [fd5b:2b5b:5bc4:2370::]:0 [fd00::100]:5684   [fd00::103]:5684
UDP 06:39  ASSURED     [fd5b:2b5b:5bc4:3ff::]:0 [fd00::100]:5684   [fd00::106]:5684
UDP 01:38  UDP         [fd5b:2b5b:5bc4:fa0:200:fa1:0:1]:5684 [fd00::100]:5684   [fd00::110]:5684
UDP 06:43  ASSURED     [fd5b:2b5b:5bc4:bfb::]:0 [fd00::100]:5684   [fd00::103]:5684


[Mon Mar 22 13:20:39 2021] Route cache is full: consider increasing sysctl net.ipv[4|6].route.max_size.
[Mon Mar 22 13:20:39 2021] IPVS: lc: UDP [fd00::100]:5684 - no destination available
[Mon Mar 22 13:20:39 2021] Route cache is full: consider increasing sysctl net.ipv[4|6].route.max_size.
[Mon Mar 22 13:20:39 2021] IPVS: lc: UDP [fd00::100]:5684 - no destination available


fergicci@smipdev-uk-02:/home/fergicci$
fergicci@smipdev-uk-02:/home/fergicci$ sysctl net.ipv4.route.max_size
net.ipv4.route.max_size = 2147483647
fergicci@smipdev-uk-02:/home/fergicci$ sysctl net.ipv6.route.max_size
net.ipv6.route.max_size = 4096


sysctl net.ipv6.route.max_size=32768



<3>[(null):57490] Failed to insert peer into hash table

o<7>[172.16.21.15:41231] New peer setup
<7>[172.16.21.15:39498] Found existing tunnel by ID, reusing
<7>[172.16.21.15:39498] New peer setup
<7>[172.16.21.15:38535] Found existing tunnel by ID, reusing
<7>[172.16.21.15:38535] New peer setup
<7>[172.16.21.15:58119] Found existing tunnel by ID, reusing
<7>[172.16.21.15:58119] New peer setup
<7>[172.16.21.15:41090] Found existing tunnel by ID, reusing
<7>[172.16.21.15:41090] New peer setup
<7>[172.16.21.15:41298] Found existing tunnel by ID, reusing
<7>[172.16.21.15:41298] New peer setup
<7>[172.16.21.15:42728] Found existing tunnel by ID, reusing
<7>[172.16.21.15:42728] New peer setup
<7>New peer
<7>[172.16.21.15:40080] New peer setup
<7>New peer
<3>[(null):57490] Failed to insert peer into hash table


docker logs --tail 1000000 -f devstack_tund_1 2>&1 | ag "peer|ail"

sysctl net.ipv6.route.max_size=524288



------------------------------

ssh -L 8080:smipdev-uk-02.dev.cyanconnode.com:8080 stickle@smipdev-uk-02.dev.cyanconnode.com

-----------------------------------------------
GW7 gap analysis (from IGW branches)


New tickets:
- Bring IGW branch(es) up to date and together into GW7 branch. (1d)
- IP stack refactor. (2w)
- slot id scheme (3d)
- board revision. (1w)
- backplane crypto (WLL). (1w)
- PSU monitoring & control (2w)
- integration with server/nameplate/modem info/etc. (3d)
- Low power mode (2w)
- Graceful shutdown coordinated from master node (2d)
- NETSTAT/DEVSTAT control from master. (2d)
- Production-jig (new jig & sw required, big job).

Existing tickets:
CND-9961 (IGW) I2C error handling	(1w)
CND-10153 (IGW) IGW dev branch clean up	(2d)
CND-9957 (IGW) Add configurable net routing to IPCore (2w)
CND-9959 (IGW) Monitoring Statistics (2w)
CND-9953 (IGW) Configuration Proxy	(3d)
CND-9954 (IGW) MQ Proxy  (1w)
CND-9955 (IGW) event Proxy and filter (2d)
CND-9956 (IGW) Internal file distribution (3d)
CND-9960 (IGW) Node upgrade for master and slave (2w)
CND-9962 (IGW) Internal time distribution (1w)
CND-9928 TUND: add option to support peer using subnet (for dual mesh, maybe not needed) (1w)

Related branches:
origin/IGW-backplane-comms
origin/IGW-host-i2c-support
origin/lixin/igw-fwupdate
origin/lixin/igw-fwupdate-2
origin/lixin/igw-monitor
origin/CNIC-IPStackRefactor


FYI: I find this on my igw7 note:
## IMPORTANT NOTE: agent uses subnet:
	(*) If agent use subnet, then tuin6d MUST use my new version:
		https://gitlab.cyco.io/Omnimesh/tund/-/commits/support-peer-subnet/
	(*) If use old tun6d: agent code
	(1) address.c
		addressSetPrefix(const IPadr* prefix)
	        // Unicast address: set the last N bit of prefix to as agent subnets
	        //myPrefix.x[7] &=  ~((1U << SUBNET_BIT) - 1);
	        //myPrefix.x[7] |= slotIdGet() & ((1U << SUBNET_BIT) - 1);
	(2) i2cip.c
		i2cipRoute(*)
	       //ifaceAddr->address  = (addressGetSlotIdFromAddress(dst) + 1) << 1;
           ifaceAddr->address = (1 + 1 ) << 1; (edited)

--------------------------
SMIP cluster investigation changes:
- Stop health.py removing ipvs routes by making it think the servers are always online.
- tun6d --timeout set to 3600 instead of 300 to stop connections being garbage-collected.
- Stop the term-em from sending keepalives every 60 seconds (now 3600).
- stopped tun6d "reusing" hash-table entries and instead remove & create anew.
- Stopped tun6d from exiting when an entry cant be made in the hash-table (now carries on and ignores).
- Fixed a minor issue picked up by newer compiler regarding a potential buffer overlow in snprintf.
- Tuned the kernel for large numbers of routes, i.e. from gateways (sysctl net.ipv6.route.max_size=524288).
- Killed the garbage-collection in tun6d completely to prevent any question of it removing live connections.


Combined, these changes mean:
- tund does not garbage-collect connections too frequently (or ever).
- term-em does not flood the server with keep-alives.
- the kernel can support large numbers of gateways (should be scaled appropriately).
- IPVS always maintains open routes to all servers regardless of health state.
- tund is being less "intelligent" and hopefully more reliable. There is still a known issue with tund getting
a connection from a NULL address that could have previously been causing issues (needs investigation).
- IPVS now maintains multiple thousands of active connections stably.

------------------------------------------
smip cluster


show agent activity:
docker logs --tail 100  -f devstack_agent-0_1

Show server activity:
tail -f nms-0/logs/server.log

Show tund activity:
docker logs --tail 100 -f  devstack_tund_1 2>&1

Show DTLS activity:
sudo tshark -i br-0034c7db565c -Y "udp.port==5684"

Show cluster activity:
sudo tshark -i br-0034c7db565c -Y "udp.port==45588"

Show number of ipvs active connections:
docker exec -it devstack_tund_1 ipvsadm -L -c -n | wc -l

--------------------------------------
Performance Analysis

- Network
    - Receive
    - Transmit
    - Port
    - Protocol
    - IP
    - MAC
    - Source
    - Destination
    - Rate
    - Timestamps
- Disk
    - Read
    - Write
    - Processes
    - Files
    - Timestamps
- CPU
    - Processes
    - RAM
    - Timestamps
- Application
    - Instrumentation

- Performance
    - Local daemon
    - Interactive/Analysis mode
        - Interactive mode = analysis on frequent/short snapshots for quick feedback
        - Analysis mode = long-term capture, full/slow analysis
    - Minimal overhead

- Presentation
    - Charting
    - Identify correlations between all components.

- ML for identifying patterns.
    - Anomaly detection
    - Intrusion detection

- Multi-machine monitoring
    - remote collection
    - centralised analysis

- Implimentation:
    - SQLite?
    - Superset?
    - Python?
    - Optimise later.

MVP:
    - tshark->sqlite


-----------------------
release:

CNIC7-dev
Modem-control-improvments
CNIC7-dev-Modem-control-improvments
DailyLoadScheduleMissing

+ interface repo

------------------------

activeFiledlJobs        = 1000
fileBlockMessageSize    = 200 (bytes)
recvFileBlockRate       = 2   (per second)

bufferSize              = (activeFiledlJobs * fileBlockMessageSize) / recvFileBlockRate
                        = (1000 * 200) / 2
                        = 100,000 bytes

-------------------------------------------
saturate ethernet:

iperf -c cyan-emng104 -u -t 300 -n 300000000 -b 100000pps
iperf -s

------------------------------------------------------------
Client connecting to cyan-emng104, UDP port 5001
Sending 1470 byte datagrams, IPG target: 10.00 us (kalman adjust)
UDP buffer size: 40.1 MByte (default)
------------------------------------------------------------
[  3] local 172.16.32.110 port 51949 connected with 172.16.32.100 port 5001
[ ID] Interval       Transfer     Bandwidth
[  3]  0.0- 2.1 sec   286 MBytes  1.16 Gbits/sec
[  3] Sent 204082 datagrams
[  3] Server Report:
[  3]  0.0- 2.2 sec   250 MBytes   954 Mbits/sec   0.000 ms 2147101060/2147279566
 (1e+02%)
steve@server-dev4:~/Analysis/10plus10load$


ethtool -S eno1

netstat -6anus

cat /proc/net/dev

watch netstat -6anus

-----------------------------------
analysis

tshark -r smchlw-mesh-6-20210120-2plus2_Load.pcap -Y "udp.port==45588" -T fields -e frame.time -e _ws.col.Info -E separator=@ -Eheader=y | sed -e "s/45588.*45588 Len=//g"

------------------------------------
eps bearer l210 l280

good L210:
2021-03-26 13:32:14.786 #1   001bc50c6005a345 <log> 0:00:18.088 [debug] [     at_chat] {    modem}: rx: AT+CESQ
2021-03-26 13:32:14.786 #1   001bc50c6005a345 <log> 0:00:18.094 [debug] [     at_chat] {    modem}: +CESQ: 99,99,255,255,28,67
2021-03-26 13:32:14.786 #1   001bc50c6005a345 <log> 0:00:18.102 [ info] [       modem] {    modem}: Signal quality: 99 99 255 255 28 67
2021-03-26 13:32:14.786 #1   001bc50c6005a345 <log> 0:00:18.110 [debug] [     at_chat] {    modem}: OK
2021-03-26 13:32:14.962 #1   001bc50c6005a345 <log> 0:00:18.257 [debug] [     at_chat] {    modem}: rx: ATD*99***4#
2021-03-26 13:32:14.962 #1   001bc50c6005a345 <log> 0:00:18.264 [debug] [     at_chat] {    modem}: CONNECT
2021-03-26 13:32:14.962 #1   001bc50c6005a345 <log> 0:00:18.270 [debug] [       modem] {    modem}: Registered -> Online
2021-03-26 13:32:14.962 #1   001bc50c6005a345 <log> 0:00:18.277 [ info] [         ppp] {    modem}: ******** PPP UP, Start LCP Negotiation ********
2021-03-26 13:32:14.962 #1   001bc50c6005a345 <log> 0:00:18.287 [debug] [      ppp_cp] {    modem}: lcp(tx): #1 ConfReq (14)
2021-03-26 13:32:14.962 #1   001bc50c6005a345 <log> 0:00:18.299 [debug] [     ppphdlc] {    modem}: start frame
2021-03-26 13:32:15.005 #1   001bc50c6005a345 <log> 0:00:18.305 [debug] [      ppp_cp] {    modem}: lcp(rx): #1 ConfAck (14)
2021-03-26 13:32:15.005 #1   001bc50c6005a345 <log> 0:00:18.313 [debug] [     ppphdlc] {    modem}: start frame
2021-03-26 13:32:15.006 #1   001bc50c6005a345 <log> 0:00:18.319 [debug] [      ppp_cp] {    modem}: lcp(rx): #0 ConfReq (22)
2021-03-26 13:32:15.006 #1   001bc50c6005a345 <log> 0:00:18.327 [debug] [         lcp] {    modem}: Configure ACCM: NAK to 0
2021-03-26 13:32:15.006 #1   001bc50c6005a345 <log> 0:00:18.334 [debug] [         lcp] {    modem}: Configure authentication protocol: Reject
2021-03-26 13:32:15.065 #1   001bc50c6005a345 <log> 0:00:18.343 [debug] [      ppp_cp] {    modem}: lcp(tx): #0 ConfRej (8)
2021-03-26 13:32:15.065 #1   001bc50c6005a345 <log> 0:00:18.353 [debug] [     ppphdlc] {    modem}: start frame
2021-03-26 13:32:15.065 #1   001bc50c6005a345 <log> 0:00:18.360 [debug] [      ppp_cp] {    modem}: lcp(rx): #1 ConfReq (18)
2021-03-26 13:32:15.065 #1   001bc50c6005a345 <log> 0:00:18.367 [debug] [      ppp_cp] {    modem}: lcp(tx): #1 ConfAck (18)
2021-03-26 13:32:15.065 #1   001bc50c6005a345 <log> 0:00:18.378 [ info] [         ppp] {    modem}: ******** LCP Up, Start IPCP Negotiation ********
2021-03-26 13:32:15.065 #1   001bc50c6005a345 <log> 0:00:18.388 [debug] [      ppp_cp] {    modem}: ipcp(tx): #1 ConfReq (16)
2021-03-26 13:32:16.109 #1   001bc50c6005a345 <log> 0:00:19.406 [debug] [     ppphdlc] {    modem}: start frame
2021-03-26 13:32:16.109 #1   001bc50c6005a345 <log> 0:00:19.412 [debug] [      ppp_cp] {    modem}: ipcp(rx): #1 ConfRej (4)
2021-03-26 13:32:16.109 #1   001bc50c6005a345 <log> 0:00:19.420 [debug] [      ppp_cp] {    modem}: ipcp(tx): #2 ConfReq (16)
2021-03-26 13:32:16.109 #1   001bc50c6005a345 <log> 0:00:19.430 [debug] [     ppphdlc] {    modem}: start frame
2021-03-26 13:32:16.109 #1   001bc50c6005a345 <log> 0:00:19.437 [debug] [      ppp_cp] {    modem}: ipcp(rx): #2 ConfReq (10)
2021-03-26 13:32:16.163 #1   001bc50c6005a345 <log> 0:00:19.444 [ info] [        ipcp] {    modem}: Peer want to use address 100.88.92.239
2021-03-26 13:32:16.163 #1   001bc50c6005a345 <log> 0:00:19.453 [debug] [      ppp_cp] {    modem}: ipcp(tx): #2 ConfAck (10)
2021-03-26 13:32:16.163 #1   001bc50c6005a345 <log> 0:00:19.462 [debug] [     ppphdlc] {    modem}: start frame
2021-03-26 13:32:16.163 #1   001bc50c6005a345 <log> 0:00:19.469 [debug] [      ppp_cp] {    modem}: lcp(tx): #2 ProtoRej (20)
2021-03-26 13:32:16.163 #1   001bc50c6005a345 <log> 0:00:19.480 [debug] [     ppphdlc] {    modem}: start frame
2021-03-26 13:32:16.163 #1   001bc50c6005a345 <log> 0:00:19.487 [debug] [      ppp_cp] {    modem}: ipcp(rx): #2 ConfNak (22)
2021-03-26 13:32:17.129 #1   001bc50c6005a345 <log> 0:00:20.420 [debug] [      ppp_cp] {    modem}: ipcp(tx): #3 ConfReq (16)
2021-03-26 13:32:17.129 #1   001bc50c6005a345 <log> 0:00:20.433 [debug] [     ppphdlc] {    modem}: start frame
2021-03-26 13:32:17.129 #1   001bc50c6005a345 <log> 0:00:20.439 [debug] [      ppp_cp] {    modem}: ipcp(rx): #3 ConfAck (16)
2021-03-26 13:32:17.129 #1   001bc50c6005a345 <log> 0:00:20.447 [ info] [   ipv4/core] {    modem}: cellular: address 100.88.92.239/32 gw 0.0.0.0 dns 117.96.122.42
2021-03-26 13:32:17.129 #1   001bc50c6005a345 <log> 0:00:20.458 [event] [      conman] {    modem}: cellular4 is now up
2021-03-26 13:32:17.142 #1   001bc50c6005a345 <log> 0:00:20.466 [debug] [ uplink-tun6] { schedule}: Set state on cellular DOWN -> STARTING



Bad L280:
2021-03-26 17:25:35.592 #1   001bc50c6005a345 <log> 0:08:35.227 [debug] [     at_chat] {    modem}: rx: AT+COPS?
2021-03-26 17:25:35.592 #1   001bc50c6005a345 <log> 0:08:35.234 [debug] [     at_chat] {    modem}: +COPS: 0,0,"IND airtel",7
2021-03-26 17:25:35.592 #1   001bc50c6005a345 <log> 0:08:35.241 [ info] [       modem] {    modem}: Operator: IND airtel, AcT: 7
2021-03-26 17:25:35.592 #1   001bc50c6005a345 <log> 0:08:35.249 [debug] [     at_chat] {    modem}: OK
2021-03-26 17:25:35.734 #1   001bc50c6005a345 <log> 0:08:35.369 [debug] [     at_chat] {    modem}: rx: AT+CESQ
2021-03-26 17:25:35.734 #1   001bc50c6005a345 <log> 0:08:35.376 [debug] [     at_chat] {    modem}: +CESQ: 99,99,255,255,30,69
2021-03-26 17:25:35.734 #1   001bc50c6005a345 <log> 0:08:35.383 [ info] [       modem] {    modem}: Signal quality: 99 99 255 255 30 69
2021-03-26 17:25:35.734 #1   001bc50c6005a345 <log> 0:08:35.392 [debug] [     at_chat] {    modem}: OK
2021-03-26 17:25:35.882 #1   001bc50c6005a345 <log> 0:08:35.510 [debug] [     at_chat] {    modem}: rx: ATD*99***4#
2021-03-26 17:25:35.882 #1   001bc50c6005a345 <log> 0:08:35.516 [debug] [     at_chat] {    modem}: CONNECT
2021-03-26 17:25:35.882 #1   001bc50c6005a345 <log> 0:08:35.522 [debug] [       modem] {    modem}: Registered -> Online
2021-03-26 17:25:35.882 #1   001bc50c6005a345 <log> 0:08:35.529 [ info] [         ppp] {    modem}: ******** PPP UP, Start LCP Negotiation ********
2021-03-26 17:25:35.882 #1   001bc50c6005a345 <log> 0:08:35.539 [debug] [      ppp_cp] {    modem}: lcp(tx): #57 ConfReq (14)
2021-03-26 17:25:35.925 #1   001bc50c6005a345 <log> 0:08:35.553 [debug] [     ppphdlc] {    modem}: start frame
2021-03-26 17:25:35.925 #1   001bc50c6005a345 <log> 0:08:35.559 [debug] [      ppp_cp] {    modem}: lcp(rx): #57 ConfAck (14)
2021-03-26 17:25:35.925 #1   001bc50c6005a345 <log> 0:08:35.567 [debug] [     ppphdlc] {    modem}: start frame
2021-03-26 17:25:35.925 #1   001bc50c6005a345 <log> 0:08:35.573 [debug] [      ppp_cp] {    modem}: lcp(rx): #0 ConfReq (22)
2021-03-26 17:25:35.925 #1   001bc50c6005a345 <log> 0:08:35.581 [debug] [         lcp] {    modem}: Configure ACCM: NAK to 0
2021-03-26 17:25:35.925 #1   001bc50c6005a345 <log> 0:08:35.588 [debug] [         lcp] {    modem}: Configure authentication protocol: Reject
2021-03-26 17:25:35.985 #1   001bc50c6005a345 <log> 0:08:35.597 [debug] [      ppp_cp] {    modem}: lcp(tx): #0 ConfRej (8)
2021-03-26 17:25:35.985 #1   001bc50c6005a345 <log> 0:08:35.608 [debug] [     ppphdlc] {    modem}: start frame
2021-03-26 17:25:35.985 #1   001bc50c6005a345 <log> 0:08:35.615 [debug] [      ppp_cp] {    modem}: lcp(rx): #1 ConfReq (18)
2021-03-26 17:25:35.985 #1   001bc50c6005a345 <log> 0:08:35.622 [debug] [      ppp_cp] {    modem}: lcp(tx): #1 ConfAck (18)
2021-03-26 17:25:35.985 #1   001bc50c6005a345 <log> 0:08:35.633 [ info] [         ppp] {    modem}: ******** LCP Up, Start IPCP Negotiation ********
2021-03-26 17:25:35.985 #1   001bc50c6005a345 <log> 0:08:35.643 [debug] [      ppp_cp] {    modem}: ipcp(tx): #113 ConfReq (16)
2021-03-26 17:25:37.049 #1   001bc50c6005a345 <log> 0:08:36.669 [debug] [     ppphdlc] {    modem}: start frame
2021-03-26 17:25:37.049 #1   001bc50c6005a345 <log> 0:08:36.675 [debug] [      ppp_cp] {    modem}: ipcp(rx): #113 ConfRej (4)
2021-03-26 17:25:37.049 #1   001bc50c6005a345 <log> 0:08:36.683 [debug] [      ppp_cp] {    modem}: ipcp(tx): #114 ConfReq (16)
2021-03-26 17:25:37.049 #1   001bc50c6005a345 <log> 0:08:36.694 [debug] [     ppphdlc] {    modem}: start frame
2021-03-26 17:25:37.049 #1   001bc50c6005a345 <log> 0:08:36.700 [debug] [      ppp_cp] {    modem}: lcp(rx): #2 TermReq (4)
2021-03-26 17:25:37.049 #1   001bc50c6005a345 <log> 0:08:36.707 [debug] [      ppp_cp] {    modem}: lcp(tx): #2 TermAck (4)
2021-03-26 17:25:38.053 #1   001bc50c6005a345 <log> 0:08:37.700 [debug] [     ppphdlc] {    modem}: start frame
2021-03-26 17:25:38.053 #1   001bc50c6005a345 <log> 0:08:37.706 [debug] [         ppp] {    modem}: Dropping proto 0x8021 in wrong phase 1
2021-03-26 17:25:38.255 #1   001bc50c6005a345 <log> 0:08:37.908 [debug] [     at_chat] {    modem}: NO CARRIER
2021-03-26 17:25:38.403 #1   001bc50c6005a345 <log> 0:08:38.025 [debug] [     at_chat] {    modem}: rx: AT+CEER
2021-03-26 17:25:38.403 #1   001bc50c6005a345 <log> 0:08:38.031 [debug] [     at_chat] {    modem}: +CEER: "SM activation error", 148, "Unspecified GPRS error"
2021-03-26 17:25:38.403 #1   001bc50c6005a345 <log> 0:08:38.042 [ WARN] [       modem] {    modem}: +CEER: "SM activation error", 148, "Unspecified GPRS error"
2021-03-26 17:25:38.403 #1   001bc50c6005a345 <log> 0:08:38.052 [debug] [     at_chat] {    modem}: OK
2021-03-26 17:25:38.403 #1   001bc50c6005a345 <log> 0:08:38.058 [debug] [       modem] {    modem}: Online -> PostSim
2021-03-26 17:25:38.548 #1   001bc50c6005a345 <log> 0:08:38.176 [debug] [     at_chat] {    modem}: rx: AT+CREG?
2021-03-26 17:25:38.548 #1   001bc50c6005a345 <log> 0:08:38.183 [debug] [     at_chat] {    modem}: +CREG: 2,1,"08B1","0DD35501",7
2021-03-26 17:25:38.549 #1   001bc50c6005a345 <log> 0:08:38.191 [ info] [       modem] {    modem}: Registered home
2021-03-26 17:25:38.549 #1   001bc50c6005a345 <log> 0:08:38.197 [debug] [     at_chat] {    modem}: OK
2021-03-26 17:25:38.549 #1   001bc50c6005a345 <log> 0:08:38.203 [debug] [       modem] {    modem}: PostSim -> Registered



-----------------------------------------------------
intersting packet trace:

0 15
0 154
0 79
0 138
0 48
0 144
0 19
0 180
0 46
0 81
0 107
0 109
0 116
0 74
0 146
0 47
0 139
0 110
0 45
0 110
0 62
0 100
0 92
0 118
0 41
0 143
0 71
0 78
0 33
0 15
0 16
0 105
0 17
0 164
0 28
0 125
0 103

20 servers in this should be 20pps


---------------------------------------------

./NMSStub server_addr=127.0.0.1 dtls=1 ecjpake_pw=passwd ca_file=pki/ca.crt.pem crt_file=pki/server.crt.pem key_file=pki/server.key.pem

@echo "  CC      " src/libcoap_2-openssl_la-coap_io.lo;/bin/bash ./libtool --silent --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I.    -fPIC -fPIE -I./include -I./include -pedantic -Wall -Wcast-qual -Wextra -Wformat-security -Winline -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wshadow -Wstrict-prototypes -Wswitch-default -Wswitch-enum -Wunused -Wwrite-strings  -Wlogical-op -Wunused-result  -std=c99  -g -O2 -fdiagnostics-color -D_GNU_SOURCE -MT src/libcoap_2-openssl_la-coap_io.lo -MD -MP -MF src/.deps/libcoap_2-openssl_la-coap_io.Tpo -c -o src/libcoap_2-openssl_la-coap_io.lo `test -f 'src/coap_io.c'



-----------------------------------------

int mbedtls_ssl_set_client_transport_id( mbedtls_ssl_context *ssl,
                                 const unsigned char *info,
                                 size_t ilen );


swap mbedtls_ssl_context after recvfrom.

int mbedtls_ssl_context_save( mbedtls_ssl_context *ssl,
                             unsigned char *buf,
                             size_t buf_len,
                             size_t *olen );

int mbedtls_ssl_context_load( mbedtls_ssl_context *ssl,
                              const unsigned char *buf,
                              size_t len );

void mbedtls_ssl_init( mbedtls_ssl_context *ssl );

int mbedtls_ssl_setup( mbedtls_ssl_context *ssl,
                      const mbedtls_ssl_config *conf );


mbedtls_ssl_fetch_input();


---------------------------------------------
adding build-tools to new project

submodules must be relative:

--- a/.gitmodules
+++ b/.gitmodules
@@ -1,3 +1,3 @@
 [submodule "build-tools"]
        path = build-tools
-       url = git@gitlab.cyco.io:Omnimesh/build-tools
+       url = ../build-tools

--------------------------
IOPS performance checking

iostat -d sda | grep sda | awk '{ print $2; }'
"iostat -d sda" gives "tps" transactions per second.

mpstat

mytop

ethtool

---------------------------
tmux

tmux detach-client -a


------------------------------
server performance

dev-stack setup -p omnimesh -n 1 -s 1 -e -a 1000



1 - increase the UDP buffer size on linux machine

edit the file /etc/sysctl.conf and add the following parameters. obs. you will need to restart the Linux OS after the changes.

net.core.netdev_max_backlog = 200000
net.core.rmem_max = 42598400
net.core.wmem_max = 42598400
net.core.rmem_default = 42598400
net.core.wmem_default = 42598400

---------------------------------
dev-stack NMS startup issue

- remove APP_SUDO code

- terminal-emulator does not exist in current builds.
cp build/host-agent/bin/terminal_emulator ~/.devstack/pkg/agent/terminal_emulator


- start-agent needs to wait until server started up.

----------------------------
performance test script

dev-stack stop
dev-stack clean
dev-stack setup -p omnimesh -n 1 -s 1 -e -a 50000
dev-stack start


--------------------------------------
10K nodes, 50 gw, 200/gw = 5 logins/sec, term-em cpu usage ~7%
10K nodes, 10 gw,1000/gw = ~10 logins/sec, term-em cpu usage ~95% initially then drops to ~40% when logins slow down at this point, java takes up >300% CPU usage. term-em is being starved. RAM starvation with GC errors. There is obvously a different heap-allocation pattern with different numbers of gateways. There is obvously a different heap-allocation pattern with different numbers of gateways.
10K nodes, 10 gw,1000/gw = ~10 logins/sec term-em cpu usage @ 100% with 1 thread. increased java heap to 1G. Had to increase RAM to complete this. At 9984 nodes logged in, java processes max out CPU and starve term-em from completing.


mytop -h 172.16.21.2 -umeshnet -pmeshnet


show full tables probablynot


mysql> SET GLOBAL general_log = 'ON';
mysql> SET GLOBAL general_log_file = '/var/www/nanhe/log/all.log';

mysql -umeshnet -pmeshnet -h 172.16.21.3

mysql -umeshnet -pmeshnet -h 172.16.21.3 -e "SET GLOBAL general_log_file = '/scripts/query.log';"
mysql -umeshnet -pmeshnet -h 172.16.21.3 -e "SET GLOBAL general_log = 'ON';"

raised heap limit to 2g seemed to be running at handshakeBurstRate(50)/sec then stopped accepting db connections due to full root fs.

raised handshakrBurstRate to 1000

set heap size to 2G

set db optimisations from confluence.

use taskset to set CPU affinity to separate term-em, NMS, SMA


NMS needs 2 cores to term-em 1, both cpu-bound

errors in security-log, and receive errors with netstat -6anus

sudo sysctl net.core.netdev_max_backlog=200000
sudo sysctl net.core.rmem_max=42598400
sudo sysctl net.core.wmem_max=42598400
sudo sysctl net.core.rmem_default=42598400
sudo sysctl net.core.wmem_default=42598400

SqlExceptionHelper - Duplicate entry 'CyanConnode-v1.0.0-D1-emu-is15959' for key 'uk_devtype_vendor_fw_hw_driv'

mysql -umeshnet -pmeshnet -h $DB_IP -e "SET GLOBAL innodb_print_all_deadlocks='ON'";


---------------------------------------
dev-stack pkidir

dev-stack --pkidir /Data/Temp/devstackPKI/  setup -p omnimesh -n 1 -s 1 -e -a 1 -g 1

--------------------------------------
unlimited directories on ext4

sudo mkfs /dev/sdc
sudo tune2fs -O dir_index,dir_nlink /dev/sdc

dev-stack --pkidir /mnt/pki/  setup -p smip -n 1 -e -a 1 -g 1000000
dev-stack --pkidir /mnt/omni/  setup -p omnimesh -n 1 -e -a 1 -g 100


Make a loopback filesystem that allows unlimited links

dd if=/dev/zero of=pki.img bs=1024 count=1048576
sudo losetup /dev/loop7 pki.img
sudo mkfs /dev/loop7
sudo tune2fs -O dir_index,dir_nlink /dev/loop7

-----------------------------------------------

find projects -iname "*.mk" > ProjectList
cat ProjectList | sed -e "s/^.*\//config\//g" > TargetList

ag -v --nonumbers mbedtls TargetList > TargetList.wolfssl
ag  --nonumbers mbedtls TargetList > TargetList.mbedtls

#xargs -I '{}' -n 1 < TargetList.wolfssl basename --suffix=.mk "{}"

#xargs -I '{}' -n 1 < TargetList.wolfssl sh -c "echo mv "{}" config/\`basename --suffix=.mk "{}"\`-alt.mk  "

xargs -I '{}' -n 1 < TargetList.wolfssl sh -c "echo mv "{}" config/\`basename --suffix=.mk "{}"\`-alt.mk  " > s1.sh
xargs -I '{}' -n 1 < TargetList.wolfssl sh -c "echo mv config/\`basename --suffix=.mk "{}"\`-mbedtls.mk "{}" " > s2.sh



xargs -I '{}' -n 1 < TargetList sh -c "echo mv config/\`basename --suffix=.mk "{}"\`-mbedtls.mk "{}" " > s2.sh

-------------------------------
udp snapshot 1:
sed -n -e "5000000,6000000p" UDP.csv > t

sed -n -e "9000000,10000000p" UDP.csv > t

----------------------------------------------
OSCORE
- CoAP with encrypted payload and endpoint info.
- preshared key
- ACE framework to determine preshared key.

----------------------------------------------
LwM2M

- Application layer data model.
- OID for every "sensor"
- DLMS mapping?
- DTLS-based security... for transport-layer... OSCORE for application-layer.
- Covers:
    - fwup
    - data reporting
    - bootstrapping (discovery)
    - configuration
    - diagnostics
    - control

--------------------------------------------
deadlock issues on mesh_network table

- When many nodes from one mesh try to login simultaneously, they have to update the metrics for that network.
- The metrics (login_count, etc) are all stored on the mesh_network table.
- Because the requests are handled by different threads, multiple threads will try to lock the same row of mesh_network.
- The contention between different threads manifests itself as deadlock errors (LOCK WAITs).
- This causes transactions to be aborted and retried, limiting the login-rate.

What can we do:
- In SMIP, this won't manifest itself (much) due to the relative proportion of gateways:meshnodes.
- In Omnimesh, we can arrange one DTL-thread/network. This will remove the contention between threads by serialising the logins from a single network.


----------------------------------
terminal emulator can fail to open db due too many open files:

ulimit -n 10240

----------------------------------------
NMS DTLS issue with term-em setup and many gateways:

2021-04-21 14:50:06,165 ERROR [dtls-pool-9] security - dtlsHandshakeFailure: nodeIpAddress=/fd5b:2b5b:5bc4:98:200:99:0:5:5684 nodeLicenseId=unknown certificateSerialNumber=unknown
2021-04-21 14:50:06,165 TRACE [dtls-pool-6] DTLSConnection - DTLS handshake error address=/fd5b:2b5b:5bc4:98:200:99:0:6:5684, message=Unknown identifier type in trusted_ca_keys extension
2021-04-21 14:50:06,165 TRACE [dtls-pool-3] DTLSConnection - DTLS packet 75b144f7 being processed, address=/fd5b:2b5b:5bc4:98:200:99:0:7:5684, sessionId=null, migrating=false
2021-04-21 14:50:06,165 TRACE [dtls-pool-3] DTLSConnection - Record packet address=/fd5b:2b5b:5bc4:98:200:99:0:7:5684, contentType=handshake, epoch=0, nextSeqNo=5, gotEpoch=0, gotSeqNo=4
2021-04-21 14:50:06,165 ERROR [dtls-pool-6] security - dtlsHandshakeFailure: nodeIpAddress=/fd5b:2b5b:5bc4:98:200:99:0:6:5684 nodeLicenseId=unknown certificateSerialNumber=unknown
2021-04-21 14:50:06,165 TRACE [dtls-pool-3] DTLSServerHandshake - Handshake fragment address=/fd5b:2b5b:5bc4:98:200:99:0:7:5684, handshakeType=HandshakeType=client_hello, messageSeq=0
2021-04-21 14:50:06,165 TRACE [dtls] DTLSConnection - DTLS packet fce66a82 added to queue, address=/fd5b:2b5b:5bc4:98:200:99:0:8:5684, sessionId=null, migrating=false
2021-04-21 14:50:06,165 TRACE [dtls-pool-3] DTLSConnection - DTLS handshake error address=/fd5b:2b5b:5bc4:98:200:99:0:7:5684, message=Unknown identifier type in trusted_ca_keys extension
2021-04-21 14:50:06,165 TRACE [dtls-pool-14] DTLSConnection - DTLS packet fce66a82 being processed, address=/fd5b:2b5b:5bc4:98:200:99:0:8:5684, sessionId=null, migrating=false
2021-04-21 14:50:06,165 ERROR [dtls-pool-3] security - dtlsHandshakeFailure: nodeIpAddress=/fd5b:2b5b:5bc4:98:200:99:0:7:5684 nodeLicenseId=unknown certificateSerialNumber=unknown
2021-04-21 14:50:06,165 TRACE [dtls-pool-14] DTLSConnection - Record packet address=/fd5b:2b5b:5bc4:98:200:99:0:8:5684, contentType=handshake, epoch=0, nextSeqNo=5, gotEpoch=0, gotSeqNo=4
2021-04-21 14:50:06,165 TRACE [dtls-pool-14] DTLSServerHandshake - Handshake fragment address=/fd5b:2b5b:5bc4:98:200:99:0:8:5684, handshakeType=HandshakeType=client_hello, messageSeq=0


--------------------------------
TODO for TEF:

- package up term-em
- document term-em
- get sysctl settings, etc

----------------------------------
docker login
cc username & long pw

ca init '>=7'
docker login docker-dev.artifactory.cyco.io
docker login smip-docker-dev.artifactory.cyco.io

------------------------------------
100K run

- Went smoothly at ~100+ logins/sec up to around the 60K logins mark.
- java processor usage was ~30-40%.
- then CPU usage went thru the roof on all the java processes and mysql IO time also went
to around the 40% mark.
- IO rates at this point are ~40 MB/sec
- network rates are negligible.
- deadlocks still present.


turned off debug level on term-em and tund

------------------------------
every nth line awk

awk "NR%10==1" packets.csv > packets_every10.csv


-------------------------------
server performance:
also.. the packets from each gateway will always be serialised (theres only one uplink) so we could dedicate a thread to a gateway to avoid any contention between threads.

(that would remove the contention between the threads for the same rows in the db)


- Topping out at 110K level on a singler server, not CPU-bound, so in order to determine whether its server or term-em related, move to 2 servers
and see if the level is higher or the same.

- after JGROUPS send error, changing mcast_send_buf_size="5M".
--------------------

2021-04-23 07:47:49,540 INFO  [UI-http-55] HealthCheckServlet - HealthCheckServlet initiated
2021-04-23 07:47:49,652 ERROR [TransferQueueBundler,cluster_view,nms-0(nms-0)] [user=sysadmin] UDP - JGRP000029: nms-0(nms-0): failed sending message to cluster (220 bytes): java.lang.Exception: dest=/ff0e:0:0:0:0:0:e408:808:45588 (223 bytes), headers: NAKACK2: [MSG, seqno=31546], UDP: [channel_name=cluster_view]
2021-04-23 07:47:52,652 ERROR [TransferQueueBundler,cluster_view,nms-0(nms-0)] [user=sysadmin] UDP - JGRP000029: nms-0(nms-0): failed sending message to cluster (220 bytes): java.lang.Exception: dest=/ff0e:0:0:0:0:0:e408:808:45588 (223 bytes), headers: NAKACK2: [MSG, seqno=31549], UDP: [channel_name=cluster_view]
2021-04-23 07:47:54,653 ERROR [TransferQueueBundler,cluster_view,nms-0(nms-0)] [user=sysadmin] UDP - JGRP000029: nms-0(nms-0): failed sending message to cluster (220 bytes): java.lang.Exception: dest=/ff0e:0:0:0:0:0:e408:808:45588 (223 bytes), headers: NAKACK2: [MSG, seqno=31551], UDP: [channel_name=cluster_view]
2021-04-23 07:47:59,562 INFO  [UI-http-70] HealthCheckServlet - HealthCheckServlet initiated
2021-04-23 07:48:07,655 ERROR [TransferQueueBundler,cluster_view,nms-0(nms-0)] [user=sysadmin] UDP - JGRP000029: nms-0(nms-0): failed sending message to cluster (220 bytes): java.lang.Exception: dest=/ff0e:0:0:0:0:0:e408:808:45588 (223 bytes), headers: NAKACK2: [MSG, seqno=31564], UDP: [channel_name=cluster_view]


-0B-CC
2021-04-23 07:49:34,413 ERROR [dtls-pool-11] [node=00-00-00-00-00-02-1B-63] SqlExceptionHelper - Deadlock found when trying to get lock; try restarting transaction

----------------------------------------------
server key

openssl genrsa -out serverKey.pem 2048
openssl rsa -in serverKey.pem -outform PEM -pubout -out serverKeyPublic.pem

---------------------------
server error >100K single gw load.

@ ~110K, becomes CPU-bound, network I/O ~512KB/sec, disk I/O ~2MB/sec in mysql.

2021-04-26 07:20:16,962 WARN  [dtls-pool-29] [node=00-00-00-00-00-02-95-31] MqPayloadsPersister - messageReceived, queue full, messageFromNode=MessageFromNode{dbNodeId=197065, startSequenceNumber=19, messagesCount=1}
2021-04-26 07:20:16,964 WARN  [dtls-pool-20] [node=00-00-00-00-00-03-BE-93] MqPayloadsPersister - messageReceived, queue full, messageFromNode=MessageFromNode{dbNodeId=936013, startSequenceNumber=37, messagesCount=1}
2021-04-26 07:20:16,964 WARN  [dtls-pool-23] [node=00-00-00-00-00-03-EE-66] MqPayloadsPersister - messageReceived, queue full, messageFromNode=MessageFromNode{dbNodeId=968284, startSequenceNumber=23, messagesCount=1}

2021-04-26 07:21:51,879 ERROR [TransferQueueBundler,cluster_view,nms-0(nms-0)] [user=sysadmin] UDP - JGRP000029: nms-0(nms-0): failed sending message to cluster (312 bytes): java.lang.Exception: dest=/ff0e:0:0:0:0:0:e408:808:45588 (315 bytes), headers: NAKACK2: [MSG, seqno=1418467], UDP: [channel_name=cluster_view]


------------------------------------------
for 1000x100,

syslog shows:
Route cache is full: consider increasing sysctl net.ipv[4|6].route.max_size.


---------------------------------------
Luna HSM

DTLSLunaHsmECDHKeyExchange
CertificateOperationsImpl
CertificateServices

public interface DTLSKeyStoreProvider {
    ServerDTLSDomain findServerDtlsDomainBySha1Hash(byte[] keySha1Hash);
    ServerDTLSDomain findServerDtlsDomainByX509Name(byte[] x509Name);
    ServerDTLSDomain getDefaultServerDtlsDomain();
    ServerDTLSDomain getServerDtlsDomain(String identifier);
    ClientDTLSDomain checkTrusted(X509Certificate[] clientCerts) throws DTLSCertificateException;
    ClientDTLSDomain getDefaultClientDtlsDomain();
    ClientDTLSDomain getClientDtlsDomain(String identifier);
    List<ClientDTLSDomain> getClientDtlsDomains();
    DTLSKeyStoreConfiguration getConfiguration();
    void validateCertificate(String certificateSerialNumber, String certificateIdentifier) throws DTLSCertificateException;
}

-------------------------------------
loopback mount xfs smip certs

make XFS filesystem:
sudo apt install xfsprogs
dd if=/dev/zero of=pki_smip_xfs.img bs=10240 count=1048576
sudo losetup /dev/loop21 pki_smip_xfs.img
mkfs.xfs /dev/loop21
sudo mkfs.xfs /dev/loop21


mount -o loop pki_smip_xfs.img ~/smip

-----------------------------------
java debugging

jstack
kill -3 pid (thread dump to stdout)

mapping linux thread-if to Java thread-id
http://javadrama.blogspot.com/2012/02/why-is-java-eating-my-cpu.html


ps -eLo pid,lwp,pcpu | grep <pidOfJava>
jstack <pidOfJava> > ThreadDump

echo 'ibase=A;obase=16;<lwpID>' | bc

jstat for GC info

jstack -e 2172946 | ag nid > thread.list

cat /proc/2172946/task/2173549/status | ag Name
cat /proc/{PID}/task/{LWP}/status | ag Name

------------------------------------
port forwarding

TUND_IP=`docker inspect devstack_tund_1 | grep -A 15 devstack_internal | grep -E -o 'IPAddress.: ".+"' | grep -E -o "[0-9.]+"`


iptables -t nat -A PREROUTING -p udp --dport 8050 -j DNAT --to-destination $TUND_IP:8050
#iptables -t nat -A POSTROUTING -j MASQUERADE

------------------------------------
weblogic

http://server-dev3:7001/console/console.portal?_nfpb=true&_pageLabel=HomePage1
weblogic/welcome1

-----------------------------------------
smip fuzz testing

Every 5.0s: afl-whatsup findings/                           steve-VirtualBox: Thu Apr 29 09:16:03 2021

status check tool for afl-fuzz by Michal Zalewski

Individual fuzzers
==================

>>> fuzzer0 (1 days, 0 hrs) <<<

  cycle 18, lifetime speed 254 execs/sec, path 21/1212 (1%)
  pending 0/263, coverage 7.90%, no crashes yet

>>> fuzzer1 (1 days, 0 hrs) <<<

  cycle 85, lifetime speed 262 execs/sec, path 93/1239 (7%)
  pending 0/18, coverage 7.90%, no crashes yet

>>> fuzzer2 (1 days, 0 hrs) <<<

  cycle 79, lifetime speed 271 execs/sec, path 173/1248 (13%)
  pending 0/23, coverage 7.89%, no crashes yet

>>> fuzzer3 (1 days, 0 hrs) <<<

  cycle 84, lifetime speed 267 execs/sec, path 224/1289 (17%)
  pending 0/19, coverage 7.95%, no crashes yet

Summary stats
=============

       Fuzzers alive : 4
      Total run time : 4 days, 0 hours
         Total execs : 91 million
    Cumulative speed : 1054 execs/sec
       Pending paths : 0 faves, 323 total
  Pending per fuzzer : 0 faves, 80 total (on average)
       Crashes found : 0 locally unique


----------------------------------
term-em crash:

430     in src/tools/list/list.c
(gdb) where
#0  listRemove (iter=0x7ffff6b90650) at src/tools/list/list.c:430
#1  0x000055555555ce18 in eventDataHandler (pGwPool=0x5555555a3f28, socketBuf=0x7fffbc002640,
    pGateway=0x5555555a9ea8) at src/tools/terminal_emulator/terminal_emulator.c:1576
#2  poolHandlerThread (pThreadData=0x5555555a3f28)
    at src/tools/terminal_emulator/terminal_emulator.c:2045
#3  0x00007ffff78b46db in start_thread (arg=0x7ffff6b92700) at pthread_create.c:463
#4  0x00007ffff75dda3f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95
(gdb) up
#1  0x000055555555ce18 in eventDataHandler (pGwPool=0x5555555a3f28, socketBuf=0x7fffbc002640,
    pGateway=0x5555555a9ea8) at src/tools/terminal_emulator/terminal_emulator.c:1576
1576    src/tools/terminal_emulator/terminal_emulator.c: No such file or directory.



Thread 18 "terminal-emulat" received signal SIGSEGV, Segmentation fault.
[Switching to Thread 0x7ffff688c700 (LWP 25445)]
__memmove_avx_unaligned_erms () at ../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:521
521     ../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S: No such file or directory.
(gdb) where
#0  __memmove_avx_unaligned_erms () at ../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:521
#1  0x0000555555559b06 in memcpy (__len=18446744073709551612, __src=<optimised out>,
    __dest=0x7fffbcdd4530) at /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34
#2  recvDtlsDataCB (ssl=<optimised out>, buf=0x7fffbcdd4530 '\252' <repeats 200 times>...,
    sz=<optimised out>, userData=0x5555698999a0) at src/tools/terminal_emulator/terminal_emulator.c:369
#3  0x000055555556adf0 in Receive (sz=1500, buf=0x7fffbcdd4530 '\252' <repeats 200 times>...,
    ssl=0x7fffbcdd39a0) at build/3pp/wolfssl/src/internal.c:5151
#4  GetInputData (ssl=ssl@entry=0x7fffbcdd39a0, size=size@entry=13)
    at build/3pp/wolfssl/src/internal.c:10110
#5  0x000055555556e88d in ProcessReply (ssl=ssl@entry=0x7fffbcdd39a0)
    at build/3pp/wolfssl/src/internal.c:10248
#6  0x00005555555747ef in wolfSSL_connect () at build/3pp/wolfssl/src/ssl.c:8124
#7  0x0000555555559cb7 in doDtlsHandshake (pMesh=0x5555696e1920, pGwPool=<optimised out>)
    at src/tools/terminal_emulator/terminal_emulator.c:636
#8  0x0000555555559dd7 in retryFailedDtlsHandshakes (pGwPool=0x5555555a4618)
    at src/tools/terminal_emulator/terminal_emulator.c:655
#9  doDtlsHandshakeForNextTerminal (pGwPool=0x5555555a4618)
    at src/tools/terminal_emulator/terminal_emulator.c:668
#10 0x000055555555d1ff in poolHandlerThread (pThreadData=0x5555555a4618)
    at src/tools/terminal_emulator/terminal_emulator.c:1797
#11 0x00007ffff78b46db in start_thread (arg=0x7ffff688c700) at pthread_create.c:463
#12 0x00007ffff75dda3f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95
(gdb)


Thread 3 "terminal-emulat" received signal SIGSEGV, Segmentation fault.
[Switching to Thread 0x7ffff7f5b700 (LWP 26842)]
0x0000555555566ed0 in listRemove (iter=0x7ffff7f59650) at src/tools/list/list.c:432
432     src/tools/list/list.c: No such file or directory.
(gdb) where
#0  0x0000555555566ed0 in listRemove (iter=0x7ffff7f59650) at src/tools/list/list.c:432
#1  0x000055555555ce18 in eventDataHandler (pGwPool=0x5555555a2100, socketBuf=0x7fffe80179a0,
    pGateway=0x5555555ab2f0) at src/tools/terminal_emulator/terminal_emulator.c:1576
#2  poolHandlerThread (pThreadData=0x5555555a2100)
    at src/tools/terminal_emulator/terminal_emulator.c:2045
#3  0x00007ffff78b46db in start_thread (arg=0x7ffff7f5b700) at pthread_create.c:463
#4  0x00007ffff75dda3f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95



Thread 3 "terminal-emulat" received signal SIGSEGV, Segmentation fault.
[Switching to Thread 0x7ffff7a9a700 (LWP 4013749)]
0x0000555555566d80 in listRemove (iter=0x7ffff7a98650) at src/tools/list/list.c:432
432             elem->next->prev = elem->prev;
(gdb) where
#0  0x0000555555566d80 in listRemove (iter=0x7ffff7a98650) at src/tools/list/list.c:432
#1  0x000055555555cd28 in eventDataHandler (pGwPool=0x5555555a22e0, socketBuf=0x7fffe80179e0,
    pGateway=0x5555555a3fe8) at src/tools/terminal_emulator/terminal_emulator.c:1553
#2  poolHandlerThread (pThreadData=0x5555555a22e0) at src/tools/terminal_emulator/terminal_emulator.c:2022
#3  0x00007ffff7e6e609 in start_thread (arg=<optimised out>) at pthread_create.c:477
#4  0x00007ffff7d95293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95
(gdb) p elem
$1 = (ListElement *) 0x5555559ee850
(gdb) p *elem
$2 = {prev = 0x7fffe80d3550, next = 0x0, value = 0x555555e348d0}
(gdb)


!! elem->next == NULL and is being dereferenced. !!

---------------------------------------
JavaTop to CSV

cat JavaPerf.log | awk '(NR%2==0)||NR==1' > JavaPerf.csv

Thread dump:

jstack -e `pgrep java` > ThreadDumpWith167KNode.log

------------------------------
NMS API

https://server-dev4:8080/nms/ws/?wsdl

PlatformServices.importServerSecurityKeyPair

------------------------------
@46K nodes
13x "java" threads, each taking 60% of CPU time. There are also a group of 13x "GC task thread"
DTLS tasks taking ~1.6% each, all in bouncy-castle.

-----------------------------------
8GB run
- DTLS threads 9%@65K, 11% @ 75K, 11.5% at 82K
- 245K actual logins vs 85K reported. term-em must be timing out and repeating. Zero logouts at that point.
- 16MB/sec @ 82K nodes from term-em.
- Single term-em executable, 500 gw. 300nodes/gw
- stopped at 87L due to term-em crash.

8GB run 2:
- start 8pm
- change to 1 thread on term-em. theory is that concurrency exposes problem. shared mem issue?
- dtls threads 2.9% @ 1K, 2.7% @ 9K
- 9pm: 32K nodes.
- crash at 9pm

8GB run 3:
- start @ 9:10pm
- 3xterm-em, 100gw with 500 nodes each.
- 23:10, 88K, term-em crashed repeatedly and restarted.
- dtls 7.2% @ 88K, 7.1% @ 100K 23:25
- @100K, 15MB/sec to tund, 2MB/sec from tund
- @120K, 00:00 under 20MB/sec from tund
- @167K, 5:50, ~3MB/sec into tund 200KB/sec from tund. 1875 logged out. load average of 13.5
- After weekend, GC is once again taking all CPU time.

Theory.... at load, the delay caused by a GC cycle causes increased
traffic as packets are retried.


16GB Run 1:
- handshakeBurstRate = 1
- start: 9:40am


dev-stack --pkidir ~/smip setup -p smip -n 1 -e -a 1 -g 1

while true; do ~/terminal-emulator -server fd00::100 -tun6d 172.16.32.110 -tun6dsecret letmein -numOfGateways 100 -numOfThreads 1 -firstId 1 -db ~/smip/agent.db -rootCert ~/smip/ca.crt.pem  -tun6dport 8050 -handshakeBurstRate 1 -logLevel info -numOfMeshs 500; done

.devstack/pkg/panmesh-smip-v20.2.0/bin/server.sh:
-Djgroups.bind_addr=$(hostname --ip-address) -Xms8g -Xmx16g com.connode.server.Main

------------------------------------
server certs:

Server domain:
- Issuer: ca.crt.pem
- cert: server.crt.pem
- private key: server.key.pem
Node
- CA private key: ca.key.pem
- trusted certificates: ca.crt.pem
passwords not used here.


---------------------------------------
create CA cert & key:

Key:
openssl ecparam -out ca.key.pem -name prime256v1 -genkey

Cert:
openssl req -new -key ca.key.pem -x509 -sha1 -nodes -days 3650 -out ca.crt.pem -keyout ca.key.pem -subj "/C=SE/ST=YourLocation/L=YourLocation/O=YourName AB/OU=R&D/CN=c4.yourname.com"

-------------------------
UDP buffer monitoring.

https://stackoverflow.com/questions/2289830/how-to-monitor-linux-udp-buffer-available-space

/proc/net/udp

 cat /proc/net/udp | ag --nonumber "1F72|queu"
sl      local_address rem_address   st tx_queue rx_queue tr tm->when retrnsmt   uid  timeout inode      ref pointer          drops
5775:   00000000:1F72 00000000:0000 07 00000000:00000000 00:00000000 00000000     0        0 3839121763 2   0000000000000000 0


sudo sysctl -w net.core.rmem_default=825984000
sudo sysctl -w net.core.rmem_max=825984000
sudo sysctl net.core.rmem_default
sudo sysctl net.core.rmem_max

while true; do cat /proc/net/udp6 | grep -E "1634|queue"; sleep 1; done

-----------------------------------------------------------
16GB heap, 8xterm em, 500 gw
while true; do ~/terminal-emulator -server fd00::100 -tun6d 172.16.32.110 -tun6dsecret letmein -numOfGateways 50 -numOfThreads 1 -firstId 1 -db ~/smip/agent.db -rootCert ~/smip/ca.crt.pem  -tun6dport 8050 -handshakeBurstRate 1 -logLevel info -numOfMeshs 500 -keepAliveTmo 3600 -eventTmo 0 -readingTmo 0 -alarmsTmo 0; done

dev-stack --pkidir ~/smip setup -p smip -n 1 -e -a 1 -g 1

--------------------------------------------------------
WiSUN stack integration:

clone from git@github.com:SiliconLabs/proprietary_wisun_stack.git
git archive master | tar -x -C ../terminalGL/3pp/SiLabsWiSUNStack/src

---------------------------
TEF SMIP

- netstat -s <if>
- ethtool -S <if>
- /proc/net/udp6 (5684 == 0x1634)
- /proc/net/tcp6
- JavaTop
- jstack -e `pgrep java`
- server.log ("queue full", "JGRP").
- iperf gives same errors?
- logging amount? Try disabling logging?
- sysctl net.ipv6.route.max_size=524288
- net.ipv4.route.max_size = 2147483647
- net.ipv6.route.max_size = 4096
- iftop
- iotop
- htop
- Disable health-check/ load-balancing setup.
- containerise my setup for them to run... that wouldd isolate platform or software.
- jstat
- jstack
- jmap -histo 256331
- jmap -dump:live,format=b,file=/tmp/dump.hprof 256331


----------------------------------
16 server, 25K logged in, 20,500 gw file download jobs.

:0:0:e408:808:45588 (222 bytes), headers: NAKACK2: [MSG, seqno=9886], UDP: [channel_name=cluster_view]
2021-05-07 15:29:45,516 ERROR [TransferQueueBundler,cluster_view,nms-0(nms-0)] [user=sysadmin] UDP - JGRP000029: nms-0(nms-0): failed sending message to cluster (54 bytes): java.lang.Exception: dest=/ff0e:0:0:0:
0:0:e408:808:45588 (57 bytes), headers: FD_ALL: heartbeat, UDP: [channel_name=cluster_view]
2021-05-07 15:29:46,265 ERROR [TransferQueueBundler,cluster_view,nms-0(nms-0)] [user=sysadmin] UDP - JGRP000029: nms-0(nms-0): failed sending message to cluster (289 bytes): java.lang.Exception: dest=/ff0e:0:0:0
:0:0:e408:808:45588 (292 bytes), headers: NAKACK2: [MSG, seqno=9892], UDP: [channel_name=cluster_view]
2021-05-07 15:29:46,390 INFO  [UI-http-120] HealthCheckServlet - HealthCheckServlet initiated
2021-05-07 15:29:46,533 WARN  [Incoming-2,cluster_view,nms-0(nms-0)] [user=sysadmin] RemoteDTLSService - Unable to encrypt master secret to send the connection to remoteServer=nms-3
com.connode.dtls.DTLSMasterSecretException: No server security public key found for encryption
        at com.connode.service.terminal.session.NodeStorageProvider.encryptMasterSecret(NodeStorageProvider.java:234)
        at com.connode.dtls.DTLSConnection.getState(DTLSConnection.java:1302)
        at com.connode.service.ha.dtls.RemoteDTLSService.consumeGetConnectionMessage(RemoteDTLSService.java:356)
        at com.connode.service.ha.dtls.RemoteDTLSService.consumeMessage(RemoteDTLSService.java:335)
        at com.connode.service.ha.view.ClusterViewService.receive(ClusterViewService.java:357)
        at org.jgroups.JChannel.up(JChannel.java:738)
        at org.jgroups.stack.ProtocolStack.up(ProtocolStack.java:1019)
        at org.jgroups.stack.Protocol.up(Protocol.java:409)
        at org.jgroups.protocols.RSVP.up(RSVP.java:221)
        at org.jgroups.protocols.FRAG2.up(FRAG2.java:182)
        at org.jgroups.protocols.FlowControl.up(FlowControl.java:434)
        at org.jgroups.protocols.FlowControl.up(FlowControl.java:434)
        at org.jgroups.stack.Protocol.up(Protocol.java:409)
        at org.jgroups.protocols.pbcast.STABLE.up(STABLE.java:294)
        at org.jgroups.protocols.UNICAST3.removeAndDeliver(UNICAST3.java:792)
        at org.jgroups.protocols.UNICAST3.handleDataReceived(UNICAST3.java:704)
        at org.jgroups.protocols.UNICAST3.up(UNICAST3.java:382)
        at org.jgroups.protocols.pbcast.NAKACK2.up(NAKACK2.java:600)
        at org.jgroups.protocols.BARRIER.up(BARRIER.java:103)
        at org.jgroups.protocols.VERIFY_SUSPECT.up(VERIFY_SUSPECT.java:147)
        at org.jgroups.protocols.FD_ALL.up(FD_ALL.java:184)
        at org.jgroups.protocols.FD_SOCK.up(FD_SOCK.java:301)
        at org.jgroups.protocols.MERGE2.up(MERGE2.java:209)
        at org.jgroups.protocols.Discovery.up(Discovery.java:379)
        at org.jgroups.protocols.TP.passMessageUp(TP.java:1404)
        at org.jgroups.protocols.TP$MyHandler.run(TP.java:1590)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
        at java.lang.Thread.run(Thread.java:748)
2021-05-07 15:29:46,961 ERROR [TransferQueueBundler,cluster_view,nms-0(nms-0)] [user=sysadmin] UDP -


- CSS wont load
- JGRP issues

:0:0:e408:808:45588 (222 bytes), headers: NAKACK2: [MSG, seqno=12026], UDP: [channel_name=cluster_view]
2021-05-07 15:44:34,458 INFO  [UI-http-132] HealthCheckServlet - HealthCheckServlet initiated
2021-05-07 15:44:35,309 ERROR [TransferQueueBundler,cluster_view,nms-0(nms-0)] [user=sysadmin] UDP - JGRP000029: nms-0(nms-0): failed sending message to cluster (219 bytes): java.lang.Exception: dest=/ff0e:0:0:0:0:0:e408:808:45588 (222 bytes), headers: NAKACK2: [MSG, seqno=12032], UDP: [channel_name=cluster_view]
2021-05-07 15:44:36,309 ERROR [TransferQueueBundler,cluster_view,nms-0(nms-0)] [user=sysadmin] UDP - JGRP000029: nms-0(nms-0): failed sending message to cluster (219 bytes): java.lang.Exception: dest=/ff0e:0:0:0:0:0:e408:808:45588 (222 bytes), headers: NAKACK2: [MSG, seqno=12033], UDP: [channel_name=cluster_view]
2021-05-07 15:44:36,560 ERROR [TransferQueueBundler,cluster_view,nms-0(nms-0)] [user=sysadmin] UDP - JGRP000029: nms-0(nms-0): failed sending message to cluster (54 bytes): java.lang.Exception: dest=/ff0e:0:0:0:0:0:e408:808:45588 (57 bytes), headers: FD_ALL: heartbeat, UDP: [channel_name=cluster_view]
2021-05-07 15:44:37,397 INFO  [coap-scavenger] [job=20, meshnet=fd5b:2b5b:5bc4:259a, node=00-00-00-00-00-00-25-9b] MeshNetworkExecutableJob - ENTER meshNetworkJobTaskCompleted meshNetworkPrefix=fd5b:2b5b:5bc4:259a
2021-05-07 15:44:37,408 INFO  [executor-pool-02] [user=sysadmin] MeshNetworkExecutableJob - EXIT meshNetworkJobTaskCompleted meshNetworkPrefix=fd5b:2b5b:5bc4:259a
2021-05-07 15:44:42,561 ERROR [TransferQueueBundler,cluster_view,nms-0(nms-0)] [user=sysadmin] UDP - JGRP000029: nms-0(nms-0): failed sending message to cluster (54 bytes): java.lang.Exception: dest=/ff0e:0:0:0:0:0:e408:808:45588 (57 bytes), headers: FD_ALL: heartbeat, UDP: [channel_name=cluster_view]
2021-05-07 15:44:44,311 ERROR [TransferQueueBundler,cluster_view,nms-0(nms-0)] [user=sysadmin] UDP - JGRP000029: nms-0(nms-0): failed sending message to cluster (219 bytes): java.lang.Exception: dest=/ff0e:0:0:0:0:0:e408:808:45588 (222 bytes), headers: NAKACK2: [MSG, seqno=12041], UDP: [channel_name=cluster_view]
2021-05-07 15:44:44,539 INFO  [UI-http-132] HealthCheckServlet - HealthCheckServlet initiated
2021-05-07 15:44:45,311 ERROR [TransferQueueBundler,cluster_view,nms-0(nms-0)] [user=sysadmin] UDP - JGRP000029: nms-0(nms-0): failed sending message to cluster (219 bytes): java.lang.Exception: dest=/ff0e:0:0:0:0:0:e408:808:45588 (222 bytes), headers: NAKACK2: [MSG, seqno=12042], UDP: [channel_name=cluster_view]
2021-05-07 15:44:46,311 ERROR [TransferQueueBundler,cluster_view,nms-0(nms-0)] [user=sysadmin] UDP - JGRP000029: nms-0(nms-0): failed sending message to cluster (219 bytes): java.lang.Exception: dest=/ff0e:0:0:0:0:0:e408:808:45588 (222 bytes), headers: NAKACK2: [MSG, seqno=12043], UDP: [channel_name=cluster_view]
2021-05-07 15:44:47,311 ERROR [TransferQueueBundler,cluster_view,nms-0(nms-0)] [user=sysadmin] UDP - JGRP000029: nms-0(nms-0): failed sending message to cluster (219 bytes): java.lang.Exception: dest=/ff0e:0:0:0:0:0:e408:808:45588 (222 bytes), headers: NAKACK2: [MSG, seqno=12044], UDP: [channel_name=cluster_view]
2021-05-07 15:44:48,311 ERROR [TransferQueueBundler,cluster_view,nms-0(nms-0)] [user=sysadmin] UDP - JGRP000029: nms-0(nms-0): failed sending message to cluster (219 bytes): java.lang.Exception: dest=/ff0e:0:0:0:0:0:e408:808:45588 (222 bytes), headers: NAKACK2: [MSG, seqno=12045], UDP: [channel_name=cluster_view]
2021-05-07 15:44:49,311 ERROR [TransferQueueBundler,cluster_view,nms-0(nms-0)] [user=sysadmin] UDP - JGRP000029: nms-0(nms-0): failed sending message to cluster (219 bytes): java.lang.Exception: dest=/ff0e:0:0:0:0:0:e408:808:45588 (222 bytes), headers: NAKACK2: [MSG, seqno=12046], UDP: [channel_name=cluster_view]
2021-05-07 15:44:51,312 ERROR [TransferQueueBundler,cluster_view,nms-0(nms-0)] [user=sysadmin] UDP - JGRP000029: nms-0(nms-0): failed sending message to cluster (219 bytes): java.lang.Exception: dest=/ff0e:0:0:0:0:0:e408:808:45588 (222 bytes), headers: NAKACK2: [MSG, seqno=12048], UDP: [channel_name=cluster_view]
2021-05-07 15:44:54,561 ERROR [TransferQueueBundler,cluster_view,nms-0(nms-0)] [user=sysadmin] UDP - JGRP000029: nms-0(nms-0): failed sending message to cluster (54 bytes): java.lang.Exception: dest=/ff0e:0:0:0:0:0:e408:808:45588 (57 bytes), headers: FD_ALL: heartbeat, UDP: [channel_name=cluster_view]
2021-05-07 15:44:54,630 INFO  [UI-http-131] HealthCheckServlet - HealthCheckServlet initiated
2021-05-07 15:44:57,561 ERROR [TransferQueueBundler,cluster_view,nms-0(nms-0)] [user=sysadmin] UDP - JGRP000029: nms-0(nms-0): failed sending message to cluster (54 bytes): java.lang.Exception: dest=/ff0e:0:0:0:0:0:e408:808:45588 (57 bytes), headers: FD_ALL: heartbeat, UDP: [channel_name=cluster_view]
2021-05-07 15:45:00,317 ERROR [TransferQueueBundler,cluster_view,nms-0(nms-0)] [user=sysadmin] UDP - JGRP000029: nms-0(nms-0): failed sending message to cluster (219 bytes): java.lang.Exception: dest=/ff0e:0:0:0:0:0:e408:808:45588 (222 bytes), headers: NAKACK2: [MSG, seqno=12057], UDP: [channel_name=cluster_view]
2021-05-07 15:45:03,318 ERROR [TransferQueueBundler,cluster_view,nms-0(nms-0)] [user=sysadmin] UDP - JGRP000029: nms-0(nms-0): failed sending message to cluster (219 bytes): java.lang.Exception: dest=/ff0e:0:0:0:0:0:e408:808:45588 (222 bytes), headers: NAKACK2: [MSG, seqno=12060], UDP: [channel_name=cluster_view]
2021-05-07 15:45:04,318 ERROR [TransferQueueBundler,cluster_view,nms-0(nms-0)] [user=sysadmin] UDP - JGRP000029: nms-0(nms-0): failed sending message to cluster (219 bytes): java.lang.Exception: dest=/ff0e:0:0:0:0:0:e408:808:45588 (222 bytes), headers: NAKACK2: [MSG, seqno=12061], UDP: [channel_name=cluster_view]
2021-05-07 15:45:04,711 INFO  [UI-http-131] HealthCheckServlet - HealthCheckServlet initiated
2021-05-07 15:45:06,562 ERROR [TransferQueueBundler,cluster_view,nms-0(nms-0)] [user=sysadmin] UDP - JGRP000029: nms-0(nms-0): failed sending message to cluster (54 bytes): java.lang.Exception: dest=/ff0e:0:0:0:0:0:e408:808:45588 (57 bytes), headers: FD_ALL


------------------------------
bluetooth anker earphones

bluetoothctl scan on
bluetoothctl connect 7A:5B:C5:7C:70:7E
bluetoothctl connect AC:12:2F:50:79:36


-----------------------------

Keep alives:
200,000 keepalives every 3600s = 56/sec
@91b each = 5KB/sec

fwup:
10000 nodes in 20jobs = 20 simultaneouts jobs: 128b every second = 2.5KB/sec

-----------------------------------
pki xfs

#sudo losetup /dev/loop21 ~/pki_smip_xfs.img
#sudo mount /dev/loop21 ~/smip
sudo mount -o loop /Data/Temp/pki_smip_xfs.img ~/smip


-----------------------------------

Login_10000gw_2npgw_1nms_filedl_20x500jobs.sh   - 78 minutes
Login_10000gw_2npgw_1nms.sh                     -
Login_50000gw_1npgw_1nms_filedl_20x500jobs.sh   - 87 minutes
Login_50000gw_3npgw_1nms_filedl_20x500jobs.sh   -
Login_500gw_2npgw_1nms.sh                       -


------------------------

 connected with prefix fd5b:2b5b:5bc4:a51a::/64
<6>[172.16.21.3:43069] Peer 02-00-40-c9-00-00-00-01 connected with prefix fd5b:2b5b:5bc4:a51b::/64
<6>[172.16.21.4:40211] Peer 02-01-75-c4-00-00-00-01 connected with prefix fd5b:2b5b:5bc4:a51c::/64
<6>[172.16.21.3:55789] Peer 02-00-40-ca-00-00-00-01 connected with prefix fd5b:2b5b:5bc4:a51d::/64
<6>[172.16.21.4:51404] Peer 02-01-75-c5-00-00-00-01 connected with prefix fd5b:2b5b:5bc4:a51e::/64
<6>[172.16.21.3:49721] Peer 02-00-40-cb-00-00-00-01 connected with prefix fd5b:2b5b:5bc4:a51f::/64
<6>[172.16.21.4:50558] Peer 02-01-75-c6-00-00-00-01 connected with prefix fd5b:2b5b:5bc4:a520::/64
<6>[172.16.21.3:36280] Peer 02-00-40-cc-00-00-00-01 connected with prefix fd5b:2b5b:5bc4:a521::/64
<6>[172.16.21.4:40461] Peer 02-01-75-c7-00-00-00-01 connected with prefix fd5b:2b5b:5bc4:a522::/64
<6>[172.16.21.3:38340] Peer 02-00-40-cd-00-00-00-01 connected with prefix fd5b:2b5b:5bc4:a523::/64
<6>[172.16.21.4:44009] Peer 02-01-75-c8-00-00-00-01 connected with prefix fd5b:2b5b:5bc4:a524::/64

sudo TUN6D_SECRET=whatsfordinner ./build/tun6d --loglevel debug --prefix=fd5b:2b5b::/40

-------------------------------
wisun node

https://github.com/SiliconLabs/proprietary_wisun_applications/blob/master/documentation/create_your_first_wisun_network.md

wisun set wisun.network_name tickles
wisun set wisun.regulatory_domain 3
wisun set wisun.operating_class 3
wisun set wisun.operating_mode 26
wisun set wisun.network_size 4

> wisun get wisun
wisun.network_name = "tickles"
wisun.regulatory_domain = EU (3)
wisun.operating_class = 3
wisun.operating_mode = 0x1a
wisun.network_size = test (4)
wisun.tx_power = 20
wisun.channel_mask.000-031 = 0xffffffff
wisun.channel_mask.032-063 = 0xffffffff
wisun.channel_mask.064-095 = 0xffffffff
wisun.channel_mask.096-127 = 0xffffffff
wisun.channel_mask.128-159 = 0xffffffff
wisun.channel_mask.160-191 = 0xffffffff
wisun.channel_mask.192-223 = 0xffffffff
wisun.channel_mask.224-255 = 0xffffffff
wisun.join_state = 0
wisun.mac = 90:fd:9f:ff:fe:6d:5e:05

wisun save


wisun connect


---------------------------------------
wisun router
/Data/Projects/proprietary_wisun_applications/border_router_images/EFR32xG12_BRD41xx/wisun_border_router_cli.bin

wisun set wisun.network_name tickles
wisun set wisun.regulatory_domain 3
wisun set wisun.operating_class 3
wisun set wisun.operating_mode 26
wisun set wisun.network_size 4

wisun start

------------------------------------------
wisun PC side

docker pull silabswisun/backhaul-connection
docker network create --driver macvlan --opt parent=enp0s3 wisun-net
docker run -ti --privileged --network=wisun-net silabswisun/backhaul-connection --shell

JLinkExe

JLinkRTTClient

------------------------------------------------

router:
wisun.ip_addresses = [ll: fe80::92fd:9fff:fe6d:5ff8 gua: fda4:805e:3355:1dc9:92fd:9fff:fe6d:5ff8 dodagid: fd00:6172:6d00:0:92fd:9fff:fe6d:5ff8]

node:
wisun.ip_addresses = [fda4:805e:3355:1dc9:92fd:9fff:fe6d:5e05, fe80::92fd:9fff:fe6d:5e05]
wisun.border_router = fd00:6172:6d00:0:92fd:9fff:fe6d:5ff8
wisun.parents = [fda4:805e:3355:1dc9:92fd:9fff:fe6d:5ff8]



sudo sysctl -q net.ipv6.conf.default.disable_ipv6=0
sudo sysctl -q net.ipv6.conf.all.disable_ipv6=0
sudo sysctl -q net.ipv6.conf.default.forwarding=1
sudo sysctl -q net.ipv6.conf.all.forwarding=1
sudo sysctl -q net.ipv6.conf.default.accept_ra=2
sudo sysctl -q net.ipv6.conf.all.accept_ra=2


wisun.ip_addresses = [ll: fe80::92fd:9fff:fe6d:5ff8 gua: fda4:805e:3355:1dc9:92fd:9fff:fe6d:5ff8 dodagid: fd00:6172:6d00:0:92fd:9fff:fe6d:5ff8]


sudo /Data/Scripts/init-container.sh site_local -s /dev/serial/by-id/usb-Silicon_Labs_J-Link_Pro_OB_0004401820

wisun.ip_addresses = [ll: fe80::92fd:9fff:fe6d:5ff8 gua: fd00:7283:7e00:0:92fd:9fff:fe6d:5ff8 dodagid: fd00:6172:6d00:0:92fd:9fff:fe6d:5ff8]


sudo /Data/Scripts/init-container.sh subnet fe80:1:2:3:4::1 -s /dev/serial/by-id/usb-Silicon_Labs_J-Link_Pro_OB_0004401820

---------------------------------------------------
wisunbridge container

docker build -t bridge .

docker run -it --rm --name wisunbridge  --privileged bridge:latest  --shell  --device /dev/ttyACM0

docker exec -it wisunbridge tshark -i tun0

docker exec -it wisunbridge JLinkExe -device EFR32MG12PXXXF1024

docker exec -it wisunbridge JLinkRTTClient

----------------------------------------
server performance issue:
- upgrade from 16.04 to 18.04 to 20.04
- login performance tops out at ~70K on one run, then ~40K on another.
- significant, unexplained disk I/O
- mq seems low and constant indicating SMA processing is keeping up.

-------------------------
jlink RTT

https://wiki.segger.com/RTT

https://wiki.segger.com/J-Link_Commander#Perform_flash_download

-------------------------------
bulk mdms api

NMS needs lwm2m API as well as SMA.

---------------------------------
lwm2m
- device management only?
- bulk, efficient data API?
- need to store expanded data in db, for lwm2m access.?

-------------------------------------
alternative MCUs

- STM32+S2 radio
    - radio/PHY layer rewrite (adapt from ARM WiSUN stack?)     - 4w
    - UART driver (adapt from IPA1?)                            - 1w
    - Clock driver                                              - 1w
    - GPIO driver (adapt from IPA1?)                            - 1w
    - SPI driver                                                - 1w
    - I2C driver                                                - 1w
    - RTC driver (adapt from IPA1?)                             - 1w
    - RNG driver (adapt from IPA1?)                             - 1w
    - Watchdog driver (adapt from IPA1?)                        - 1w
    - Internal flash driver (adapt from IPA1?)                  - 1w
    - bootloader adjustments (adapt from IPA1?)                 - 1w
    - timers (adapt from IPA1?)                                 - 1w
    - SPI-sharing:
        - Use CS to switch between radio & flash, then run SPI quicker than current 8MHz for flash.
          There is only 128b buffer, so latency on larger packets is important.                     - 1w
        - Remove need for flash (best long term option).                                            - 20w
        - Bitbang or timer/CLK trigged DMA SPI to radio over GPIO lines
          (Can be low latency and in parallel with flash).                                          - 3w
    - Log UART can be replaced by JLink RTT (common to all boards but requires using a JLink).      - 1w
    (RTT is a much-improved semi-hosting mechanism).

                                                Total (CS)      - 17w
                                                Total (no flash)- 36w
                                                Total (bitbang) - 19w

- Rohm with integrated radio
    - radio/PHY layer rewrite                                   - 4w
    - UART driver                                               - 1w
    - Clock driver                                              - 1w
    - GPIO driver                                               - 1w
    - SPI driver                                                - 1w
    - I2C driver                                                - 1w
    - RTC driver                                                - 1w
    - RNG driver                                                - 1w
    - Watchdog driver                                           - 1w
    - Internal flash driver                                     - 1w
    - bootloader adjustments                                    - 1w
    - timers                                                    - 1w
    - SPI-sharing:
        - Use CS to switch between radio & flash, then run SPI quicker than current 8MHz for flash.
          There is only 128b buffer, so latency on larger packets is important.                     - 1w
        - Remove need for flash (best long term option).                                            - 20w
        - Bitbang or timer/CLK trigged DMA SPI to radio over GPIO lines
          (Can be low latency and in parallel with flash).                                          - 3w

                                                Total (CS)      - 16w
                                                Total (no flash)- 35w
                                                Total (bitbang) - 19w

- Renesas RX651 + RAA604S00 radio
    - toolchain                                                 - 1w
    - familiarisation                                           - 1w
    - radio/PHY layer rewrite                                   - 4w
    - UART driver                                               - 1w
    - Clock driver                                              - 1w
    - GPIO driver                                               - 1w
    - I2C driver                                                - 1w
    - SPI driver                                                - 1w
    - RTC driver                                                - 1w
    - RNG driver                                                - 1w
    - Watchdog driver                                           - 1w
    - Internal flash driver                                     - 1w
    - bootloader rewrite                                        - 1w
    - timers                                                    - 1w
                                                Total:          - 17w

- Removal of flash (mostly PoC state on ~2yr old code).
    - circular buffers for MQ in internal-flash.                - 2w
    - circular buffers for config in internal-flash.            - 2w
    - circular buffers for app-state in internal-flash.         - 2w
    - server to store meter-driver state.                       - 4w
    - size reduction.                                           - 4w
    - new bootloader.                                           - 3w
    - fwup.                                                     - 3w
                                                Total:          - 20w

MTS & test-jig (Common to all)?
    - MTS mods (SWD/JTAG)                                       - 2w
    - Agent-side tests                                          - 4w
    - Test jig                                                  - ?w
                                                Total:          - ?w



1.) STM32WB50CG microcontroller + S2-LPQTR radio

               Tasks/challenges:

               -Port the code to STM32 platform

               -Radio driver

-Radio is SPI, but we only have 1 SPI in the MCU, which would be shared between the flash and the radio. So, I reckon, either the flash should be removed (that need the work that we already talked about) or we need to ensure that the radio and the flash can work on the same bus.

-No Log UART scenario as the MCU has only 1 UART

-Possible rework of the timers. The MCU has 6 timers (1x advanced, 3x general-purpose, 2x low power)



2.) Rohm ML7436N microcontroller with integrated radio

               Tasks/challenges:

               -Port the code to the Rohm platform

               -Radio driver (it’s integrated into the same package with the MCU, but it works as an external IC, through an SPI and GPIOs)

-We would possibly need to share 1 SPI between the radio/flash, flash/ethernet, radio/ethernet (well, it needs the product manager to decide which functions we want to implement, so it’s early days to tell, but I listed it as a heads up)

               -Possible timer re-configuration. It has 10 timers (4x std 32-bit, 6x multi-function 32-bit), so timers should be ok, I guess.



3.) Renesas RX651 + RAA604S00 radio

               Tasks/challenges:

               -Port the code to the Rohm platform (it’s a completely different architecture - RXv2 Core, 32-bit CISC)

               -Radio driver (SPI). It only supports 860-920MHz range, so it wouldn’t cover the 4xx MHz channels. It will probably be a project killer, but I’d like to give predictions for this option anyway

               -Plenty of peripherals USART, SPI and I2C channels

               -Plenty of timers (up to 25)

               -It’s quite an exotic architecture compared to the ARM solutions, I don’t know what else needs to be re-configured, but I guess that there would be quite a few things…

---------------------------------

Job management notes.

- concurrent jobs for all network types & performance at scale
    - SLA to complete job regardless of scale
    - jobs on small numbers in minutes
    - jobs on large numbers in hours
    - upgrade jobs in a day.
    - Testing of robustness at scale, SLA attainment rate.
    - cluster traffic issues on filedl.

- Job manageent retries:
    - we currently try once and only once.
    - no ability to retry till comoplete.
    - for all types of job.

- scheduling of jobs
    - Need to manage load on network.
    - Aim to maintain a given percentage of bandwidth for jobs? bandwidth allocation?
    - breaking down of large jobs into batches of small jobs.
    - have to serialise on target address, but do conncurrent targets up to allocated bandwidth.
    - allocate according to job priority?

- BIS LITD 128 requires large on-demand reads requests and large writes (calendar)
    - handling on-demand reads via coap-blockwise.
    - on top of bandwidth management/scheduling to avoid swamping network.
    - No SLA value.
    - reasonable maximums

--------------------------------------------
jlink gdb server

https://wiki.segger.com/J-Link_GDB_Server#-jtagconf


JLinkExe -device EFR32MG12PXXXF1024 -if SWD
JLinkGDBServer -device EFR32MG12PXXXF1024 -if SWD
JLinkRTTClient

---------------------------------------------

[GwId=15195][MeshId=15195]: received packet for meshIx=0 meshState=3
[GwId=15195][MeshId=15195]: in retransmit list now 2
[GwId=15195][MeshId=15195]: no data from wolfSSL (-1 - 2)
[GwId=15195][MeshId=15195]: received packet for meshIx=0 meshState=3
[GwId=15195][MeshId=15195]: in retransmit list now 2
[GwId=15195][MeshId=15195]: no data from wolfSSL (-1 - 2)
[GwId=15195][MeshId=15195]: Login is timeout the 2 time
[GwId=15195][MeshId=15195]: PUT login is sent
[GwId=15195][MeshId=15195]: received packet for meshIx=0 meshState=3
[GwId=15195][MeshId=15195]: in retransmit list now 2
[GwId=15195][MeshId=15195]: no data from wolfSSL (-1 - 2)
[GwId=15195][MeshId=15195]: received packet for meshIx=0 meshState=3
[GwId=15195][MeshId=15195]: in retransmit list now 2
[GwId=15195][MeshId=15195]: no data from wolfSSL (-1 - 2)
[GwId=15195][MeshId=15195]: Login is timeout the 3 time
[GwId=15195][MeshId=15195]: PUT login is sent
[GwId=15195][MeshId=15195]: Login is timeout the last time, do re-handshake
[GwId=15195][MeshId=15195]: Login is failed eventually
[GwId=15195][MeshId=15195]: received packet for meshIx=0 meshState=3
[GwId=15195][MeshId=15195]: OUCH! 2
[GwId=15195][MeshId=15195]: received data of size 13
[GwId=15195][MeshId=15195]: OUCH! 3


-------------------------------------------
mbed

python3 -m pip install mbed-cli
apt install ninja-build

cd nanostack-border-router
mbed config root .
mbed target DISCO_F769NI
mbed compile

------------------------------
0xfd, 0x5b, 0x2b, 0x5b, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x3}

--------------------------------------------
sysctl sendto EINVAL invalid argument

https://stevecao.wordpress.com/2018/09/28/diagnosing-invalid-argument-error-for-sendto-system-call/

sudo sysctl net.ipv4.neigh.default.gc_thresh1=1024

sudo sysctl net.ipv4.neigh.default.gc_thresh2=2048

sudo sysctl net.ipv4.neigh.default.gc_thresh3=4096

sysctl net.ipv6.neigh.default.gc_thresh1=1024

sysctl net.ipv6.neigh.default.gc_thresh2=2048

sysctl net.ipv6.neigh.default.gc_thresh3=4096

---------------------------------
idea: rpi pinout USB dongle.

---------------------------------------


fhss Configuration set, UC channel: 44, BC channel: 26, UC CF: 0, BC CF: 0, channels: BC 55 UC 55, uc dwell: 255, bc dwell: 255, bc interval: 0, bsi:0, ch retries: 0

fhss Configuration set, UC channel: 40, BC channel: 21, UC CF: 2, BC CF: 2, channels: BC 55 UC 55, uc dwell: 255, bc dwell: 255, bc interval: 1020, bsi:42842, ch retries: 4


keys & certs in :
gecko_sdk_3.1.1/protocol/wisun/wisun/inc/wisun_custom_certificates.h


2021-06-01 22:09:33.768 [ info] [               emu]: [GwId=1][MeshId=1]: Keepalive timeout

2021-06-01 22:09:40.819 [ info] [               emu]: [GwId=59][MeshId=25407]: Keepalive timeout
[Switching to Thread 0x7ffff7712700 (LWP 27184)]

Thread 4 "terminal_emulat" hit Breakpoint 1, poolHandlerThread (                                                                                      pThreadData=0x5555555b84d0)
    at src/tools/terminal_emulator/terminal_emulator.c:1880
1880                    LOG_INFO("[MeshId=%u]: retransmit, meshState=%u, tmoSec=%u",
(gdb) p mesh->pCon->lastActivity
$1 = 1622581773

-------------------------------
nanostack entry point for s2lp/rail MAC/PHY.

arm_net_phy_register()          // register rf device with nanostack.
in s2lp:rf_device_register()    // NanostackRfPhys2lp.cpp
in sl:rf_device_register()      // sli_wisun_driver.c

--------------------------------------
grpc

sudo apt install protobuf-compiler-grpc libgrpc-dev python3-grpcio python3-grpc-tools libgrpc++-dev


protoc -I./ --grpc_out=. --plugin=protoc-gen-grpc=`which grpc_cpp_plugin` omnimesh.proto
protoc -I./ --cpp_out=. omnimesh.proto

------------------------------------------
Application onto mbed
- silabs wisun driver into ARM mbed stack.
- ethernet driver into ARM mbed stack.
- I2C driver into ARM mbed stack.
- application into library
- port configuration.
- port schedule.
- port module system.
- port terminal module.
- buildsystem support for mbed code layout.
- metrics port.
+ gain greater abstraction from platform.
+ own platform does not have a future.
+ gain KeyValue & LittleFileSystem.
+ gain modem drivers

MBed into Application
- ethernet driver into nanostack.
- i2c driver into nanostack.
- application port onto "top" API.
- import nanostack into application.
- metrics port


---------------------------
NMSStub RAM usage @200K logins.

869M 1774M  3236

------------------------
html to pdf

khtmltopdf coverage.html coverage.pdf

---------------------
external ip

curl 'https://api.ipify.org?format=json'

------------------------
grpc video

https://www.youtube.com/watch?v=fMq3IpPE3TU

-----------------------------------------
flash lockup issue

s/w failure modes:
- flash-id failure "00 00 00", results in prodmode being entered.
- flash id is ok, and normal mode entered, but all writes and some reads fail. Potentially damaging due to indeterminate state of writing.

h/w failure modes:
- complete lock-up, requires power-drop back down to <1V to recover.
- when CPU supply is marginal, processor comes out of reset for ~2sec, then resets as more current drawn (~2.1V).
- when CPU is powered and stable, but flash is not out of reset, prodmode is entered (2.46V).
- "temporary" failure is actually the CPU coming out of reset before the flash. Can be mitigated.
- one case of flash corruption of config resuling in permanent prodmode.
- cndfs:1266, in task terminal: ASSERT FAILED
- problem is when it works well enough to start but when radio transmits it fails and corrupts fs.

resolutions:
- before entering prodmode, check that flash is accessible, if not, wait 10 sec and restart.



>2.4V, CPU OK, flash OK     - normal.
<2.4V, CPU OK, flash bad    - prodmode.
<2V, CPU off, flash off     - off.


"AVDD and VREGVDD need to be 1.8 V or higher for the MCU to operate across all conditions; however the rest of the system will operate down to 1.62 V, "


S
-------------------------
wisun crash

#0  0x0003fd18 in mac_data_interface_tx_done_cb (rf_ptr=rf_ptr@entry=0x2000e948, status=<optimized out>, cca_retry=<optimized out>,
    tx_retry=<optimized out>) at build/3pp/nanostack/nanostack/sal-stack-nanostack/source/MAC/IEEE802_15_4/mac_pd_sap.c:583
#1  0x000405c8 in mac_data_interface_tx_done_cb (tx_retry=<optimized out>, cca_retry=<optimized out>, status=<optimized out>, rf_ptr=0x2000e948)
    at build/3pp/nanostack/nanostack/sal-stack-nanostack/source/MAC/IEEE802_15_4/mac_pd_sap.c:1201
#2  mac_pd_sap_data_cb (identifier=0x2000e948, message=message@entry=0x20008180 <rf_task_stack+1944>)
    at build/3pp/nanostack/nanostack/sal-stack-nanostack/source/MAC/IEEE802_15_4/mac_pd_sap.c:1201
#3  0x0003d5fc in sw_mac_net_phy_tx_done (driver_id=<optimized out>, tx_handle=<optimized out>, status=<optimized out>, cca_retry=<optimized out>,
    tx_retry=0 '\000') at build/3pp/nanostack/nanostack/sal-stack-nanostack/source/MAC/IEEE802_15_4/sw_mac.c:677
#4  0x0009a4c2 in rf_handle_tx_success () at build/3pp/nanostack/sl/wisun/src/sli_wisun_driver.c:443
#5  rf_task_loop (arg=<optimized out>) at build/3pp/nanostack/sl/wisun/src/sli_wisun_driver.c:517
#6  0x0001ef88 in xEventGroupSetBitsFromISR (xEventGroup=<optimized out>, uxBitsToSet=<optimized out>, pxHigherPriorityTaskWoken=<optimized out>)
    at build/3pp/freertos/FreeRTOS/Source/event_groups.c:724

 p rf_ptr->active_pd_data_request
$12 = (struct mac_pre_build_frame *) 0x0


    at build/3pp/freertos/FreeRTOS/Source/list.c:192
#1  0x0001e606 in vTaskPlaceOnEventList (pxEventList=<optimized out>, xTicksToWait=4294967295) at build/3pp/freertos/FreeRTOS/Source/tasks.c:2860
#2  0x0001dd88 in xQueueGenericReceive (xQueue=xQueue@entry=0x20003af4 <s_state+12>, pvBuffer=pvBuffer@entry=0x0, xTicksToWait=<optimized out>,
    xTicksToWait@entry=4294967295, xJustPeeking=xJustPeeking@entry=0) at build/3pp/freertos/FreeRTOS/Source/queue.c:1397
#3  0x0001cf68 in OS_semaphoreTake (s=s@entry=0x20003af4 <s_state+12>, waitMSec=waitMSec@entry=4294967295)
    at src/platform/osal/osal-freertos/osal_freertos.c:367
#4  0x0001c826 in uartWriteBlockingWithTimeout (port=0, buffer=0x20001830 <buf> "\300\333\001\001\001\001", length=<optimized out>,
    timeout=4294967295) at src/platform/drivers/uart/uart-efr32.c:281
#5  0x000160ba in ctrlportSendExInternal (calledFromFaultHandler=false, data2Size=65, data2=0x2000347d <s_logBuf>, data1Size=36,
    data1=0x20001848 <header>, contentType=<optimized out>, msgType=CTRLPORT_MSG_LOG) at src/services/ctrlport/ctrlport_service.c:298
#6  ctrlportSendExInternal (msgType=<optimized out>, contentType=<optimized out>, data1=0x20001848 <header>, data1Size=36,
    data2=0x2000347d <s_logBuf>, data2Size=65, calledFromFaultHandler=false) at src/services/ctrlport/ctrlport_service.c:253
#7  0x00016184 in ctrlportLogServiceCallback (str=0x2000347d <s_logBuf> " [DBG ][fhss]: TX slot length setting too high 160ms, using 100ms",
    module=0xc23d0 "wisun", level=cnd_LogLevelDebug) at src/services/ctrlport/ctrlport_service.c:231
#8  ctrlportLogServiceCallback (level=<optimized out>, module=0xc23d0 "wisun",
    str=0x2000347d <s_logBuf> " [DBG ][fhss]: TX slot length setting too high 160ms, using 100ms") at src/services/ctrlport/ctrlport_service.c:199
#9  0x0001a524 in logFormatted (level=<optimized out>, module=0xc23d0 "wisun", format=0xbde9f "%s") at src/platform/core/log.c:593
#10 0x00095610 in mbed_vtracef (dlevel=<optimized out>, grp=grp@entry=0xb19b0 "fhss",
    fmt=0xb19b5 "TX slot length setting too high %lums, using %lums", fmt@entry=0x10 "\235\n", ap=..., ap@entry=...)
    at build/3pp/nanostack/frameworks/mbed-trace/source/mbed_trace.c:345
#11 0x000957ec in mbed_tracef (dlevel=dlevel@entry=16 '\020', grp=grp@entry=0xb19b0 "fhss",
    fmt=0xb19b5 "TX slot length setting too high %lums, using %lums") at build/3pp/nanostack/frameworks/mbed-trace/source/mbed_trace.c:312
#12 0x0003be12 in fhss_set_txrx_slot_length (fhss_structure=0x20012250)
    at build/3pp/nanostack/nanostack/sal-stack-nanostack/source/Service_Libs/fhss/fhss_ws.c:227
#13 fhss_set_txrx_slot_length (fhss_structure=0x20012250) at build/3pp/nanostack/nanostack/sal-stack-nanostack/source/Service_Libs/fhss/fhss_ws.c:198
#14 0x0003c078 in fhss_ws_set_parent (fhss_structure=0x20012250, eui64=0x2000f8a5 "b\253\261\001\203#\303", <incomplete sequence \321>,
    bc_timing_info=0x2001012c, force_synch=<optimized out>)
    at build/3pp/nanostack/nanostack/sal-stack-nanostack/source/Service_Libs/fhss/fhss_ws.c:1120
#15 0x0003ac9c in ns_fhss_ws_set_parent (fhss_api=<optimized out>, eui64=<optimized out>, bc_timing_info=<optimized out>,
    force_synch=force_synch@entry=true)



fhss_ws.c:227


--------------------------------------------
wisun BR output during handshake



INFO][brro]:  [2] 2a00:23c5:b39f:6a00:60ab:b101:8323:c3d1
[INFO][wsks]: KeyS get array: 0x2004F5B4 i: 0 eui64: 08:6b:d7:ff:fe:e7:10:56
[INFO][wsks]: KeyS read TIME 1577919387 1577909269 PMK PMK CNT 11 00:00:00:00:00:00:00:00
[INFO][ksep]: Initial-key init
[INFO][ksep]: Initial EAPOL-Key recv, eui-64: 08:6b:d7:ff:fe:e7:10:56
[INFO][ksep]: PMK not live PTK not live GTKL 0
[INFO][wspa]: PAE start EAP-TLS, eui-64: 08:6b:d7:ff:fe:e7:10:56
[INFO][eapa]: EAP-TLS init
[INFO][eapa]: EAP-TLS start, eui-64: 08:6b:d7:ff:fe:e7:10:56
[INFO][eapa]: EAP-TLS: send REQ type IDENTITY id 1 flags ff len 9, eui-64: 08:6b:d7:ff:f6
[INFO][ksep]: Initial-key finished, eui-64: 08:6b:d7:ff:fe:e7:10:56
[INFO][eapa]: EAP-TLS: recv RESPONSE type IDENTITY id 1 flags 41 len 14, eui-64 08:6b:d76
[INFO][eapa]: EAP-TLS: send REQ type TLS id 2 flags 20 len 10, eui-64: 08:6b:d7:ff:fe:e76
[INFO][eapa]: EAP-TLS: recv RESPONSE type TLS id 2 flags 0 len 113, eui-64 08:6b:d7:ff:f6
[INFO][eapa]: EAP-TLS: send REQ type TLS id 3 flags c0 len 614, eui-64: 08:6b:d7:ff:fe:e6
[INFO][eapa]: EAP-TLS: recv RESPONSE type TLS id 3 flags 0 len 6, eui-64 08:6b:d7:ff:fe:6
[INFO][eapa]: EAP-TLS: send REQ type TLS id 4 flags 0 len 525, eui-64: 08:6b:d7:ff:fe:e76
[INFO][mMCp]: MAC tx fail
[INFO][eapa]: EAP-TLS: recv RESPONSE type TLS id 4 flags c0 len 610, eui-64 08:6b:d7:ff:6
[INFO][eapa]: EAP-TLS: send REQ type TLS id 5 flags 0 len 10, eui-64: 08:6b:d7:ff:fe:e7:6
[INFO][eapa]: EAP-TLS: recv RESPONSE type TLS id 5 flags 0 len 365, eui-64 08:6b:d7:ff:f6
[INFO][tlsl]: id-on-hardwareModuleName 1.3.6.1.4.1.42.1
[INFO][tlsl]: id-on-hardwareModuleName hwSerialNum 31:32:33:34:35:36
[INFO][eapa]: EAP-TLS: handshake success
[INFO][eapa]: EAP-TLS: send REQ type TLS id 6 flags 0 len 53, eui-64: 08:6b:d7:ff:fe:e7:6
[INFO][eapa]: EAP-TLS: recv RESPONSE type TLS id 6 flags 0 len 6, eui-64 08:6b:d7:ff:fe:6
[INFO][eapa]: EAP-TLS: send SUCCESS type TLS id 6 flags ff len 8, eui-64: 08:6b:d7:ff:fe6
[INFO][eapa]: EAP-TLS finish, eui-64: 08:6b:d7:ff:fe:e7:10:56
[INFO][wspa]: PAE start 4WH, eui-64: 08:6b:d7:ff:fe:e7:10:56
[INFO][wspa]: PAE update GTK index: 0, eui-64: 08:6b:d7:ff:fe:e7:10:56
[INFO][afwh]: 4WH: init
[INFO][afwh]: 4WH: start, eui-64: 08:6b:d7:ff:fe:e7:10:56
[INFO][secl]: PMKID be:03:4b:71:52:3d:89:2a:7e:9b:3d:78:18:65:0d:d1 EUI-64 62:ab:b1:01:86
[INFO][afwh]: 4WH: send Message 1, eui-64: 08:6b:d7:ff:fe:e7:10:56
[INFO][afwh]: 4WH: recv Message 2, eui-64: 08:6b:d7:ff:fe:e7:10:56
[INFO][afwh]: 4WH: send Message 3, eui-64: 08:6b:d7:ff:fe:e7:10:56



selected parent:8e:cf:40:1a:1e:f5:ac:a5 panid 11989
FHSS activate
MAC init
MAC: Start network 255 channel 2ed5 panid
Register Device 1, mac16 ffff mac64: 8e:cf:40:1a:1e:f5:ac:a5, 0
Added new neighbor 8e:cf:40:1a:1e:f5:ac:a5 : index:1

-------------------------------------
wisun terminology:

Unicast Fractional Slot Interval (UFSI)

----------------------------------
VMON voltage monitoring

- bootloader VMON -> dont boot application while voltage is low. Don't upgrade while voltage is low.
- Agent VMON -> Wait until voltage steady and cap charged before booting application. These are two separate activities. flash cannot be accessed while voltage is low. cap-charge-delay must be configurable via the config on flash.
- Agent fsck on startup, perform write-readback test to prior to running prodmode or application.
- To enter prodmode requires a good read from the config with an empty EUI-64, not a failed read from a locked-up device.
- Ensure that PFAIL always results in a reboot now, no recovery. clean up code potentially.
- When fieldl initiates bl_request to bootloader to perform upgrade. Wait until cap has sufficient charge to complete the operation before doing that.


----------------------------------
job management API.

- needs both deviceID and nodeID dbs.
- Needs to be able to start jobs with both deviceID and nodeID.
- jobs can be prioritised but will have a (low) default.


-----------------------------------
DTLS session setup on WiSUN

socket_buffer_sendmsg
protocol_push
protocol_buffer_poll
 1069: cur->if_stack_buffer_handler(b); calls interface method to send.

ns_socket: socket_interface_determine
protocol_core:

--------------------------------------

gdb) where
#0  0x000a747c in abort ()
#1  0x000a56f8 in __assert_func ()
#2  0x0009c60a in rf_handle_event_rx_failure () at build/3pp/nanostack/sl/wisun/src/sli_wisun_driver.c:1830
#3  radioEventHandler (railHandle=<optimized out>, events=1) at build/3pp/nanostack/sl/wisun/src/sli_wisun_driver.c:1897
#4  radioEventHandler (railHandle=<optimized out>, events=<optimized out>) at build/3pp/nanostack/sl/wisun/src/sli_wisun_driver.c:1871
#5  0x000a1a20 in RAILINT_2c0c7ba0065447faa0ab7205349f5d73 ()
#6  0x0009f62c in RAILINT_978af8e4393fb6ecb4e92f5256373899 ()
#7  0x000a0494 in FRC_IRQHandler ()
#8  <signal handler called>

---------------------------------
holiday cd

- the orb: little fluffy clouds
- The Sabres Of Paradise - Smokebelch II (Beatless mix)
- (possibly) Chicane-Offshore
- Primal Scream–	Higher Than The Sun
- Moodswings - Spiritual High (State Of Independence)

possibly: The Chillout Session: Ibiza Sunsets


-----------------------
oneM2M

- NTC (Natianal Trust Centre) == CPA certs?
- new server?
- new layer above server for common-services layer?
- Never any applications mentioned combining data.
- test bed? oneM2Mtester? SmartCity/ElectronicsCity
- IPE - Interworking Proxy Entity
- Primitive Profile Feature - data reduction using templates to adapt.
- congestion monitoring
- QoS for comms.
- Time sync between devices and servers.
- s/w campaigning - fwup?
- licensing/provisioning/subscriptions
- Thread mentioned.
- Semantic organsiation reminiscent of DLMS/COSEM org. "Smart Device Template". Used to build a model of the device. A node could be a
device in this sense. Meters will already have a meter-ontology
- Ontologies in "SAREF" by ETSI.
- https://saref.etsi.org/
- Overlap with "Matter" in consumer space?
-ipv6 is a given
- performance? no mention.
- iot reference architectures tec.gov.in
- enrollment/bootstrapping process onto network is specced. ITU.Y.3056
- M2M enrollment Function (MEF)
- security certification required.
- TR069
- may need to implement different auth mechanisms for different customers/deployments?
- Privacy Policy Manager PPM.
- Test procedures (cyber "range")
- IUDX Indian Urban Data Exchange Uses OM2M server 3TB/year
- 128 data instances per node???
- performance is an issue (data retrieval times).
- OM2M not up to date.
- Need to do an Omnimesh IPE Interworknig Proxy Entity
- oneM2M provides abstraction but is it actually Least-Common-Denomiator? e.g. Can we configure everything we need to on meters or a subset?
- specifics for cellular connected devices. (3GPP)
- 3GPP aligns with oneM2M abstraction/split. includes device-side and server-side portions. IN-CSE an MN-CSE for MNO, ASN-CSE.
- prioritised data/control.
- TS34 recmomendations to prevent harm to the network for ASN-CSE
- GCF authroised test labs
- ETSI tests use TTCN-3 (language).
- interop events free of charge to non-members with NDA.
- certification bodies exist for oneM2M that use the ETSI test suite.
- hackster.io/onem2m demo projects
- lots of dev resources & tutorials out there.



- any value in "native oneM2M" system? as opposed to using IPE?

- energy
- parking
- water flow & levels
- fleet mgmt
- surveillance
- traffic monitoring
- traffic control
- street lighting
- incident maagement
- waste management
- environmental
- e-governance
- buildings
- lifts
- alarms
- locks
- agriculture
- home/consumer devices
- car charging
- load control- washing machines
- wildfire detection and monitoring
- crowd monitoring
- weather
- power distribution
- solar power
- health monitoring
- air conditioning



- monitor environment and direct traffic away from bad areas using
traffic signals.


-------------------------------------
CND-12009 CND-12010 Brownout recovery and voltage monitoring

Prevent access to the flash under brownout conditions and delay startup
until charge has accumulated on the cap.

-----------------------------------------------
wisun DTLS

sudo tshark -i enp0s3 -Y "ipv6.addr eq 2a00:23c5:b3a4:2a00:821f:12ff:fe11:63ec" -V | tee gw.log

------------------------------------------------
Intellismart

- TCP directly on the UART, no underlying TCP stack?
- what retry/framing/integrity-checking protocol is performed on the data trasferred over the UART?
- The spreadsheet indicates that HDLC is present in the meter, presumably for the opto. Can we enable it for this UART?
- The spreadsheet indicates that TCP/IP is used (the emphasis on the "IP"). Is this meaning from the cellular module? or from the meter itself?
- UART settings? 9600N81? flow control?
- Credentials
- Configuration OBISs for TCP/UDP (section 4.9.1 or 4.9.3 in Blue Book)? Are they implemented in either modem or meter? If the meter, then how are they
communicated to the modem/node?

Alarms:
3 pins:
- alert (nEVENT)
- Ready To Receive (Clear To Send, i.e. CTS pin?) Can this be tied permanently to always enable? will this interfere with your comms?
- PFAIL

- Alarms on periodic push (i.e. push of profile data?) also?
- "Meter will send the push packet with “64” client address when Ready to receive pin found from High to Low."
  Which client address are we talking about here? HDLC addresses? Wrapper port?
- "Ready to receive pin will go from Low to High after push packet sent to TCP server and ACK received."
  This implies a protocol with "ACKing" (and presumably also "NACKing"). What protocol is this? HDLC??
  Can we get an "on-wire" representation of an ACK?
- Does the existing protocol need a 10-second delay to drop the TCP channel? does the meter rely on that?

Intellismart tasks:
- Drop HDLC
- Create WPDULink using WPDU+DLMSPDU annd flow-control lines.
- Use alarm scheme with CTS/RTS from Kaifa.
- Ignore pushed-data (or disable it) to allow use of our sampling algorithm to allow catch-up, etc.
- Any purpose in putting IPv6 parameters into meter OBISs? (4.9.3)
- I/F board needs to have flow-control lines on it.
- Alarms are just pushes from the meter and controlled via flow-control lines. This logic will need to
be at the WPDULink layer.
- Robustness on WPDULink (use constant header as a preamble for syncing & timeout).
- Using data-push for instantaneous might be possible on this meter? Better to stick with existing scheme.
- Events look standard.
- profiles look standard
- ESWF/Alarms look standard.
- Network signal strength is in block-load now, so we must fill it in? we were previously using hop-count which probably isn't the best metric.
- Meter integration will need mods as it examines byte streams from meter UART.


- Replace HDLC layer with WPDULink layer. This uses UART and 1xGPIO in ready-to-receive type flow control arrangement to martial packets
from meter. WPDU header used as a "preamble" for syncing&framing and timeout of higher level causes a retry. (3 weeks).
- Alert pin is really a "push-data is ready to be sent" pin and should probably be marshalled by WPDULink which can then push the DLMS PDU
up into the DLMS layer. This isn't just for alerts.

---------------------------------------------
WiSUN tasks

Development
- familiarisation, SiLabs & ST border-routers and nodes.                                = Done.
- Removal of existing IP stack (creation of ipa3-bare build).                           = Done.
- Initial nanostack build integration (non-functional) into ipa3-bare.                  = Done.
- FreeRTOS/CMSIS RTOS adaptation.                                                       = Done.
- New Flex & RAIL library.                                                              = Done.
- New board-support library.                                                            = Done.
- Basic nanostack connect to ST border-router.                                          = Done.
- ipa3-wisun build.                                                                     = Done.
- UDP API adapter to nanostack API.                                                     = Done.
- Connectivity Manager (conman) implementation.                                         = Partial.
- DTLS session.                                                                         = Done (on ethernet. via radio outstanding but should be no change).
- CoAP/login session.                                                                   = Partial.
- dev-stack setup for plain IPv6.                                                       =
- host-agent OS adaptation (CMSIS/POSIX)                                                = Partial
- host-agent network interface adaptation (uplink-tun)                                  =
- nanostack configurables                                                               =
- nanostack cert/key data loading.                                                      =
- nanostack monitoring/statistics.                                                      =
- gw200-wisun build.                                                                    = Done.
- gw200 Ethernet adapter to nanostack.                                                  = Done.
- Enable nanostack as border-router (on gw200-wisun).                                   =
- Get to bottom of trickle-timer/multiple event issues.                                 =
- Get to bottom of very-long mesh-join time.                                            =
- RADIUS integration into dev-stack.                                                    =
- RADIUS integration with border-router.                                                =
- RADIUS integration into NMS (design feature-set? monitoring-only or control also?)    =
- Mesh Time sync.                                                                       =
- File distribution.                                                                    =
- I2CIP network interface for GW7 support (rather than GW200).                          =
- MTS support for nanostack cert/key loading.                                           =
- radio test support with new RAIL library.                                             =
- MTS radio test                                                                        =
- performance at scale.                                                                 =
- NMS network-dentity changes.                                                          =
- Agent network-identity changes                                                        =


Testing
- Obtaining certification test suite                                                    =
- Familiarisation with certificationn test suite                                        =
- Familiarisation with hardware (SiLabs, ST)                                            =
- Creation of automation for examining and testing against packet-traces                =
- Non-certification oriented tests                                                      =


Current state:
- SiLabs,ST, IPA3 & GW200 boards can form and join a WiSUN network using SiLabs s/w.
- ipa3 can join network formed by ST border-router.
- gw200 can join network formed by ST border router (as a node).
- gw200 ethernet is plumbed into nanostack.
- UDP works from the application-level (simple "echo" client).
- ICMP works from the application-level (ICMP "ping" request/reply).
- "conman" initiates login & DTLS session when ethernet interface brought up.
- DTLS session works (currently over ethernet, but no changes expected for over WiSUN).
- host-agent porting in progress (integrating nanostack into host-agent).
- FreeRADIUS server can be installed but current ST border-router does not use it as yet.


-------------------------------
dev-stack development


pip3 install -e .

-------------------------------------

ip6tables -t nat -L -v -n

sudo iptables -L --line-numbers

sudo ip6tables -t nat -D PREROUTING 1

ip6tables -t nat -A PREROUTING -p udp --dport 5684 -j DNAT --to-destination [fd00::100]:5684










